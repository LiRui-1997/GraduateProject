"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NotificationDrawerHeader = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var React = _interopRequireWildcard(require("react"));

var _reactStyles = require("@patternfly/react-styles");

var _notificationDrawer = _interopRequireDefault(require("@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer"));

var _Text = require("../Text");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var NotificationDrawerHeader = function NotificationDrawerHeader(_ref) {
  var children = _ref.children,
      _ref$className = _ref.className,
      className = _ref$className === void 0 ? '' : _ref$className,
      count = _ref.count,
      _ref$title = _ref.title,
      title = _ref$title === void 0 ? 'Notifications' : _ref$title,
      _ref$unreadText = _ref.unreadText,
      unreadText = _ref$unreadText === void 0 ? 'unread' : _ref$unreadText,
      props = _objectWithoutProperties(_ref, ["children", "className", "count", "title", "unreadText"]);

  return React.createElement("div", _extends({}, props, {
    className: (0, _reactStyles.css)(_notificationDrawer["default"].notificationDrawerHeader, className)
  }), React.createElement(_Text.Text, {
    component: _Text.TextVariants.h1,
    className: (0, _reactStyles.css)(_notificationDrawer["default"].notificationDrawerHeaderTitle)
  }, title), count && React.createElement("span", {
    className: (0, _reactStyles.css)(_notificationDrawer["default"].notificationDrawerHeaderStatus)
  }, "".concat(count, " ").concat(unreadText)), children && React.createElement("div", {
    className: (0, _reactStyles.css)(_notificationDrawer["default"].notificationDrawerHeaderAction)
  }, children));
};

exports.NotificationDrawerHeader = NotificationDrawerHeader;
NotificationDrawerHeader.propTypes = {
  children: _propTypes["default"].node,
  className: _propTypes["default"].string,
  count: _propTypes["default"].number,
  title: _propTypes["default"].string,
  unreadText: _propTypes["default"].string
};
//# sourceMappingURL=NotificationDrawerHeader.js.map