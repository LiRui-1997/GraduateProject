{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/pages/Overview/OverviewCardSparkline.tsx\";\nimport * as React from 'react';\nimport { getName } from '../../utils/RateIntervals';\nimport { PFColors } from 'components/Pf/PfColors';\nimport { SparklineChart } from 'components/Charts/SparklineChart';\nimport { toVCLine } from 'utils/VictoryChartsUtils';\nimport 'components/Charts/Charts.css';\n\nvar OverviewCardSparkline = /*#__PURE__*/function (_React$Component) {\n  _inherits(OverviewCardSparkline, _React$Component);\n\n  var _super = _createSuper(OverviewCardSparkline);\n\n  function OverviewCardSparkline() {\n    _classCallCheck(this, OverviewCardSparkline);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(OverviewCardSparkline, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.metrics && this.props.metrics.length > 0 && this.props.errorMetrics && this.props.errorMetrics.length > 0) {\n        var series = [];\n        var data = toVCLine(this.props.metrics[0].datapoints, 'Total', PFColors.Blue400);\n        series.push(data);\n        var dataErrors = toVCLine(this.props.errorMetrics[0].datapoints, '4xx+5xx', PFColors.Danger);\n        series.push(dataErrors);\n        return /*#__PURE__*/React.createElement(React.Fragment, null, 'Inbound traffic, ' + getName(this.props.duration).toLowerCase(), /*#__PURE__*/React.createElement(SparklineChart, {\n          name: 'traffic',\n          height: 60,\n          showLegend: false,\n          showYAxis: true,\n          padding: {\n            top: 5,\n            left: 30\n          },\n          tooltipFormat: function tooltipFormat(dp) {\n            return \"\".concat(dp.x.toLocaleTimeString(), \"\\n\").concat(dp.y, \" \").concat(dp.name);\n          },\n          series: series,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          paddingTop: '40px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 12\n        }\n      }, \"No inbound traffic\");\n    }\n  }]);\n\n  return OverviewCardSparkline;\n}(React.Component);\n\nexport default OverviewCardSparkline;","map":{"version":3,"sources":["/root/kiali-ui/src/pages/Overview/OverviewCardSparkline.tsx"],"names":["React","getName","PFColors","SparklineChart","toVCLine","OverviewCardSparkline","props","metrics","length","errorMetrics","series","data","datapoints","Blue400","push","dataErrors","Danger","duration","toLowerCase","top","left","dp","x","toLocaleTimeString","y","name","paddingTop","Component"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAIA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,OAAO,8BAAP;;IASMC,qB;;;;;;;;;;;;;WACJ,kBAAS;AACP,UACE,KAAKC,KAAL,CAAWC,OAAX,IACA,KAAKD,KAAL,CAAWC,OAAX,CAAmBC,MAAnB,GAA4B,CAD5B,IAEA,KAAKF,KAAL,CAAWG,YAFX,IAGA,KAAKH,KAAL,CAAWG,YAAX,CAAwBD,MAAxB,GAAiC,CAJnC,EAKE;AACA,YAAIE,MAA+B,GAAG,EAAtC;AAEA,YAAMC,IAAI,GAAGP,QAAQ,CAAC,KAAKE,KAAL,CAAWC,OAAX,CAAmB,CAAnB,EAAsBK,UAAvB,EAAmC,OAAnC,EAA4CV,QAAQ,CAACW,OAArD,CAArB;AACAH,QAAAA,MAAM,CAACI,IAAP,CAAYH,IAAZ;AAEA,YAAMI,UAAU,GAAGX,QAAQ,CAAC,KAAKE,KAAL,CAAWG,YAAX,CAAwB,CAAxB,EAA2BG,UAA5B,EAAwC,SAAxC,EAAmDV,QAAQ,CAACc,MAA5D,CAA3B;AACAN,QAAAA,MAAM,CAACI,IAAP,CAAYC,UAAZ;AAEA,4BACE,0CACG,sBAAsBd,OAAO,CAAC,KAAKK,KAAL,CAAWW,QAAZ,CAAP,CAA6BC,WAA7B,EADzB,eAEE,oBAAC,cAAD;AACE,UAAA,IAAI,EAAE,SADR;AAEE,UAAA,MAAM,EAAE,EAFV;AAGE,UAAA,UAAU,EAAE,KAHd;AAIE,UAAA,SAAS,EAAE,IAJb;AAKE,UAAA,OAAO,EAAE;AAAEC,YAAAA,GAAG,EAAE,CAAP;AAAUC,YAAAA,IAAI,EAAE;AAAhB,WALX;AAME,UAAA,aAAa,EAAE,uBAAAC,EAAE;AAAA,6BAAQA,EAAE,CAACC,CAAJ,CAAeC,kBAAf,EAAP,eAA+CF,EAAE,CAACG,CAAlD,cAAuDH,EAAE,CAACI,IAA1D;AAAA,WANnB;AAOE,UAAA,MAAM,EAAEf,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF;AAcD;;AACD,0BAAO;AAAK,QAAA,KAAK,EAAE;AAAEgB,UAAAA,UAAU,EAAE;AAAd,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACD;;;;EAhCiC1B,KAAK,CAAC2B,S;;AAmC1C,eAAetB,qBAAf","sourcesContent":["import * as React from 'react';\n\nimport { DurationInSeconds } from '../../types/Common';\nimport { Metric } from '../../types/Metrics';\nimport { getName } from '../../utils/RateIntervals';\nimport { PFColors } from 'components/Pf/PfColors';\nimport { SparklineChart } from 'components/Charts/SparklineChart';\nimport { toVCLine } from 'utils/VictoryChartsUtils';\n\nimport 'components/Charts/Charts.css';\nimport { RichDataPoint, VCLine } from 'types/VictoryChartInfo';\n\ntype Props = {\n  metrics?: Metric[];\n  errorMetrics?: Metric[];\n  duration: DurationInSeconds;\n};\n\nclass OverviewCardSparkline extends React.Component<Props, {}> {\n  render() {\n    if (\n      this.props.metrics &&\n      this.props.metrics.length > 0 &&\n      this.props.errorMetrics &&\n      this.props.errorMetrics.length > 0\n    ) {\n      let series: VCLine<RichDataPoint>[] = [];\n\n      const data = toVCLine(this.props.metrics[0].datapoints, 'Total', PFColors.Blue400);\n      series.push(data);\n\n      const dataErrors = toVCLine(this.props.errorMetrics[0].datapoints, '4xx+5xx', PFColors.Danger);\n      series.push(dataErrors);\n\n      return (\n        <>\n          {'Inbound traffic, ' + getName(this.props.duration).toLowerCase()}\n          <SparklineChart\n            name={'traffic'}\n            height={60}\n            showLegend={false}\n            showYAxis={true}\n            padding={{ top: 5, left: 30 }}\n            tooltipFormat={dp => `${(dp.x as Date).toLocaleTimeString()}\\n${dp.y} ${dp.name}`}\n            series={series}\n          />\n        </>\n      );\n    }\n    return <div style={{ paddingTop: '40px' }}>No inbound traffic</div>;\n  }\n}\n\nexport default OverviewCardSparkline;\n"]},"metadata":{},"sourceType":"module"}