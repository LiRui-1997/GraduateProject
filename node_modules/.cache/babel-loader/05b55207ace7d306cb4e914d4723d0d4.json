{"ast":null,"code":"import _objectSpread from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as LayoutDictionary from './graphs/LayoutDictionary';\nexport var CyEdge = {\n  destPrincipal: 'destPrincipal',\n  grpc: 'grpc',\n  grpcErr: 'grpcErr',\n  grpcNoResponse: 'grpcNoResponse',\n  grpcPercentErr: 'grpcPercentErr',\n  grpcPercentReq: 'grpcPercentReq',\n  hasTraffic: 'hasTraffic',\n  http: 'http',\n  http3xx: 'http3xx',\n  http4xx: 'http4xx',\n  http5xx: 'http5xx',\n  httpNoResponse: 'httpNoResponse',\n  httpPercentErr: 'httpPercentErr',\n  httpPercentReq: 'httpPercentReq',\n  id: 'id',\n  isMTLS: 'isMTLS',\n  protocol: 'protocol',\n  responses: 'responses',\n  responseTime: 'responseTime',\n  sourcePrincipal: 'sourcePrincipal',\n  tcp: 'tcp',\n  throughput: 'throughput'\n};\nexport var CyEdgeResponses = {\n  flags: 'flags',\n  hosts: 'hosts'\n};\nexport var CyNode = {\n  aggregate: 'aggregate',\n  aggregateValue: 'aggregateValue',\n  app: 'app',\n  cluster: 'cluster',\n  destServices: 'destServices',\n  grpcIn: 'grpcIn',\n  grpcInErr: 'grpcInErr',\n  grpcInNoResponse: 'grpcInNoResponse',\n  grpcOut: 'grpcOut',\n  hasCB: 'hasCB',\n  hasFaultInjection: 'hasFaultInjection',\n  hasMissingSC: 'hasMissingSC',\n  hasRequestRouting: 'hasRequestRouting',\n  hasRequestTimeout: 'hasRequestTimeout',\n  hasTCPTrafficShifting: 'hasTCPTrafficShifting',\n  hasTrafficShifting: 'hasTrafficShifting',\n  hasVS: 'hasVS',\n  hasWorkloadEntry: 'hasWorkloadEntry',\n  health: 'health',\n  healthStatus: 'healthStatus',\n  httpIn: 'httpIn',\n  httpIn3xx: 'httpIn3xx',\n  httpIn4xx: 'httpIn4xx',\n  httpIn5xx: 'httpIn5xx',\n  httpInNoResponse: 'httpInNoResponse',\n  httpOut: 'httpOut',\n  id: 'id',\n  isBox: 'isBox',\n  isDead: 'isDead',\n  isIdle: 'isIdle',\n  isInaccessible: 'isInaccessible',\n  isIstio: 'isIstio',\n  isMisconfigured: 'isMisconfigured',\n  isOutside: 'isOutside',\n  isRoot: 'isRoot',\n  isServiceEntry: 'isServiceEntry',\n  namespace: 'namespace',\n  nodeType: 'nodeType',\n  service: 'service',\n  tcpIn: 'tcpIn',\n  tcpOut: 'tcpOut',\n  version: 'version',\n  workload: 'workload'\n};\nexport var ZoomOptions = {\n  fitPadding: 25,\n  maxZoom: 2.5\n};\nexport var safeFit = function safeFit(cy, centerElements) {\n  cy.fit(centerElements, ZoomOptions.fitPadding);\n\n  if (cy.zoom() > ZoomOptions.maxZoom) {\n    cy.zoom(ZoomOptions.maxZoom);\n    !!centerElements && !!centerElements.length ? cy.center(centerElements) : cy.center();\n  } // 'fit' is a custom event that we emit allowing us to reset cytoscapeGraph.customViewport\n\n\n  cy.emit('fit');\n};\nexport var runLayout = function runLayout(cy, layout) {\n  // Using an extension\n  cy.nodeHtmlLabel().updateNodeLabel(cy.nodes());\n  var layoutOptions = LayoutDictionary.getLayout(layout);\n  var promise;\n  var cyLayout;\n\n  if (cy.nodes('$node > node').length > 0) {\n    // if there is any parent (i.e. box) node, run the box-layout\n    cyLayout = cy.layout(_objectSpread(_objectSpread({}, layoutOptions), {}, {\n      name: 'box-layout',\n      appBoxLayout: 'dagre',\n      defaultLayout: layout.name\n    }));\n  } else {\n    cyLayout = cy.layout(layoutOptions);\n  }\n\n  promise = cyLayout.promiseOn('layoutstop');\n  cyLayout.run();\n  return promise;\n};\nexport var decoratedEdgeData = function decoratedEdgeData(ele) {\n  return ele.data();\n};\nexport var decoratedNodeData = function decoratedNodeData(ele) {\n  return ele.data();\n};\nexport var isCore = function isCore(target) {\n  return !('cy' in target);\n};\nexport var isNode = function isNode(target) {\n  return !isCore(target) && target.isNode();\n};\nexport var isEdge = function isEdge(target) {\n  return !isCore(target) && target.isEdge();\n};","map":{"version":3,"sources":["/root/kiali-ui/src/components/CytoscapeGraph/CytoscapeGraphUtils.ts"],"names":["LayoutDictionary","CyEdge","destPrincipal","grpc","grpcErr","grpcNoResponse","grpcPercentErr","grpcPercentReq","hasTraffic","http","http3xx","http4xx","http5xx","httpNoResponse","httpPercentErr","httpPercentReq","id","isMTLS","protocol","responses","responseTime","sourcePrincipal","tcp","throughput","CyEdgeResponses","flags","hosts","CyNode","aggregate","aggregateValue","app","cluster","destServices","grpcIn","grpcInErr","grpcInNoResponse","grpcOut","hasCB","hasFaultInjection","hasMissingSC","hasRequestRouting","hasRequestTimeout","hasTCPTrafficShifting","hasTrafficShifting","hasVS","hasWorkloadEntry","health","healthStatus","httpIn","httpIn3xx","httpIn4xx","httpIn5xx","httpInNoResponse","httpOut","isBox","isDead","isIdle","isInaccessible","isIstio","isMisconfigured","isOutside","isRoot","isServiceEntry","namespace","nodeType","service","tcpIn","tcpOut","version","workload","ZoomOptions","fitPadding","maxZoom","safeFit","cy","centerElements","fit","zoom","length","center","emit","runLayout","layout","nodeHtmlLabel","updateNodeLabel","nodes","layoutOptions","getLayout","promise","cyLayout","name","appBoxLayout","defaultLayout","promiseOn","run","decoratedEdgeData","ele","data","decoratedNodeData","isCore","target","isNode","isEdge"],"mappings":"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","sourcesContent":["import * as LayoutDictionary from './graphs/LayoutDictionary';\nimport { DecoratedGraphEdgeData, DecoratedGraphNodeData, Layout } from '../../types/Graph';\nimport * as Cy from 'cytoscape';\n\nexport const CyEdge = {\n  destPrincipal: 'destPrincipal',\n  grpc: 'grpc',\n  grpcErr: 'grpcErr',\n  grpcNoResponse: 'grpcNoResponse',\n  grpcPercentErr: 'grpcPercentErr',\n  grpcPercentReq: 'grpcPercentReq',\n  hasTraffic: 'hasTraffic',\n  http: 'http',\n  http3xx: 'http3xx',\n  http4xx: 'http4xx',\n  http5xx: 'http5xx',\n  httpNoResponse: 'httpNoResponse',\n  httpPercentErr: 'httpPercentErr',\n  httpPercentReq: 'httpPercentReq',\n  id: 'id',\n  isMTLS: 'isMTLS',\n  protocol: 'protocol',\n  responses: 'responses',\n  responseTime: 'responseTime',\n  sourcePrincipal: 'sourcePrincipal',\n  tcp: 'tcp',\n  throughput: 'throughput'\n};\n\nexport const CyEdgeResponses = {\n  flags: 'flags',\n  hosts: 'hosts'\n};\n\nexport const CyNode = {\n  aggregate: 'aggregate',\n  aggregateValue: 'aggregateValue',\n  app: 'app',\n  cluster: 'cluster',\n  destServices: 'destServices',\n  grpcIn: 'grpcIn',\n  grpcInErr: 'grpcInErr',\n  grpcInNoResponse: 'grpcInNoResponse',\n  grpcOut: 'grpcOut',\n  hasCB: 'hasCB',\n  hasFaultInjection: 'hasFaultInjection',\n  hasMissingSC: 'hasMissingSC',\n  hasRequestRouting: 'hasRequestRouting',\n  hasRequestTimeout: 'hasRequestTimeout',\n  hasTCPTrafficShifting: 'hasTCPTrafficShifting',\n  hasTrafficShifting: 'hasTrafficShifting',\n  hasVS: 'hasVS',\n  hasWorkloadEntry: 'hasWorkloadEntry',\n  health: 'health',\n  healthStatus: 'healthStatus',\n  httpIn: 'httpIn',\n  httpIn3xx: 'httpIn3xx',\n  httpIn4xx: 'httpIn4xx',\n  httpIn5xx: 'httpIn5xx',\n  httpInNoResponse: 'httpInNoResponse',\n  httpOut: 'httpOut',\n  id: 'id',\n  isBox: 'isBox',\n  isDead: 'isDead',\n  isIdle: 'isIdle',\n  isInaccessible: 'isInaccessible',\n  isIstio: 'isIstio',\n  isMisconfigured: 'isMisconfigured',\n  isOutside: 'isOutside',\n  isRoot: 'isRoot',\n  isServiceEntry: 'isServiceEntry',\n  namespace: 'namespace',\n  nodeType: 'nodeType',\n  service: 'service',\n  tcpIn: 'tcpIn',\n  tcpOut: 'tcpOut',\n  version: 'version',\n  workload: 'workload'\n};\n\nexport const ZoomOptions = {\n  fitPadding: 25,\n  maxZoom: 2.5\n};\n\nexport const safeFit = (cy: Cy.Core, centerElements?: Cy.Collection) => {\n  cy.fit(centerElements, ZoomOptions.fitPadding);\n  if (cy.zoom() > ZoomOptions.maxZoom) {\n    cy.zoom(ZoomOptions.maxZoom);\n    !!centerElements && !!centerElements.length ? cy.center(centerElements) : cy.center();\n  }\n  // 'fit' is a custom event that we emit allowing us to reset cytoscapeGraph.customViewport\n  cy.emit('fit');\n};\n\nexport const runLayout = (cy: Cy.Core, layout: Layout): Promise<any> => {\n  // Using an extension\n  (cy as any).nodeHtmlLabel().updateNodeLabel(cy.nodes());\n\n  const layoutOptions = LayoutDictionary.getLayout(layout);\n  let promise: Promise<any>;\n  let cyLayout: Cy.Layouts;\n  if (cy.nodes('$node > node').length > 0) {\n    // if there is any parent (i.e. box) node, run the box-layout\n    cyLayout = cy.layout({\n      ...layoutOptions,\n      name: 'box-layout',\n      appBoxLayout: 'dagre',\n      defaultLayout: layout.name\n    });\n  } else {\n    cyLayout = cy.layout(layoutOptions);\n  }\n  promise = cyLayout.promiseOn('layoutstop');\n  cyLayout.run();\n  return promise;\n};\n\nexport const decoratedEdgeData = (ele: Cy.EdgeSingular): DecoratedGraphEdgeData => {\n  return ele.data();\n};\n\nexport const decoratedNodeData = (ele: Cy.NodeSingular): DecoratedGraphNodeData => {\n  return ele.data();\n};\n\nexport const isCore = (target: Cy.NodeSingular | Cy.EdgeSingular | Cy.Core): target is Cy.Core => {\n  return !('cy' in target);\n};\n\nexport const isNode = (target: Cy.NodeSingular | Cy.EdgeSingular | Cy.Core): target is Cy.NodeSingular => {\n  return !isCore(target) && target.isNode();\n};\n\nexport const isEdge = (target: Cy.NodeSingular | Cy.EdgeSingular | Cy.Core): target is Cy.EdgeSingular => {\n  return !isCore(target) && target.isEdge();\n};\n"]},"metadata":{},"sourceType":"module"}