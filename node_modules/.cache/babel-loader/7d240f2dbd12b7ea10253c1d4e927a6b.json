{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/pages/IstioConfigNew/AuthorizationPolicyForm/When/ConditionList.tsx\";\nimport * as React from 'react';\nimport { cellWidth, Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { style } from 'typestyle';\nimport { PFColors } from '../../../../components/Pf/PfColors';\nvar headerCells = [{\n  title: 'Additional Conditions of a Request',\n  transforms: [cellWidth(100)],\n  props: {}\n}, {\n  title: '',\n  props: {}\n}];\nvar noConditionsStyle = style({\n  marginTop: 10,\n  color: PFColors.Red100,\n  textAlign: 'center',\n  width: '100%'\n});\n\nvar ConditionList = /*#__PURE__*/function (_React$Component) {\n  _inherits(ConditionList, _React$Component);\n\n  var _super = _createSuper(ConditionList);\n\n  function ConditionList() {\n    var _this;\n\n    _classCallCheck(this, ConditionList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.rows = function () {\n      return _this.props.conditionList.map(function (condition, i) {\n        return {\n          key: 'condition' + i,\n          cells: [/*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"b\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 13\n            }\n          }, \"key: \"), \" [\", condition.key, \"]\", /*#__PURE__*/React.createElement(\"br\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 43\n            }\n          }), condition.values && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"b\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }\n          }, \"values: \"), \" [\", condition.values, \"]\", /*#__PURE__*/React.createElement(\"br\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 53\n            }\n          })), condition.notValues && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"b\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }\n          }, \"notValues: \"), \" [\", condition.notValues, \"]\", /*#__PURE__*/React.createElement(\"br\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 59\n            }\n          }))), /*#__PURE__*/React.createElement(React.Fragment, null)]\n        };\n      });\n    };\n\n    _this.actionResolver = function (rowData, _ref) {\n      var rowIndex = _ref.rowIndex;\n      var removeAction = {\n        title: 'Remove Condition',\n        // @ts-ignore\n        onClick: function onClick(event, rowIndex, rowData, extraData) {\n          _this.props.onRemoveCondition(rowIndex);\n        }\n      };\n      return [removeAction];\n    };\n\n    return _this;\n  }\n\n  _createClass(ConditionList, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n        \"aria-label\": \"Condition Builder\",\n        cells: headerCells,\n        rows: this.rows() // @ts-ignore\n        ,\n        actionResolver: this.actionResolver,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      })), this.props.conditionList.length === 0 && /*#__PURE__*/React.createElement(\"div\", {\n        className: noConditionsStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 51\n        }\n      }, \"No Conditions Defined\"));\n    }\n  }]);\n\n  return ConditionList;\n}(React.Component);\n\nexport default ConditionList;","map":{"version":3,"sources":["/root/GraduateProject/src/pages/IstioConfigNew/AuthorizationPolicyForm/When/ConditionList.tsx"],"names":["React","cellWidth","Table","TableBody","TableHeader","style","PFColors","headerCells","title","transforms","props","noConditionsStyle","marginTop","color","Red100","textAlign","width","ConditionList","rows","conditionList","map","condition","i","key","cells","values","notValues","actionResolver","rowData","rowIndex","removeAction","onClick","event","extraData","onRemoveCondition","length","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Condition } from './ConditionBuilder';\nimport { cellWidth, ICell, Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { style } from 'typestyle';\nimport { PFColors } from '../../../../components/Pf/PfColors';\n\ntype Props = {\n  conditionList: Condition[];\n  onRemoveCondition: (index: number) => void;\n};\n\nconst headerCells: ICell[] = [\n  {\n    title: 'Additional Conditions of a Request',\n    transforms: [cellWidth(100) as any],\n    props: {}\n  },\n  {\n    title: '',\n    props: {}\n  }\n];\n\nconst noConditionsStyle = style({\n  marginTop: 10,\n  color: PFColors.Red100,\n  textAlign: 'center',\n  width: '100%'\n});\n\nclass ConditionList extends React.Component<Props> {\n  rows = () => {\n    return this.props.conditionList.map((condition, i) => {\n      return {\n        key: 'condition' + i,\n        cells: [\n          <>\n            <b>key: </b> [{condition.key}]<br />\n            {condition.values && (\n              <>\n                <b>values: </b> [{condition.values}]<br />\n              </>\n            )}\n            {condition.notValues && (\n              <>\n                <b>notValues: </b> [{condition.notValues}]<br />\n              </>\n            )}\n          </>,\n          <></>\n        ]\n      };\n    });\n  };\n\n  // @ts-ignore\n  actionResolver = (rowData, { rowIndex }) => {\n    const removeAction = {\n      title: 'Remove Condition',\n      // @ts-ignore\n      onClick: (event, rowIndex, rowData, extraData) => {\n        this.props.onRemoveCondition(rowIndex);\n      }\n    };\n    return [removeAction];\n  };\n\n  render() {\n    return (\n      <>\n        <Table\n          aria-label=\"Condition Builder\"\n          cells={headerCells}\n          rows={this.rows()}\n          // @ts-ignore\n          actionResolver={this.actionResolver}\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n        {this.props.conditionList.length === 0 && <div className={noConditionsStyle}>No Conditions Defined</div>}\n      </>\n    );\n  }\n}\n\nexport default ConditionList;\n"]},"metadata":{},"sourceType":"module"}