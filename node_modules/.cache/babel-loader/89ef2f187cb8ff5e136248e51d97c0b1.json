{"ast":null,"code":"(function () {\n  /*\n  \n   Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n   This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n   The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n   The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n   Code distributed by Google as part of the polymer project is also\n   subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n  */\n  'use strict';\n\n  var aa = new Set(\"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph\".split(\" \"));\n\n  function g(a) {\n    var b = aa.has(a);\n    a = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(a);\n    return !b && a;\n  }\n\n  function l(a) {\n    var b = a.isConnected;\n    if (void 0 !== b) return b;\n\n    for (; a && !(a.__CE_isImportDocument || a instanceof Document);) {\n      a = a.parentNode || (window.ShadowRoot && a instanceof ShadowRoot ? a.host : void 0);\n    }\n\n    return !(!a || !(a.__CE_isImportDocument || a instanceof Document));\n  }\n\n  function n(a, b) {\n    for (; b && b !== a && !b.nextSibling;) {\n      b = b.parentNode;\n    }\n\n    return b && b !== a ? b.nextSibling : null;\n  }\n\n  function p(a, b, d) {\n    d = void 0 === d ? new Set() : d;\n\n    for (var c = a; c;) {\n      if (c.nodeType === Node.ELEMENT_NODE) {\n        var e = c;\n        b(e);\n        var f = e.localName;\n\n        if (\"link\" === f && \"import\" === e.getAttribute(\"rel\")) {\n          c = e.import;\n          if (c instanceof Node && !d.has(c)) for (d.add(c), c = c.firstChild; c; c = c.nextSibling) {\n            p(c, b, d);\n          }\n          c = n(a, e);\n          continue;\n        } else if (\"template\" === f) {\n          c = n(a, e);\n          continue;\n        }\n\n        if (e = e.__CE_shadowRoot) for (e = e.firstChild; e; e = e.nextSibling) {\n          p(e, b, d);\n        }\n      }\n\n      c = c.firstChild ? c.firstChild : n(a, c);\n    }\n  }\n\n  function r(a, b, d) {\n    a[b] = d;\n  }\n\n  ;\n\n  function u() {\n    this.a = new Map();\n    this.g = new Map();\n    this.c = [];\n    this.f = [];\n    this.b = !1;\n  }\n\n  function ba(a, b, d) {\n    a.a.set(b, d);\n    a.g.set(d.constructorFunction, d);\n  }\n\n  function ca(a, b) {\n    a.b = !0;\n    a.c.push(b);\n  }\n\n  function da(a, b) {\n    a.b = !0;\n    a.f.push(b);\n  }\n\n  function v(a, b) {\n    a.b && p(b, function (b) {\n      return w(a, b);\n    });\n  }\n\n  function w(a, b) {\n    if (a.b && !b.__CE_patched) {\n      b.__CE_patched = !0;\n\n      for (var d = 0; d < a.c.length; d++) {\n        a.c[d](b);\n      }\n\n      for (d = 0; d < a.f.length; d++) {\n        a.f[d](b);\n      }\n    }\n  }\n\n  function x(a, b) {\n    var d = [];\n    p(b, function (b) {\n      return d.push(b);\n    });\n\n    for (b = 0; b < d.length; b++) {\n      var c = d[b];\n      1 === c.__CE_state ? a.connectedCallback(c) : y(a, c);\n    }\n  }\n\n  function z(a, b) {\n    var d = [];\n    p(b, function (b) {\n      return d.push(b);\n    });\n\n    for (b = 0; b < d.length; b++) {\n      var c = d[b];\n      1 === c.__CE_state && a.disconnectedCallback(c);\n    }\n  }\n\n  function A(a, b, d) {\n    d = void 0 === d ? {} : d;\n\n    var c = d.u || new Set(),\n        e = d.i || function (b) {\n      return y(a, b);\n    },\n        f = [];\n\n    p(b, function (b) {\n      if (\"link\" === b.localName && \"import\" === b.getAttribute(\"rel\")) {\n        var d = b.import;\n        d instanceof Node && (d.__CE_isImportDocument = !0, d.__CE_hasRegistry = !0);\n        d && \"complete\" === d.readyState ? d.__CE_documentLoadHandled = !0 : b.addEventListener(\"load\", function () {\n          var d = b.import;\n\n          if (!d.__CE_documentLoadHandled) {\n            d.__CE_documentLoadHandled = !0;\n            var f = new Set(c);\n            f.delete(d);\n            A(a, d, {\n              u: f,\n              i: e\n            });\n          }\n        });\n      } else f.push(b);\n    }, c);\n    if (a.b) for (b = 0; b < f.length; b++) {\n      w(a, f[b]);\n    }\n\n    for (b = 0; b < f.length; b++) {\n      e(f[b]);\n    }\n  }\n\n  function y(a, b) {\n    if (void 0 === b.__CE_state) {\n      var d = b.ownerDocument;\n      if (d.defaultView || d.__CE_isImportDocument && d.__CE_hasRegistry) if (d = a.a.get(b.localName)) {\n        d.constructionStack.push(b);\n        var c = d.constructorFunction;\n\n        try {\n          try {\n            if (new c() !== b) throw Error(\"The custom element constructor did not produce the element being upgraded.\");\n          } finally {\n            d.constructionStack.pop();\n          }\n        } catch (t) {\n          throw b.__CE_state = 2, t;\n        }\n\n        b.__CE_state = 1;\n        b.__CE_definition = d;\n        if (d.attributeChangedCallback) for (d = d.observedAttributes, c = 0; c < d.length; c++) {\n          var e = d[c],\n              f = b.getAttribute(e);\n          null !== f && a.attributeChangedCallback(b, e, null, f, null);\n        }\n        l(b) && a.connectedCallback(b);\n      }\n    }\n  }\n\n  u.prototype.connectedCallback = function (a) {\n    var b = a.__CE_definition;\n    b.connectedCallback && b.connectedCallback.call(a);\n  };\n\n  u.prototype.disconnectedCallback = function (a) {\n    var b = a.__CE_definition;\n    b.disconnectedCallback && b.disconnectedCallback.call(a);\n  };\n\n  u.prototype.attributeChangedCallback = function (a, b, d, c, e) {\n    var f = a.__CE_definition;\n    f.attributeChangedCallback && -1 < f.observedAttributes.indexOf(b) && f.attributeChangedCallback.call(a, b, d, c, e);\n  };\n\n  function B(a) {\n    var b = document;\n    this.c = a;\n    this.a = b;\n    this.b = void 0;\n    A(this.c, this.a);\n    \"loading\" === this.a.readyState && (this.b = new MutationObserver(this.f.bind(this)), this.b.observe(this.a, {\n      childList: !0,\n      subtree: !0\n    }));\n  }\n\n  function C(a) {\n    a.b && a.b.disconnect();\n  }\n\n  B.prototype.f = function (a) {\n    var b = this.a.readyState;\n    \"interactive\" !== b && \"complete\" !== b || C(this);\n\n    for (b = 0; b < a.length; b++) {\n      for (var d = a[b].addedNodes, c = 0; c < d.length; c++) {\n        A(this.c, d[c]);\n      }\n    }\n  };\n\n  function ea() {\n    var a = this;\n    this.b = this.a = void 0;\n    this.c = new Promise(function (b) {\n      a.b = b;\n      a.a && b(a.a);\n    });\n  }\n\n  function D(a) {\n    if (a.a) throw Error(\"Already resolved.\");\n    a.a = void 0;\n    a.b && a.b(void 0);\n  }\n\n  ;\n\n  function E(a) {\n    this.c = !1;\n    this.a = a;\n    this.j = new Map();\n\n    this.f = function (b) {\n      return b();\n    };\n\n    this.b = !1;\n    this.g = [];\n    this.o = new B(a);\n  }\n\n  E.prototype.l = function (a, b) {\n    var d = this;\n    if (!(b instanceof Function)) throw new TypeError(\"Custom element constructors must be functions.\");\n    if (!g(a)) throw new SyntaxError(\"The element name '\" + a + \"' is not valid.\");\n    if (this.a.a.get(a)) throw Error(\"A custom element with name '\" + a + \"' has already been defined.\");\n    if (this.c) throw Error(\"A custom element is already being defined.\");\n    this.c = !0;\n\n    try {\n      var c = function c(b) {\n        var a = e[b];\n        if (void 0 !== a && !(a instanceof Function)) throw Error(\"The '\" + b + \"' callback must be a function.\");\n        return a;\n      },\n          e = b.prototype;\n\n      if (!(e instanceof Object)) throw new TypeError(\"The custom element constructor's prototype is not an object.\");\n      var f = c(\"connectedCallback\");\n      var t = c(\"disconnectedCallback\");\n      var k = c(\"adoptedCallback\");\n      var h = c(\"attributeChangedCallback\");\n      var m = b.observedAttributes || [];\n    } catch (q) {\n      return;\n    } finally {\n      this.c = !1;\n    }\n\n    b = {\n      localName: a,\n      constructorFunction: b,\n      connectedCallback: f,\n      disconnectedCallback: t,\n      adoptedCallback: k,\n      attributeChangedCallback: h,\n      observedAttributes: m,\n      constructionStack: []\n    };\n    ba(this.a, a, b);\n    this.g.push(b);\n    this.b || (this.b = !0, this.f(function () {\n      return fa(d);\n    }));\n  };\n\n  E.prototype.i = function (a) {\n    A(this.a, a);\n  };\n\n  function fa(a) {\n    if (!1 !== a.b) {\n      a.b = !1;\n\n      for (var b = a.g, d = [], c = new Map(), e = 0; e < b.length; e++) {\n        c.set(b[e].localName, []);\n      }\n\n      A(a.a, document, {\n        i: function i(b) {\n          if (void 0 === b.__CE_state) {\n            var e = b.localName,\n                f = c.get(e);\n            f ? f.push(b) : a.a.a.get(e) && d.push(b);\n          }\n        }\n      });\n\n      for (e = 0; e < d.length; e++) {\n        y(a.a, d[e]);\n      }\n\n      for (; 0 < b.length;) {\n        var f = b.shift();\n        e = f.localName;\n        f = c.get(f.localName);\n\n        for (var t = 0; t < f.length; t++) {\n          y(a.a, f[t]);\n        }\n\n        (e = a.j.get(e)) && D(e);\n      }\n    }\n  }\n\n  E.prototype.get = function (a) {\n    if (a = this.a.a.get(a)) return a.constructorFunction;\n  };\n\n  E.prototype.m = function (a) {\n    if (!g(a)) return Promise.reject(new SyntaxError(\"'\" + a + \"' is not a valid custom element name.\"));\n    var b = this.j.get(a);\n    if (b) return b.c;\n    b = new ea();\n    this.j.set(a, b);\n    this.a.a.get(a) && !this.g.some(function (b) {\n      return b.localName === a;\n    }) && D(b);\n    return b.c;\n  };\n\n  E.prototype.s = function (a) {\n    C(this.o);\n    var b = this.f;\n\n    this.f = function (d) {\n      return a(function () {\n        return b(d);\n      });\n    };\n  };\n\n  window.CustomElementRegistry = E;\n  E.prototype.define = E.prototype.l;\n  E.prototype.upgrade = E.prototype.i;\n  E.prototype.get = E.prototype.get;\n  E.prototype.whenDefined = E.prototype.m;\n  E.prototype.polyfillWrapFlushCallback = E.prototype.s;\n  var F = window.Document.prototype.createElement,\n      G = window.Document.prototype.createElementNS,\n      ha = window.Document.prototype.importNode,\n      ia = window.Document.prototype.prepend,\n      ja = window.Document.prototype.append,\n      ka = window.DocumentFragment.prototype.prepend,\n      la = window.DocumentFragment.prototype.append,\n      H = window.Node.prototype.cloneNode,\n      I = window.Node.prototype.appendChild,\n      J = window.Node.prototype.insertBefore,\n      K = window.Node.prototype.removeChild,\n      L = window.Node.prototype.replaceChild,\n      M = Object.getOwnPropertyDescriptor(window.Node.prototype, \"textContent\"),\n      N = window.Element.prototype.attachShadow,\n      O = Object.getOwnPropertyDescriptor(window.Element.prototype, \"innerHTML\"),\n      P = window.Element.prototype.getAttribute,\n      Q = window.Element.prototype.setAttribute,\n      R = window.Element.prototype.removeAttribute,\n      S = window.Element.prototype.getAttributeNS,\n      T = window.Element.prototype.setAttributeNS,\n      U = window.Element.prototype.removeAttributeNS,\n      ma = window.Element.prototype.insertAdjacentElement,\n      na = window.Element.prototype.insertAdjacentHTML,\n      oa = window.Element.prototype.prepend,\n      pa = window.Element.prototype.append,\n      V = window.Element.prototype.before,\n      qa = window.Element.prototype.after,\n      ra = window.Element.prototype.replaceWith,\n      sa = window.Element.prototype.remove,\n      ta = window.HTMLElement,\n      W = Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, \"innerHTML\"),\n      ua = window.HTMLElement.prototype.insertAdjacentElement,\n      va = window.HTMLElement.prototype.insertAdjacentHTML;\n  var wa = new function () {}();\n\n  function xa() {\n    var a = X;\n\n    window.HTMLElement = function () {\n      function b() {\n        var b = this.constructor,\n            c = a.g.get(b);\n        if (!c) throw Error(\"The custom element being constructed was not registered with `customElements`.\");\n        var e = c.constructionStack;\n        if (0 === e.length) return e = F.call(document, c.localName), Object.setPrototypeOf(e, b.prototype), e.__CE_state = 1, e.__CE_definition = c, w(a, e), e;\n        c = e.length - 1;\n        var f = e[c];\n        if (f === wa) throw Error(\"The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.\");\n        e[c] = wa;\n        Object.setPrototypeOf(f, b.prototype);\n        w(a, f);\n        return f;\n      }\n\n      b.prototype = ta.prototype;\n      Object.defineProperty(b.prototype, \"constructor\", {\n        writable: !0,\n        configurable: !0,\n        enumerable: !1,\n        value: b\n      });\n      return b;\n    }();\n  }\n\n  ;\n\n  function Y(a, b, d) {\n    function c(b) {\n      return function (d) {\n        for (var e = [], c = 0; c < arguments.length; ++c) {\n          e[c] = arguments[c];\n        }\n\n        c = [];\n\n        for (var f = [], m = 0; m < e.length; m++) {\n          var q = e[m];\n          q instanceof Element && l(q) && f.push(q);\n          if (q instanceof DocumentFragment) for (q = q.firstChild; q; q = q.nextSibling) {\n            c.push(q);\n          } else c.push(q);\n        }\n\n        b.apply(this, e);\n\n        for (e = 0; e < f.length; e++) {\n          z(a, f[e]);\n        }\n\n        if (l(this)) for (e = 0; e < c.length; e++) {\n          f = c[e], f instanceof Element && x(a, f);\n        }\n      };\n    }\n\n    void 0 !== d.h && (b.prepend = c(d.h));\n    void 0 !== d.append && (b.append = c(d.append));\n  }\n\n  ;\n\n  function ya() {\n    var a = X;\n    r(Document.prototype, \"createElement\", function (b) {\n      if (this.__CE_hasRegistry) {\n        var d = a.a.get(b);\n        if (d) return new d.constructorFunction();\n      }\n\n      b = F.call(this, b);\n      w(a, b);\n      return b;\n    });\n    r(Document.prototype, \"importNode\", function (b, d) {\n      b = ha.call(this, b, !!d);\n      this.__CE_hasRegistry ? A(a, b) : v(a, b);\n      return b;\n    });\n    r(Document.prototype, \"createElementNS\", function (b, d) {\n      if (this.__CE_hasRegistry && (null === b || \"http://www.w3.org/1999/xhtml\" === b)) {\n        var c = a.a.get(d);\n        if (c) return new c.constructorFunction();\n      }\n\n      b = G.call(this, b, d);\n      w(a, b);\n      return b;\n    });\n    Y(a, Document.prototype, {\n      h: ia,\n      append: ja\n    });\n  }\n\n  ;\n\n  function za() {\n    function a(a, c) {\n      Object.defineProperty(a, \"textContent\", {\n        enumerable: c.enumerable,\n        configurable: !0,\n        get: c.get,\n        set: function set(a) {\n          if (this.nodeType === Node.TEXT_NODE) c.set.call(this, a);else {\n            var d = void 0;\n\n            if (this.firstChild) {\n              var e = this.childNodes,\n                  k = e.length;\n\n              if (0 < k && l(this)) {\n                d = Array(k);\n\n                for (var h = 0; h < k; h++) {\n                  d[h] = e[h];\n                }\n              }\n            }\n\n            c.set.call(this, a);\n            if (d) for (a = 0; a < d.length; a++) {\n              z(b, d[a]);\n            }\n          }\n        }\n      });\n    }\n\n    var b = X;\n    r(Node.prototype, \"insertBefore\", function (a, c) {\n      if (a instanceof DocumentFragment) {\n        var e = Array.prototype.slice.apply(a.childNodes);\n        a = J.call(this, a, c);\n        if (l(this)) for (c = 0; c < e.length; c++) {\n          x(b, e[c]);\n        }\n        return a;\n      }\n\n      e = l(a);\n      c = J.call(this, a, c);\n      e && z(b, a);\n      l(this) && x(b, a);\n      return c;\n    });\n    r(Node.prototype, \"appendChild\", function (a) {\n      if (a instanceof DocumentFragment) {\n        var c = Array.prototype.slice.apply(a.childNodes);\n        a = I.call(this, a);\n        if (l(this)) for (var e = 0; e < c.length; e++) {\n          x(b, c[e]);\n        }\n        return a;\n      }\n\n      c = l(a);\n      e = I.call(this, a);\n      c && z(b, a);\n      l(this) && x(b, a);\n      return e;\n    });\n    r(Node.prototype, \"cloneNode\", function (a) {\n      a = H.call(this, !!a);\n      this.ownerDocument.__CE_hasRegistry ? A(b, a) : v(b, a);\n      return a;\n    });\n    r(Node.prototype, \"removeChild\", function (a) {\n      var c = l(a),\n          e = K.call(this, a);\n      c && z(b, a);\n      return e;\n    });\n    r(Node.prototype, \"replaceChild\", function (a, c) {\n      if (a instanceof DocumentFragment) {\n        var e = Array.prototype.slice.apply(a.childNodes);\n        a = L.call(this, a, c);\n        if (l(this)) for (z(b, c), c = 0; c < e.length; c++) {\n          x(b, e[c]);\n        }\n        return a;\n      }\n\n      e = l(a);\n      var f = L.call(this, a, c),\n          d = l(this);\n      d && z(b, c);\n      e && z(b, a);\n      d && x(b, a);\n      return f;\n    });\n    M && M.get ? a(Node.prototype, M) : ca(b, function (b) {\n      a(b, {\n        enumerable: !0,\n        configurable: !0,\n        get: function get() {\n          for (var a = [], b = 0; b < this.childNodes.length; b++) {\n            var f = this.childNodes[b];\n            f.nodeType !== Node.COMMENT_NODE && a.push(f.textContent);\n          }\n\n          return a.join(\"\");\n        },\n        set: function set(a) {\n          for (; this.firstChild;) {\n            K.call(this, this.firstChild);\n          }\n\n          null != a && \"\" !== a && I.call(this, document.createTextNode(a));\n        }\n      });\n    });\n  }\n\n  ;\n\n  function Aa(a) {\n    function b(b) {\n      return function (e) {\n        for (var c = [], d = 0; d < arguments.length; ++d) {\n          c[d] = arguments[d];\n        }\n\n        d = [];\n\n        for (var k = [], h = 0; h < c.length; h++) {\n          var m = c[h];\n          m instanceof Element && l(m) && k.push(m);\n          if (m instanceof DocumentFragment) for (m = m.firstChild; m; m = m.nextSibling) {\n            d.push(m);\n          } else d.push(m);\n        }\n\n        b.apply(this, c);\n\n        for (c = 0; c < k.length; c++) {\n          z(a, k[c]);\n        }\n\n        if (l(this)) for (c = 0; c < d.length; c++) {\n          k = d[c], k instanceof Element && x(a, k);\n        }\n      };\n    }\n\n    var d = Element.prototype;\n    void 0 !== V && (d.before = b(V));\n    void 0 !== V && (d.after = b(qa));\n    void 0 !== ra && r(d, \"replaceWith\", function (b) {\n      for (var e = [], c = 0; c < arguments.length; ++c) {\n        e[c] = arguments[c];\n      }\n\n      c = [];\n\n      for (var d = [], k = 0; k < e.length; k++) {\n        var h = e[k];\n        h instanceof Element && l(h) && d.push(h);\n        if (h instanceof DocumentFragment) for (h = h.firstChild; h; h = h.nextSibling) {\n          c.push(h);\n        } else c.push(h);\n      }\n\n      k = l(this);\n      ra.apply(this, e);\n\n      for (e = 0; e < d.length; e++) {\n        z(a, d[e]);\n      }\n\n      if (k) for (z(a, this), e = 0; e < c.length; e++) {\n        d = c[e], d instanceof Element && x(a, d);\n      }\n    });\n    void 0 !== sa && r(d, \"remove\", function () {\n      var b = l(this);\n      sa.call(this);\n      b && z(a, this);\n    });\n  }\n\n  ;\n\n  function Ba() {\n    function a(a, b) {\n      Object.defineProperty(a, \"innerHTML\", {\n        enumerable: b.enumerable,\n        configurable: !0,\n        get: b.get,\n        set: function set(a) {\n          var e = this,\n              d = void 0;\n          l(this) && (d = [], p(this, function (a) {\n            a !== e && d.push(a);\n          }));\n          b.set.call(this, a);\n          if (d) for (var f = 0; f < d.length; f++) {\n            var t = d[f];\n            1 === t.__CE_state && c.disconnectedCallback(t);\n          }\n          this.ownerDocument.__CE_hasRegistry ? A(c, this) : v(c, this);\n          return a;\n        }\n      });\n    }\n\n    function b(a, b) {\n      r(a, \"insertAdjacentElement\", function (a, e) {\n        var d = l(e);\n        a = b.call(this, a, e);\n        d && z(c, e);\n        l(a) && x(c, e);\n        return a;\n      });\n    }\n\n    function d(a, b) {\n      function e(a, b) {\n        for (var e = []; a !== b; a = a.nextSibling) {\n          e.push(a);\n        }\n\n        for (b = 0; b < e.length; b++) {\n          A(c, e[b]);\n        }\n      }\n\n      r(a, \"insertAdjacentHTML\", function (a, c) {\n        a = a.toLowerCase();\n\n        if (\"beforebegin\" === a) {\n          var d = this.previousSibling;\n          b.call(this, a, c);\n          e(d || this.parentNode.firstChild, this);\n        } else if (\"afterbegin\" === a) d = this.firstChild, b.call(this, a, c), e(this.firstChild, d);else if (\"beforeend\" === a) d = this.lastChild, b.call(this, a, c), e(d || this.firstChild, null);else if (\"afterend\" === a) d = this.nextSibling, b.call(this, a, c), e(this.nextSibling, d);else throw new SyntaxError(\"The value provided (\" + String(a) + \") is not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'.\");\n      });\n    }\n\n    var c = X;\n    N && r(Element.prototype, \"attachShadow\", function (a) {\n      a = N.call(this, a);\n      var b = c;\n\n      if (b.b && !a.__CE_patched) {\n        a.__CE_patched = !0;\n\n        for (var e = 0; e < b.c.length; e++) {\n          b.c[e](a);\n        }\n      }\n\n      return this.__CE_shadowRoot = a;\n    });\n    O && O.get ? a(Element.prototype, O) : W && W.get ? a(HTMLElement.prototype, W) : da(c, function (b) {\n      a(b, {\n        enumerable: !0,\n        configurable: !0,\n        get: function get() {\n          return H.call(this, !0).innerHTML;\n        },\n        set: function set(a) {\n          var b = \"template\" === this.localName,\n              c = b ? this.content : this,\n              e = G.call(document, this.namespaceURI, this.localName);\n\n          for (e.innerHTML = a; 0 < c.childNodes.length;) {\n            K.call(c, c.childNodes[0]);\n          }\n\n          for (a = b ? e.content : e; 0 < a.childNodes.length;) {\n            I.call(c, a.childNodes[0]);\n          }\n        }\n      });\n    });\n    r(Element.prototype, \"setAttribute\", function (a, b) {\n      if (1 !== this.__CE_state) return Q.call(this, a, b);\n      var e = P.call(this, a);\n      Q.call(this, a, b);\n      b = P.call(this, a);\n      c.attributeChangedCallback(this, a, e, b, null);\n    });\n    r(Element.prototype, \"setAttributeNS\", function (a, b, d) {\n      if (1 !== this.__CE_state) return T.call(this, a, b, d);\n      var e = S.call(this, a, b);\n      T.call(this, a, b, d);\n      d = S.call(this, a, b);\n      c.attributeChangedCallback(this, b, e, d, a);\n    });\n    r(Element.prototype, \"removeAttribute\", function (a) {\n      if (1 !== this.__CE_state) return R.call(this, a);\n      var b = P.call(this, a);\n      R.call(this, a);\n      null !== b && c.attributeChangedCallback(this, a, b, null, null);\n    });\n    r(Element.prototype, \"removeAttributeNS\", function (a, b) {\n      if (1 !== this.__CE_state) return U.call(this, a, b);\n      var d = S.call(this, a, b);\n      U.call(this, a, b);\n      var e = S.call(this, a, b);\n      d !== e && c.attributeChangedCallback(this, b, d, e, a);\n    });\n    ua ? b(HTMLElement.prototype, ua) : ma ? b(Element.prototype, ma) : console.warn(\"Custom Elements: `Element#insertAdjacentElement` was not patched.\");\n    va ? d(HTMLElement.prototype, va) : na ? d(Element.prototype, na) : console.warn(\"Custom Elements: `Element#insertAdjacentHTML` was not patched.\");\n    Y(c, Element.prototype, {\n      h: oa,\n      append: pa\n    });\n    Aa(c);\n  }\n\n  ;\n  var Z = window.customElements;\n\n  if (!Z || Z.forcePolyfill || \"function\" != typeof Z.define || \"function\" != typeof Z.get) {\n    var X = new u();\n    xa();\n    ya();\n    Y(X, DocumentFragment.prototype, {\n      h: ka,\n      append: la\n    });\n    za();\n    Ba();\n    document.__CE_hasRegistry = !0;\n    var customElements = new E(X);\n    Object.defineProperty(window, \"customElements\", {\n      configurable: !0,\n      enumerable: !0,\n      value: customElements\n    });\n  }\n\n  ;\n}).call(self);","map":{"version":3,"sources":["src/Utilities.js","src/CustomElementInternals.js","src/CustomElementState.js","src/DocumentConstructionObserver.js","src/CustomElementRegistry.js","src/Deferred.js","src/Patch/Native.js","src/AlreadyConstructedMarker.js","src/Patch/HTMLElement.js","src/custom-elements.js","src/Patch/Interface/ParentNode.js","src/Patch/Document.js","src/Patch/Node.js","src/Patch/Interface/ChildNode.js","src/Patch/Element.js","src/Patch/DocumentFragment.js"],"names":["reservedTagList","isValidCustomElementName","reserved","validForm","isConnected","nativeValue","node","undefined","current","window","nextSiblingOrAncestorSibling","firstChild","walkDeepDescendantElements","visitedImports","root","Node","element","callback","localName","importNode","child","shadowRoot","setPropertyUnchecked","destination","CustomElementInternals","Map","setDefinition","definition","_localNameToDefinition","_constructorToDefinition","addNodePatch","addElementPatch","patchTree","patchNode","__CE_patched","i","patchElement","connectTree","elements","upgradeElement","disconnectTree","patchAndUpgradeTree","options","upgrade","gatherElements","__CE_documentLoadHandled","clonedVisitedImports","ownerDocument","constructor","Error","e","observedAttributes","name","value","connectedCallback","disconnectedCallback","attributeChangedCallback","custom","DocumentConstructionObserver","doc","internals","childList","subtree","disconnect","_handleMutations","readyState","mutations","addedNodes","j","CustomElementRegistry","this._flushCallback","define","prototype","getCallback","callbackValue","constructorFunction","adoptedCallback","constructionStack","_flush","pendingDefinitions","elementsWithStableDefinitions","elementsWithPendingDefinitions","pendingElements","_internals","pendingUpgradableElements","deferred","resolve","get","whenDefined","Promise","prior","Deferred","polyfillWrapFlushCallback","inner","_promise","Document_createElement","Document_createElementNS","Document_importNode","Document_prepend","Document_append","DocumentFragment_prepend","DocumentFragment_append","Node_cloneNode","Node_appendChild","Node_insertBefore","Node_removeChild","Node_replaceChild","Node_textContent","Element_attachShadow","Element_innerHTML","Object","Element_getAttribute","Element_setAttribute","Element_removeAttribute","Element_getAttributeNS","Element_setAttributeNS","Element_removeAttributeNS","Element_insertAdjacentElement","Element_insertAdjacentHTML","Element_prepend","Element_append","Element_before","Element_after","Element_replaceWith","Element_remove","HTMLElement","HTMLElement_innerHTML","HTMLElement_insertAdjacentElement","HTMLElement_insertAdjacentHTML","AlreadyConstructedMarker","$jscompDefaultExport$$module$src$Patch$Native.Document_createElement.call","lastIndex","$jscompDefaultExport$$module$src$Patch$Native.HTMLElement","writable","configurable","enumerable","priorCustomElements","PatchHTMLElement","PatchDocument","PatchNode","PatchElement","document","customElements","appendPrependPatch","flattenedNodes","connectedElements","length","builtInMethod","builtIn","Document","result","clone","$jscompDefaultExport$$module$src$Patch$Native.Document_importNode.call","NS_HTML","PatchParentNode","prepend","append","insertedNodes","Array","nativeResult","$jscompDefaultExport$$module$src$Patch$Native.Node_insertBefore.call","nodeWasConnected","$jscompDefaultExport$$module$src$Patch$Native.Node_appendChild.call","$jscompDefaultExport$$module$src$Patch$Native.Node_cloneNode.call","$jscompDefaultExport$$module$src$Patch$Native.Node_removeChild.call","nodeToInsert","$jscompDefaultExport$$module$src$Patch$Native.Node_replaceChild.call","nodeToInsertWasConnected","thisIsConnected","patch_textContent","baseDescriptor","set","removedNodes","childNodes","childNodesLength","$jscompDefaultExport$$module$src$Patch$Native.Node_textContent","$jscompDefaultExport$$module$src$Patch$Native.Node_textContent.get","parts","childNode","beforeAfterPatch","wasConnected","apply","call","$jscompDefaultExport$$module$src$Patch$Native.Element_attachShadow","Element","$jscompDefaultExport$$module$src$Patch$Native.Element_attachShadow.call","patch_innerHTML","removedElements","$jscompDefaultExport$$module$src$Patch$Native.Element_innerHTML","$jscompDefaultExport$$module$src$Patch$Native.Element_innerHTML.get","$jscompDefaultExport$$module$src$Patch$Native.HTMLElement_innerHTML","$jscompDefaultExport$$module$src$Patch$Native.HTMLElement_innerHTML.get","innerHTML","isTemplate","content","rawElement","$jscompDefaultExport$$module$src$Patch$Native.Document_createElementNS.call","assignedValue","container","$jscompDefaultExport$$module$src$Patch$Native.Element_setAttribute.call","oldValue","$jscompDefaultExport$$module$src$Patch$Native.Element_getAttribute.call","newValue","$jscompDefaultExport$$module$src$Patch$Native.Element_setAttributeNS.call","$jscompDefaultExport$$module$src$Patch$Native.Element_getAttributeNS.call","$jscompDefaultExport$$module$src$Patch$Native.Element_removeAttribute.call","$jscompDefaultExport$$module$src$Patch$Native.Element_removeAttributeNS.call","patch_insertAdjacentElement","insertedElement","baseMethod","$jscompDefaultExport$$module$src$Patch$Native.HTMLElement_insertAdjacentElement","$jscompDefaultExport$$module$src$Patch$Native.Element_insertAdjacentElement","console","patch_insertAdjacentHTML","upgradeNodesInRange","nodes","position","marker","String","$jscompDefaultExport$$module$src$Patch$Native.HTMLElement_insertAdjacentHTML","$jscompDefaultExport$$module$src$Patch$Native.Element_insertAdjacentHTML","PatchChildNode","$jscompDefaultExport$$module$src$Patch$Native.Element_replaceWith","$jscompDefaultExport$$module$src$Patch$Native.Element_remove","DocumentFragment"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nconst reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = current.parentNode || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return (!node || node === root) ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = element.localName;\n      if (localName === 'link' && element.getAttribute('rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = importNode.firstChild; child; child = child.nextSibling) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patchesNode = [];\n\n    /** @type {!Array<!function(!Element)>} */\n    this._patchesElement = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructorFunction, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} patch\n   */\n  addNodePatch(patch) {\n    this._hasPatches = true;\n    this._patchesNode.push(patch);\n  }\n\n  /**\n   * @param {!function(!Element)} patch\n   */\n  addElementPatch(patch) {\n    this._hasPatches = true;\n    this._patchesElement.push(patch);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patchElement(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchNode(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patchesNode.length; i++) {\n      this._patchesNode[i](node);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  patchElement(element) {\n    if (!this._hasPatches) return;\n\n    if (element.__CE_patched) return;\n    element.__CE_patched = true;\n\n    for (let i = 0; i < this._patchesNode.length; i++) {\n      this._patchesNode[i](element);\n    }\n\n    for (let i = 0; i < this._patchesElement.length; i++) {\n      this._patchesElement[i](element);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {{\n   *   visitedImports: (!Set<!Node>|undefined),\n   *   upgrade: (!function(!Element)|undefined),\n   * }=} options\n   */\n  patchAndUpgradeTree(root, options = {}) {\n    const visitedImports = options.visitedImports || new Set();\n    const upgrade = options.upgrade || (element => this.upgradeElement(element));\n\n    const elements = [];\n\n    const gatherElements = element => {\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node) {\n          importNode.__CE_isImportDocument = true;\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        }\n\n        if (importNode && importNode.readyState === 'complete') {\n          importNode.__CE_documentLoadHandled = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          element.addEventListener('load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            clonedVisitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, {visitedImports: clonedVisitedImports, upgrade});\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patchElement(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      upgrade(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    // Prevent elements created in documents without a browsing context from\n    // upgrading.\n    //\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#look-up-a-custom-element-definition\n    //   \"If document does not have a browsing context, return null.\"\n    //\n    // https://html.spec.whatwg.org/multipage/window-object.html#dom-document-defaultview\n    //   \"The defaultView IDL attribute of the Document interface, on getting,\n    //   must return this Document's browsing context's WindowProxy object, if\n    //   this Document has an associated browsing context, or null otherwise.\"\n    const ownerDocument = element.ownerDocument;\n    if (\n      !ownerDocument.defaultView &&\n      !(ownerDocument.__CE_isImportDocument && ownerDocument.__CE_hasRegistry)\n    ) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructorFunction;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = element.getAttribute(name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = this._document.readyState;\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = mutations[i].addedNodes;\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<!CustomElementDefinition>}\n     */\n    this._pendingDefinitions = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructorFunction: constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n    this._pendingDefinitions.push(definition);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  upgrade(element) {\n    this._internals.patchAndUpgradeTree(element);\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n    this._flushPending = false;\n\n    const pendingDefinitions = this._pendingDefinitions;\n\n    /**\n     * Unupgraded elements with definitions that were defined *before* the last\n     * flush, in document order.\n     * @type {!Array<!HTMLElement>}\n     */\n    const elementsWithStableDefinitions = [];\n\n    /**\n     * A map from `localName`s of definitions that were defined *after* the last\n     * flush to unupgraded elements matching that definition, in document order.\n     * @type {!Map<string, !Array<!HTMLElement>>}\n     */\n    const elementsWithPendingDefinitions = new Map();\n    for (let i = 0; i < pendingDefinitions.length; i++) {\n      elementsWithPendingDefinitions.set(pendingDefinitions[i].localName, []);\n    }\n\n    this._internals.patchAndUpgradeTree(document, {\n      upgrade: element => {\n        // Ignore the element if it has already upgraded or failed to upgrade.\n        if (element.__CE_state !== undefined) return;\n\n        const localName = element.localName;\n\n        // If there is an applicable pending definition for the element, add the\n        // element to the list of elements to be upgraded with that definition.\n        const pendingElements = elementsWithPendingDefinitions.get(localName);\n        if (pendingElements) {\n          pendingElements.push(element);\n        // If there is *any other* applicable definition for the element, add it\n        // to the list of elements with stable definitions that need to be upgraded.\n        } else if (this._internals.localNameToDefinition(localName)) {\n          elementsWithStableDefinitions.push(element);\n        }\n      },\n    });\n\n    // Upgrade elements with 'stable' definitions first.\n    for (let i = 0; i < elementsWithStableDefinitions.length; i++) {\n      this._internals.upgradeElement(elementsWithStableDefinitions[i]);\n    }\n\n    // Upgrade elements with 'pending' definitions in the order they were defined.\n    while (pendingDefinitions.length > 0) {\n      const definition = pendingDefinitions.shift();\n      const localName = definition.localName;\n\n      // Attempt to upgrade all applicable elements.\n      const pendingUpgradableElements = elementsWithPendingDefinitions.get(definition.localName);\n      for (let i = 0; i < pendingUpgradableElements.length; i++) {\n        this._internals.upgradeElement(pendingUpgradableElements[i]);\n      }\n\n      // Resolve any promises created by `whenDefined` for the definition.\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructorFunction;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && !this._pendingDefinitions.some(d => d.localName === localName)) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['upgrade'] = CustomElementRegistry.prototype.upgrade;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nexport default {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  DocumentFragment_prepend: window.DocumentFragment.prototype['prepend'],\n  DocumentFragment_append: window.DocumentFragment.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_insertAdjacentHTML: window.Element.prototype['insertAdjacentHTML'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  HTMLElement: window.HTMLElement,\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\n  HTMLElement_insertAdjacentElement: window.HTMLElement.prototype['insertAdjacentElement'],\n  HTMLElement_insertAdjacentHTML: window.HTMLElement.prototype['insertAdjacentHTML'],\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n * @extends AlreadyConstructedMarkerType\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      const constructor = /** @type {!Function} */ (this.constructor);\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = /** @type {!HTMLElement} */ (Native.Document_createElement.call(document, definition.localName));\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patchElement(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      const toConstructElement = /** @type {!HTMLElement} */ (element);\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(toConstructElement, constructor.prototype);\n      internals.patchElement(toConstructElement);\n\n      return toConstructElement;\n    }\n\n    HTMLElement.prototype = Native.HTMLElement.prototype;\n    // Safari 9 has `writable: false` on the propertyDescriptor\n    // Make it writable so that TypeScript can patch up the\n    // constructor in the ES5 compiled code.\n    Object.defineProperty(HTMLElement.prototype, 'constructor', {\n      writable: true,\n      configurable: true,\n      enumerable: false,\n      value: HTMLElement\n    });\n\n    return HTMLElement;\n  })();\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchHTMLElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchDocumentFragment from './Patch/DocumentFragment.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchDocumentFragment(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {!function(...(!Node|string))} builtInMethod\n   * @return {!function(...(!Node|string))}\n   */\n  function appendPrependPatch(builtInMethod) {\n    return /** @this {!Node} */ function(...nodes) {\n      /**\n       * A copy of `nodes`, with any DocumentFragment replaced by its children.\n       * @type {!Array<!Node>}\n       */\n      const flattenedNodes = [];\n\n      /**\n       * Elements in `nodes` that were connected before this call.\n       * @type {!Array<!Node>}\n       */\n      const connectedElements = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n\n        if (node instanceof Element && Utilities.isConnected(node)) {\n          connectedElements.push(node);\n        }\n\n        if (node instanceof DocumentFragment) {\n          for (let child = node.firstChild; child; child = child.nextSibling) {\n            flattenedNodes.push(child);\n          }\n        } else {\n          flattenedNodes.push(node);\n        }\n      }\n\n      builtInMethod.apply(this, nodes);\n\n      for (let i = 0; i < connectedElements.length; i++) {\n        internals.disconnectTree(connectedElements[i]);\n      }\n\n      if (Utilities.isConnected(this)) {\n        for (let i = 0; i < flattenedNodes.length; i++) {\n          const node = flattenedNodes[i];\n          if (node instanceof Element) {\n            internals.connectTree(node);\n          }\n        }\n      }\n    };\n  }\n\n  if (builtIn.prepend !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'prepend', appendPrependPatch(builtIn.prepend));\n  }\n\n  if (builtIn.append !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'append', appendPrependPatch(builtIn.append));\n  }\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructorFunction)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElement.call(this, localName));\n      internals.patchElement(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = /** @type {!Node} */ (Native.Document_importNode.call(this, node, !!deep));\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructorFunction)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElementNS.call(this, namespace, localName));\n      internals.patchElement(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append,\n  });\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_appendChild.call(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_appendChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = Native.Node_cloneNode.call(this, !!deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_removeChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(nodeToInsert.childNodes);\n        const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (this.firstChild) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = this.childNodes;\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (Native.Node_textContent && Native.Node_textContent.get) {\n    patch_textContent(Node.prototype, Native.Node_textContent);\n  } else {\n    internals.addNodePatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          for (let i = 0; i < this.childNodes.length; i++) {\n            const childNode = this.childNodes[i];\n            if (childNode.nodeType === Node.COMMENT_NODE) {\n              continue;\n            }\n            parts.push(childNode.textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          while (this.firstChild) {\n            Native.Node_removeChild.call(this, this.firstChild);\n          }\n          // `textContent = null | undefined | ''` does not result in\n          // a TextNode childNode\n          if (assignedValue != null && assignedValue !== '') {\n            Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\n          }\n        },\n      });\n    });\n  }\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {!function(...(!Node|string))} builtInMethod\n   * @return {!function(...(!Node|string))}\n   */\n  function beforeAfterPatch(builtInMethod) {\n    return /** @this {!Node} */ function(...nodes) {\n      /**\n       * A copy of `nodes`, with any DocumentFragment replaced by its children.\n       * @type {!Array<!Node>}\n       */\n      const flattenedNodes = [];\n\n      /**\n       * Elements in `nodes` that were connected before this call.\n       * @type {!Array<!Node>}\n       */\n      const connectedElements = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n\n        if (node instanceof Element && Utilities.isConnected(node)) {\n          connectedElements.push(node);\n        }\n\n        if (node instanceof DocumentFragment) {\n          for (let child = node.firstChild; child; child = child.nextSibling) {\n            flattenedNodes.push(child);\n          }\n        } else {\n          flattenedNodes.push(node);\n        }\n      }\n\n      builtInMethod.apply(this, nodes);\n\n      for (let i = 0; i < connectedElements.length; i++) {\n        internals.disconnectTree(connectedElements[i]);\n      }\n\n      if (Utilities.isConnected(this)) {\n        for (let i = 0; i < flattenedNodes.length; i++) {\n          const node = flattenedNodes[i];\n          if (node instanceof Element) {\n            internals.connectTree(node);\n          }\n        }\n      }\n    };\n  }\n\n  if (builtIn.before !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'before', beforeAfterPatch(builtIn.before));\n  }\n\n  if (builtIn.before !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'after', beforeAfterPatch(builtIn.after));\n  }\n\n  if (builtIn.replaceWith !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'replaceWith',\n      /**\n       * @param {...(!Node|string)} nodes\n       * @this {!Node}\n       */\n      function(...nodes) {\n        /**\n         * A copy of `nodes`, with any DocumentFragment replaced by its children.\n         * @type {!Array<!Node|string>}\n         */\n        const flattenedNodes = [];\n\n        /**\n         * Elements in `nodes` that were connected before this call.\n         * @type {!Array<!Node>}\n         */\n        const connectedElements = [];\n\n        for (var i = 0; i < nodes.length; i++) {\n          const node = nodes[i];\n\n          if (node instanceof Element && Utilities.isConnected(node)) {\n            connectedElements.push(node);\n          }\n\n          if (node instanceof DocumentFragment) {\n            for (let child = node.firstChild; child; child = child.nextSibling) {\n              flattenedNodes.push(child);\n            }\n          } else {\n            flattenedNodes.push(node);\n          }\n        }\n\n        const wasConnected = Utilities.isConnected(this);\n\n        builtIn.replaceWith.apply(this, nodes);\n\n        for (let i = 0; i < connectedElements.length; i++) {\n          internals.disconnectTree(connectedElements[i]);\n        }\n\n        if (wasConnected) {\n          internals.disconnectTree(this);\n          for (let i = 0; i < flattenedNodes.length; i++) {\n            const node = flattenedNodes[i];\n            if (node instanceof Element) {\n              internals.connectTree(node);\n            }\n          }\n        }\n      });\n    }\n\n  if (builtIn.remove !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'remove',\n      /** @this {!Node} */\n      function() {\n        const wasConnected = Utilities.isConnected(this);\n\n        builtIn.remove.call(this);\n\n        if (wasConnected) {\n          internals.disconnectTree(this);\n        }\n      });\n  }\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Native.Element_attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = Native.Element_attachShadow.call(this, init);\n        internals.patchNode(shadowRoot);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        let removedElements = undefined;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElements.length; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\n  } else {\n    internals.addElementPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return /** @type {!Element} */ (\n                     Native.Node_cloneNode.call(this, true))\n              .innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          const isTemplate = (this.localName === 'template');\n          /** @type {!Node} */\n          const content = isTemplate ? (/** @type {!HTMLTemplateElement} */\n            (this)).content : this;\n          /** @type {!Element} */\n          const rawElement = Native.Document_createElementNS.call(document,\n              this.namespaceURI, this.localName);\n          rawElement.innerHTML = assignedValue;\n\n          while (content.childNodes.length > 0) {\n            Native.Node_removeChild.call(content, content.childNodes[0]);\n          }\n          const container = isTemplate ?\n              /** @type {!HTMLTemplateElement} */ (rawElement).content :\n              rawElement;\n          while (container.childNodes.length > 0) {\n            Native.Node_appendChild.call(content, container.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttribute.call(this, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_setAttribute.call(this, name, newValue);\n      newValue = Native.Element_getAttribute.call(this, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttribute.call(this, name);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_removeAttribute.call(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttributeNS.call(this, namespace, name);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_removeAttributeNS.call(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} position\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(position, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, position, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentElement) {\n    patch_insertAdjacentElement(HTMLElement.prototype, Native.HTMLElement_insertAdjacentElement);\n  } else if (Native.Element_insertAdjacentElement) {\n    patch_insertAdjacentElement(Element.prototype, Native.Element_insertAdjacentElement);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  function patch_insertAdjacentHTML(destination, baseMethod) {\n    /**\n     * Patches and upgrades all nodes which are siblings between `start`\n     * (inclusive) and `end` (exclusive). If `end` is `null`, then all siblings\n     * following `start` will be patched and upgraded.\n     * @param {!Node} start\n     * @param {?Node} end\n     */\n    function upgradeNodesInRange(start, end) {\n      const nodes = [];\n      for (let node = start; node !== end; node = node.nextSibling) {\n        nodes.push(node);\n      }\n      for (let i = 0; i < nodes.length; i++) {\n        internals.patchAndUpgradeTree(nodes[i]);\n      }\n    }\n\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentHTML',\n      /**\n       * @this {Element}\n       * @param {string} position\n       * @param {string} text\n       */\n      function(position, text) {\n        position = position.toLowerCase();\n\n        if (position === \"beforebegin\") {\n          const marker = this.previousSibling;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(marker || /** @type {!Node} */ (this.parentNode.firstChild), this);\n        } else if (position === \"afterbegin\") {\n          const marker = this.firstChild;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(/** @type {!Node} */ (this.firstChild), marker);\n        } else if (position === \"beforeend\") {\n          const marker = this.lastChild;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(marker || /** @type {!Node} */ (this.firstChild), null);\n        } else if (position === \"afterend\") {\n          const marker = this.nextSibling;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(/** @type {!Node} */ (this.nextSibling), marker);\n        } else {\n          throw new SyntaxError(`The value provided (${String(position)}) is ` +\n            \"not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'.\");\n        }\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentHTML) {\n    patch_insertAdjacentHTML(HTMLElement.prototype, Native.HTMLElement_insertAdjacentHTML);\n  } else if (Native.Element_insertAdjacentHTML) {\n    patch_insertAdjacentHTML(Element.prototype, Native.Element_insertAdjacentHTML);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentHTML` was not patched.');\n  }\n\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove,\n  });\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport Native from './Native.js';\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  PatchParentNode(internals, DocumentFragment.prototype, {\n    prepend: Native.DocumentFragment_prepend,\n    append: Native.DocumentFragment_append,\n  });\n};\n"]},"metadata":{},"sourceType":"script"}