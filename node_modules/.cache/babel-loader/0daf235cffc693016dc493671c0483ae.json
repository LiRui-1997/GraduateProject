{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/components/IstioWizards/Slider/Slider.tsx\";\nimport React from 'react';\nimport BootstrapSlider from './BootstrapSlider';\nimport { Button, ButtonVariant, InputGroupText, TextInput, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport Boundaries from './Boundaries';\nimport { style } from 'typestyle';\nimport { MinusIcon, PlusIcon, ThumbTackIcon, VirtualMachineIcon } from '@patternfly/react-icons';\nimport './styles/default.css';\nexport var noop = Function.prototype;\n\nvar Slider = /*#__PURE__*/function (_React$Component) {\n  _inherits(Slider, _React$Component);\n\n  var _super = _createSuper(Slider);\n\n  function Slider(props) {\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    _this = _super.call(this, props);\n\n    _this.onSlide = function (value) {\n      _this.setState({\n        value: value\n      }, function () {\n        return _this.props.onSlide(value);\n      });\n    };\n\n    _this.onSlideStop = function (value) {\n      _this.setState({\n        value: value\n      }, function () {\n        return _this.props.onSlideStop(value);\n      });\n    };\n\n    _this.onPlus = function () {\n      var newValue = Number(_this.state.value || 0);\n\n      _this.updateNewValue(newValue + 1);\n    };\n\n    _this.onMinus = function () {\n      var newValue = Number(_this.state.value || 0);\n\n      _this.updateNewValue(newValue - 1);\n    };\n\n    _this.onInputChange = function (value) {\n      var newValue = Number(value);\n\n      _this.updateNewValue(Number.isNaN(newValue) ? 0 : newValue);\n    };\n\n    _this.updateNewValue = function (newValue) {\n      if (newValue > _this.props.max) {\n        newValue = _this.props.max;\n      }\n\n      if (newValue < 0) {\n        newValue = 0;\n      }\n\n      _this.setState({\n        value: newValue\n      }, function () {\n        return _this.props.onSlide(newValue);\n      });\n    };\n\n    _this.onFormatChange = function (format) {\n      _this.setState({\n        tooltipFormat: format\n      });\n    };\n\n    _this.formatter = function (value) {\n      return _this.props.tooltipFormatter !== noop ? _this.props.tooltipFormatter(value) : \"\".concat(value, \" \").concat(_this.state.tooltipFormat, \" \").concat(_this.props.mirrored ? ' mirrored traffic' : '');\n    };\n\n    _this.state = {\n      value: _this.props.value,\n      tooltipFormat: _this.props.inputFormat\n    };\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // This empty setState forces a re-render which resolves an issue with initial tick_label placement\n      this.setState({});\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.value !== this.props.value || this.state.value !== this.props.value) {\n        this.setState({\n          value: this.props.value\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var BSSlider = /*#__PURE__*/React.createElement(BootstrapSlider, Object.assign({}, this.props, {\n        formatter: this.formatter,\n        value: this.state.value,\n        onSlide: this.onSlide,\n        onSlideStop: this.onSlideStop,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }\n      }));\n      var leftButtonStyle = style({\n        width: '20px',\n        paddingLeft: 0,\n        paddingRight: 0,\n        marginLeft: 0,\n        marginRight: 5\n      });\n      var inputStyle = style({\n        width: '3em',\n        textAlign: 'center',\n        marginLeft: 0,\n        marginRight: 0\n      });\n      var rightButtonStyle = style({\n        width: '20px',\n        paddingLeft: 0,\n        paddingRight: 0,\n        marginLeft: 5,\n        marginRight: 5\n      });\n      var pinButtonStyle = style({\n        paddingLeft: 8,\n        paddingRight: 8\n      });\n      var LockIcon = /*#__PURE__*/React.createElement(Tooltip, {\n        position: TooltipPosition.top,\n        content: /*#__PURE__*/React.createElement(React.Fragment, null, this.props.locked ? 'Unlock' : 'Lock', \" Weight for this Workload\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: pinButtonStyle,\n        isDisabled: this.props.mirrored,\n        variant: this.props.locked ? ButtonVariant.primary : ButtonVariant.secondary,\n        onClick: function onClick() {\n          return _this2.props.onLock(!_this2.props.locked);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ThumbTackIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }\n      })));\n      var MirrorIcon = /*#__PURE__*/React.createElement(Tooltip, {\n        position: TooltipPosition.top,\n        content: /*#__PURE__*/React.createElement(React.Fragment, null, \"Mirror % traffic to this Workload\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: pinButtonStyle,\n        variant: this.props.mirrored ? ButtonVariant.primary : ButtonVariant.secondary,\n        onClick: function onClick() {\n          return _this2.props.onMirror(!_this2.props.mirrored);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(VirtualMachineIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }\n      })));\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Boundaries, Object.assign({\n        slider: BSSlider\n      }, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }\n      }), this.props.input && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        className: leftButtonStyle,\n        variant: \"link\",\n        isDisabled: this.props.locked,\n        onClick: function onClick() {\n          return _this2.onMinus();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(MinusIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(TextInput, {\n        className: inputStyle,\n        id: \"slider-text\",\n        \"aria-label\": \"slider-text\",\n        value: this.state.value,\n        onChange: this.onInputChange,\n        isDisabled: this.props.locked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: rightButtonStyle,\n        variant: \"link\",\n        isDisabled: this.props.locked,\n        onClick: function onClick() {\n          return _this2.onPlus();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(PlusIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(InputGroupText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }\n      }, this.props.inputFormat)), this.props.showMirror ? MirrorIcon : /*#__PURE__*/React.createElement(React.Fragment, null), this.props.showLock ? LockIcon : /*#__PURE__*/React.createElement(React.Fragment, null)));\n    }\n  }]);\n\n  return Slider;\n}(React.Component);\n\nSlider.defaultProps = {\n  id: null,\n  orientation: 'horizontal',\n  min: 0,\n  max: 100,\n  maxLimit: 100,\n  value: 0,\n  step: 1,\n  ticks: [],\n  ticks_labels: [],\n  toolTip: false,\n  tooltipFormatter: noop,\n  onSlide: noop,\n  onSlideStop: noop,\n  label: null,\n  labelClass: null,\n  input: false,\n  sliderClass: null,\n  inputFormat: '',\n  locked: false,\n  showLock: true,\n  onLock: noop,\n  showMirror: true,\n  onMirror: noop\n};\nexport default Slider;","map":{"version":3,"sources":["/root/kiali-ui/src/components/IstioWizards/Slider/Slider.tsx"],"names":["React","BootstrapSlider","Button","ButtonVariant","InputGroupText","TextInput","Tooltip","TooltipPosition","Boundaries","style","MinusIcon","PlusIcon","ThumbTackIcon","VirtualMachineIcon","noop","Function","prototype","Slider","props","onSlide","value","setState","onSlideStop","onPlus","newValue","Number","state","updateNewValue","onMinus","onInputChange","isNaN","max","onFormatChange","format","tooltipFormat","formatter","tooltipFormatter","mirrored","inputFormat","prevProps","BSSlider","leftButtonStyle","width","paddingLeft","paddingRight","marginLeft","marginRight","inputStyle","textAlign","rightButtonStyle","pinButtonStyle","LockIcon","top","locked","primary","secondary","onLock","MirrorIcon","onMirror","input","showMirror","showLock","Component","defaultProps","id","orientation","min","maxLimit","step","ticks","ticks_labels","toolTip","label","labelClass","sliderClass"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BootstrapSlider from './BootstrapSlider';\nimport { Button, ButtonVariant, InputGroupText, TextInput, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport Boundaries from './Boundaries';\nimport { style } from 'typestyle';\nimport { MinusIcon, PlusIcon, ThumbTackIcon, VirtualMachineIcon } from '@patternfly/react-icons';\nimport './styles/default.css';\n\nexport const noop = Function.prototype;\n\ntype Props = {\n  id: string;\n  orientation: string;\n  min: number;\n  max: number;\n  maxLimit: number;\n  step: number;\n  value: number;\n  ticks: number[];\n  ticks_labels: string[];\n  tooltip: boolean;\n  tooltipFormatter: (value: number) => string;\n  onSlide: (value: number) => void;\n  onSlideStop: (value: number) => void;\n  input: boolean;\n  sliderClass: string;\n  inputFormat: string;\n  locked: boolean;\n  showLock: boolean;\n  onLock: (locked: boolean) => void;\n  mirrored: boolean;\n  showMirror: boolean;\n  onMirror: (mirror: boolean) => void;\n};\n\ntype State = {\n  value: number;\n  tooltipFormat: string;\n};\n\nclass Slider extends React.Component<Props, State> {\n  static defaultProps = {\n    id: null,\n    orientation: 'horizontal',\n    min: 0,\n    max: 100,\n    maxLimit: 100,\n    value: 0,\n    step: 1,\n    ticks: [],\n    ticks_labels: [],\n    toolTip: false,\n    tooltipFormatter: noop,\n    onSlide: noop,\n    onSlideStop: noop,\n    label: null,\n    labelClass: null,\n    input: false,\n    sliderClass: null,\n    inputFormat: '',\n    locked: false,\n    showLock: true,\n    onLock: noop,\n    showMirror: true,\n    onMirror: noop\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      tooltipFormat: this.props.inputFormat\n    };\n  }\n\n  componentDidMount() {\n    // This empty setState forces a re-render which resolves an issue with initial tick_label placement\n    this.setState({});\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (prevProps.value !== this.props.value || this.state.value !== this.props.value) {\n      this.setState({ value: this.props.value });\n    }\n  }\n\n  onSlide = value => {\n    this.setState({ value }, () => this.props.onSlide(value));\n  };\n\n  onSlideStop = value => {\n    this.setState({ value }, () => this.props.onSlideStop(value));\n  };\n\n  onPlus = () => {\n    const newValue = Number(this.state.value || 0);\n    this.updateNewValue(newValue + 1);\n  };\n\n  onMinus = () => {\n    const newValue = Number(this.state.value || 0);\n    this.updateNewValue(newValue - 1);\n  };\n\n  onInputChange = (value: string | number) => {\n    const newValue: number = Number(value);\n    this.updateNewValue(Number.isNaN(newValue) ? 0 : newValue);\n  };\n\n  updateNewValue = (newValue: number) => {\n    if (newValue > this.props.max) {\n      newValue = this.props.max;\n    }\n    if (newValue < 0) {\n      newValue = 0;\n    }\n    this.setState({ value: newValue }, () => this.props.onSlide(newValue));\n  };\n\n  onFormatChange = format => {\n    this.setState({ tooltipFormat: format });\n  };\n\n  formatter = value => {\n    return this.props.tooltipFormatter !== noop\n      ? this.props.tooltipFormatter(value)\n      : `${value} ${this.state.tooltipFormat} ${this.props.mirrored ? ' mirrored traffic' : ''}`;\n  };\n\n  render() {\n    const BSSlider = (\n      <BootstrapSlider\n        {...this.props}\n        formatter={this.formatter}\n        value={this.state.value}\n        onSlide={this.onSlide}\n        onSlideStop={this.onSlideStop}\n      />\n    );\n\n    const leftButtonStyle = style({\n      width: '20px',\n      paddingLeft: 0,\n      paddingRight: 0,\n      marginLeft: 0,\n      marginRight: 5\n    });\n    const inputStyle = style({\n      width: '3em',\n      textAlign: 'center',\n      marginLeft: 0,\n      marginRight: 0\n    });\n    const rightButtonStyle = style({\n      width: '20px',\n      paddingLeft: 0,\n      paddingRight: 0,\n      marginLeft: 5,\n      marginRight: 5\n    });\n    const pinButtonStyle = style({\n      paddingLeft: 8,\n      paddingRight: 8\n    });\n    const LockIcon = (\n      <Tooltip\n        position={TooltipPosition.top}\n        content={<>{this.props.locked ? 'Unlock' : 'Lock'} Weight for this Workload</>}\n      >\n        <Button\n          className={pinButtonStyle}\n          isDisabled={this.props.mirrored}\n          variant={this.props.locked ? ButtonVariant.primary : ButtonVariant.secondary}\n          onClick={() => this.props.onLock(!this.props.locked)}\n        >\n          <ThumbTackIcon />\n        </Button>\n      </Tooltip>\n    );\n\n    const MirrorIcon = (\n      <Tooltip position={TooltipPosition.top} content={<>Mirror % traffic to this Workload</>}>\n        <Button\n          className={pinButtonStyle}\n          variant={this.props.mirrored ? ButtonVariant.primary : ButtonVariant.secondary}\n          onClick={() => this.props.onMirror(!this.props.mirrored)}\n        >\n          <VirtualMachineIcon />\n        </Button>\n      </Tooltip>\n    );\n\n    return (\n      <>\n        <Boundaries slider={BSSlider} {...this.props}>\n          {this.props.input && (\n            <>\n              <Button\n                className={leftButtonStyle}\n                variant=\"link\"\n                isDisabled={this.props.locked}\n                onClick={() => this.onMinus()}\n              >\n                <MinusIcon />\n              </Button>\n              <TextInput\n                className={inputStyle}\n                id=\"slider-text\"\n                aria-label=\"slider-text\"\n                value={this.state.value}\n                onChange={this.onInputChange}\n                isDisabled={this.props.locked}\n              />\n              <Button\n                className={rightButtonStyle}\n                variant=\"link\"\n                isDisabled={this.props.locked}\n                onClick={() => this.onPlus()}\n              >\n                <PlusIcon />\n              </Button>\n              <InputGroupText>{this.props.inputFormat}</InputGroupText>\n            </>\n          )}\n          {this.props.showMirror ? MirrorIcon : <></>}\n          {this.props.showLock ? LockIcon : <></>}\n        </Boundaries>\n      </>\n    );\n  }\n}\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}