{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/components/Nav/Page/RenderHeader.tsx\";\nimport React from 'react';\nimport { style } from 'typestyle';\nimport { PFColors } from '../../Pf/PfColors';\nimport BreadcrumbView from '../../BreadcrumbView/BreadcrumbView';\nvar containerPadding = style({\n  padding: '0 20px 28px 20px'\n});\nvar containerWhite = style({\n  backgroundColor: PFColors.White\n}); // This magic style tries to adjust Breadcrumb with Namespace selector\n// to give impression that both components are placed in the same location\n\nvar breadcrumbMargin = style({\n  padding: '10px 0 4px 0'\n});\nvar breadcrumbStyle = style({\n  display: 'flex',\n  flexWrap: 'wrap'\n});\nvar rightToolbarStyle = style({\n  marginLeft: 'auto'\n});\nvar actionsToolbarStyle = style({\n  float: 'right',\n  backgroundColor: '#fff',\n  padding: '0px 20px 22px 5px',\n  marginTop: '-18px'\n});\nexport var RenderHeader = /*#__PURE__*/function (_React$Component) {\n  _inherits(RenderHeader, _React$Component);\n\n  var _super = _createSuper(RenderHeader);\n\n  function RenderHeader() {\n    _classCallCheck(this, RenderHeader);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RenderHeader, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(containerPadding, \" \").concat(containerWhite),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, this.props.location && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: breadcrumbMargin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: breadcrumbStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(BreadcrumbView, {\n        location: this.props.location,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }\n      }), this.props.rightToolbar && /*#__PURE__*/React.createElement(\"div\", {\n        className: rightToolbarStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 47\n        }\n      }, this.props.rightToolbar)))), this.props.children), this.props.actionsToolbar && /*#__PURE__*/React.createElement(\"div\", {\n        className: actionsToolbarStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 39\n        }\n      }, this.props.actionsToolbar));\n    }\n  }]);\n\n  return RenderHeader;\n}(React.Component);","map":{"version":3,"sources":["/root/kiali-ui/src/components/Nav/Page/RenderHeader.tsx"],"names":["React","style","PFColors","BreadcrumbView","containerPadding","padding","containerWhite","backgroundColor","White","breadcrumbMargin","breadcrumbStyle","display","flexWrap","rightToolbarStyle","marginLeft","actionsToolbarStyle","float","marginTop","RenderHeader","props","location","rightToolbar","children","actionsToolbar","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,WAAtB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AAEA,IAAMC,gBAAgB,GAAGH,KAAK,CAAC;AAAEI,EAAAA,OAAO,EAAE;AAAX,CAAD,CAA9B;AACA,IAAMC,cAAc,GAAGL,KAAK,CAAC;AAAEM,EAAAA,eAAe,EAAEL,QAAQ,CAACM;AAA5B,CAAD,CAA5B,C,CACA;AACA;;AACA,IAAMC,gBAAgB,GAAGR,KAAK,CAAC;AAAEI,EAAAA,OAAO,EAAE;AAAX,CAAD,CAA9B;AAEA,IAAMK,eAAe,GAAGT,KAAK,CAAC;AAC5BU,EAAAA,OAAO,EAAE,MADmB;AAE5BC,EAAAA,QAAQ,EAAE;AAFkB,CAAD,CAA7B;AAKA,IAAMC,iBAAiB,GAAGZ,KAAK,CAAC;AAC9Ba,EAAAA,UAAU,EAAE;AADkB,CAAD,CAA/B;AAIA,IAAMC,mBAAmB,GAAGd,KAAK,CAAC;AAChCe,EAAAA,KAAK,EAAE,OADyB;AAEhCT,EAAAA,eAAe,EAAE,MAFe;AAGhCF,EAAAA,OAAO,EAAE,mBAHuB;AAIhCY,EAAAA,SAAS,EAAE;AAJqB,CAAD,CAAjC;AAgBA,WAAaC,YAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,kBAAS;AACP,0BACE,uDACE;AAAK,QAAA,SAAS,YAAKd,gBAAL,cAAyBE,cAAzB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKa,KAAL,CAAWC,QAAX,iBACC,uDACE;AAAK,QAAA,SAAS,EAAEX,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAEC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAE,KAAKS,KAAL,CAAWC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEG,KAAKD,KAAL,CAAWE,YAAX,iBAA2B;AAAK,QAAA,SAAS,EAAER,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoC,KAAKM,KAAL,CAAWE,YAA/C,CAF9B,CADF,CADF,CAFJ,EAWG,KAAKF,KAAL,CAAWG,QAXd,CADF,EAcG,KAAKH,KAAL,CAAWI,cAAX,iBAA6B;AAAK,QAAA,SAAS,EAAER,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC,KAAKI,KAAL,CAAWI,cAAjD,CAdhC,CADF;AAkBD;AApBH;;AAAA;AAAA,EAAkCvB,KAAK,CAACwB,SAAxC","sourcesContent":["import React from 'react';\nimport { style } from 'typestyle';\nimport { PFColors } from '../../Pf/PfColors';\nimport BreadcrumbView from '../../BreadcrumbView/BreadcrumbView';\n\nconst containerPadding = style({ padding: '0 20px 28px 20px' });\nconst containerWhite = style({ backgroundColor: PFColors.White });\n// This magic style tries to adjust Breadcrumb with Namespace selector\n// to give impression that both components are placed in the same location\nconst breadcrumbMargin = style({ padding: '10px 0 4px 0' });\n\nconst breadcrumbStyle = style({\n  display: 'flex',\n  flexWrap: 'wrap'\n});\n\nconst rightToolbarStyle = style({\n  marginLeft: 'auto'\n});\n\nconst actionsToolbarStyle = style({\n  float: 'right',\n  backgroundColor: '#fff',\n  padding: '0px 20px 22px 5px',\n  marginTop: '-18px'\n});\n\ninterface RenderHeaderProps {\n  location?: {\n    pathname: string;\n    search: string;\n  };\n  rightToolbar?: JSX.Element;\n  actionsToolbar?: JSX.Element;\n}\n\nexport class RenderHeader extends React.Component<RenderHeaderProps> {\n  render() {\n    return (\n      <>\n        <div className={`${containerPadding} ${containerWhite}`}>\n          {this.props.location && (\n            <>\n              <div className={breadcrumbMargin}>\n                <div className={breadcrumbStyle}>\n                  <BreadcrumbView location={this.props.location} />\n                  {this.props.rightToolbar && <div className={rightToolbarStyle}>{this.props.rightToolbar}</div>}\n                </div>\n              </div>\n            </>\n          )}\n          {this.props.children}\n        </div>\n        {this.props.actionsToolbar && <div className={actionsToolbarStyle}>{this.props.actionsToolbar}</div>}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}