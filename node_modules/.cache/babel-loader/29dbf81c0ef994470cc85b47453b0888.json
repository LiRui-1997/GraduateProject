{"ast":null,"code":"import _toConsumableArray from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/components/NamespaceDropdown.tsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { style } from 'typestyle';\nimport { Button, Dropdown, DropdownToggle, TextInput, Tooltip, DropdownToggleCheckbox, Divider, Badge } from '@patternfly/react-core';\nimport { activeNamespacesSelector, namespaceFilterSelector, namespaceItemsSelector } from '../store/Selectors';\nimport { NamespaceActions } from '../actions/NamespaceAction';\nimport NamespaceThunkActions from '../actions/NamespaceThunkActions';\nimport { HistoryManager, URLParam } from '../app/History';\nimport { BoundingClientAwareComponent, PropertyType } from './BoundingClientAwareComponent/BoundingClientAwareComponent';\nimport { KialiIcon } from 'config/KialiIcon';\nimport TourStopContainer from './Tour/TourStop';\nimport { GraphTourStops } from '../pages/Graph/GraphHelpTour';\nvar checkboxBulkStyle = style({\n  marginLeft: '0.5em',\n  position: 'relative',\n  top: 8\n});\nvar checkboxStyle = style({\n  marginLeft: '1.0em'\n});\nvar checkboxLabelStyle = style({\n  marginLeft: '0.5em'\n});\nvar headerStyle = style({\n  margin: '0 0.5em 10px 0.5em',\n  width: 300\n});\nvar marginBottom = 20;\nvar namespaceContainerStyle = style({\n  overflow: 'auto'\n});\nexport var NamespaceDropdown = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(NamespaceDropdown, _React$PureComponent);\n\n  var _super = _createSuper(NamespaceDropdown);\n\n  function NamespaceDropdown(props) {\n    var _this;\n\n    _classCallCheck(this, NamespaceDropdown);\n\n    _this = _super.call(this, props);\n\n    _this.syncNamespacesURLParam = function () {\n      var urlNamespaces = (HistoryManager.getParam(URLParam.NAMESPACES) || '').split(',').filter(Boolean);\n\n      if (urlNamespaces.length > 0 && _.difference(urlNamespaces, _this.props.activeNamespaces.map(function (item) {\n        return item.name;\n      }))) {\n        // We must change the props of namespaces\n        var items = urlNamespaces.map(function (ns) {\n          return {\n            name: ns\n          };\n        });\n\n        _this.props.setActiveNamespaces(items);\n      } else if (urlNamespaces.length === 0 && _this.props.activeNamespaces.length !== 0) {\n        HistoryManager.setParam(URLParam.NAMESPACES, _this.props.activeNamespaces.map(function (item) {\n          return item.name;\n        }).join(','));\n      }\n    };\n\n    _this.onToggle = function (isOpen) {\n      if (isOpen) {\n        _this.props.refresh();\n      } else {\n        _this.props.setActiveNamespaces(_this.state.selectedNamespaces);\n\n        _this.clearFilter();\n      }\n\n      _this.setState({\n        isOpen: isOpen\n      });\n    };\n\n    _this.onBulkAll = function () {\n      var union = Array.from(new Set([].concat(_toConsumableArray(_this.state.selectedNamespaces), _toConsumableArray(_this.filtered()))));\n\n      _this.setState({\n        selectedNamespaces: union\n      });\n    };\n\n    _this.onBulkNone = function () {\n      var filtered = _this.filtered();\n\n      var remaining = _this.state.selectedNamespaces.filter(function (s) {\n        return filtered.findIndex(function (f) {\n          return f.name === s.name;\n        }) < 0;\n      });\n\n      _this.setState({\n        selectedNamespaces: remaining\n      });\n    };\n\n    _this.onNamespaceToggled = function (event) {\n      var namespace = event.target.value;\n      var selectedNamespaces = !!_this.state.selectedNamespaces.find(function (n) {\n        return n.name === namespace;\n      }) ? _this.state.selectedNamespaces.filter(function (n) {\n        return n.name !== namespace;\n      }) : _this.state.selectedNamespaces.concat([{\n        name: event.target.value\n      }]);\n\n      _this.setState({\n        selectedNamespaces: selectedNamespaces\n      });\n    };\n\n    _this.onFilterChange = function (value) {\n      _this.props.setFilter(value);\n    };\n\n    _this.clearFilter = function () {\n      _this.props.setFilter('');\n    };\n\n    _this.filtered = function () {\n      return _this.props.namespaces.filter(function (ns) {\n        return ns.name.includes(_this.props.filter);\n      });\n    };\n\n    _this.filteredSelected = function () {\n      var filtered = _this.filtered();\n\n      return _this.state.selectedNamespaces.filter(function (s) {\n        return filtered.findIndex(function (f) {\n          return f.name === s.name;\n        }) >= 0;\n      });\n    };\n\n    _this.state = {\n      isBulkSelectorOpen: false,\n      isOpen: false,\n      selectedNamespaces: _toConsumableArray(_this.props.activeNamespaces)\n    };\n    return _this;\n  }\n\n  _createClass(NamespaceDropdown, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.refresh();\n      this.syncNamespacesURLParam();\n    } // update redux with URL namespaces if set, otherwise update URL with redux\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.activeNamespaces !== this.props.activeNamespaces) {\n        if (this.props.activeNamespaces.length === 0) {\n          HistoryManager.deleteParam(URLParam.NAMESPACES);\n        } else {\n          HistoryManager.setParam(URLParam.NAMESPACES, this.props.activeNamespaces.map(function (item) {\n            return item.name;\n          }).join(','));\n        }\n\n        this.setState({\n          selectedNamespaces: this.props.activeNamespaces\n        });\n      }\n    }\n  }, {\n    key: \"namespaceButtonText\",\n    value: function namespaceButtonText() {\n      if (this.state.selectedNamespaces.length === 0) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 14\n          }\n        }, \"\\u8BF7\\u9009\\u62E9\\u547D\\u540D\\u7A7A\\u95F4\");\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingRight: '0.75em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, \"\\u547D\\u540D\\u7A7A\\u95F4:\"), this.state.selectedNamespaces.length === 1 ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }, this.state.selectedNamespaces[0].name) : /*#__PURE__*/React.createElement(Badge, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }, this.state.selectedNamespaces.length));\n    }\n  }, {\n    key: \"getBulkSelector\",\n    value: function getBulkSelector() {\n      var _this2 = this;\n\n      var selectedNamespaces = this.filteredSelected();\n      var numSelected = selectedNamespaces.length;\n      var allSelected = numSelected === this.props.namespaces.length;\n      var anySelected = numSelected > 0;\n      var someChecked = anySelected ? null : false;\n      var isChecked = allSelected ? true : someChecked;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: checkboxBulkStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DropdownToggleCheckbox, {\n        id: \"bulk-select-id\",\n        key: \"bulk-select-key\",\n        \"aria-label\": \"Select all\",\n        isChecked: isChecked,\n        onClick: function onClick() {\n          anySelected ? _this2.onBulkNone() : _this2.onBulkAll();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: checkboxLabelStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }\n      }, \"\\u5168\\u9009\"));\n    }\n  }, {\n    key: \"getHeader\",\n    value: function getHeader() {\n      var hasFilter = !!this.props.filter;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: headerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TextInput, {\n        style: {\n          width: hasFilter ? 'calc(100% - 44px)' : '100%'\n        },\n        \"aria-label\": \"filter-namespace\",\n        type: \"text\",\n        name: \"namespace-filter\",\n        placeholder: \"Filter by Name...\",\n        value: this.props.filter,\n        onChange: this.onFilterChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }\n      }), hasFilter && /*#__PURE__*/React.createElement(Tooltip, {\n        key: \"ot_clear_namespace_filter\",\n        position: \"top\",\n        content: \"Clear Filter by Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.clearFilter,\n        isInline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(KialiIcon.Close, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      })))), this.getBulkSelector(), /*#__PURE__*/React.createElement(Divider, {\n        style: {\n          paddingTop: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody() {\n      var _this3 = this;\n\n      if (this.props.namespaces.length > 0) {\n        var selectedMap = this.state.selectedNamespaces.reduce(function (map, namespace) {\n          map[namespace.name] = namespace.name;\n          return map;\n        }, {});\n\n        var _namespaces = this.filtered().map(function (namespace) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: checkboxStyle,\n            id: \"namespace-list-item[\".concat(namespace.name, \"]\"),\n            key: \"namespace-list-item[\".concat(namespace.name, \"]\"),\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"checkbox\",\n            value: namespace.name,\n            checked: !!selectedMap[namespace.name],\n            onChange: _this3.onNamespaceToggled,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 11\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            className: checkboxLabelStyle,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 11\n            }\n          }, namespace.name));\n        });\n\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BoundingClientAwareComponent, {\n          className: namespaceContainerStyle,\n          maxHeight: {\n            type: PropertyType.VIEWPORT_HEIGHT_MINUS_TOP,\n            margin: marginBottom\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }\n        }, _namespaces));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 12\n        }\n      }, \"No namespaces found\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(TourStopContainer, {\n        info: GraphTourStops.Namespaces,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown, {\n        toggle: /*#__PURE__*/React.createElement(DropdownToggle, {\n          id: 'namespace-selector',\n          onToggle: this.onToggle,\n          isDisabled: this.props.disabled,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }\n        }, this.namespaceButtonText()),\n        isOpen: this.state.isOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }\n      }, this.getHeader(), this.getBody()));\n    }\n  }]);\n\n  return NamespaceDropdown;\n}(React.PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    namespaces: namespaceItemsSelector(state),\n    activeNamespaces: activeNamespacesSelector(state),\n    filter: namespaceFilterSelector(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    refresh: function refresh() {\n      dispatch(NamespaceThunkActions.fetchNamespacesIfNeeded());\n    },\n    clearAll: function clearAll() {\n      dispatch(NamespaceActions.setActiveNamespaces([]));\n    },\n    setActiveNamespaces: function setActiveNamespaces(namespaces) {\n      dispatch(NamespaceActions.setActiveNamespaces(namespaces));\n    },\n    setFilter: function setFilter(filter) {\n      dispatch(NamespaceActions.setFilter(filter));\n    }\n  };\n};\n\nvar NamespaceDropdownContainer = connect(mapStateToProps, mapDispatchToProps)(NamespaceDropdown);\nexport default NamespaceDropdownContainer;","map":{"version":3,"sources":["/root/kiali-ui/src/components/NamespaceDropdown.tsx"],"names":["React","connect","_","style","Button","Dropdown","DropdownToggle","TextInput","Tooltip","DropdownToggleCheckbox","Divider","Badge","activeNamespacesSelector","namespaceFilterSelector","namespaceItemsSelector","NamespaceActions","NamespaceThunkActions","HistoryManager","URLParam","BoundingClientAwareComponent","PropertyType","KialiIcon","TourStopContainer","GraphTourStops","checkboxBulkStyle","marginLeft","position","top","checkboxStyle","checkboxLabelStyle","headerStyle","margin","width","marginBottom","namespaceContainerStyle","overflow","NamespaceDropdown","props","syncNamespacesURLParam","urlNamespaces","getParam","NAMESPACES","split","filter","Boolean","length","difference","activeNamespaces","map","item","name","items","ns","setActiveNamespaces","setParam","join","onToggle","isOpen","refresh","state","selectedNamespaces","clearFilter","setState","onBulkAll","union","Array","from","Set","filtered","onBulkNone","remaining","s","findIndex","f","onNamespaceToggled","event","namespace","target","value","find","n","concat","onFilterChange","setFilter","namespaces","includes","filteredSelected","isBulkSelectorOpen","prevProps","deleteParam","paddingRight","numSelected","allSelected","anySelected","someChecked","isChecked","hasFilter","getBulkSelector","paddingTop","selectedMap","reduce","type","VIEWPORT_HEIGHT_MINUS_TOP","Namespaces","disabled","namespaceButtonText","getHeader","getBody","PureComponent","mapStateToProps","mapDispatchToProps","dispatch","fetchNamespacesIfNeeded","clearAll","NamespaceDropdownContainer"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport _ from 'lodash';\nimport { style } from 'typestyle';\nimport {\n  Button,\n  Dropdown,\n  DropdownToggle,\n  TextInput,\n  Tooltip,\n  DropdownToggleCheckbox,\n  Divider,\n  Badge\n} from '@patternfly/react-core';\nimport { KialiAppState } from '../store/Store';\nimport { activeNamespacesSelector, namespaceFilterSelector, namespaceItemsSelector } from '../store/Selectors';\nimport { KialiAppAction } from '../actions/KialiAppAction';\nimport { NamespaceActions } from '../actions/NamespaceAction';\nimport NamespaceThunkActions from '../actions/NamespaceThunkActions';\nimport Namespace from '../types/Namespace';\nimport { HistoryManager, URLParam } from '../app/History';\nimport {\n  BoundingClientAwareComponent,\n  PropertyType\n} from './BoundingClientAwareComponent/BoundingClientAwareComponent';\nimport { KialiIcon } from 'config/KialiIcon';\nimport TourStopContainer from './Tour/TourStop';\nimport { GraphTourStops } from '../pages/Graph/GraphHelpTour';\n\ntype ReduxProps = {\n  activeNamespaces: Namespace[];\n  filter: string;\n  namespaces: Namespace[];\n  refresh: () => void;\n  setFilter: (filter: string) => void;\n  setActiveNamespaces: (namespaces: Namespace[]) => void;\n};\n\ntype NamespaceDropdownProps = ReduxProps & {\n  disabled: boolean;\n  clearAll: () => void;\n};\n\ntype NamespaceDropdownState = {\n  isBulkSelectorOpen: boolean;\n  isOpen: boolean;\n  selectedNamespaces: Namespace[];\n};\n\nconst checkboxBulkStyle = style({\n  marginLeft: '0.5em',\n  position: 'relative',\n  top: 8\n});\n\nconst checkboxStyle = style({ marginLeft: '1.0em' });\n\nconst checkboxLabelStyle = style({ marginLeft: '0.5em' });\n\nconst headerStyle = style({\n  margin: '0 0.5em 10px 0.5em',\n  width: 300\n});\n\nconst marginBottom = 20;\n\nconst namespaceContainerStyle = style({\n  overflow: 'auto'\n});\n\nexport class NamespaceDropdown extends React.PureComponent<NamespaceDropdownProps, NamespaceDropdownState> {\n  constructor(props: NamespaceDropdownProps) {\n    super(props);\n    this.state = {\n      isBulkSelectorOpen: false,\n      isOpen: false,\n      selectedNamespaces: [...this.props.activeNamespaces]\n    };\n  }\n\n  componentDidMount() {\n    this.props.refresh();\n    this.syncNamespacesURLParam();\n  }\n\n  // update redux with URL namespaces if set, otherwise update URL with redux\n  syncNamespacesURLParam = () => {\n    const urlNamespaces = (HistoryManager.getParam(URLParam.NAMESPACES) || '').split(',').filter(Boolean);\n    if (\n      urlNamespaces.length > 0 &&\n      _.difference(\n        urlNamespaces,\n        this.props.activeNamespaces.map(item => item.name)\n      )\n    ) {\n      // We must change the props of namespaces\n      const items = urlNamespaces.map(ns => ({ name: ns } as Namespace));\n      this.props.setActiveNamespaces(items);\n    } else if (urlNamespaces.length === 0 && this.props.activeNamespaces.length !== 0) {\n      HistoryManager.setParam(URLParam.NAMESPACES, this.props.activeNamespaces.map(item => item.name).join(','));\n    }\n  };\n\n  componentDidUpdate(prevProps: NamespaceDropdownProps) {\n    if (prevProps.activeNamespaces !== this.props.activeNamespaces) {\n      if (this.props.activeNamespaces.length === 0) {\n        HistoryManager.deleteParam(URLParam.NAMESPACES);\n      } else {\n        HistoryManager.setParam(URLParam.NAMESPACES, this.props.activeNamespaces.map(item => item.name).join(','));\n      }\n      this.setState({ selectedNamespaces: this.props.activeNamespaces });\n    }\n  }\n\n  private namespaceButtonText() {\n    if (this.state.selectedNamespaces.length === 0) {\n      return <span>请选择命名空间</span>;\n    }\n\n    return (\n      <>\n        <span style={{ paddingRight: '0.75em' }}>命名空间:</span>\n        {this.state.selectedNamespaces.length === 1 ? (\n          <span>{this.state.selectedNamespaces[0].name}</span>\n        ) : (\n          <Badge>{this.state.selectedNamespaces.length}</Badge>\n        )}\n      </>\n    );\n  }\n\n  private getBulkSelector() {\n    const selectedNamespaces = this.filteredSelected();\n    const numSelected = selectedNamespaces.length;\n    const allSelected = numSelected === this.props.namespaces.length;\n    const anySelected = numSelected > 0;\n    const someChecked = anySelected ? null : false;\n    const isChecked = allSelected ? true : someChecked;\n\n    return (\n      <div className={checkboxBulkStyle}>\n        <DropdownToggleCheckbox\n          id=\"bulk-select-id\"\n          key=\"bulk-select-key\"\n          aria-label=\"Select all\"\n          isChecked={isChecked}\n          onClick={() => {\n            anySelected ? this.onBulkNone() : this.onBulkAll();\n          }}\n        ></DropdownToggleCheckbox>\n        <span className={checkboxLabelStyle}>全选</span>\n      </div>\n    );\n  }\n\n  private getHeader() {\n    const hasFilter = !!this.props.filter;\n    return (\n      <div className={headerStyle}>\n        <span style={{ width: '100%' }}>\n          <TextInput\n            style={{ width: hasFilter ? 'calc(100% - 44px)' : '100%' }}\n            aria-label=\"filter-namespace\"\n            type=\"text\"\n            name=\"namespace-filter\"\n            placeholder=\"Filter by Name...\"\n            value={this.props.filter}\n            onChange={this.onFilterChange}\n          />\n          {hasFilter && (\n            <Tooltip key=\"ot_clear_namespace_filter\" position=\"top\" content=\"Clear Filter by Name\">\n              <Button onClick={this.clearFilter} isInline>\n                <KialiIcon.Close />\n              </Button>\n            </Tooltip>\n          )}\n        </span>\n        {this.getBulkSelector()}\n        <Divider style={{ paddingTop: '5px' }} />\n      </div>\n    );\n  }\n\n  private getBody() {\n    if (this.props.namespaces.length > 0) {\n      const selectedMap = this.state.selectedNamespaces.reduce((map, namespace) => {\n        map[namespace.name] = namespace.name;\n        return map;\n      }, {});\n      const namespaces = this.filtered().map((namespace: Namespace) => (\n        <div\n          className={checkboxStyle}\n          id={`namespace-list-item[${namespace.name}]`}\n          key={`namespace-list-item[${namespace.name}]`}\n        >\n          <input\n            type=\"checkbox\"\n            value={namespace.name}\n            checked={!!selectedMap[namespace.name]}\n            onChange={this.onNamespaceToggled}\n          />\n          <span className={checkboxLabelStyle}>{namespace.name}</span>\n        </div>\n      ));\n\n      return (\n        <>\n          <BoundingClientAwareComponent\n            className={namespaceContainerStyle}\n            maxHeight={{ type: PropertyType.VIEWPORT_HEIGHT_MINUS_TOP, margin: marginBottom }}\n          >\n            {namespaces}\n          </BoundingClientAwareComponent>\n        </>\n      );\n    }\n    return <div>No namespaces found</div>;\n  }\n\n  render() {\n    return (\n      <TourStopContainer info={GraphTourStops.Namespaces}>\n        <Dropdown\n          toggle={\n            <DropdownToggle id={'namespace-selector'} onToggle={this.onToggle} isDisabled={this.props.disabled}>\n              {this.namespaceButtonText()}\n            </DropdownToggle>\n          }\n          isOpen={this.state.isOpen}\n        >\n          {this.getHeader()}\n          {this.getBody()}\n        </Dropdown>\n      </TourStopContainer>\n    );\n  }\n\n  private onToggle = isOpen => {\n    if (isOpen) {\n      this.props.refresh();\n    } else {\n      this.props.setActiveNamespaces(this.state.selectedNamespaces);\n      this.clearFilter();\n    }\n    this.setState({\n      isOpen\n    });\n  };\n\n  private onBulkAll = () => {\n    const union = Array.from(new Set([...this.state.selectedNamespaces, ...this.filtered()]));\n    this.setState({ selectedNamespaces: union });\n  };\n\n  private onBulkNone = () => {\n    const filtered = this.filtered();\n    const remaining = this.state.selectedNamespaces.filter(s => filtered.findIndex(f => f.name === s.name) < 0);\n    this.setState({ selectedNamespaces: remaining });\n  };\n\n  onNamespaceToggled = event => {\n    const namespace = event.target.value;\n    const selectedNamespaces = !!this.state.selectedNamespaces.find(n => n.name === namespace)\n      ? this.state.selectedNamespaces.filter(n => n.name !== namespace)\n      : this.state.selectedNamespaces.concat([{ name: event.target.value } as Namespace]);\n    this.setState({ selectedNamespaces: selectedNamespaces });\n  };\n\n  private onFilterChange = (value: string) => {\n    this.props.setFilter(value);\n  };\n\n  private clearFilter = () => {\n    this.props.setFilter('');\n  };\n\n  private filtered = (): Namespace[] => {\n    return this.props.namespaces.filter(ns => ns.name.includes(this.props.filter));\n  };\n\n  private filteredSelected = (): Namespace[] => {\n    const filtered = this.filtered();\n    return this.state.selectedNamespaces.filter(s => filtered.findIndex(f => f.name === s.name) >= 0);\n  };\n}\n\nconst mapStateToProps = (state: KialiAppState) => {\n  return {\n    namespaces: namespaceItemsSelector(state)!,\n    activeNamespaces: activeNamespacesSelector(state),\n    filter: namespaceFilterSelector(state)\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<KialiAppState, void, KialiAppAction>) => {\n  return {\n    refresh: () => {\n      dispatch(NamespaceThunkActions.fetchNamespacesIfNeeded());\n    },\n    clearAll: () => {\n      dispatch(NamespaceActions.setActiveNamespaces([]));\n    },\n    setActiveNamespaces: (namespaces: Namespace[]) => {\n      dispatch(NamespaceActions.setActiveNamespaces(namespaces));\n    },\n    setFilter: (filter: string) => {\n      dispatch(NamespaceActions.setFilter(filter));\n    }\n  };\n};\n\nconst NamespaceDropdownContainer = connect(mapStateToProps, mapDispatchToProps)(NamespaceDropdown);\nexport default NamespaceDropdownContainer;\n"]},"metadata":{},"sourceType":"module"}