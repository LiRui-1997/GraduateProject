{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/components/IstioWizards/FaultInjection/AbortFault.tsx\";\nimport * as React from 'react';\nimport { FormGroup, Switch, TextInput } from '@patternfly/react-core';\nimport { HTTP_ABORT_TOOLTIP, wizardTooltip } from '../WizardHelp';\nvar httpStatusMsg = 'HTTP status code to use to abort the Http request.';\n\nvar AbortFault = /*#__PURE__*/function (_React$Component) {\n  _inherits(AbortFault, _React$Component);\n\n  var _super = _createSuper(AbortFault);\n\n  function AbortFault() {\n    _classCallCheck(this, AbortFault);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AbortFault, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this,\n          _this$props$abort$per;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"Add HTTP Abort\",\n        fieldId: \"abortSwitch\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        id: \"abortSwitch\",\n        label: ' ',\n        labelOff: ' ',\n        isChecked: this.props.aborted,\n        onChange: function onChange() {\n          return _this.props.onAbort(!_this.props.aborted, _this.props.abort);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, wizardTooltip(HTTP_ABORT_TOOLTIP))), this.props.aborted && /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"Abort Percentage\",\n        fieldId: \"abort-percentage\",\n        helperText: \"Percentage of requests to be aborted with the error code provided.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TextInput, {\n        value: (_this$props$abort$per = this.props.abort.percentage) === null || _this$props$abort$per === void 0 ? void 0 : _this$props$abort$per.value,\n        id: \"abort-percentage\",\n        name: \"abort-percentage\",\n        onChange: function onChange(value) {\n          var newValue = Number(value || 0);\n          newValue = Number.isNaN(newValue) ? 0 : newValue;\n          newValue = newValue < 0 ? 0 : newValue > 100 ? 100 : newValue;\n\n          _this.props.onAbort(_this.props.aborted, {\n            percentage: {\n              value: newValue\n            },\n            httpStatus: _this.props.abort.httpStatus\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      })), this.props.aborted && /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"HTTP Status Code\",\n        fieldId: \"abort-status-code\",\n        helperText: httpStatusMsg,\n        helperTextInvalid: httpStatusMsg,\n        isValid: this.props.isValid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TextInput, {\n        value: this.props.abort.httpStatus,\n        id: \"abort-status-code\",\n        name: \"abort-status-code\",\n        isValid: this.props.isValid,\n        onChange: function onChange(value) {\n          var newValue = Number(value || 0);\n          newValue = Number.isNaN(newValue) ? 0 : newValue;\n\n          _this.props.onAbort(_this.props.aborted, {\n            percentage: _this.props.abort.percentage,\n            httpStatus: newValue\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return AbortFault;\n}(React.Component);\n\nexport default AbortFault;","map":{"version":3,"sources":["/root/GraduateProject/src/components/IstioWizards/FaultInjection/AbortFault.tsx"],"names":["React","FormGroup","Switch","TextInput","HTTP_ABORT_TOOLTIP","wizardTooltip","httpStatusMsg","AbortFault","props","aborted","onAbort","abort","percentage","value","newValue","Number","isNaN","httpStatus","isValid","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { FormGroup, Switch, TextInput } from '@patternfly/react-core';\nimport { Abort } from '../../../types/IstioObjects';\nimport { HTTP_ABORT_TOOLTIP, wizardTooltip } from '../WizardHelp';\n\ntype Props = {\n  aborted: boolean;\n  abort: Abort;\n  isValid: boolean;\n  onAbort: (aborted: boolean, abort: Abort) => void;\n};\n\nconst httpStatusMsg = 'HTTP status code to use to abort the Http request.';\n\nclass AbortFault extends React.Component<Props> {\n  render() {\n    return (\n      <>\n        <FormGroup label=\"Add HTTP Abort\" fieldId=\"abortSwitch\">\n          <Switch\n            id=\"abortSwitch\"\n            label={' '}\n            labelOff={' '}\n            isChecked={this.props.aborted}\n            onChange={() => this.props.onAbort(!this.props.aborted, this.props.abort)}\n          />\n          <span>{wizardTooltip(HTTP_ABORT_TOOLTIP)}</span>\n        </FormGroup>\n        {this.props.aborted && (\n          <FormGroup\n            label=\"Abort Percentage\"\n            fieldId=\"abort-percentage\"\n            helperText=\"Percentage of requests to be aborted with the error code provided.\"\n          >\n            <TextInput\n              value={this.props.abort.percentage?.value}\n              id=\"abort-percentage\"\n              name=\"abort-percentage\"\n              onChange={value => {\n                let newValue = Number(value || 0);\n                newValue = Number.isNaN(newValue) ? 0 : newValue;\n                newValue = newValue < 0 ? 0 : newValue > 100 ? 100 : newValue;\n                this.props.onAbort(this.props.aborted, {\n                  percentage: {\n                    value: newValue\n                  },\n                  httpStatus: this.props.abort.httpStatus\n                });\n              }}\n            />\n          </FormGroup>\n        )}\n        {this.props.aborted && (\n          <FormGroup\n            label=\"HTTP Status Code\"\n            fieldId=\"abort-status-code\"\n            helperText={httpStatusMsg}\n            helperTextInvalid={httpStatusMsg}\n            isValid={this.props.isValid}\n          >\n            <TextInput\n              value={this.props.abort.httpStatus}\n              id=\"abort-status-code\"\n              name=\"abort-status-code\"\n              isValid={this.props.isValid}\n              onChange={value => {\n                let newValue = Number(value || 0);\n                newValue = Number.isNaN(newValue) ? 0 : newValue;\n                this.props.onAbort(this.props.aborted, {\n                  percentage: this.props.abort.percentage,\n                  httpStatus: newValue\n                });\n              }}\n            />\n          </FormGroup>\n        )}\n      </>\n    );\n  }\n}\n\nexport default AbortFault;\n"]},"metadata":{},"sourceType":"module"}