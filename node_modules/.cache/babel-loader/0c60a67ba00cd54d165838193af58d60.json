{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/components/MessageCenter/AlertToast.tsx\";\nimport * as React from 'react';\nimport { Alert, AlertActionCloseButton } from '@patternfly/react-core';\nvar DEFAULT_TTLMS = 8000; // PF recommended default\n\nvar AlertToast = /*#__PURE__*/function (_React$Component) {\n  _inherits(AlertToast, _React$Component);\n\n  var _super = _createSuper(AlertToast);\n\n  function AlertToast() {\n    var _this;\n\n    _classCallCheck(this, AlertToast);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.ttlTimer = void 0;\n\n    _this.getAction = function () {\n      return _this.props.onClose ? /*#__PURE__*/React.createElement(AlertActionCloseButton, {\n        onClose: _this.props.onClose,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(React.Fragment, null);\n    };\n\n    return _this;\n  }\n\n  _createClass(AlertToast, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.onTtl) {\n        this.ttlTimer = setInterval(function () {\n          _this2.props.onTtl();\n        }, this.props.ttlms ? this.props.ttlms : DEFAULT_TTLMS);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.ttlTimer) {\n        clearInterval(this.ttlTimer);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Alert, {\n        style: this.props.style ? this.props.style : {},\n        key: this.props.message.id,\n        variant: this.props.variant,\n        title: this.props.message.content,\n        action: this.getAction(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return AlertToast;\n}(React.Component);\n\nexport { AlertToast as default };","map":{"version":3,"sources":["/root/kiali-ui/src/components/MessageCenter/AlertToast.tsx"],"names":["React","Alert","AlertActionCloseButton","DEFAULT_TTLMS","AlertToast","ttlTimer","getAction","props","onClose","onTtl","setInterval","ttlms","clearInterval","style","message","id","variant","content","Component"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,EAA4BC,sBAA5B,QAA0D,wBAA1D;AAGA,IAAMC,aAAa,GAAG,IAAtB,C,CAA4B;;IAWPC,U;;;;;;;;;;;;;;;UACnBC,Q;;UAmBQC,S,GAAY,YAAM;AACxB,aAAO,MAAKC,KAAL,CAAWC,OAAX,gBAAqB,oBAAC,sBAAD;AAAwB,QAAA,OAAO,EAAE,MAAKD,KAAL,CAAWC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArB,gBAA+E,yCAAtF;AACD,K;;;;;;;WAnBD,6BAAoB;AAAA;;AAClB,UAAI,KAAKD,KAAL,CAAWE,KAAf,EAAsB;AACpB,aAAKJ,QAAL,GAAgBK,WAAW,CACzB,YAAM;AACJ,UAAA,MAAI,CAACH,KAAL,CAAWE,KAAX;AACD,SAHwB,EAIzB,KAAKF,KAAL,CAAWI,KAAX,GAAmB,KAAKJ,KAAL,CAAWI,KAA9B,GAAsCR,aAJb,CAA3B;AAMD;AACF;;;WAED,gCAAuB;AACrB,UAAI,KAAKE,QAAT,EAAmB;AACjBO,QAAAA,aAAa,CAAC,KAAKP,QAAN,CAAb;AACD;AACF;;;WAKD,kBAAS;AACP,0BACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWM,KAAX,GAAmB,KAAKN,KAAL,CAAWM,KAA9B,GAAsC,EAD/C;AAEE,QAAA,GAAG,EAAE,KAAKN,KAAL,CAAWO,OAAX,CAAmBC,EAF1B;AAGE,QAAA,OAAO,EAAE,KAAKR,KAAL,CAAWS,OAHtB;AAIE,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWO,OAAX,CAAmBG,OAJ5B;AAKE,QAAA,MAAM,EAAE,KAAKX,SAAL,EALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD;;;;EAjCqCN,KAAK,CAACkB,S;;SAAzBd,U","sourcesContent":["import * as React from 'react';\nimport { Alert, AlertProps, AlertActionCloseButton } from '@patternfly/react-core';\nimport { NotificationMessage } from 'types/MessageCenter';\n\nconst DEFAULT_TTLMS = 8000; // PF recommended default\n\ntype AlertToastProps = AlertProps & {\n  message: NotificationMessage;\n  style?: React.CSSProperties;\n  ttlms?: number;\n\n  onClose?: () => void;\n  onTtl?: () => void;\n};\n\nexport default class AlertToast extends React.Component<AlertToastProps> {\n  ttlTimer: NodeJS.Timeout | undefined;\n\n  componentDidMount() {\n    if (this.props.onTtl) {\n      this.ttlTimer = setInterval(\n        () => {\n          this.props.onTtl!();\n        },\n        this.props.ttlms ? this.props.ttlms : DEFAULT_TTLMS\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.ttlTimer) {\n      clearInterval(this.ttlTimer);\n    }\n  }\n\n  private getAction = () => {\n    return this.props.onClose ? <AlertActionCloseButton onClose={this.props.onClose} /> : <></>;\n  };\n  render() {\n    return (\n      <Alert\n        style={this.props.style ? this.props.style : {}}\n        key={this.props.message.id}\n        variant={this.props.variant}\n        title={this.props.message.content}\n        action={this.getAction()}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}