{"ast":null,"code":"import _objectSpread from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _excluded = [\"trRef\", \"className\", \"rowProps\", \"row\"];\nvar _jsxFileName = \"/root/GraduateProject/src/pages/extensions/iter8/Iter8ExperimentDetails/CriteriaInfoDescription.tsx\";\nimport * as React from 'react';\nimport { EmptyState, EmptyStateBody, EmptyStateVariant, Grid, GridItem, Title, Tooltip } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader, cellWidth } from '@patternfly/react-table';\nimport { KialiIcon } from '../../../../config/KialiIcon';\nimport { style } from 'typestyle';\nimport { css } from '@patternfly/react-styles';\nimport { RenderComponentScroll } from '../../../../components/Nav/Page';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nvar statusIconStyle = style({\n  fontSize: '2.0em'\n});\n\nvar CriteriaInfoDescription = /*#__PURE__*/function (_React$Component) {\n  _inherits(CriteriaInfoDescription, _React$Component);\n\n  var _super = _createSuper(CriteriaInfoDescription);\n\n  function CriteriaInfoDescription(_props) {\n    var _this;\n\n    _classCallCheck(this, CriteriaInfoDescription);\n\n    _this = _super.call(this, _props);\n\n    _this.getRows = function () {\n      var rows = [];\n\n      _this.props.criterias.map(function (criteria) {\n        var crows = [{\n          cells: [{\n            title: /*#__PURE__*/React.createElement(React.Fragment, null, '分子')\n          }, {\n            title: /*#__PURE__*/React.createElement(React.Fragment, null, criteria.metric.numerator.name)\n          }, {\n            title: /*#__PURE__*/React.createElement(React.Fragment, null, criteria.metric.numerator.query_template)\n          }]\n        }, {\n          cells: [{\n            title: /*#__PURE__*/React.createElement(React.Fragment, null, '分母')\n          }, {\n            title: /*#__PURE__*/React.createElement(React.Fragment, null, criteria.metric.denominator.name)\n          }, {\n            title: /*#__PURE__*/React.createElement(React.Fragment, null, criteria.metric.denominator.query_template)\n          }]\n        }];\n        var number = rows.push({\n          isOpen: false,\n          cells: [{\n            title: /*#__PURE__*/React.createElement(React.Fragment, null, criteria.name)\n          }, {\n            title: /*#__PURE__*/React.createElement(React.Fragment, null, criteria.criteria.toleranceType)\n          }, {\n            title: /*#__PURE__*/React.createElement(React.Fragment, null, criteria.criteria.tolerance)\n          }, {\n            title: /*#__PURE__*/React.createElement(React.Fragment, null, criteria.criteria.isReward ? 'YES' : '-')\n          }, {\n            title: /*#__PURE__*/React.createElement(React.Fragment, null, criteria.criteria.stopOnFailure ? 'True' : 'False')\n          }, {\n            title: /*#__PURE__*/React.createElement(React.Fragment, null, criteria.metric.preferred_direction)\n          }]\n        });\n        rows.push({\n          parent: number - 1,\n          fullWidth: true,\n          cells: [/*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n            \"aria-label\": \"Simple Table\",\n            cells: _this.columns(),\n            rows: crows,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(TableHeader, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }\n          }), /*#__PURE__*/React.createElement(TableBody, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }\n          })))]\n        });\n        return rows;\n      });\n\n      return rows;\n    };\n\n    _this.columns = function () {\n      return [{\n        title: 'Type',\n        transforms: [cellWidth(15)]\n      }, {\n        title: 'Name',\n        transforms: [cellWidth(15)]\n      }, {\n        title: 'Template'\n      }];\n    };\n\n    _this.getIcon = function (s) {\n      switch (String(s)) {\n        case 'true':\n          return /*#__PURE__*/React.createElement(Tooltip, {\n            content: /*#__PURE__*/React.createElement(React.Fragment, null, s),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(KialiIcon.Ok, {\n            className: statusIconStyle,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 13\n            }\n          }));\n\n        case 'false':\n          return /*#__PURE__*/React.createElement(Tooltip, {\n            content: /*#__PURE__*/React.createElement(React.Fragment, null, s),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(KialiIcon.Error, {\n            className: statusIconStyle,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }\n          }));\n\n        default:\n          return /*#__PURE__*/React.createElement(Tooltip, {\n            content: /*#__PURE__*/React.createElement(React.Fragment, null, s),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(KialiIcon.Ok, {\n            className: statusIconStyle,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 13\n            }\n          }));\n      }\n    };\n\n    _this.customRowWrapper = function (_ref) {\n      var trRef = _ref.trRef,\n          className = _ref.className,\n          rowProps = _ref.rowProps,\n          _ref$row = _ref.row,\n          isExpanded = _ref$row.isExpanded,\n          isHeightAuto = _ref$row.isHeightAuto,\n          props = _objectWithoutProperties(_ref, _excluded);\n\n      var dangerErrorStyle = {\n        borderLeft: '3px solid var(--pf-global--primary-color--100)'\n      };\n      return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, props, {\n        ref: trRef,\n        className: css(className, 'custom-static-class', isExpanded !== undefined && styles.tableExpandableRow, isExpanded && styles.modifiers.expanded, isHeightAuto && styles.modifiers.heightAuto),\n        hidden: isExpanded !== undefined && !isExpanded,\n        style: dangerErrorStyle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }\n      }));\n    };\n\n    _this.onCollapse = function (_, rowKey, isOpen) {\n      var rows = _this.state.rows;\n      /**\n       * Please do not use rowKey as row index for more complex tables.\n       * Rather use some kind of identifier like ID passed with each row.\n       */\n\n      rows[rowKey].isOpen = isOpen;\n\n      _this.setState({\n        rows: rows\n      });\n    };\n\n    _this.state = {\n      criteriaExpanded: [],\n      columns: [{\n        title: '指标名称'\n      }, '指标类型', '指标门限值 ', '是否为奖励指标', '出错时停止', '指标偏好'],\n      rows: _this.getRows()\n    };\n    return _this;\n  }\n\n  _createClass(CriteriaInfoDescription, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          columns = _this$state.columns,\n          rows = _this$state.rows;\n      return /*#__PURE__*/React.createElement(RenderComponentScroll, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        gutter: \"md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        span: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        \"aria-label\": \"SpanTable\",\n        className: 'spanTracingTagsTable',\n        onCollapse: this.onCollapse,\n        rows: rows,\n        cells: columns,\n        rowWrapper: function rowWrapper(props) {\n          return _this2.customRowWrapper(_objectSpread({\n            trRef: props.trRef,\n            className: props.className,\n            rowProps: props.rowProps,\n            row: props.row\n          }, props));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TableHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }\n      }), rows.length > 0 ? /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: columns.length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(EmptyState, {\n        variant: EmptyStateVariant.full,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Title, {\n        headingLevel: \"h5\",\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 23\n        }\n      }, \"No Criteria found\"), /*#__PURE__*/React.createElement(EmptyStateBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 23\n        }\n      }, \"Experiment has not been started\"))))))));\n    }\n  }]);\n\n  return CriteriaInfoDescription;\n}(React.Component);\n\nexport default CriteriaInfoDescription;","map":{"version":3,"sources":["/root/GraduateProject/src/pages/extensions/iter8/Iter8ExperimentDetails/CriteriaInfoDescription.tsx"],"names":["React","EmptyState","EmptyStateBody","EmptyStateVariant","Grid","GridItem","Title","Tooltip","Table","TableBody","TableHeader","cellWidth","KialiIcon","style","css","RenderComponentScroll","styles","statusIconStyle","fontSize","CriteriaInfoDescription","props","getRows","rows","criterias","map","criteria","crows","cells","title","metric","numerator","name","query_template","denominator","number","push","isOpen","toleranceType","tolerance","isReward","stopOnFailure","preferred_direction","parent","fullWidth","columns","transforms","getIcon","s","String","customRowWrapper","trRef","className","rowProps","row","isExpanded","isHeightAuto","dangerErrorStyle","borderLeft","undefined","tableExpandableRow","modifiers","expanded","heightAuto","onCollapse","_","rowKey","state","setState","criteriaExpanded","length","full","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { EmptyState, EmptyStateBody, EmptyStateVariant, Grid, GridItem, Title, Tooltip } from '@patternfly/react-core';\nimport { CriteriaInfoDetail, Iter8Info } from '../../../../types/Iter8';\nimport { Table, TableBody, TableHeader, IRow, ICell, cellWidth, RowWrapperProps } from '@patternfly/react-table';\nimport { KialiIcon } from '../../../../config/KialiIcon';\nimport { style } from 'typestyle';\nimport { css } from '@patternfly/react-styles';\nimport { RenderComponentScroll } from '../../../../components/Nav/Page';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\n\ninterface ExperimentInfoDescriptionProps {\n  iter8Info: Iter8Info;\n  criterias: CriteriaInfoDetail[];\n}\n\ntype State = {\n  criteriaExpanded: string[];\n  columns: any;\n  rows: any;\n};\n\nconst statusIconStyle = style({\n  fontSize: '2.0em'\n});\n\nclass CriteriaInfoDescription extends React.Component<ExperimentInfoDescriptionProps, State> {\n  constructor(props: ExperimentInfoDescriptionProps) {\n    super(props);\n    this.state = {\n      criteriaExpanded: [],\n      columns: [\n        {\n          title: '指标名称'\n        },\n        '指标类型',\n        '指标门限值 ',\n        '是否为奖励指标',\n        '出错时停止',\n        '指标偏好'\n      ],\n      rows: this.getRows()\n    };\n  }\n\n  getRows = (): IRow[] => {\n    let rows: IRow[] = [];\n    this.props.criterias.map(criteria => {\n      const crows: IRow[] = [\n        {\n          cells: [\n            { title: <>{'分子'}</> },\n            { title: <>{criteria.metric.numerator.name}</> },\n            { title: <>{criteria.metric.numerator.query_template}</> }\n          ]\n        },\n        {\n          cells: [\n            { title: <>{'分母'}</> },\n            { title: <>{criteria.metric.denominator.name}</> },\n            { title: <>{criteria.metric.denominator.query_template}</> }\n          ]\n        }\n      ];\n      let number = rows.push({\n        isOpen: false,\n        cells: [\n          { title: <>{criteria.name}</> },\n          { title: <>{criteria.criteria.toleranceType}</> },\n          { title: <>{criteria.criteria.tolerance}</> },\n          { title: <>{criteria.criteria.isReward ? 'YES' : '-'}</> },\n          { title: <>{criteria.criteria.stopOnFailure ? 'True' : 'False'}</> },\n          { title: <>{criteria.metric.preferred_direction}</> }\n        ]\n      });\n      rows.push({\n        parent: number - 1,\n        fullWidth: true,\n        cells: [\n          <>\n            <Table aria-label=\"Simple Table\" cells={this.columns()} rows={crows}>\n              <TableHeader />\n              <TableBody />\n            </Table>\n          </>\n        ]\n      });\n      return rows;\n    });\n    return rows;\n  };\n\n  columns = (): ICell[] => {\n    return [\n      { title: 'Type', transforms: [cellWidth(15) as any] },\n      { title: 'Name', transforms: [cellWidth(15) as any] },\n      { title: 'Template' }\n    ];\n  };\n\n  getIcon = (s: string) => {\n    switch (String(s)) {\n      case 'true':\n        return (\n          <Tooltip content={<>{s}</>}>\n            <KialiIcon.Ok className={statusIconStyle} />\n          </Tooltip>\n        );\n      case 'false':\n        return (\n          <Tooltip content={<>{s}</>}>\n            <KialiIcon.Error className={statusIconStyle} />\n          </Tooltip>\n        );\n      default:\n        return (\n          <Tooltip content={<>{s}</>}>\n            <KialiIcon.Ok className={statusIconStyle} />\n          </Tooltip>\n        );\n    }\n  };\n\n  customRowWrapper = ({ trRef, className, rowProps, row: { isExpanded, isHeightAuto }, ...props }) => {\n    const dangerErrorStyle = {\n      borderLeft: '3px solid var(--pf-global--primary-color--100)'\n    };\n\n    return (\n      <tr\n        {...props}\n        ref={trRef}\n        className={css(\n          className,\n          'custom-static-class',\n          isExpanded !== undefined && styles.tableExpandableRow,\n          isExpanded && styles.modifiers.expanded,\n          isHeightAuto && styles.modifiers.heightAuto\n        )}\n        hidden={isExpanded !== undefined && !isExpanded}\n        style={dangerErrorStyle}\n      />\n    );\n  };\n\n  onCollapse = (_, rowKey, isOpen) => {\n    const { rows } = this.state;\n    /**\n     * Please do not use rowKey as row index for more complex tables.\n     * Rather use some kind of identifier like ID passed with each row.\n     */\n    rows[rowKey].isOpen = isOpen;\n    this.setState({\n      rows\n    });\n  };\n\n  render() {\n    const { columns, rows } = this.state;\n    return (\n      <RenderComponentScroll>\n        <Grid gutter=\"md\">\n          <GridItem span={12}>\n            <Table\n              aria-label=\"SpanTable\"\n              className={'spanTracingTagsTable'}\n              onCollapse={this.onCollapse}\n              rows={rows}\n              cells={columns}\n              rowWrapper={(props: RowWrapperProps) =>\n                this.customRowWrapper({\n                  trRef: props.trRef,\n                  className: props.className,\n                  rowProps: props.rowProps,\n                  row: props.row as any,\n                  ...props\n                })\n              }\n            >\n              <TableHeader />\n              {rows.length > 0 ? (\n                <TableBody />\n              ) : (\n                <tr>\n                  <td colSpan={columns.length}>\n                    <EmptyState variant={EmptyStateVariant.full}>\n                      <Title headingLevel=\"h5\" size=\"lg\">\n                        No Criteria found\n                      </Title>\n                      <EmptyStateBody>Experiment has not been started</EmptyStateBody>\n                    </EmptyState>\n                  </td>\n                </tr>\n              )}\n            </Table>\n          </GridItem>\n        </Grid>\n      </RenderComponentScroll>\n    );\n  }\n}\n\nexport default CriteriaInfoDescription;\n"]},"metadata":{},"sourceType":"module"}