{"ast":null,"code":"/**\n * resolve-row-key.ts\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport { isArray } from 'lodash';\n/**\n * @param {{rowData: RowType, rowIndex: number, rowKey: RowKeyType}} rowData - row data\n */\n\nexport function resolveRowKey(_ref) {\n  var rowData = _ref.rowData,\n      rowIndex = _ref.rowIndex,\n      rowKey = _ref.rowKey;\n\n  if (typeof rowKey === 'function') {\n    return \"\".concat(rowKey({\n      rowData: rowData,\n      rowIndex: rowIndex\n    }), \"-row\");\n  } else if (process.env.NODE_ENV !== 'production') {\n    // Arrays cannot have rowKeys by definition so we have to go by index there.\n    if (!isArray(rowData) && rowData[rowKey] === undefined) {\n      // eslint-disable-next-line no-console\n      console.warn('Table.Body - Missing valid rowKey!', rowData, rowKey);\n    }\n  }\n\n  if (rowData[rowKey] === 0) {\n    return \"\".concat(rowData[rowKey], \"-row\");\n  }\n\n  return \"\".concat(rowData[rowKey] || rowIndex, \"-row\");\n}","map":{"version":3,"sources":["/root/kiali-ui/node_modules/@patternfly/react-table/dist/esm/components/Table/base/resolve-row-key.js"],"names":["isArray","resolveRowKey","rowData","rowIndex","rowKey","process","env","NODE_ENV","undefined","console","warn"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAT,QAAwB,QAAxB;AAEA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,OAIJ;AAAA,MAHDC,OAGC,QAHDA,OAGC;AAAA,MAFDC,QAEC,QAFDA,QAEC;AAAA,MADDC,MACC,QADDA,MACC;;AACD,MAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAChC,qBAAUA,MAAM,CAAC;AACfF,MAAAA,OAAO,EAAPA,OADe;AAEfC,MAAAA,QAAQ,EAARA;AAFe,KAAD,CAAhB;AAID,GALD,MAKO,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAChD;AACA,QAAI,CAACP,OAAO,CAACE,OAAD,CAAR,IAAqBA,OAAO,CAACE,MAAD,CAAP,KAAoBI,SAA7C,EAAwD;AACtD;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAa,oCAAb,EAAmDR,OAAnD,EAA4DE,MAA5D;AACD;AACF;;AAED,MAAIF,OAAO,CAACE,MAAD,CAAP,KAAoB,CAAxB,EAA2B;AACzB,qBAAUF,OAAO,CAACE,MAAD,CAAjB;AACD;;AAED,mBAAUF,OAAO,CAACE,MAAD,CAAP,IAAmBD,QAA7B;AACD","sourcesContent":["/**\n * resolve-row-key.ts\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport { isArray } from 'lodash';\n\n/**\n * @param {{rowData: RowType, rowIndex: number, rowKey: RowKeyType}} rowData - row data\n */\nexport function resolveRowKey({\n  rowData,\n  rowIndex,\n  rowKey\n}) {\n  if (typeof rowKey === 'function') {\n    return `${rowKey({\n      rowData,\n      rowIndex\n    })}-row`;\n  } else if (process.env.NODE_ENV !== 'production') {\n    // Arrays cannot have rowKeys by definition so we have to go by index there.\n    if (!isArray(rowData) && rowData[rowKey] === undefined) {\n      // eslint-disable-next-line no-console\n      console.warn('Table.Body - Missing valid rowKey!', rowData, rowKey);\n    }\n  }\n\n  if (rowData[rowKey] === 0) {\n    return `${rowData[rowKey]}-row`;\n  }\n\n  return `${rowData[rowKey] || rowIndex}-row`;\n}\n//# sourceMappingURL=resolve-row-key.js.map"]},"metadata":{},"sourceType":"module"}