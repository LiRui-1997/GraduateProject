{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/pages/WorkloadList/WorkloadListPage.tsx\";\nimport * as React from 'react';\nimport * as FilterHelper from '../../components/FilterList/FilterHelper';\nimport { RenderContent } from '../../components/Nav/Page';\nimport * as WorkloadListFilters from './FiltersAndSorts';\nimport * as FilterComponent from '../../components/FilterList/FilterComponent';\nimport { PromisesRegistry } from '../../utils/CancelablePromises';\nimport { namespaceEquals } from '../../utils/Common';\nimport { FilterSelected, StatefulFilters } from '../../components/Filters/StatefulFilters';\nimport * as API from '../../services/Api';\nimport VirtualList from '../../components/VirtualList/VirtualList';\nimport { activeNamespacesSelector, durationSelector } from '../../store/Selectors';\nimport { connect } from 'react-redux';\nimport DefaultSecondaryMasthead from '../../components/DefaultSecondaryMasthead/DefaultSecondaryMasthead';\nimport TimeDurationContainer from '../../components/Time/TimeDurationComponent';\nimport { sortIstioReferences } from '../AppList/FiltersAndSorts';\n\nvar WorkloadListPageComponent = /*#__PURE__*/function (_FilterComponent$Comp) {\n  _inherits(WorkloadListPageComponent, _FilterComponent$Comp);\n\n  var _super = _createSuper(WorkloadListPageComponent);\n\n  function WorkloadListPageComponent(props) {\n    var _this;\n\n    _classCallCheck(this, WorkloadListPageComponent);\n\n    _this = _super.call(this, props);\n    _this.promises = new PromisesRegistry();\n\n    _this.getDeploymentItems = function (data) {\n      if (data.workloads) {\n        return data.workloads.map(function (deployment) {\n          return {\n            namespace: data.namespace.name,\n            name: deployment.name,\n            type: deployment.type,\n            appLabel: deployment.appLabel,\n            versionLabel: deployment.versionLabel,\n            istioSidecar: deployment.istioSidecar,\n            additionalDetailSample: deployment.additionalDetailSample,\n            healthPromise: API.getWorkloadHealth(data.namespace.name, deployment.name, deployment.type, _this.props.duration, deployment.istioSidecar),\n            labels: deployment.labels,\n            istioReferences: sortIstioReferences(deployment.istioReferences, true)\n          };\n        });\n      }\n\n      return [];\n    };\n\n    var prevCurrentSortField = FilterHelper.currentSortField(WorkloadListFilters.sortFields);\n    var prevIsSortAscending = FilterHelper.isCurrentSortAscending();\n    _this.state = {\n      listItems: [],\n      currentSortField: prevCurrentSortField,\n      isSortAscending: prevIsSortAscending\n    };\n    return _this;\n  }\n\n  _createClass(WorkloadListPageComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateListItems();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, _prevState, _snapshot) {\n      var prevCurrentSortField = FilterHelper.currentSortField(WorkloadListFilters.sortFields);\n      var prevIsSortAscending = FilterHelper.isCurrentSortAscending();\n\n      if (!namespaceEquals(this.props.activeNamespaces, prevProps.activeNamespaces) || this.props.duration !== prevProps.duration || this.state.currentSortField !== prevCurrentSortField || this.state.isSortAscending !== prevIsSortAscending) {\n        this.setState({\n          currentSortField: prevCurrentSortField,\n          isSortAscending: prevIsSortAscending\n        });\n        this.updateListItems();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.promises.cancelAll();\n    }\n  }, {\n    key: \"sortItemList\",\n    value: function sortItemList(workloads, sortField, isAscending) {\n      // Chain promises, as there may be an ongoing fetch/refresh and sort can be called after UI interaction\n      // This ensures that the list will display the new data with the right sorting\n      return this.promises.registerChained('sort', workloads, function (unsorted) {\n        return WorkloadListFilters.sortWorkloadsItems(unsorted, sortField, isAscending);\n      });\n    }\n  }, {\n    key: \"updateListItems\",\n    value: function updateListItems() {\n      this.promises.cancelAll();\n      var activeFilters = FilterSelected.getSelected();\n      var namespacesSelected = this.props.activeNamespaces.map(function (item) {\n        return item.name;\n      });\n\n      if (namespacesSelected.length !== 0) {\n        this.fetchWorkloads(namespacesSelected, activeFilters);\n      } else {\n        this.setState({\n          listItems: []\n        });\n      }\n    }\n  }, {\n    key: \"fetchWorkloads\",\n    value: function fetchWorkloads(namespaces, filters) {\n      var _this2 = this;\n\n      var workloadsConfigPromises = namespaces.map(function (namespace) {\n        return API.getWorkloads(namespace);\n      });\n      this.promises.registerAll('workloads', workloadsConfigPromises).then(function (responses) {\n        var workloadsItems = [];\n        responses.forEach(function (response) {\n          workloadsItems = workloadsItems.concat(_this2.getDeploymentItems(response.data));\n        });\n        return WorkloadListFilters.filterBy(workloadsItems, filters);\n      }).then(function (workloadsItems) {\n        _this2.promises.cancel('sort');\n\n        _this2.sortItemList(workloadsItems, _this2.state.currentSortField, _this2.state.isSortAscending).then(function (sorted) {\n          _this2.setState({\n            listItems: sorted\n          });\n        }).catch(function (err) {\n          if (!err.isCanceled) {\n            console.debug(err);\n          }\n        });\n      }).catch(function (err) {\n        if (!err.isCanceled) {\n          _this2.handleAxiosError('Could not fetch workloads list', err);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DefaultSecondaryMasthead, {\n        rightToolbar: /*#__PURE__*/React.createElement(TimeDurationContainer, {\n          key: 'DurationDropdown',\n          id: \"workload-list-duration-dropdown\",\n          handleRefresh: this.updateListItems,\n          disabled: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(RenderContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(VirtualList, {\n        rows: this.state.listItems,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(StatefulFilters, {\n        initialFilters: WorkloadListFilters.availableFilters,\n        onFilterChange: this.onFilterChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return WorkloadListPageComponent;\n}(FilterComponent.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    activeNamespaces: activeNamespacesSelector(state),\n    duration: durationSelector(state)\n  };\n};\n\nvar WorkloadListPage = connect(mapStateToProps)(WorkloadListPageComponent);\nexport default WorkloadListPage;","map":{"version":3,"sources":["/root/kiali-ui/src/pages/WorkloadList/WorkloadListPage.tsx"],"names":["React","FilterHelper","RenderContent","WorkloadListFilters","FilterComponent","PromisesRegistry","namespaceEquals","FilterSelected","StatefulFilters","API","VirtualList","activeNamespacesSelector","durationSelector","connect","DefaultSecondaryMasthead","TimeDurationContainer","sortIstioReferences","WorkloadListPageComponent","props","promises","getDeploymentItems","data","workloads","map","deployment","namespace","name","type","appLabel","versionLabel","istioSidecar","additionalDetailSample","healthPromise","getWorkloadHealth","duration","labels","istioReferences","prevCurrentSortField","currentSortField","sortFields","prevIsSortAscending","isCurrentSortAscending","state","listItems","isSortAscending","updateListItems","prevProps","_prevState","_snapshot","activeNamespaces","setState","cancelAll","sortField","isAscending","registerChained","unsorted","sortWorkloadsItems","activeFilters","getSelected","namespacesSelected","item","length","fetchWorkloads","namespaces","filters","workloadsConfigPromises","getWorkloads","registerAll","then","responses","workloadsItems","forEach","response","concat","filterBy","cancel","sortItemList","sorted","catch","err","isCanceled","console","debug","handleAxiosError","backgroundColor","availableFilters","onFilterChange","Component","mapStateToProps","WorkloadListPage"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as FilterHelper from '../../components/FilterList/FilterHelper';\nimport { RenderContent } from '../../components/Nav/Page';\nimport * as WorkloadListFilters from './FiltersAndSorts';\nimport * as FilterComponent from '../../components/FilterList/FilterComponent';\nimport { WorkloadListItem, WorkloadNamespaceResponse } from '../../types/Workload';\nimport { DurationInSeconds } from '../../types/Common';\nimport Namespace from '../../types/Namespace';\nimport { PromisesRegistry } from '../../utils/CancelablePromises';\nimport { namespaceEquals } from '../../utils/Common';\nimport { SortField } from '../../types/SortFilters';\nimport { ActiveFiltersInfo } from '../../types/Filters';\nimport { FilterSelected, StatefulFilters } from '../../components/Filters/StatefulFilters';\nimport * as API from '../../services/Api';\nimport VirtualList from '../../components/VirtualList/VirtualList';\nimport { KialiAppState } from '../../store/Store';\nimport { activeNamespacesSelector, durationSelector } from '../../store/Selectors';\nimport { connect } from 'react-redux';\nimport DefaultSecondaryMasthead from '../../components/DefaultSecondaryMasthead/DefaultSecondaryMasthead';\nimport TimeDurationContainer from '../../components/Time/TimeDurationComponent';\nimport { sortIstioReferences } from '../AppList/FiltersAndSorts';\n\ntype WorkloadListPageState = FilterComponent.State<WorkloadListItem>;\n\ntype ReduxProps = {\n  duration: DurationInSeconds;\n  activeNamespaces: Namespace[];\n};\n\ntype WorkloadListPageProps = ReduxProps & FilterComponent.Props<WorkloadListItem>;\n\nclass WorkloadListPageComponent extends FilterComponent.Component<\n  WorkloadListPageProps,\n  WorkloadListPageState,\n  WorkloadListItem\n> {\n  private promises = new PromisesRegistry();\n\n  constructor(props: WorkloadListPageProps) {\n    super(props);\n    const prevCurrentSortField = FilterHelper.currentSortField(WorkloadListFilters.sortFields);\n    const prevIsSortAscending = FilterHelper.isCurrentSortAscending();\n    this.state = {\n      listItems: [],\n      currentSortField: prevCurrentSortField,\n      isSortAscending: prevIsSortAscending\n    };\n  }\n\n  componentDidMount() {\n    this.updateListItems();\n  }\n\n  componentDidUpdate(prevProps: WorkloadListPageProps, _prevState: WorkloadListPageState, _snapshot: any) {\n    const prevCurrentSortField = FilterHelper.currentSortField(WorkloadListFilters.sortFields);\n    const prevIsSortAscending = FilterHelper.isCurrentSortAscending();\n    if (\n      !namespaceEquals(this.props.activeNamespaces, prevProps.activeNamespaces) ||\n      this.props.duration !== prevProps.duration ||\n      this.state.currentSortField !== prevCurrentSortField ||\n      this.state.isSortAscending !== prevIsSortAscending\n    ) {\n      this.setState({\n        currentSortField: prevCurrentSortField,\n        isSortAscending: prevIsSortAscending\n      });\n      this.updateListItems();\n    }\n  }\n\n  componentWillUnmount() {\n    this.promises.cancelAll();\n  }\n\n  sortItemList(workloads: WorkloadListItem[], sortField: SortField<WorkloadListItem>, isAscending: boolean) {\n    // Chain promises, as there may be an ongoing fetch/refresh and sort can be called after UI interaction\n    // This ensures that the list will display the new data with the right sorting\n    return this.promises.registerChained('sort', workloads, unsorted =>\n      WorkloadListFilters.sortWorkloadsItems(unsorted, sortField, isAscending)\n    );\n  }\n\n  updateListItems() {\n    this.promises.cancelAll();\n    const activeFilters: ActiveFiltersInfo = FilterSelected.getSelected();\n    const namespacesSelected = this.props.activeNamespaces.map(item => item.name);\n    if (namespacesSelected.length !== 0) {\n      this.fetchWorkloads(namespacesSelected, activeFilters);\n    } else {\n      this.setState({ listItems: [] });\n    }\n  }\n\n  getDeploymentItems = (data: WorkloadNamespaceResponse): WorkloadListItem[] => {\n    if (data.workloads) {\n      return data.workloads.map(deployment => ({\n        namespace: data.namespace.name,\n        name: deployment.name,\n        type: deployment.type,\n        appLabel: deployment.appLabel,\n        versionLabel: deployment.versionLabel,\n        istioSidecar: deployment.istioSidecar,\n        additionalDetailSample: deployment.additionalDetailSample,\n        healthPromise: API.getWorkloadHealth(\n          data.namespace.name,\n          deployment.name,\n          deployment.type,\n          this.props.duration,\n          deployment.istioSidecar\n        ),\n        labels: deployment.labels,\n        istioReferences: sortIstioReferences(deployment.istioReferences, true)\n      }));\n    }\n    return [];\n  };\n\n  fetchWorkloads(namespaces: string[], filters: ActiveFiltersInfo) {\n    const workloadsConfigPromises = namespaces.map(namespace => API.getWorkloads(namespace));\n    this.promises\n      .registerAll('workloads', workloadsConfigPromises)\n      .then(responses => {\n        let workloadsItems: WorkloadListItem[] = [];\n        responses.forEach(response => {\n          workloadsItems = workloadsItems.concat(this.getDeploymentItems(response.data));\n        });\n        return WorkloadListFilters.filterBy(workloadsItems, filters);\n      })\n      .then(workloadsItems => {\n        this.promises.cancel('sort');\n        this.sortItemList(workloadsItems, this.state.currentSortField, this.state.isSortAscending)\n          .then(sorted => {\n            this.setState({\n              listItems: sorted\n            });\n          })\n          .catch(err => {\n            if (!err.isCanceled) {\n              console.debug(err);\n            }\n          });\n      })\n      .catch(err => {\n        if (!err.isCanceled) {\n          this.handleAxiosError('Could not fetch workloads list', err);\n        }\n      });\n  }\n\n  render() {\n    return (\n      <>\n        <div style={{ backgroundColor: '#fff' }}>\n          <DefaultSecondaryMasthead\n            rightToolbar={\n              <TimeDurationContainer\n                key={'DurationDropdown'}\n                id=\"workload-list-duration-dropdown\"\n                handleRefresh={this.updateListItems}\n                disabled={false}\n              />\n            }\n          />\n        </div>\n        <RenderContent>\n          <VirtualList rows={this.state.listItems}>\n            <StatefulFilters\n              initialFilters={WorkloadListFilters.availableFilters}\n              onFilterChange={this.onFilterChange}\n            />\n          </VirtualList>\n        </RenderContent>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: KialiAppState) => ({\n  activeNamespaces: activeNamespacesSelector(state),\n  duration: durationSelector(state)\n});\n\nconst WorkloadListPage = connect(mapStateToProps)(WorkloadListPageComponent);\n\nexport default WorkloadListPage;\n"]},"metadata":{},"sourceType":"module"}