{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/components/MessageCenter/AlertDrawer.tsx\";\nimport * as React from 'react';\nimport { Card, CardHead, CardActions, CardHeader, Button, CardBody, Accordion, AccordionToggle, AccordionItem, AccordionContent } from '@patternfly/react-core';\nimport { CloseIcon, InfoIcon } from '@patternfly/react-icons';\nimport { connect } from 'react-redux';\nimport { style } from 'typestyle';\nimport { MessageCenterActions } from 'actions/MessageCenterActions';\nimport AlertDrawerGroupContainer from './AlertDrawerGroup';\nimport { BoundingClientAwareComponent, PropertyType } from 'components/BoundingClientAwareComponent/BoundingClientAwareComponent';\nimport { KialiIcon } from 'config/KialiIcon';\n\nvar hideGroup = function hideGroup(group) {\n  return group.hideIfEmpty && group.messages.length === 0;\n};\n\nvar getUnreadCount = function getUnreadCount(messages) {\n  return messages.reduce(function (count, message) {\n    return message.seen ? count : count + 1;\n  }, 0);\n};\n\nvar getUnreadMessageLabel = function getUnreadMessageLabel(messages) {\n  var unreadCount = getUnreadCount(messages);\n  return unreadCount === 1 ? '1 Unread Message' : \"\".concat(getUnreadCount(messages), \" Unread Messages\");\n};\n\nvar noNotificationsMessage = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InfoIcon, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }\n}), \"No Messages Available\");\nexport var AlertDrawer = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(AlertDrawer, _React$PureComponent);\n\n  var _super = _createSuper(AlertDrawer);\n\n  function AlertDrawer() {\n    _classCallCheck(this, AlertDrawer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AlertDrawer, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var drawer = style({\n        position: 'absolute',\n        right: '0',\n        width: this.props.isExpanded ? '80%' : '30em'\n      });\n      return !this.props.isHidden && /*#__PURE__*/React.createElement(Card, {\n        className: drawer,\n        hidden: this.props.isHidden,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CardHead, {\n        className: AlertDrawer.head,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CardActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, this.props.isExpanded ? /*#__PURE__*/React.createElement(Button, {\n        id: \"alert_drawer_collapse\",\n        variant: \"plain\",\n        onClick: this.props.expandDrawer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(KialiIcon.AngleDoubleRight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }\n      })) : /*#__PURE__*/React.createElement(Button, {\n        id: \"alert_drawer_expand\",\n        variant: \"plain\",\n        onClick: this.props.expandDrawer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(KialiIcon.AngleDoubleLeft, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        id: \"alert_drawer_close\",\n        variant: \"plain\",\n        onClick: this.props.hideDrawer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, this.props.title)), /*#__PURE__*/React.createElement(CardBody, {\n        className: AlertDrawer.body,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, this.props.groups.length === 0 ? noNotificationsMessage : /*#__PURE__*/React.createElement(BoundingClientAwareComponent, {\n        className: AlertDrawer.wrapper,\n        maxHeight: {\n          type: PropertyType.VIEWPORT_HEIGHT_MINUS_TOP,\n          margin: AlertDrawer.wrapperMarginBottom\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Accordion, {\n        className: AlertDrawer.groups,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, this.props.groups.map(function (group) {\n        return hideGroup(group) ? null : /*#__PURE__*/React.createElement(AccordionItem, {\n          key: group.id + '_item',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(AccordionToggle, {\n          id: group.id + '_toggle',\n          isExpanded: group.id === _this.props.expandedGroupId,\n          onClick: function onClick() {\n            _this.props.toggleGroup(group);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }\n        }, group.title, \" \", getUnreadMessageLabel(group.messages)), /*#__PURE__*/React.createElement(AccordionContent, {\n          id: group.id + '_content',\n          isHidden: group.id !== _this.props.expandedGroupId,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(AlertDrawerGroupContainer, {\n          key: group.id,\n          group: group,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 27\n          }\n        })));\n      })))));\n    }\n  }]);\n\n  return AlertDrawer;\n}(React.PureComponent);\nAlertDrawer.head = style({\n  paddingBottom: 0\n});\nAlertDrawer.body = style({\n  paddingLeft: 0,\n  paddingRight: 0\n});\nAlertDrawer.wrapper = style({\n  overflow: 'auto'\n});\nAlertDrawer.wrapperMarginBottom = 10;\nAlertDrawer.groups = style({\n  paddingTop: 0,\n  paddingBottom: 0\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    expandedGroupId: state.messageCenter.expandedGroupId,\n    groups: state.messageCenter.groups,\n    isExpanded: state.messageCenter.expanded,\n    isHidden: state.messageCenter.hidden\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    expandDrawer: function expandDrawer() {\n      return dispatch(MessageCenterActions.toggleExpandedMessageCenter());\n    },\n    hideDrawer: function hideDrawer() {\n      return dispatch(MessageCenterActions.hideMessageCenter());\n    },\n    toggleGroup: function toggleGroup(group) {\n      return dispatch(MessageCenterActions.toggleGroup(group.id));\n    }\n  };\n};\n\nvar AlertDrawerContainer = connect(mapStateToProps, mapDispatchToProps)(AlertDrawer);\nexport default AlertDrawerContainer;","map":{"version":3,"sources":["/root/GraduateProject/src/components/MessageCenter/AlertDrawer.tsx"],"names":["React","Card","CardHead","CardActions","CardHeader","Button","CardBody","Accordion","AccordionToggle","AccordionItem","AccordionContent","CloseIcon","InfoIcon","connect","style","MessageCenterActions","AlertDrawerGroupContainer","BoundingClientAwareComponent","PropertyType","KialiIcon","hideGroup","group","hideIfEmpty","messages","length","getUnreadCount","reduce","count","message","seen","getUnreadMessageLabel","unreadCount","noNotificationsMessage","AlertDrawer","drawer","position","right","width","props","isExpanded","isHidden","head","expandDrawer","hideDrawer","title","body","groups","wrapper","type","VIEWPORT_HEIGHT_MINUS_TOP","margin","wrapperMarginBottom","map","id","expandedGroupId","toggleGroup","PureComponent","paddingBottom","paddingLeft","paddingRight","overflow","paddingTop","mapStateToProps","state","messageCenter","expanded","hidden","mapDispatchToProps","dispatch","toggleExpandedMessageCenter","hideMessageCenter","AlertDrawerContainer"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Card,\n  CardHead,\n  CardActions,\n  CardHeader,\n  Button,\n  CardBody,\n  Accordion,\n  AccordionToggle,\n  AccordionItem,\n  AccordionContent\n} from '@patternfly/react-core';\nimport { CloseIcon, InfoIcon } from '@patternfly/react-icons';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { KialiAppState } from 'store/Store';\nimport { style } from 'typestyle';\nimport { NotificationMessage, NotificationGroup } from '../../types/MessageCenter';\nimport { MessageCenterActions } from 'actions/MessageCenterActions';\nimport { KialiAppAction } from 'actions/KialiAppAction';\nimport AlertDrawerGroupContainer from './AlertDrawerGroup';\nimport {\n  BoundingClientAwareComponent,\n  PropertyType\n} from 'components/BoundingClientAwareComponent/BoundingClientAwareComponent';\nimport { KialiIcon } from 'config/KialiIcon';\n\ntype ReduxProps = {\n  expandedGroupId: string | undefined;\n  groups: NotificationGroup[];\n  isExpanded: boolean;\n  isHidden: boolean;\n\n  expandDrawer: () => void;\n  hideDrawer: () => void;\n  toggleGroup: (group) => void;\n};\n\ntype AlertDrawerProps = ReduxProps & {\n  title: string;\n};\n\nconst hideGroup = (group: NotificationGroup): boolean => {\n  return group.hideIfEmpty && group.messages.length === 0;\n};\n\nconst getUnreadCount = (messages: NotificationMessage[]) => {\n  return messages.reduce((count, message) => {\n    return message.seen ? count : count + 1;\n  }, 0);\n};\n\nconst getUnreadMessageLabel = (messages: NotificationMessage[]) => {\n  const unreadCount = getUnreadCount(messages);\n  return unreadCount === 1 ? '1 Unread Message' : `${getUnreadCount(messages)} Unread Messages`;\n};\n\nconst noNotificationsMessage = (\n  <>\n    <InfoIcon />\n    No Messages Available\n  </>\n);\n\nexport class AlertDrawer extends React.PureComponent<AlertDrawerProps> {\n  static readonly head = style({\n    paddingBottom: 0\n  });\n  static readonly body = style({\n    paddingLeft: 0,\n    paddingRight: 0\n  });\n  static readonly wrapper = style({\n    overflow: 'auto'\n  });\n  static readonly wrapperMarginBottom = 10;\n  static readonly groups = style({\n    paddingTop: 0,\n    paddingBottom: 0\n  });\n\n  render() {\n    const drawer = style({\n      position: 'absolute',\n      right: '0',\n      width: this.props.isExpanded ? '80%' : '30em'\n    });\n\n    return (\n      !this.props.isHidden && (\n        <Card className={drawer} hidden={this.props.isHidden}>\n          <CardHead className={AlertDrawer.head}>\n            <CardActions>\n              {this.props.isExpanded ? (\n                <Button id=\"alert_drawer_collapse\" variant=\"plain\" onClick={this.props.expandDrawer}>\n                  <KialiIcon.AngleDoubleRight />\n                </Button>\n              ) : (\n                <Button id=\"alert_drawer_expand\" variant=\"plain\" onClick={this.props.expandDrawer}>\n                  <KialiIcon.AngleDoubleLeft />\n                </Button>\n              )}\n              <Button id=\"alert_drawer_close\" variant=\"plain\" onClick={this.props.hideDrawer}>\n                <CloseIcon />\n              </Button>\n            </CardActions>\n            <CardHeader>{this.props.title}</CardHeader>\n          </CardHead>\n          <CardBody className={AlertDrawer.body}>\n            {this.props.groups.length === 0 ? (\n              noNotificationsMessage\n            ) : (\n              <BoundingClientAwareComponent\n                className={AlertDrawer.wrapper}\n                maxHeight={{ type: PropertyType.VIEWPORT_HEIGHT_MINUS_TOP, margin: AlertDrawer.wrapperMarginBottom }}\n              >\n                <Accordion className={AlertDrawer.groups}>\n                  {this.props.groups.map(group => {\n                    return hideGroup(group) ? null : (\n                      <AccordionItem key={group.id + '_item'}>\n                        <AccordionToggle\n                          id={group.id + '_toggle'}\n                          isExpanded={group.id === this.props.expandedGroupId}\n                          onClick={() => {\n                            this.props.toggleGroup(group);\n                          }}\n                        >\n                          {group.title} {getUnreadMessageLabel(group.messages)}\n                        </AccordionToggle>\n                        <AccordionContent id={group.id + '_content'} isHidden={group.id !== this.props.expandedGroupId}>\n                          <AlertDrawerGroupContainer key={group.id} group={group} />\n                        </AccordionContent>\n                      </AccordionItem>\n                    );\n                  })}\n                </Accordion>\n              </BoundingClientAwareComponent>\n            )}\n          </CardBody>\n        </Card>\n      )\n    );\n  }\n}\n\nconst mapStateToProps = (state: KialiAppState) => {\n  return {\n    expandedGroupId: state.messageCenter.expandedGroupId,\n    groups: state.messageCenter.groups,\n    isExpanded: state.messageCenter.expanded,\n    isHidden: state.messageCenter.hidden\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<KialiAppState, void, KialiAppAction>) => {\n  return {\n    expandDrawer: () => dispatch(MessageCenterActions.toggleExpandedMessageCenter()),\n    hideDrawer: () => dispatch(MessageCenterActions.hideMessageCenter()),\n    toggleGroup: group => dispatch(MessageCenterActions.toggleGroup(group.id))\n  };\n};\n\nconst AlertDrawerContainer = connect(mapStateToProps, mapDispatchToProps)(AlertDrawer);\nexport default AlertDrawerContainer;\n"]},"metadata":{},"sourceType":"module"}