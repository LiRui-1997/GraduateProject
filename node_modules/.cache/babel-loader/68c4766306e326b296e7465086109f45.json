{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _pt from \"prop-types\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/** This Component can be used to wrap a functional component in order to generate a random ID\n * Example of how to use this component\n *\n * const Component = ({id}: {id: string}) => (\n *  <GenerateId>{randomId => (\n *     <div id={id || randomId}>\n *       div with random ID\n *     </div>\n *   )}\n *  </GenerateId>\n *  );\n */\n\n\nimport * as React from 'react';\nvar currentId = 0;\n\nvar GenerateId = /*#__PURE__*/function (_React$Component) {\n  _inherits(GenerateId, _React$Component);\n\n  var _super = _createSuper(GenerateId);\n\n  function GenerateId() {\n    var _this;\n\n    _classCallCheck(this, GenerateId);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"id\", \"\".concat(_this.props.prefix).concat(currentId++));\n\n    return _this;\n  }\n\n  _createClass(GenerateId, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.children(this.id);\n    }\n  }]);\n\n  return GenerateId;\n}(React.Component);\n\n_defineProperty(GenerateId, \"propTypes\", {\n  prefix: _pt.string\n});\n\n_defineProperty(GenerateId, \"defaultProps\", {\n  prefix: 'pf-random-id-'\n});\n\nexport default GenerateId;","map":{"version":3,"sources":["/root/GraduateProject/node_modules/@patternfly/react-core/dist/esm/helpers/GenerateId/GenerateId.js"],"names":["_pt","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","currentId","GenerateId","args","props","prefix","children","id","Component","string"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,YAAhB;;AAEA,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAAE,MAAID,GAAG,IAAID,GAAX,EAAgB;AAAEG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AAAmB;;AAAC,SAAOF,GAAP;AAAa;AAEjN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,KAAKQ,KAAZ,MAAuB,OAAvB;AACA,IAAIC,SAAS,GAAG,CAAhB;;IAEMC,U;;;;;AACJ,wBAAqB;AAAA;;AAAA;;AAAA,sCAANC,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACnB,oDAASA,IAAT;;AAEAZ,IAAAA,eAAe,gCAAO,IAAP,YAAgB,MAAKa,KAAL,CAAWC,MAA3B,SAAoCJ,SAAS,EAA7C,EAAf;;AAHmB;AAIpB;;;;WAED,kBAAS;AACP,aAAO,KAAKG,KAAL,CAAWE,QAAX,CAAoB,KAAKC,EAAzB,CAAP;AACD;;;;EATsBP,KAAK,CAACQ,S;;AAa/BjB,eAAe,CAACW,UAAD,EAAa,WAAb,EAA0B;AACvCG,EAAAA,MAAM,EAAEf,GAAG,CAACmB;AAD2B,CAA1B,CAAf;;AAIAlB,eAAe,CAACW,UAAD,EAAa,cAAb,EAA6B;AAC1CG,EAAAA,MAAM,EAAE;AADkC,CAA7B,CAAf;;AAIA,eAAeH,UAAf","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/** This Component can be used to wrap a functional component in order to generate a random ID\n * Example of how to use this component\n *\n * const Component = ({id}: {id: string}) => (\n *  <GenerateId>{randomId => (\n *     <div id={id || randomId}>\n *       div with random ID\n *     </div>\n *   )}\n *  </GenerateId>\n *  );\n */\nimport * as React from 'react';\nlet currentId = 0;\n\nclass GenerateId extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"id\", `${this.props.prefix}${currentId++}`);\n  }\n\n  render() {\n    return this.props.children(this.id);\n  }\n\n}\n\n_defineProperty(GenerateId, \"propTypes\", {\n  prefix: _pt.string\n});\n\n_defineProperty(GenerateId, \"defaultProps\", {\n  prefix: 'pf-random-id-'\n});\n\nexport default GenerateId;\n//# sourceMappingURL=GenerateId.js.map"]},"metadata":{},"sourceType":"module"}