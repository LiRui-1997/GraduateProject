{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _jsxFileName = \"/root/kiali-ui/src/components/Expandable.tsx\",\n    _this4 = this;\n\nimport * as React from 'react';\nimport { AngleDownIcon, AngleRightIcon } from '@patternfly/react-icons'; // This \"Expandable\" class can replace the collapse/expand mechanism of patternfly-table.\n// While patternfly-table collapse would trigger a full table re-rendering,\n// this one is more fine-grained, only the affected cells being re-rendered.\n\nvar notify = function notify(listeners, expand) {\n  return listeners.forEach(function (l) {\n    return l(expand);\n  });\n};\n\nexport var createListeners = function createListeners() {\n  return [];\n};\nexport var Expandable = /*#__PURE__*/function (_React$Component) {\n  _inherits(Expandable, _React$Component);\n\n  var _super = _createSuper(Expandable);\n\n  function Expandable(props) {\n    var _this;\n\n    _classCallCheck(this, Expandable);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isExpanded: props.isExpanded\n    };\n    return _this;\n  }\n\n  _createClass(Expandable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.listeners.push(function (x) {\n        return _this2.setState({\n          isExpanded: x\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var InnerComponent = this.props.innerComponent;\n      var inner = /*#__PURE__*/React.createElement(InnerComponent, Object.assign({}, this.props, {\n        isExpanded: this.state.isExpanded,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }\n      }));\n\n      if (this.props.clickToExpand) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: function onClick() {\n            return notify(_this3.props.listeners, !_this3.state.isExpanded);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }\n        }, inner);\n      }\n\n      return inner;\n    }\n  }]);\n\n  return Expandable;\n}(React.Component);\nexport var renderExpandArrow = function renderExpandArrow(listeners, isExpanded) {\n  return /*#__PURE__*/React.createElement(Expandable, {\n    listeners: listeners,\n    isExpanded: isExpanded,\n    clickToExpand: true,\n    innerComponent: function innerComponent(props) {\n      return props.isExpanded ? /*#__PURE__*/React.createElement(AngleDownIcon, {\n        __self: _this4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 79\n        }\n      }) : /*#__PURE__*/React.createElement(AngleRightIcon, {\n        __self: _this4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 99\n        }\n      });\n    },\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  });\n};","map":{"version":3,"sources":["/root/kiali-ui/src/components/Expandable.tsx"],"names":["React","AngleDownIcon","AngleRightIcon","notify","listeners","expand","forEach","l","createListeners","Expandable","props","state","isExpanded","push","x","setState","InnerComponent","innerComponent","inner","clickToExpand","cursor","Component","renderExpandArrow"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,yBAA9C,C,CAEA;AACA;AACA;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,SAAD,EAA8BC,MAA9B;AAAA,SAAkDD,SAAS,CAACE,OAAV,CAAkB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACF,MAAD,CAAL;AAAA,GAAnB,CAAlD;AAAA,CAAf;;AAEA,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAwB,EAAxB;AAAA,CAAxB;AAcP,WAAaC,UAAb;AAAA;;AAAA;;AACE,sBAAYC,KAAZ,EAAuC;AAAA;;AAAA;;AACrC,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,UAAU,EAAEF,KAAK,CAACE;AAApB,KAAb;AAFqC;AAGtC;;AAJH;AAAA;AAAA,WAME,6BAAoB;AAAA;;AAClB,WAAKF,KAAL,CAAWN,SAAX,CAAqBS,IAArB,CAA0B,UAAAC,CAAC;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEH,UAAAA,UAAU,EAAEE;AAAd,SAAd,CAAJ;AAAA,OAA3B;AACD;AARH;AAAA;AAAA,WAUE,kBAAS;AAAA;;AACP,UAAME,cAAgE,GAAG,KAAKN,KAAL,CAAWO,cAApF;AACA,UAAMC,KAAK,gBAAG,oBAAC,cAAD,oBAAoB,KAAKR,KAAzB;AAAgC,QAAA,UAAU,EAAE,KAAKC,KAAL,CAAWC,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAd;;AACA,UAAI,KAAKF,KAAL,CAAWS,aAAf,EAA8B;AAC5B,4BACE;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAb;AAAoC,UAAA,OAAO,EAAE;AAAA,mBAAMjB,MAAM,CAAC,MAAI,CAACO,KAAL,CAAWN,SAAZ,EAAuB,CAAC,MAAI,CAACO,KAAL,CAAWC,UAAnC,CAAZ;AAAA,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGM,KADH,CADF;AAKD;;AACD,aAAOA,KAAP;AACD;AArBH;;AAAA;AAAA,EAAmClB,KAAK,CAACqB,SAAzC;AAwBA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAClB,SAAD,EAA8BQ,UAA9B,EAAsD;AACrF,sBACE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAER,SADb;AAEE,IAAA,UAAU,EAAEQ,UAFd;AAGE,IAAA,aAAa,EAAE,IAHjB;AAIE,IAAA,cAAc,EAAE,wBAACF,KAAD;AAAA,aAAqCA,KAAK,CAACE,UAAN,gBAAmB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnB,gBAAuC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5E;AAAA,KAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CATM","sourcesContent":["import * as React from 'react';\nimport { AngleDownIcon, AngleRightIcon } from '@patternfly/react-icons';\n\n// This \"Expandable\" class can replace the collapse/expand mechanism of patternfly-table.\n// While patternfly-table collapse would trigger a full table re-rendering,\n// this one is more fine-grained, only the affected cells being re-rendered.\n\ntype ExpandListener = (isExpanded: boolean) => void;\nconst notify = (listeners: ExpandListener[], expand: boolean) => listeners.forEach(l => l(expand));\n\nexport const createListeners = (): ExpandListener[] => [];\nexport type CellProps<R> = R & { isExpanded: boolean };\n\ntype ExpandableProps<R> = R & {\n  listeners: ExpandListener[];\n  isExpanded: boolean;\n  clickToExpand: boolean;\n  innerComponent: React.ComponentType<R & { isExpanded: boolean }>;\n};\n\ntype ExpandableState = {\n  isExpanded: boolean;\n};\n\nexport class Expandable<R> extends React.Component<ExpandableProps<R>, ExpandableState> {\n  constructor(props: ExpandableProps<R>) {\n    super(props);\n    this.state = { isExpanded: props.isExpanded };\n  }\n\n  componentDidMount() {\n    this.props.listeners.push(x => this.setState({ isExpanded: x }));\n  }\n\n  render() {\n    const InnerComponent: React.ComponentType<R & { isExpanded: boolean }> = this.props.innerComponent;\n    const inner = <InnerComponent {...this.props} isExpanded={this.state.isExpanded} />;\n    if (this.props.clickToExpand) {\n      return (\n        <span style={{ cursor: 'pointer' }} onClick={() => notify(this.props.listeners, !this.state.isExpanded)}>\n          {inner}\n        </span>\n      );\n    }\n    return inner;\n  }\n}\n\nexport const renderExpandArrow = (listeners: ExpandListener[], isExpanded: boolean) => {\n  return (\n    <Expandable\n      listeners={listeners}\n      isExpanded={isExpanded}\n      clickToExpand={true}\n      innerComponent={(props: { isExpanded: boolean }) => (props.isExpanded ? <AngleDownIcon /> : <AngleRightIcon />)}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}