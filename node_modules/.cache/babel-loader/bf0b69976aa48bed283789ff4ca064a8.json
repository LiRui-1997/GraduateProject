{"ast":null,"code":"export var sortFields = [{\n  id: 'namespace',\n  title: 'Name',\n  isNumeric: false,\n  param: 'ns',\n  compare: function compare(a, b) {\n    return a.name.localeCompare(b.name);\n  }\n}, {\n  id: 'health',\n  title: 'Health',\n  isNumeric: false,\n  param: 'h',\n  compare: function compare(a, b) {\n    if (a.status && b.status) {\n      var diff = b.status.inError.length - a.status.inError.length;\n\n      if (diff !== 0) {\n        return diff;\n      }\n\n      diff = b.status.inWarning.length - a.status.inWarning.length;\n\n      if (diff !== 0) {\n        return diff;\n      }\n    } else if (a.status) {\n      return -1;\n    } else if (b.status) {\n      return 1;\n    } // default comparison fallback\n\n\n    return a.name.localeCompare(b.name);\n  }\n}, {\n  id: 'mtls',\n  title: 'mTLS',\n  isNumeric: false,\n  param: 'm',\n  compare: function compare(a, b) {\n    if (a.tlsStatus && b.tlsStatus) {\n      return a.tlsStatus.status.localeCompare(b.tlsStatus.status);\n    } else if (a.tlsStatus) {\n      return -1;\n    } else if (b.tlsStatus) {\n      return 1;\n    } // default comparison fallback\n\n\n    return a.name.localeCompare(b.name);\n  }\n}, {\n  id: 'config',\n  title: 'Istio Config',\n  isNumeric: false,\n  param: 'ic',\n  compare: function compare(a, b) {\n    if (a.validations && b.validations) {\n      if (a.validations.errors === b.validations.errors) {\n        if (a.validations.warnings === b.validations.warnings) {\n          if (a.validations.objectCount && b.validations.objectCount) {\n            if (a.validations.objectCount === b.validations.objectCount) {\n              // If all equal, use name for sorting\n              return a.name.localeCompare(b.name);\n            } else {\n              return a.validations.objectCount > b.validations.objectCount ? -1 : 1;\n            }\n          } else if (a.validations.objectCount) {\n            return -1;\n          } else if (b.validations.objectCount) {\n            return 1;\n          }\n        } else {\n          return a.validations.warnings > b.validations.warnings ? -1 : 1;\n        }\n      } else {\n        return a.validations.errors > b.validations.errors ? -1 : 1;\n      }\n    } else if (a.validations) {\n      return -1;\n    } else if (b.validations) {\n      return 1;\n    } // default comparison fallback\n\n\n    return a.name.localeCompare(b.name);\n  }\n}];\nexport var sortFunc = function sortFunc(allNamespaces, sortField, isAscending) {\n  return allNamespaces.sort(isAscending ? sortField.compare : function (a, b) {\n    return sortField.compare(b, a);\n  });\n};","map":{"version":3,"sources":["/root/kiali-ui/src/pages/Overview/Sorts.ts"],"names":["sortFields","id","title","isNumeric","param","compare","a","b","name","localeCompare","status","diff","inError","length","inWarning","tlsStatus","validations","errors","warnings","objectCount","sortFunc","allNamespaces","sortField","isAscending","sort"],"mappings":"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","sourcesContent":["import { SortField } from '../../types/SortFilters';\nimport NamespaceInfo from './NamespaceInfo';\n\nexport const sortFields: SortField<NamespaceInfo>[] = [\n  {\n    id: 'namespace',\n    title: 'Name',\n    isNumeric: false,\n    param: 'ns',\n    compare: (a: NamespaceInfo, b: NamespaceInfo) => a.name.localeCompare(b.name)\n  },\n  {\n    id: 'health',\n    title: 'Health',\n    isNumeric: false,\n    param: 'h',\n    compare: (a: NamespaceInfo, b: NamespaceInfo) => {\n      if (a.status && b.status) {\n        let diff = b.status.inError.length - a.status.inError.length;\n        if (diff !== 0) {\n          return diff;\n        }\n        diff = b.status.inWarning.length - a.status.inWarning.length;\n        if (diff !== 0) {\n          return diff;\n        }\n      } else if (a.status) {\n        return -1;\n      } else if (b.status) {\n        return 1;\n      }\n      // default comparison fallback\n      return a.name.localeCompare(b.name);\n    }\n  },\n  {\n    id: 'mtls',\n    title: 'mTLS',\n    isNumeric: false,\n    param: 'm',\n    compare: (a: NamespaceInfo, b: NamespaceInfo) => {\n      if (a.tlsStatus && b.tlsStatus) {\n        return a.tlsStatus.status.localeCompare(b.tlsStatus.status);\n      } else if (a.tlsStatus) {\n        return -1;\n      } else if (b.tlsStatus) {\n        return 1;\n      }\n\n      // default comparison fallback\n      return a.name.localeCompare(b.name);\n    }\n  },\n  {\n    id: 'config',\n    title: 'Istio Config',\n    isNumeric: false,\n    param: 'ic',\n    compare: (a: NamespaceInfo, b: NamespaceInfo) => {\n      if (a.validations && b.validations) {\n        if (a.validations.errors === b.validations.errors) {\n          if (a.validations.warnings === b.validations.warnings) {\n            if (a.validations.objectCount && b.validations.objectCount) {\n              if (a.validations.objectCount === b.validations.objectCount) {\n                // If all equal, use name for sorting\n                return a.name.localeCompare(b.name);\n              } else {\n                return a.validations.objectCount > b.validations.objectCount ? -1 : 1;\n              }\n            } else if (a.validations.objectCount) {\n              return -1;\n            } else if (b.validations.objectCount) {\n              return 1;\n            }\n          } else {\n            return a.validations.warnings > b.validations.warnings ? -1 : 1;\n          }\n        } else {\n          return a.validations.errors > b.validations.errors ? -1 : 1;\n        }\n      } else if (a.validations) {\n        return -1;\n      } else if (b.validations) {\n        return 1;\n      }\n\n      // default comparison fallback\n      return a.name.localeCompare(b.name);\n    }\n  }\n];\n\nexport const sortFunc = (allNamespaces: NamespaceInfo[], sortField: SortField<NamespaceInfo>, isAscending: boolean) => {\n  return allNamespaces.sort(isAscending ? sortField.compare : (a, b) => sortField.compare(b, a));\n};\n"]},"metadata":{},"sourceType":"module"}