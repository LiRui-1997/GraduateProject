{"ast":null,"code":"import _objectSpread from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{getType}from'typesafe-actions';import{LoginStatus}from'../store/Store';import{LoginActions}from'../actions/LoginActions';import{updateState}from'../utils/Reducer';export var INITIAL_LOGIN_STATE={landingRoute:undefined,message:'',session:undefined,status:LoginStatus.loggedOut};// This Reducer allows changes to the 'loginState' portion of Redux Store\nvar loginState=function loginState(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INITIAL_LOGIN_STATE;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case getType(LoginActions.loginRequest):return _objectSpread(_objectSpread({},INITIAL_LOGIN_STATE),{},{landingRoute:state.landingRoute,status:LoginStatus.logging});case getType(LoginActions.loginSuccess):return _objectSpread(_objectSpread(_objectSpread({},INITIAL_LOGIN_STATE),action.payload),{},{landingRoute:state.landingRoute});case getType(LoginActions.loginExtend):return _objectSpread(_objectSpread({},INITIAL_LOGIN_STATE),{},{landingRoute:state.landingRoute,status:LoginStatus.loggedIn,session:action.payload.session});case getType(LoginActions.loginFailure):var message='Error connecting to Kiali';var response_data=action.payload.error.response.data;if(response_data&&typeof response_data.error=='string'&&response_data.error.length>0){message=\"Login unsuccessful: \".concat(response_data.error);}else if(action.payload.error.response.status===401){message='Unauthorized. The provided credentials are not valid to access Kiali. Please check your credentials and try again.';}return _objectSpread(_objectSpread({},INITIAL_LOGIN_STATE),{},{landingRoute:state.landingRoute,message:message,status:LoginStatus.error});case getType(LoginActions.logoutSuccess):return INITIAL_LOGIN_STATE;case getType(LoginActions.sessionExpired):return _objectSpread(_objectSpread({},INITIAL_LOGIN_STATE),{},{status:LoginStatus.expired,message:'Your session has expired or was terminated in another window.'});case getType(LoginActions.setLandingRoute):return updateState(state,{landingRoute:action.payload});default:return state;}};export default loginState;","map":null,"metadata":{},"sourceType":"module"}