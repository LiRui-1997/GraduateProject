{"ast":null,"code":"import _inherits from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _createForOfIteratorHelper from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _classCallCheck from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{CheckCircleIcon,ExclamationCircleIcon,ExclamationTriangleIcon,MinusCircleIcon,UnknownIcon}from'@patternfly/react-icons';import{getName}from'../utils/RateIntervals';import{PFColors}from'components/Pf/PfColors';import{calculateErrorRate}from'./ErrorRate';import{serverConfig}from'../config';export var TRAFFICSTATUS='Traffic Status';var createTrafficTitle=function createTrafficTitle(time){return TRAFFICSTATUS+' (Last '+time+')';};/*\nRequestType interface\n- where the structure is type {<protocol>: {<code>:value ...} ...}\n\nExample: { \"http\": {\"200\": 2, \"404\": 1 ...} ... }\n*/export var FAILURE={name:'Failure',color:PFColors.Danger,priority:4,icon:ExclamationCircleIcon,class:'icon-failure'};export var DEGRADED={name:'Degraded',color:PFColors.Warning,priority:3,icon:ExclamationTriangleIcon,class:'icon-degraded'};export var NOT_READY={name:'Not Ready',color:PFColors.InfoBackground,priority:2,icon:MinusCircleIcon,class:'icon-idle'};export var HEALTHY={name:'Healthy',color:PFColors.Success,priority:1,icon:CheckCircleIcon,class:'icon-healthy'};export var NA={name:'No health information',color:PFColors.Black600,priority:0,icon:UnknownIcon,class:'icon-na'};export var POD_STATUS='Pod Status';// Use -1 rather than NaN to allow straigthforward comparison\nexport var RATIO_NA=-1;export var ratioCheck=function ratioCheck(availableReplicas,currentReplicas,desiredReplicas,syncedProxies){/*\n    NOT READY STATE\n */ // User has scaled down a workload, then desired replicas will be 0 and it's not an error condition\nif(desiredReplicas===0){return NOT_READY;}/*\n   DEGRADED STATE\n  */ // When a workload has available pods but less than desired defined by user it should be marked as degraded\nif(desiredReplicas>0&&currentReplicas>0&&availableReplicas>0&&(currentReplicas<desiredReplicas||availableReplicas<desiredReplicas)){return DEGRADED;}/*\n     FAILURE STATE\n  */ // When availableReplicas is 0 but user has marked a desired > 0, that's an error condition\nif(desiredReplicas>0&&availableReplicas===0){return FAILURE;}// Pending Pods means problems\nif(desiredReplicas===availableReplicas&&availableReplicas!==currentReplicas){return FAILURE;}// When there are proxies that are not sync, degrade\nif(syncedProxies>=0&&syncedProxies<desiredReplicas){return DEGRADED;}/*\n     HEALTHY STATE\n  */if(desiredReplicas===currentReplicas&&currentReplicas===availableReplicas&&availableReplicas===desiredReplicas){return HEALTHY;}// Other combination could mean a degraded situation\nreturn DEGRADED;};export var proxyStatusMessage=function proxyStatusMessage(syncedProxies,desiredReplicas){var msg='';if(syncedProxies<desiredReplicas){var unsynced=desiredReplicas-syncedProxies;msg=' ('+unsynced;msg+=unsynced!==1?' proxies':' proxy';msg+=' unsynced)';}return msg;};export var isProxyStatusSynced=function isProxyStatusSynced(status){return isProxyStatusComponentSynced(status.CDS)&&isProxyStatusComponentSynced(status.EDS)&&isProxyStatusComponentSynced(status.LDS)&&isProxyStatusComponentSynced(status.RDS);};export var isProxyStatusComponentSynced=function isProxyStatusComponentSynced(componentStatus){return componentStatus==='Synced';};export var mergeStatus=function mergeStatus(s1,s2){return s1.priority>s2.priority?s1:s2;};export var ascendingThresholdCheck=function ascendingThresholdCheck(value,thresholds){if(value>0){if(value>=thresholds.failure){return{value:value,status:FAILURE,violation:value.toFixed(2)+thresholds.unit+'>='+thresholds.failure+thresholds.unit};}else if(value>=thresholds.degraded){return{value:value,status:DEGRADED,violation:value.toFixed(2)+thresholds.unit+'>='+thresholds.degraded+thresholds.unit};}}return{value:value,status:HEALTHY};};export var getRequestErrorsStatus=function getRequestErrorsStatus(ratio,tolerance){if(tolerance&&ratio>=0){var thresholds={degraded:tolerance.degraded,failure:tolerance.failure,unit:'%'};return ascendingThresholdCheck(100*ratio,thresholds);}return{value:RATIO_NA,status:NA};};export var getRequestErrorsSubItem=function getRequestErrorsSubItem(thresholdStatus,prefix){return{status:thresholdStatus.status,text:prefix+': '+(thresholdStatus.status===NA?'No requests':thresholdStatus.value.toFixed(2)+'%'),value:thresholdStatus.status===NA?0:thresholdStatus.value};};export var Health=/*#__PURE__*/function(){function Health(health){_classCallCheck(this,Health);this.health=health;}_createClass(Health,[{key:\"getGlobalStatus\",value:function getGlobalStatus(){return this.health.items.map(function(i){return i.status;}).reduce(function(prev,cur){return mergeStatus(prev,cur);},NA);}},{key:\"getStatusConfig\",value:function getStatusConfig(){var _this$health$statusCo;// Check if the config applied is the kiali defaults one\nvar tolConfDefault=serverConfig.healthConfig.rate[serverConfig.healthConfig.rate.length-1].tolerance;var _iterator=_createForOfIteratorHelper(tolConfDefault),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var tol=_step.value;// Check if the tolerance applied is one of kiali defaults\nif(this.health.statusConfig&&tol===this.health.statusConfig.threshold){// In the case is a kiali's default return undefined\nreturn undefined;}}// Otherwise return the threshold configuration that kiali used to calculate the status\n}catch(err){_iterator.e(err);}finally{_iterator.f();}return(_this$health$statusCo=this.health.statusConfig)===null||_this$health$statusCo===void 0?void 0:_this$health$statusCo.threshold;}},{key:\"getTrafficStatus\",value:function getTrafficStatus(){for(var i=0;i<this.health.items.length;i++){var item=this.health.items[i];if(item.title.startsWith(TRAFFICSTATUS)){return item;}}return undefined;}},{key:\"getWorkloadStatus\",value:function getWorkloadStatus(){for(var i=0;i<this.health.items.length;i++){var item=this.health.items[i];if(item.title.startsWith(POD_STATUS)){return item;}}return undefined;}}]);return Health;}();export var ServiceHealth=/*#__PURE__*/function(_Health){_inherits(ServiceHealth,_Health);var _super=_createSuper(ServiceHealth);function ServiceHealth(ns,srv,requests,ctx){var _this;_classCallCheck(this,ServiceHealth);_this=_super.call(this,ServiceHealth.computeItems(ns,srv,requests,ctx));_this.requests=requests;return _this;}_createClass(ServiceHealth,null,[{key:\"computeItems\",value:function computeItems(ns,srv,requests,ctx){var items=[];var statusConfig=undefined;if(ctx.hasSidecar){// Request errors\nvar reqError=calculateErrorRate(ns,srv,'service',requests);var reqErrorsText=reqError.errorRatio.global.status.status===NA?'No requests':reqError.errorRatio.global.status.value.toFixed(2)+'%';var item={title:createTrafficTitle(getName(ctx.rateInterval).toLowerCase()),status:reqError.errorRatio.global.status.status,children:[{text:'Inbound: '+reqErrorsText,status:reqError.errorRatio.global.status.status,value:reqError.errorRatio.global.status.value}]};items.push(item);statusConfig={title:createTrafficTitle(getName(ctx.rateInterval).toLowerCase()),status:reqError.errorRatio.global.status.status,threshold:reqError.errorRatio.global.toleranceConfig,value:reqError.errorRatio.global.status.value};}else{items.push({title:TRAFFICSTATUS,status:NA,text:'No Istio sidecar'});}return{items:items,statusConfig:statusConfig};}}]);return ServiceHealth;}(Health);ServiceHealth.fromJson=function(ns,srv,json,ctx){return new ServiceHealth(ns,srv,json.requests,ctx);};export var AppHealth=/*#__PURE__*/function(_Health2){_inherits(AppHealth,_Health2);var _super2=_createSuper(AppHealth);function AppHealth(ns,app,workloadStatuses,requests,ctx){var _this2;_classCallCheck(this,AppHealth);_this2=_super2.call(this,AppHealth.computeItems(ns,app,workloadStatuses,requests,ctx));_this2.requests=requests;return _this2;}_createClass(AppHealth,null,[{key:\"computeItems\",value:function computeItems(ns,app,workloadStatuses,requests,ctx){var items=[];var statusConfig=undefined;{// Pods\nvar children=workloadStatuses.map(function(d){var status=ratioCheck(d.availableReplicas,d.currentReplicas,d.desiredReplicas,d.syncedProxies);var proxyMessage='';if(d.syncedProxies>=0){proxyMessage=proxyStatusMessage(d.syncedProxies,d.desiredReplicas);}return{text:d.name+': '+d.availableReplicas+' / '+d.desiredReplicas+proxyMessage,status:status};});var podsStatus=children.map(function(i){return i.status;}).reduce(function(prev,cur){return mergeStatus(prev,cur);},NA);var item={title:POD_STATUS,status:podsStatus,children:children};items.push(item);}// Request errors\nif(ctx.hasSidecar){var reqError=calculateErrorRate(ns,app,'app',requests);var reqIn=reqError.errorRatio.inbound.status;var reqOut=reqError.errorRatio.outbound.status;var both=mergeStatus(reqIn.status,reqOut.status);var _item={title:createTrafficTitle(getName(ctx.rateInterval).toLowerCase()),status:both,children:[getRequestErrorsSubItem(reqIn,'Inbound'),getRequestErrorsSubItem(reqOut,'Outbound')]};statusConfig={title:createTrafficTitle(getName(ctx.rateInterval).toLowerCase()),status:reqError.errorRatio.global.status.status,threshold:reqError.errorRatio.global.toleranceConfig,value:reqError.errorRatio.global.status.value};items.push(_item);}return{items:items,statusConfig:statusConfig};}}]);return AppHealth;}(Health);AppHealth.fromJson=function(ns,app,json,ctx){return new AppHealth(ns,app,json.workloadStatuses,json.requests,ctx);};export var WorkloadHealth=/*#__PURE__*/function(_Health3){_inherits(WorkloadHealth,_Health3);var _super3=_createSuper(WorkloadHealth);function WorkloadHealth(ns,workload,workloadStatus,requests,ctx){var _this3;_classCallCheck(this,WorkloadHealth);_this3=_super3.call(this,WorkloadHealth.computeItems(ns,workload,workloadStatus,requests,ctx));_this3.requests=requests;return _this3;}_createClass(WorkloadHealth,null,[{key:\"computeItems\",value:function computeItems(ns,workload,workloadStatus,requests,ctx){var items=[];var statusConfig=undefined;{// Pods\nvar podsStatus=ratioCheck(workloadStatus.availableReplicas,workloadStatus.currentReplicas,workloadStatus.desiredReplicas,workloadStatus.syncedProxies);var item={title:POD_STATUS,status:podsStatus,children:[{text:workloadStatus.name+': '+workloadStatus.availableReplicas+' / '+workloadStatus.desiredReplicas,status:podsStatus}]};if(podsStatus!==NA&&podsStatus!==HEALTHY){item.children=[{status:podsStatus,text:String(workloadStatus.desiredReplicas+' desired pod'+(workloadStatus.desiredReplicas!==1?'s':''))},{status:podsStatus,text:String(workloadStatus.currentReplicas+' current pod'+(workloadStatus.currentReplicas!==1?'s':''))},{status:podsStatus,text:String(workloadStatus.availableReplicas+' available pod'+(workloadStatus.availableReplicas!==1?'s':''))}];if(workloadStatus.syncedProxies>=0){item.children.push({status:podsStatus,text:String(workloadStatus.syncedProxies+' synced prox'+(workloadStatus.availableReplicas!==1?'ies':'y'))});}}items.push(item);}// Request errors\nif(ctx.hasSidecar){var reqError=calculateErrorRate(ns,workload,'workload',requests);var reqIn=reqError.errorRatio.inbound.status;var reqOut=reqError.errorRatio.outbound.status;var both=mergeStatus(reqIn.status,reqOut.status);var _item2={title:createTrafficTitle(getName(ctx.rateInterval).toLowerCase()),status:both,children:[getRequestErrorsSubItem(reqIn,'Inbound'),getRequestErrorsSubItem(reqOut,'Outbound')]};items.push(_item2);statusConfig={title:createTrafficTitle(getName(ctx.rateInterval).toLowerCase()),status:reqError.errorRatio.global.status.status,threshold:reqError.errorRatio.global.toleranceConfig,value:reqError.errorRatio.global.status.value};}return{items:items,statusConfig:statusConfig};}}]);return WorkloadHealth;}(Health);WorkloadHealth.fromJson=function(ns,workload,json,ctx){return new WorkloadHealth(ns,workload,json.workloadStatus,json.requests,ctx);};export var healthNotAvailable=function healthNotAvailable(){return new AppHealth('','',[],{inbound:{},outbound:{},healthAnnotations:{}},{rateInterval:60,hasSidecar:true});};export var hasHealth=function hasHealth(val){return!!val['health'];};","map":null,"metadata":{},"sourceType":"module"}