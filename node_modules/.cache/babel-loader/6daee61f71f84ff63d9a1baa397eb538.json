{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _placeholderText,\n    _jsxFileName = \"/root/GraduateProject/src/pages/extensions/iter8/Iter8ExperimentDetails/ExperimentMatchBuilder.tsx\";\n\n// Modified copy of src/components/IstioWizards/RequestRouting/MatchBuilder.tsx\nimport * as React from 'react';\nimport { Button, Dropdown, DropdownToggle, DropdownItem, InputGroup, TextInput } from '@patternfly/react-core';\nexport var HEADERS = 'headers';\nexport var URI = 'uri';\nvar matchOptions = [URI, HEADERS];\nexport var EXACT = 'exact';\nexport var PREFIX = 'prefix';\nexport var REGEX = 'regex'; // Pseudo operator\n\nexport var PRESENCE = 'is present';\nexport var ANYTHING = '^.*$';\nvar opOptions = [EXACT, PREFIX, REGEX];\nvar placeholderText = (_placeholderText = {}, _defineProperty(_placeholderText, HEADERS, 'Header value...'), _defineProperty(_placeholderText, URI, 'Uri value...'), _placeholderText);\n\nvar ExperimentMatchBuilder = /*#__PURE__*/function (_React$Component) {\n  _inherits(ExperimentMatchBuilder, _React$Component);\n\n  var _super = _createSuper(ExperimentMatchBuilder);\n\n  function ExperimentMatchBuilder(props) {\n    var _this;\n\n    _classCallCheck(this, ExperimentMatchBuilder);\n\n    _this = _super.call(this, props);\n\n    _this.onMacthOptionsToggle = function () {\n      _this.setState({\n        isMatchDropdown: !_this.state.isMatchDropdown\n      });\n    };\n\n    _this.onOperatorToggle = function () {\n      _this.setState({\n        isOperatorDropdown: !_this.state.isOperatorDropdown\n      });\n    };\n\n    _this.state = {\n      isMatchDropdown: false,\n      isOperatorDropdown: false\n    };\n    return _this;\n  }\n\n  _createClass(ExperimentMatchBuilder, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown, {\n        toggle: /*#__PURE__*/React.createElement(DropdownToggle, {\n          onToggle: this.onMacthOptionsToggle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }\n        }, this.props.category),\n        isOpen: this.state.isMatchDropdown,\n        dropdownItems: matchOptions.map(function (mode, index) {\n          return /*#__PURE__*/React.createElement(DropdownItem, {\n            key: mode + '_' + index,\n            value: mode,\n            component: \"button\",\n            onClick: function onClick() {\n              _this2.props.onSelectCategory(mode);\n\n              _this2.onMacthOptionsToggle();\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }\n          }, mode);\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }), this.props.category === HEADERS && /*#__PURE__*/React.createElement(TextInput, {\n        id: \"header-name-id\",\n        value: this.props.headerName,\n        onChange: this.props.onHeaderNameChange,\n        placeholder: \"Header name...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown, {\n        toggle: /*#__PURE__*/React.createElement(DropdownToggle, {\n          onToggle: this.onOperatorToggle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }\n        }, this.props.operator),\n        isOpen: this.state.isOperatorDropdown,\n        dropdownItems: opOptions.map(function (op, index) {\n          return /*#__PURE__*/React.createElement(DropdownItem, {\n            key: op + '_' + index,\n            value: op,\n            component: \"button\",\n            onClick: function onClick() {\n              _this2.props.onSelectOperator(op);\n\n              _this2.onOperatorToggle();\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }\n          }, op);\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }), this.props.operator !== PRESENCE && /*#__PURE__*/React.createElement(TextInput, {\n        id: \"match-value-id\",\n        value: this.props.matchValue,\n        onChange: this.props.onMatchValueChange,\n        placeholder: placeholderText[this.props.category],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        disabled: !this.props.isValid,\n        onClick: this.props.onAddMatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }, \"Add Match\"));\n    }\n  }]);\n\n  return ExperimentMatchBuilder;\n}(React.Component);\n\nexport default ExperimentMatchBuilder;","map":{"version":3,"sources":["/root/GraduateProject/src/pages/extensions/iter8/Iter8ExperimentDetails/ExperimentMatchBuilder.tsx"],"names":["React","Button","Dropdown","DropdownToggle","DropdownItem","InputGroup","TextInput","HEADERS","URI","matchOptions","EXACT","PREFIX","REGEX","PRESENCE","ANYTHING","opOptions","placeholderText","ExperimentMatchBuilder","props","onMacthOptionsToggle","setState","isMatchDropdown","state","onOperatorToggle","isOperatorDropdown","category","map","mode","index","onSelectCategory","headerName","onHeaderNameChange","operator","op","onSelectOperator","matchValue","onMatchValueChange","isValid","onAddMatch","Component"],"mappings":"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","sourcesContent":["// Modified copy of src/components/IstioWizards/RequestRouting/MatchBuilder.tsx\n\nimport * as React from 'react';\nimport { Button, Dropdown, DropdownToggle, DropdownItem, InputGroup, TextInput } from '@patternfly/react-core';\n\ntype Props = {\n  category: string;\n  operator: string;\n  headerName: string;\n  matchValue: string;\n  isValid: boolean;\n  onSelectCategory: (category: string) => void;\n  onHeaderNameChange: (headerName: string) => void;\n  onSelectOperator: (operator: string) => void;\n  onMatchValueChange: (matchValue: string) => void;\n  onAddMatch: () => void;\n};\n\ntype State = {\n  isMatchDropdown: boolean;\n  isOperatorDropdown: boolean;\n};\n\nexport const HEADERS = 'headers';\nexport const URI = 'uri';\n\nconst matchOptions: string[] = [URI, HEADERS];\n\nexport const EXACT = 'exact';\nexport const PREFIX = 'prefix';\nexport const REGEX = 'regex';\n\n// Pseudo operator\nexport const PRESENCE = 'is present';\nexport const ANYTHING = '^.*$';\n\nconst opOptions: string[] = [EXACT, PREFIX, REGEX];\n\nconst placeholderText = {\n  [HEADERS]: 'Header value...',\n  [URI]: 'Uri value...'\n};\n\nclass ExperimentMatchBuilder extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMatchDropdown: false,\n      isOperatorDropdown: false\n    };\n  }\n\n  onMacthOptionsToggle = () => {\n    this.setState({\n      isMatchDropdown: !this.state.isMatchDropdown\n    });\n  };\n\n  onOperatorToggle = () => {\n    this.setState({\n      isOperatorDropdown: !this.state.isOperatorDropdown\n    });\n  };\n\n  render() {\n    return (\n      <InputGroup>\n        <Dropdown\n          toggle={<DropdownToggle onToggle={this.onMacthOptionsToggle}>{this.props.category}</DropdownToggle>}\n          isOpen={this.state.isMatchDropdown}\n          dropdownItems={matchOptions.map((mode, index) => (\n            <DropdownItem\n              key={mode + '_' + index}\n              value={mode}\n              component=\"button\"\n              onClick={() => {\n                this.props.onSelectCategory(mode);\n                this.onMacthOptionsToggle();\n              }}\n            >\n              {mode}\n            </DropdownItem>\n          ))}\n        />\n        {this.props.category === HEADERS && (\n          <TextInput\n            id=\"header-name-id\"\n            value={this.props.headerName}\n            onChange={this.props.onHeaderNameChange}\n            placeholder=\"Header name...\"\n          />\n        )}\n        <Dropdown\n          toggle={<DropdownToggle onToggle={this.onOperatorToggle}>{this.props.operator}</DropdownToggle>}\n          isOpen={this.state.isOperatorDropdown}\n          dropdownItems={opOptions.map((op, index) => (\n            <DropdownItem\n              key={op + '_' + index}\n              value={op}\n              component=\"button\"\n              onClick={() => {\n                this.props.onSelectOperator(op);\n                this.onOperatorToggle();\n              }}\n            >\n              {op}\n            </DropdownItem>\n          ))}\n        />\n        {this.props.operator !== PRESENCE && (\n          <TextInput\n            id=\"match-value-id\"\n            value={this.props.matchValue}\n            onChange={this.props.onMatchValueChange}\n            placeholder={placeholderText[this.props.category]}\n          />\n        )}\n        <Button variant=\"secondary\" disabled={!this.props.isValid} onClick={this.props.onAddMatch}>\n          Add Match\n        </Button>\n      </InputGroup>\n    );\n  }\n}\n\nexport default ExperimentMatchBuilder;\n"]},"metadata":{},"sourceType":"module"}