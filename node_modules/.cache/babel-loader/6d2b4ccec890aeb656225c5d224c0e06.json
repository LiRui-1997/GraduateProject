{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/pages/IstioConfigNew/AuthorizationPolicyForm/RuleBuilder.tsx\";\nimport * as React from 'react';\nimport { Button, FormGroup, Switch } from '@patternfly/react-core';\nimport SourceBuilder from './From/SourceBuilder';\nimport SourceList from './From/SourceList';\nimport OperationBuilder from './To/OperationBuilder';\nimport OperationList from './To/OperationList';\nimport ConditionBuilder from './When/ConditionBuilder';\nimport ConditionList from './When/ConditionList';\nimport { style } from 'typestyle';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { PFColors } from '../../../components/Pf/PfColors';\nvar warningStyle = style({\n  marginLeft: 25,\n  color: PFColors.Red100,\n  textAlign: 'center'\n});\nvar addRuleStyle = style({\n  marginLeft: 0,\n  paddingLeft: 0\n});\n\nvar RuleBuilder = /*#__PURE__*/function (_React$Component) {\n  _inherits(RuleBuilder, _React$Component);\n\n  var _super = _createSuper(RuleBuilder);\n\n  function RuleBuilder(props) {\n    var _this;\n\n    _classCallCheck(this, RuleBuilder);\n\n    _this = _super.call(this, props);\n\n    _this.onAddFrom = function (source) {\n      _this.setState(function (prevState) {\n        prevState.fromList.push(source);\n        return {\n          fromList: prevState.fromList\n        };\n      });\n    };\n\n    _this.onRemoveFrom = function (index) {\n      _this.setState(function (prevState) {\n        prevState.fromList.splice(index, 1);\n        return {\n          fromList: prevState.fromList\n        };\n      });\n    };\n\n    _this.onAddTo = function (operation) {\n      _this.setState(function (prevState) {\n        prevState.toList.push(operation);\n        return {\n          toList: prevState.toList\n        };\n      });\n    };\n\n    _this.onRemoveTo = function (index) {\n      _this.setState(function (prevState) {\n        prevState.toList.splice(index, 1);\n        return {\n          toList: prevState.toList\n        };\n      });\n    };\n\n    _this.onAddCondition = function (condition) {\n      _this.setState(function (prevState) {\n        prevState.conditionList.push(condition);\n        return {\n          conditionList: prevState.conditionList\n        };\n      });\n    };\n\n    _this.onRemoveCondition = function (index) {\n      _this.setState(function (prevState) {\n        prevState.conditionList.splice(index, 1);\n        return {\n          conditionList: prevState.conditionList\n        };\n      });\n    };\n\n    _this.onAddRule = function () {\n      var newRule = {\n        from: Object.assign([], _this.state.fromList),\n        to: Object.assign([], _this.state.toList),\n        when: Object.assign([], _this.state.conditionList)\n      };\n\n      _this.setState({\n        addFromSwitch: false,\n        addToSwitch: false,\n        addWhenSwitch: false,\n        fromList: [],\n        toList: [],\n        conditionList: []\n      }, function () {\n        return _this.props.onAddRule(newRule);\n      });\n    };\n\n    _this.canAddRule = function () {\n      return _this.state.fromList.length > 0 || _this.state.toList.length > 0 || _this.state.conditionList.length > 0;\n    };\n\n    _this.state = {\n      addFromSwitch: false,\n      addToSwitch: false,\n      addWhenSwitch: false,\n      fromList: [],\n      toList: [],\n      conditionList: []\n    };\n    return _this;\n  }\n\n  _createClass(RuleBuilder, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"From\",\n        fieldId: \"addFromSwitch\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        id: \"addFromSwitch\",\n        label: ' ',\n        labelOff: ' ',\n        isChecked: this.state.addFromSwitch,\n        onChange: function onChange() {\n          _this2.setState(function (prevState) {\n            return {\n              addFromSwitch: !prevState.addFromSwitch\n            };\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }\n      })), this.state.addFromSwitch && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"Source Builder\",\n        fieldId: \"sourceBuilder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SourceBuilder, {\n        onAddFrom: this.onAddFrom,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"From List\",\n        fieldId: \"sourceList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SourceList, {\n        fromList: this.state.fromList,\n        onRemoveFrom: this.onRemoveFrom,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"To\",\n        fieldId: \"addToSwitch\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        id: \"addToSwitch\",\n        label: ' ',\n        labelOff: ' ',\n        isChecked: this.state.addToSwitch,\n        onChange: function onChange() {\n          _this2.setState(function (prevState) {\n            return {\n              addToSwitch: !prevState.addToSwitch\n            };\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }\n      })), this.state.addToSwitch && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"Operation Builder\",\n        fieldId: \"operationBuilder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(OperationBuilder, {\n        onAddTo: this.onAddTo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"To List\",\n        fieldId: \"operationList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(OperationList, {\n        toList: this.state.toList,\n        onRemoveTo: this.onRemoveTo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"When\",\n        fieldId: \"addWhenSwitch\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        id: \"addWhenSwitch\",\n        label: ' ',\n        labelOff: ' ',\n        isChecked: this.state.addWhenSwitch,\n        onChange: function onChange() {\n          _this2.setState(function (prevState) {\n            return {\n              addWhenSwitch: !prevState.addWhenSwitch\n            };\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }\n      })), this.state.addWhenSwitch && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"Condition Builder\",\n        fieldId: \"conditionBuilder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ConditionBuilder, {\n        onAddCondition: this.onAddCondition,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"When List\",\n        fieldId: \"conditionList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ConditionList, {\n        conditionList: this.state.conditionList,\n        onRemoveCondition: this.onRemoveCondition,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(FormGroup, {\n        fieldId: \"addRule\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"link\",\n        icon: /*#__PURE__*/React.createElement(PlusCircleIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 19\n          }\n        }),\n        onClick: this.onAddRule,\n        isDisabled: !this.canAddRule(),\n        className: addRuleStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }\n      }, \"Add Rule to Rule List\"), !this.canAddRule() && /*#__PURE__*/React.createElement(\"span\", {\n        className: warningStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }\n      }, \"A Rule needs at least an item in \\\"From\\\", \\\"To\\\" or \\\"When\\\" sections\")));\n    }\n  }]);\n\n  return RuleBuilder;\n}(React.Component);\n\nexport default RuleBuilder;","map":{"version":3,"sources":["/root/kiali-ui/src/pages/IstioConfigNew/AuthorizationPolicyForm/RuleBuilder.tsx"],"names":["React","Button","FormGroup","Switch","SourceBuilder","SourceList","OperationBuilder","OperationList","ConditionBuilder","ConditionList","style","PlusCircleIcon","PFColors","warningStyle","marginLeft","color","Red100","textAlign","addRuleStyle","paddingLeft","RuleBuilder","props","onAddFrom","source","setState","prevState","fromList","push","onRemoveFrom","index","splice","onAddTo","operation","toList","onRemoveTo","onAddCondition","condition","conditionList","onRemoveCondition","onAddRule","newRule","from","Object","assign","state","to","when","addFromSwitch","addToSwitch","addWhenSwitch","canAddRule","length","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Button, FormGroup, Switch } from '@patternfly/react-core';\nimport SourceBuilder from './From/SourceBuilder';\nimport SourceList from './From/SourceList';\nimport OperationBuilder from './To/OperationBuilder';\nimport OperationList from './To/OperationList';\nimport ConditionBuilder, { Condition } from './When/ConditionBuilder';\nimport ConditionList from './When/ConditionList';\nimport { style } from 'typestyle';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { PFColors } from '../../../components/Pf/PfColors';\n\ntype Props = {\n  onAddRule: (rule: Rule) => void;\n};\n\nexport type Rule = {\n  from: { [key: string]: string[] }[];\n  to: { [key: string]: string[] }[];\n  when: Condition[];\n};\n\ntype State = {\n  addFromSwitch: boolean;\n  addToSwitch: boolean;\n  addWhenSwitch: boolean;\n  fromList: { [key: string]: string[] }[];\n  toList: { [key: string]: string[] }[];\n  conditionList: Condition[];\n};\n\nconst warningStyle = style({\n  marginLeft: 25,\n  color: PFColors.Red100,\n  textAlign: 'center'\n});\n\nconst addRuleStyle = style({\n  marginLeft: 0,\n  paddingLeft: 0\n});\n\nclass RuleBuilder extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      addFromSwitch: false,\n      addToSwitch: false,\n      addWhenSwitch: false,\n      fromList: [],\n      toList: [],\n      conditionList: []\n    };\n  }\n\n  onAddFrom = (source: { [key: string]: string[] }): void => {\n    this.setState(prevState => {\n      prevState.fromList.push(source);\n      return {\n        fromList: prevState.fromList\n      };\n    });\n  };\n\n  onRemoveFrom = (index: number): void => {\n    this.setState(prevState => {\n      prevState.fromList.splice(index, 1);\n      return {\n        fromList: prevState.fromList\n      };\n    });\n  };\n\n  onAddTo = (operation: { [key: string]: string[] }): void => {\n    this.setState(prevState => {\n      prevState.toList.push(operation);\n      return {\n        toList: prevState.toList\n      };\n    });\n  };\n\n  onRemoveTo = (index: number): void => {\n    this.setState(prevState => {\n      prevState.toList.splice(index, 1);\n      return {\n        toList: prevState.toList\n      };\n    });\n  };\n\n  onAddCondition = (condition: Condition): void => {\n    this.setState(prevState => {\n      prevState.conditionList.push(condition);\n      return {\n        conditionList: prevState.conditionList\n      };\n    });\n  };\n\n  onRemoveCondition = (index: number): void => {\n    this.setState(prevState => {\n      prevState.conditionList.splice(index, 1);\n      return {\n        conditionList: prevState.conditionList\n      };\n    });\n  };\n\n  onAddRule = (): void => {\n    const newRule: Rule = {\n      from: Object.assign([], this.state.fromList),\n      to: Object.assign([], this.state.toList),\n      when: Object.assign([], this.state.conditionList)\n    };\n    this.setState(\n      {\n        addFromSwitch: false,\n        addToSwitch: false,\n        addWhenSwitch: false,\n        fromList: [],\n        toList: [],\n        conditionList: []\n      },\n      () => this.props.onAddRule(newRule)\n    );\n  };\n\n  canAddRule = (): boolean => {\n    return this.state.fromList.length > 0 || this.state.toList.length > 0 || this.state.conditionList.length > 0;\n  };\n\n  render() {\n    return (\n      <>\n        <FormGroup label=\"From\" fieldId=\"addFromSwitch\">\n          <Switch\n            id=\"addFromSwitch\"\n            label={' '}\n            labelOff={' '}\n            isChecked={this.state.addFromSwitch}\n            onChange={() => {\n              this.setState(prevState => ({\n                addFromSwitch: !prevState.addFromSwitch\n              }));\n            }}\n          />\n        </FormGroup>\n        {this.state.addFromSwitch && (\n          <>\n            <FormGroup label=\"Source Builder\" fieldId=\"sourceBuilder\">\n              <SourceBuilder onAddFrom={this.onAddFrom} />\n            </FormGroup>\n            <FormGroup label=\"From List\" fieldId=\"sourceList\">\n              <SourceList fromList={this.state.fromList} onRemoveFrom={this.onRemoveFrom} />\n            </FormGroup>\n          </>\n        )}\n        <FormGroup label=\"To\" fieldId=\"addToSwitch\">\n          <Switch\n            id=\"addToSwitch\"\n            label={' '}\n            labelOff={' '}\n            isChecked={this.state.addToSwitch}\n            onChange={() => {\n              this.setState(prevState => ({\n                addToSwitch: !prevState.addToSwitch\n              }));\n            }}\n          />\n        </FormGroup>\n        {this.state.addToSwitch && (\n          <>\n            <FormGroup label=\"Operation Builder\" fieldId=\"operationBuilder\">\n              <OperationBuilder onAddTo={this.onAddTo} />\n            </FormGroup>\n            <FormGroup label=\"To List\" fieldId=\"operationList\">\n              <OperationList toList={this.state.toList} onRemoveTo={this.onRemoveTo} />\n            </FormGroup>\n          </>\n        )}\n        <FormGroup label=\"When\" fieldId=\"addWhenSwitch\">\n          <Switch\n            id=\"addWhenSwitch\"\n            label={' '}\n            labelOff={' '}\n            isChecked={this.state.addWhenSwitch}\n            onChange={() => {\n              this.setState(prevState => ({\n                addWhenSwitch: !prevState.addWhenSwitch\n              }));\n            }}\n          />\n        </FormGroup>\n        {this.state.addWhenSwitch && (\n          <>\n            <FormGroup label=\"Condition Builder\" fieldId=\"conditionBuilder\">\n              <ConditionBuilder onAddCondition={this.onAddCondition} />\n            </FormGroup>\n            <FormGroup label=\"When List\" fieldId=\"conditionList\">\n              <ConditionList conditionList={this.state.conditionList} onRemoveCondition={this.onRemoveCondition} />\n            </FormGroup>\n          </>\n        )}\n        <FormGroup fieldId=\"addRule\">\n          <Button\n            variant=\"link\"\n            icon={<PlusCircleIcon />}\n            onClick={this.onAddRule}\n            isDisabled={!this.canAddRule()}\n            className={addRuleStyle}\n          >\n            Add Rule to Rule List\n          </Button>\n          {!this.canAddRule() && (\n            <span className={warningStyle}>A Rule needs at least an item in \"From\", \"To\" or \"When\" sections</span>\n          )}\n        </FormGroup>\n      </>\n    );\n  }\n}\n\nexport default RuleBuilder;\n"]},"metadata":{},"sourceType":"module"}