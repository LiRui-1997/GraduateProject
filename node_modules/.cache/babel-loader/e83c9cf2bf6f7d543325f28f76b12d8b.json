{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/components/IstioWizards/WorkloadWizardDropdown.tsx\";\nimport * as React from 'react';\nimport { Dropdown, DropdownItem, DropdownPosition, DropdownToggle, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { CaretDownIcon } from '@patternfly/react-icons';\nimport { serverConfig } from '../../config';\nimport { buildWorkloadInjectionPatch, WIZARD_DISABLE_AUTO_INJECTION, WIZARD_ENABLE_AUTO_INJECTION, WIZARD_REMOVE_AUTO_INJECTION } from './WizardActions';\nimport * as API from '../../services/Api';\nimport * as AlertUtils from '../../utils/AlertUtils';\nimport { MessageType } from '../../types/MessageCenter';\n\nvar WorkloadWizardDropdown = /*#__PURE__*/function (_React$Component) {\n  _inherits(WorkloadWizardDropdown, _React$Component);\n\n  var _super = _createSuper(WorkloadWizardDropdown);\n\n  function WorkloadWizardDropdown(props) {\n    var _this;\n\n    _classCallCheck(this, WorkloadWizardDropdown);\n\n    _this = _super.call(this, props);\n\n    _this.onActionsSelect = function () {\n      _this.setState({\n        isActionsOpen: !_this.state.isActionsOpen\n      });\n    };\n\n    _this.onActionsToggle = function (isOpen) {\n      _this.setState({\n        isActionsOpen: isOpen\n      });\n    };\n\n    _this.onWizardToggle = function (isOpen) {\n      _this.setState({\n        showWizard: isOpen\n      });\n    };\n\n    _this.onAction = function (key) {\n      switch (key) {\n        case WIZARD_ENABLE_AUTO_INJECTION:\n        case WIZARD_DISABLE_AUTO_INJECTION:\n        case WIZARD_REMOVE_AUTO_INJECTION:\n          var remove = key === WIZARD_REMOVE_AUTO_INJECTION;\n          var enable = key === WIZARD_ENABLE_AUTO_INJECTION;\n          var jsonInjectionPatch = buildWorkloadInjectionPatch(_this.props.workload.type, enable, remove, _this.props.statusState);\n          API.updateWorkload(_this.props.namespace, _this.props.workload.name, _this.props.workload.type, jsonInjectionPatch).then(function (_) {\n            AlertUtils.add('Workload ' + _this.props.workload.name + ' updated', 'default', MessageType.SUCCESS);\n\n            _this.setState({\n              showWizard: false\n            }, function () {\n              return _this.props.onChange();\n            });\n          }).catch(function (error) {\n            AlertUtils.addError('Could not update workload ' + _this.props.workload.name, error);\n\n            _this.setState({\n              showWizard: false\n            }, function () {\n              return _this.props.onChange();\n            });\n          });\n          break;\n\n        default:\n          console.log('key ' + key + ' not supported');\n      }\n    };\n\n    _this.onClose = function (changed) {\n      _this.setState({\n        showWizard: false\n      });\n\n      if (changed) {\n        _this.props.onChange();\n      }\n    };\n\n    _this.renderTooltip = function (key, position, msg, child) {\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        key: 'tooltip_' + key,\n        position: position,\n        content: /*#__PURE__*/React.createElement(React.Fragment, null, msg),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'inline-block',\n          cursor: 'not-allowed',\n          textAlign: 'left'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }, child));\n    };\n\n    _this.renderDropdownItems = function () {\n      var items = [];\n\n      if (serverConfig.kialiFeatureFlags.istioInjectionAction) {\n        var enableAction = /*#__PURE__*/React.createElement(DropdownItem, {\n          key: WIZARD_ENABLE_AUTO_INJECTION,\n          component: \"button\",\n          onClick: function onClick() {\n            return _this.onAction(WIZARD_ENABLE_AUTO_INJECTION);\n          },\n          isDisabled: serverConfig.deployment.viewOnlyMode,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 9\n          }\n        }, \"Enable Auto Injection\");\n        var enableActionWrapper = serverConfig.deployment.viewOnlyMode ? _this.renderTooltip('enable_auto_injection', TooltipPosition.left, 'User has not permissions', enableAction) : enableAction;\n        var disableAction = /*#__PURE__*/React.createElement(DropdownItem, {\n          key: WIZARD_DISABLE_AUTO_INJECTION,\n          component: \"button\",\n          onClick: function onClick() {\n            return _this.onAction(WIZARD_DISABLE_AUTO_INJECTION);\n          },\n          isDisabled: serverConfig.deployment.viewOnlyMode,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 9\n          }\n        }, \"Disable Auto Injection\");\n        var disableActionWrapper = serverConfig.deployment.viewOnlyMode ? _this.renderTooltip('disable_auto_injection', TooltipPosition.left, 'User has not permissions', disableAction) : disableAction;\n        var removeAction = /*#__PURE__*/React.createElement(DropdownItem, {\n          key: WIZARD_REMOVE_AUTO_INJECTION,\n          component: \"button\",\n          onClick: function onClick() {\n            return _this.onAction(WIZARD_REMOVE_AUTO_INJECTION);\n          },\n          isDisabled: serverConfig.deployment.viewOnlyMode,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 9\n          }\n        }, \"Remove Auto Injection\");\n        var removeActionWrapper = serverConfig.deployment.viewOnlyMode ? _this.renderTooltip('remove_auto_injection', TooltipPosition.left, 'User has not permissions', removeAction) : removeAction;\n\n        if (_this.props.workload.istioInjectionAnnotation !== undefined && _this.props.workload.istioInjectionAnnotation) {\n          items.push(disableActionWrapper);\n          items.push(removeActionWrapper);\n        } else if (_this.props.workload.istioInjectionAnnotation !== undefined && !_this.props.workload.istioInjectionAnnotation) {\n          items.push(enableActionWrapper);\n          items.push(removeActionWrapper);\n        } else {\n          // If sidecar is present, we offer first the disable action\n          items.push(_this.props.workload.istioSidecar ? disableActionWrapper : enableActionWrapper);\n        }\n      }\n\n      return items;\n    };\n\n    _this.state = {\n      isActionsOpen: false,\n      showWizard: false,\n      type: ''\n    };\n    return _this;\n  }\n\n  _createClass(WorkloadWizardDropdown, [{\n    key: \"render\",\n    value: function render() {\n      var renderDropdownItems = this.renderDropdownItems();\n      var validActions = renderDropdownItems.length > 0;\n      var dropdown = /*#__PURE__*/React.createElement(Dropdown, {\n        position: DropdownPosition.right,\n        onSelect: this.onActionsSelect,\n        toggle: /*#__PURE__*/React.createElement(DropdownToggle, {\n          onToggle: this.onActionsToggle,\n          iconComponent: CaretDownIcon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 11\n          }\n        }, \"Actions\"),\n        isOpen: this.state.isActionsOpen,\n        dropdownItems: this.renderDropdownItems(),\n        disabled: !validActions,\n        style: {\n          pointerEvents: validActions ? 'auto' : 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 7\n        }\n      }); // TODO WorkloadWizard component contains only 3scale actions but in the future we may need to bring it back\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, !validActions ? this.renderTooltip('tooltip_wizard_actions', TooltipPosition.top, 'User has not permissions on this Workload', dropdown) : dropdown);\n    }\n  }]);\n\n  return WorkloadWizardDropdown;\n}(React.Component);\n\nexport default WorkloadWizardDropdown;","map":{"version":3,"sources":["/root/GraduateProject/src/components/IstioWizards/WorkloadWizardDropdown.tsx"],"names":["React","Dropdown","DropdownItem","DropdownPosition","DropdownToggle","Tooltip","TooltipPosition","CaretDownIcon","serverConfig","buildWorkloadInjectionPatch","WIZARD_DISABLE_AUTO_INJECTION","WIZARD_ENABLE_AUTO_INJECTION","WIZARD_REMOVE_AUTO_INJECTION","API","AlertUtils","MessageType","WorkloadWizardDropdown","props","onActionsSelect","setState","isActionsOpen","state","onActionsToggle","isOpen","onWizardToggle","showWizard","onAction","key","remove","enable","jsonInjectionPatch","workload","type","statusState","updateWorkload","namespace","name","then","_","add","SUCCESS","onChange","catch","error","addError","console","log","onClose","changed","renderTooltip","position","msg","child","display","cursor","textAlign","renderDropdownItems","items","kialiFeatureFlags","istioInjectionAction","enableAction","deployment","viewOnlyMode","enableActionWrapper","left","disableAction","disableActionWrapper","removeAction","removeActionWrapper","istioInjectionAnnotation","undefined","push","istioSidecar","validActions","length","dropdown","right","pointerEvents","top","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  DropdownToggle,\n  Tooltip,\n  TooltipPosition\n} from '@patternfly/react-core';\nimport { CaretDownIcon } from '@patternfly/react-icons';\nimport { serverConfig } from '../../config';\nimport { Workload } from '../../types/Workload';\nimport {\n  buildWorkloadInjectionPatch,\n  WIZARD_DISABLE_AUTO_INJECTION,\n  WIZARD_ENABLE_AUTO_INJECTION,\n  WIZARD_REMOVE_AUTO_INJECTION\n} from './WizardActions';\nimport * as API from '../../services/Api';\nimport * as AlertUtils from '../../utils/AlertUtils';\nimport { MessageType } from '../../types/MessageCenter';\nimport { StatusState } from '../../types/StatusState';\n\ninterface Props {\n  namespace: string;\n  workload: Workload;\n  statusState: StatusState;\n  onChange: () => void;\n}\n\ninterface State {\n  isActionsOpen: boolean;\n  showWizard: boolean;\n  type: string;\n}\n\nclass WorkloadWizardDropdown extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isActionsOpen: false,\n      showWizard: false,\n      type: ''\n    };\n  }\n\n  onActionsSelect = () => {\n    this.setState({\n      isActionsOpen: !this.state.isActionsOpen\n    });\n  };\n\n  onActionsToggle = (isOpen: boolean) => {\n    this.setState({\n      isActionsOpen: isOpen\n    });\n  };\n\n  onWizardToggle = (isOpen: boolean) => {\n    this.setState({\n      showWizard: isOpen\n    });\n  };\n\n  onAction = (key: string) => {\n    switch (key) {\n      case WIZARD_ENABLE_AUTO_INJECTION:\n      case WIZARD_DISABLE_AUTO_INJECTION:\n      case WIZARD_REMOVE_AUTO_INJECTION:\n        const remove = key === WIZARD_REMOVE_AUTO_INJECTION;\n        const enable = key === WIZARD_ENABLE_AUTO_INJECTION;\n        const jsonInjectionPatch = buildWorkloadInjectionPatch(\n          this.props.workload.type,\n          enable,\n          remove,\n          this.props.statusState\n        );\n        API.updateWorkload(this.props.namespace, this.props.workload.name, this.props.workload.type, jsonInjectionPatch)\n          .then(_ => {\n            AlertUtils.add('Workload ' + this.props.workload.name + ' updated', 'default', MessageType.SUCCESS);\n            this.setState(\n              {\n                showWizard: false\n              },\n              () => this.props.onChange()\n            );\n          })\n          .catch(error => {\n            AlertUtils.addError('Could not update workload ' + this.props.workload.name, error);\n            this.setState(\n              {\n                showWizard: false\n              },\n              () => this.props.onChange()\n            );\n          });\n        break;\n      default:\n        console.log('key ' + key + ' not supported');\n    }\n  };\n\n  onClose = (changed?: boolean) => {\n    this.setState({ showWizard: false });\n    if (changed) {\n      this.props.onChange();\n    }\n  };\n\n  renderTooltip = (key, position, msg, child): JSX.Element => {\n    return (\n      <Tooltip key={'tooltip_' + key} position={position} content={<>{msg}</>}>\n        <div style={{ display: 'inline-block', cursor: 'not-allowed', textAlign: 'left' }}>{child}</div>\n      </Tooltip>\n    );\n  };\n\n  renderDropdownItems = (): JSX.Element[] => {\n    const items: JSX.Element[] = [];\n    if (serverConfig.kialiFeatureFlags.istioInjectionAction) {\n      const enableAction = (\n        <DropdownItem\n          key={WIZARD_ENABLE_AUTO_INJECTION}\n          component=\"button\"\n          onClick={() => this.onAction(WIZARD_ENABLE_AUTO_INJECTION)}\n          isDisabled={serverConfig.deployment.viewOnlyMode}\n        >\n          Enable Auto Injection\n        </DropdownItem>\n      );\n      const enableActionWrapper = serverConfig.deployment.viewOnlyMode\n        ? this.renderTooltip('enable_auto_injection', TooltipPosition.left, 'User has not permissions', enableAction)\n        : enableAction;\n\n      const disableAction = (\n        <DropdownItem\n          key={WIZARD_DISABLE_AUTO_INJECTION}\n          component=\"button\"\n          onClick={() => this.onAction(WIZARD_DISABLE_AUTO_INJECTION)}\n          isDisabled={serverConfig.deployment.viewOnlyMode}\n        >\n          Disable Auto Injection\n        </DropdownItem>\n      );\n      const disableActionWrapper = serverConfig.deployment.viewOnlyMode\n        ? this.renderTooltip('disable_auto_injection', TooltipPosition.left, 'User has not permissions', disableAction)\n        : disableAction;\n\n      const removeAction = (\n        <DropdownItem\n          key={WIZARD_REMOVE_AUTO_INJECTION}\n          component=\"button\"\n          onClick={() => this.onAction(WIZARD_REMOVE_AUTO_INJECTION)}\n          isDisabled={serverConfig.deployment.viewOnlyMode}\n        >\n          Remove Auto Injection\n        </DropdownItem>\n      );\n      const removeActionWrapper = serverConfig.deployment.viewOnlyMode\n        ? this.renderTooltip('remove_auto_injection', TooltipPosition.left, 'User has not permissions', removeAction)\n        : removeAction;\n\n      if (this.props.workload.istioInjectionAnnotation !== undefined && this.props.workload.istioInjectionAnnotation) {\n        items.push(disableActionWrapper);\n        items.push(removeActionWrapper);\n      } else if (\n        this.props.workload.istioInjectionAnnotation !== undefined &&\n        !this.props.workload.istioInjectionAnnotation\n      ) {\n        items.push(enableActionWrapper);\n        items.push(removeActionWrapper);\n      } else {\n        // If sidecar is present, we offer first the disable action\n        items.push(this.props.workload.istioSidecar ? disableActionWrapper : enableActionWrapper);\n      }\n    }\n    return items;\n  };\n\n  render() {\n    const renderDropdownItems = this.renderDropdownItems();\n    const validActions = renderDropdownItems.length > 0;\n    const dropdown = (\n      <Dropdown\n        position={DropdownPosition.right}\n        onSelect={this.onActionsSelect}\n        toggle={\n          <DropdownToggle onToggle={this.onActionsToggle} iconComponent={CaretDownIcon}>\n            Actions\n          </DropdownToggle>\n        }\n        isOpen={this.state.isActionsOpen}\n        dropdownItems={this.renderDropdownItems()}\n        disabled={!validActions}\n        style={{ pointerEvents: validActions ? 'auto' : 'none' }}\n      />\n    );\n    // TODO WorkloadWizard component contains only 3scale actions but in the future we may need to bring it back\n    return (\n      <>\n        {!validActions\n          ? this.renderTooltip(\n              'tooltip_wizard_actions',\n              TooltipPosition.top,\n              'User has not permissions on this Workload',\n              dropdown\n            )\n          : dropdown}\n      </>\n    );\n  }\n}\n\nexport default WorkloadWizardDropdown;\n"]},"metadata":{},"sourceType":"module"}