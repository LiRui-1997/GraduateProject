{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/components/IstioWizards/FaultInjection.tsx\";\nimport * as React from 'react';\nimport DelayFault from './FaultInjection/DelayFault';\nimport AbortFault from './FaultInjection/AbortFault';\nimport { Form } from '@patternfly/react-core';\nimport { isValidAbortStatusCode, isValidDuration } from '../../utils/IstioConfigUtils';\n\nvar FaultInjection = /*#__PURE__*/function (_React$Component) {\n  _inherits(FaultInjection, _React$Component);\n\n  var _super = _createSuper(FaultInjection);\n\n  function FaultInjection(props) {\n    var _this;\n\n    _classCallCheck(this, FaultInjection);\n\n    _this = _super.call(this, props);\n\n    _this.resetState = function () {\n      _this.setState({\n        faultInjectionRoute: {\n          workloads: _this.props.initFaultInjectionRoute.workloads,\n          delayed: _this.props.initFaultInjectionRoute.delayed,\n          delay: _this.props.initFaultInjectionRoute.delay,\n          aborted: _this.props.initFaultInjectionRoute.aborted,\n          abort: _this.props.initFaultInjectionRoute.abort,\n          isValidDelay: _this.props.initFaultInjectionRoute.delayed ? isValidDuration(_this.props.initFaultInjectionRoute.delay.fixedDelay) : true,\n          isValidAbort: _this.props.initFaultInjectionRoute.aborted ? isValidAbortStatusCode(_this.props.initFaultInjectionRoute.abort.httpStatus) : true\n        }\n      }, function () {\n        return _this.props.onChange(_this.state.faultInjectionRoute.isValidDelay && _this.state.faultInjectionRoute.isValidAbort, _this.state.faultInjectionRoute);\n      });\n    };\n\n    _this.updateDelay = function (delayed, delay) {\n      _this.setState(function (prevState) {\n        return {\n          faultInjectionRoute: {\n            workloads: prevState.faultInjectionRoute.workloads,\n            delayed: delayed,\n            delay: delay,\n            isValidDelay: delayed ? isValidDuration(delay.fixedDelay) : true,\n            aborted: prevState.faultInjectionRoute.aborted,\n            abort: prevState.faultInjectionRoute.abort,\n            isValidAbort: prevState.faultInjectionRoute.isValidAbort\n          }\n        };\n      }, function () {\n        return _this.props.onChange(_this.state.faultInjectionRoute.isValidDelay && _this.state.faultInjectionRoute.isValidAbort, _this.state.faultInjectionRoute);\n      });\n    };\n\n    _this.updateAbort = function (aborted, abort) {\n      _this.setState(function (prevState) {\n        return {\n          faultInjectionRoute: {\n            workloads: prevState.faultInjectionRoute.workloads,\n            delayed: prevState.faultInjectionRoute.delayed,\n            delay: prevState.faultInjectionRoute.delay,\n            isValidDelay: prevState.faultInjectionRoute.isValidDelay,\n            aborted: aborted,\n            abort: abort,\n            isValidAbort: aborted ? isValidAbortStatusCode(abort.httpStatus) : true\n          }\n        };\n      }, function () {\n        return _this.props.onChange(_this.state.faultInjectionRoute.isValidDelay && _this.state.faultInjectionRoute.isValidAbort, _this.state.faultInjectionRoute);\n      });\n    };\n\n    _this.state = {\n      faultInjectionRoute: {\n        workloads: _this.props.initFaultInjectionRoute.workloads,\n        delayed: _this.props.initFaultInjectionRoute.delayed,\n        delay: _this.props.initFaultInjectionRoute.delay,\n        aborted: _this.props.initFaultInjectionRoute.aborted,\n        abort: _this.props.initFaultInjectionRoute.abort,\n        isValidDelay: _this.props.initFaultInjectionRoute.delayed ? isValidDuration(_this.props.initFaultInjectionRoute.delay.fixedDelay) : true,\n        isValidAbort: _this.props.initFaultInjectionRoute.aborted ? isValidAbortStatusCode(_this.props.initFaultInjectionRoute.abort.httpStatus) : true\n      }\n    };\n    return _this;\n  }\n\n  _createClass(FaultInjection, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.resetState();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n        isHorizontal: true,\n        style: {\n          paddingTop: 10,\n          paddingBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DelayFault, {\n        delayed: this.state.faultInjectionRoute.delayed,\n        delay: this.state.faultInjectionRoute.delay,\n        isValid: this.state.faultInjectionRoute.isValidDelay,\n        onDelay: function onDelay(delayed, delay) {\n          return _this2.updateDelay(delayed, delay);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(AbortFault, {\n        aborted: this.state.faultInjectionRoute.aborted,\n        abort: this.state.faultInjectionRoute.abort,\n        isValid: this.state.faultInjectionRoute.isValidAbort,\n        onAbort: function onAbort(aborted, abort) {\n          return _this2.updateAbort(aborted, abort);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return FaultInjection;\n}(React.Component);\n\nexport default FaultInjection;","map":{"version":3,"sources":["/root/GraduateProject/src/components/IstioWizards/FaultInjection.tsx"],"names":["React","DelayFault","AbortFault","Form","isValidAbortStatusCode","isValidDuration","FaultInjection","props","resetState","setState","faultInjectionRoute","workloads","initFaultInjectionRoute","delayed","delay","aborted","abort","isValidDelay","fixedDelay","isValidAbort","httpStatus","onChange","state","updateDelay","prevState","updateAbort","paddingTop","paddingBottom","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport DelayFault from './FaultInjection/DelayFault';\nimport AbortFault from './FaultInjection/AbortFault';\nimport { Abort, Delay } from '../../types/IstioObjects';\nimport { Form } from '@patternfly/react-core';\nimport { isValidAbortStatusCode, isValidDuration } from '../../utils/IstioConfigUtils';\nimport { WorkloadWeight } from './TrafficShifting';\n\ntype Props = {\n  initFaultInjectionRoute: FaultInjectionRoute;\n  onChange: (valid: boolean, faultInjectionRoute: FaultInjectionRoute) => void;\n};\n\n// Used in the scenario of a single route\nexport type FaultInjectionRoute = {\n  workloads: WorkloadWeight[];\n  delayed: boolean;\n  delay: Delay;\n  isValidDelay: boolean;\n  aborted: boolean;\n  abort: Abort;\n  isValidAbort: boolean;\n};\n\ntype State = {\n  faultInjectionRoute: FaultInjectionRoute;\n};\n\nclass FaultInjection extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      faultInjectionRoute: {\n        workloads: this.props.initFaultInjectionRoute.workloads,\n        delayed: this.props.initFaultInjectionRoute.delayed,\n        delay: this.props.initFaultInjectionRoute.delay,\n        aborted: this.props.initFaultInjectionRoute.aborted,\n        abort: this.props.initFaultInjectionRoute.abort,\n        isValidDelay: this.props.initFaultInjectionRoute.delayed\n          ? isValidDuration(this.props.initFaultInjectionRoute.delay.fixedDelay)\n          : true,\n        isValidAbort: this.props.initFaultInjectionRoute.aborted\n          ? isValidAbortStatusCode(this.props.initFaultInjectionRoute.abort.httpStatus)\n          : true\n      }\n    };\n  }\n\n  resetState = () => {\n    this.setState(\n      {\n        faultInjectionRoute: {\n          workloads: this.props.initFaultInjectionRoute.workloads,\n          delayed: this.props.initFaultInjectionRoute.delayed,\n          delay: this.props.initFaultInjectionRoute.delay,\n          aborted: this.props.initFaultInjectionRoute.aborted,\n          abort: this.props.initFaultInjectionRoute.abort,\n          isValidDelay: this.props.initFaultInjectionRoute.delayed\n            ? isValidDuration(this.props.initFaultInjectionRoute.delay.fixedDelay)\n            : true,\n          isValidAbort: this.props.initFaultInjectionRoute.aborted\n            ? isValidAbortStatusCode(this.props.initFaultInjectionRoute.abort.httpStatus)\n            : true\n        }\n      },\n      () =>\n        this.props.onChange(\n          this.state.faultInjectionRoute.isValidDelay && this.state.faultInjectionRoute.isValidAbort,\n          this.state.faultInjectionRoute\n        )\n    );\n  };\n\n  componentDidMount(): void {\n    this.resetState();\n  }\n\n  updateDelay = (delayed: boolean, delay: Delay) => {\n    this.setState(\n      prevState => {\n        return {\n          faultInjectionRoute: {\n            workloads: prevState.faultInjectionRoute.workloads,\n            delayed: delayed,\n            delay: delay,\n            isValidDelay: delayed ? isValidDuration(delay.fixedDelay) : true,\n            aborted: prevState.faultInjectionRoute.aborted,\n            abort: prevState.faultInjectionRoute.abort,\n            isValidAbort: prevState.faultInjectionRoute.isValidAbort\n          }\n        };\n      },\n      () =>\n        this.props.onChange(\n          this.state.faultInjectionRoute.isValidDelay && this.state.faultInjectionRoute.isValidAbort,\n          this.state.faultInjectionRoute\n        )\n    );\n  };\n\n  updateAbort = (aborted: boolean, abort: Abort) => {\n    this.setState(\n      prevState => {\n        return {\n          faultInjectionRoute: {\n            workloads: prevState.faultInjectionRoute.workloads,\n            delayed: prevState.faultInjectionRoute.delayed,\n            delay: prevState.faultInjectionRoute.delay,\n            isValidDelay: prevState.faultInjectionRoute.isValidDelay,\n            aborted: aborted,\n            abort: abort,\n            isValidAbort: aborted ? isValidAbortStatusCode(abort.httpStatus) : true\n          }\n        };\n      },\n      () =>\n        this.props.onChange(\n          this.state.faultInjectionRoute.isValidDelay && this.state.faultInjectionRoute.isValidAbort,\n          this.state.faultInjectionRoute\n        )\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <Form\n          isHorizontal={true}\n          style={{\n            paddingTop: 10,\n            paddingBottom: 10\n          }}\n        >\n          <DelayFault\n            delayed={this.state.faultInjectionRoute.delayed}\n            delay={this.state.faultInjectionRoute.delay}\n            isValid={this.state.faultInjectionRoute.isValidDelay}\n            onDelay={(delayed, delay) => this.updateDelay(delayed, delay)}\n          />\n          <AbortFault\n            aborted={this.state.faultInjectionRoute.aborted}\n            abort={this.state.faultInjectionRoute.abort}\n            isValid={this.state.faultInjectionRoute.isValidAbort}\n            onAbort={(aborted, abort) => this.updateAbort(aborted, abort)}\n          />\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default FaultInjection;\n"]},"metadata":{},"sourceType":"module"}