{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/components/Nav/Masthead/HelpDropdown.tsx\";\nimport * as React from 'react';\nimport AboutUIModal from '../../About/AboutUIModal';\nimport DebugInformationContainer from '../../../components/DebugInformation/DebugInformation';\nimport { Dropdown, DropdownToggle, DropdownItem } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons/';\nimport { connect } from 'react-redux';\nimport { isUpstream } from '../../UpstreamDetector/UpstreamDetector';\nimport { StatusKey } from '../../../types/StatusState';\nimport { config, serverConfig } from '../../../config';\nimport IstioCertsInfoConnected from 'components/IstioCertsInfo/IstioCertsInfo';\n\nvar HelpDropdownContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(HelpDropdownContainer, _React$Component);\n\n  var _super = _createSuper(HelpDropdownContainer);\n\n  function HelpDropdownContainer(props) {\n    var _this;\n\n    _classCallCheck(this, HelpDropdownContainer);\n\n    _this = _super.call(this, props);\n    _this.about = void 0;\n    _this.debugInformation = void 0;\n    _this.certsInformation = void 0;\n\n    _this.openAbout = function () {\n      _this.about.current.open();\n    };\n\n    _this.openDebugInformation = function () {\n      // Using wrapped component, so we have to get the wrappedInstance\n      _this.debugInformation.current.open();\n    };\n\n    _this.openCertsInformation = function () {\n      _this.certsInformation.current.open();\n    };\n\n    _this.onDropdownToggle = function (isDropdownOpen) {\n      _this.setState({\n        isDropdownOpen: isDropdownOpen\n      });\n    };\n\n    _this.onDropdownSelect = function () {\n      _this.setState({\n        isDropdownOpen: !_this.state.isDropdownOpen\n      });\n    };\n\n    _this.state = {\n      isDropdownOpen: false\n    };\n    _this.about = React.createRef();\n    _this.debugInformation = React.createRef();\n    _this.certsInformation = React.createRef();\n    return _this;\n  }\n\n  _createClass(HelpDropdownContainer, [{\n    key: \"buildDocumentationLink\",\n    value: function buildDocumentationLink() {\n      var url = new URL(config.documentation.url);\n\n      if (isUpstream) {\n        var kialiCoreVersion = this.props.status[StatusKey.KIALI_CORE_VERSION] || 'unknown';\n        url.searchParams.append('utm_source', 'kiali');\n        url.searchParams.append('utm_medium', 'app');\n        url.searchParams.append('utm_campaign', kialiCoreVersion);\n        url.searchParams.append('utm_content', '?-menu');\n      }\n\n      return url.toString();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isDropdownOpen = this.state.isDropdownOpen;\n      var Toggle = /*#__PURE__*/React.createElement(DropdownToggle, {\n        onToggle: this.onDropdownToggle,\n        iconComponent: null,\n        style: {\n          marginTop: 3\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(QuestionCircleIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }));\n      var items = [];\n      items.push( /*#__PURE__*/React.createElement(DropdownItem, {\n        component: 'a',\n        key: 'view_documentation',\n        href: this.buildDocumentationLink(),\n        target: \"_blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }\n      }, \"Documentation\"));\n      items.push( /*#__PURE__*/React.createElement(DropdownItem, {\n        component: 'span',\n        key: 'view_debug_info',\n        onClick: this.openDebugInformation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }\n      }, \"View Debug Info\"));\n\n      if (serverConfig.kialiFeatureFlags.certificatesInformationIndicators.enabled) {\n        items.push( /*#__PURE__*/React.createElement(DropdownItem, {\n          component: 'span',\n          key: 'view_certs_info',\n          onClick: this.openCertsInformation,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 9\n          }\n        }, \"View Certificates Info\"));\n      }\n\n      items.push( /*#__PURE__*/React.createElement(DropdownItem, {\n        component: 'span',\n        key: 'view_about_info',\n        onClick: this.openAbout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }\n      }, \"About\"));\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AboutUIModal, {\n        ref: this.about,\n        status: this.props.status,\n        externalServices: this.props.externalServices,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(DebugInformationContainer, {\n        ref: this.debugInformation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }), serverConfig.kialiFeatureFlags.certificatesInformationIndicators.enabled && /*#__PURE__*/React.createElement(IstioCertsInfoConnected, {\n        ref: this.certsInformation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown, {\n        isPlain: true,\n        position: \"right\",\n        onSelect: this.onDropdownSelect,\n        isOpen: isDropdownOpen,\n        toggle: Toggle,\n        dropdownItems: items,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return HelpDropdownContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    status: state.statusState.status,\n    externalServices: state.statusState.externalServices,\n    warningMessages: state.statusState.warningMessages\n  };\n};\n\nvar HelpDropdown = connect(mapStateToProps)(HelpDropdownContainer);\nexport default HelpDropdown;","map":{"version":3,"sources":["/root/kiali-ui/src/components/Nav/Masthead/HelpDropdown.tsx"],"names":["React","AboutUIModal","DebugInformationContainer","Dropdown","DropdownToggle","DropdownItem","QuestionCircleIcon","connect","isUpstream","StatusKey","config","serverConfig","IstioCertsInfoConnected","HelpDropdownContainer","props","about","debugInformation","certsInformation","openAbout","current","open","openDebugInformation","openCertsInformation","onDropdownToggle","isDropdownOpen","setState","onDropdownSelect","state","createRef","url","URL","documentation","kialiCoreVersion","status","KIALI_CORE_VERSION","searchParams","append","toString","Toggle","marginTop","items","push","buildDocumentationLink","kialiFeatureFlags","certificatesInformationIndicators","enabled","externalServices","Component","mapStateToProps","statusState","warningMessages","HelpDropdown"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport AboutUIModal from '../../About/AboutUIModal';\nimport { KialiAppState } from '../../../store/Store';\nimport DebugInformationContainer from '../../../components/DebugInformation/DebugInformation';\nimport { Dropdown, DropdownToggle, DropdownItem } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons/';\nimport { connect } from 'react-redux';\nimport { isUpstream } from '../../UpstreamDetector/UpstreamDetector';\nimport { Status, ExternalServiceInfo, StatusKey } from '../../../types/StatusState';\nimport { config, serverConfig } from '../../../config';\nimport IstioCertsInfoConnected from 'components/IstioCertsInfo/IstioCertsInfo';\n\ntype HelpDropdownProps = {\n  status: Status;\n  externalServices: ExternalServiceInfo[];\n  warningMessages: string[];\n};\n\ninterface HelpDropdownState {\n  isDropdownOpen: boolean;\n}\n\nclass HelpDropdownContainer extends React.Component<HelpDropdownProps, HelpDropdownState> {\n  about: React.RefObject<AboutUIModal>;\n  debugInformation: React.RefObject<any>;\n  certsInformation: React.RefObject<any>;\n\n  constructor(props: HelpDropdownProps) {\n    super(props);\n    this.state = { isDropdownOpen: false };\n    this.about = React.createRef<AboutUIModal>();\n    this.debugInformation = React.createRef();\n    this.certsInformation = React.createRef();\n  }\n\n  openAbout = () => {\n    this.about.current!.open();\n  };\n\n  openDebugInformation = () => {\n    // Using wrapped component, so we have to get the wrappedInstance\n    this.debugInformation.current!.open();\n  };\n\n  openCertsInformation = () => {\n    this.certsInformation.current!.open();\n  };\n\n  onDropdownToggle = isDropdownOpen => {\n    this.setState({\n      isDropdownOpen\n    });\n  };\n\n  onDropdownSelect = () => {\n    this.setState({\n      isDropdownOpen: !this.state.isDropdownOpen\n    });\n  };\n\n  buildDocumentationLink() {\n    const url = new URL(config.documentation.url);\n    if (isUpstream) {\n      const kialiCoreVersion = this.props.status[StatusKey.KIALI_CORE_VERSION] || 'unknown';\n\n      url.searchParams.append('utm_source', 'kiali');\n      url.searchParams.append('utm_medium', 'app');\n      url.searchParams.append('utm_campaign', kialiCoreVersion);\n      url.searchParams.append('utm_content', '?-menu');\n    }\n    return url.toString();\n  }\n\n  render() {\n    const { isDropdownOpen } = this.state;\n\n    const Toggle = (\n      <DropdownToggle onToggle={this.onDropdownToggle} iconComponent={null} style={{ marginTop: 3 }}>\n        <QuestionCircleIcon />\n      </DropdownToggle>\n    );\n\n    const items: JSX.Element[] = [];\n\n    items.push(\n      <DropdownItem component={'a'} key={'view_documentation'} href={this.buildDocumentationLink()} target=\"_blank\">\n        Documentation\n      </DropdownItem>\n    );\n\n    items.push(\n      <DropdownItem component={'span'} key={'view_debug_info'} onClick={this.openDebugInformation}>\n        View Debug Info\n      </DropdownItem>\n    );\n\n    if (serverConfig.kialiFeatureFlags.certificatesInformationIndicators.enabled) {\n      items.push(\n        <DropdownItem component={'span'} key={'view_certs_info'} onClick={this.openCertsInformation}>\n          View Certificates Info\n        </DropdownItem>\n      );\n    }\n\n    items.push(\n      <DropdownItem component={'span'} key={'view_about_info'} onClick={this.openAbout}>\n        About\n      </DropdownItem>\n    );\n\n    return (\n      <>\n        <AboutUIModal ref={this.about} status={this.props.status} externalServices={this.props.externalServices} />\n        <DebugInformationContainer ref={this.debugInformation} />\n        {serverConfig.kialiFeatureFlags.certificatesInformationIndicators.enabled && (\n          <IstioCertsInfoConnected ref={this.certsInformation} />\n        )}\n        <Dropdown\n          isPlain={true}\n          position=\"right\"\n          onSelect={this.onDropdownSelect}\n          isOpen={isDropdownOpen}\n          toggle={Toggle}\n          dropdownItems={items}\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: KialiAppState) => ({\n  status: state.statusState.status,\n  externalServices: state.statusState.externalServices,\n  warningMessages: state.statusState.warningMessages\n});\n\nconst HelpDropdown = connect(mapStateToProps)(HelpDropdownContainer);\nexport default HelpDropdown;\n"]},"metadata":{},"sourceType":"module"}