{"ast":null,"code":"import _toConsumableArray from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { scopeColTransformer, selectable, cellActions, emptyCol, mapProps, collapsible, emptyTD, expandedRow, parentId, editable } from './transformers';\nimport { defaultTitle } from './formatters';\n/**\n * Generate header with transforms and formatters from custom header object.\n *\n * @param {*} header with transforms, formatters, columnTransforms, and rest of header object.\n * @param {*} title to be used as label in header config.\n * @returns {*} header, label, transforms: Array, formatters: Array.\n */\n\nvar generateHeader = function generateHeader(_ref, title) {\n  var origTransforms = _ref.transforms,\n      origFormatters = _ref.formatters,\n      columnTransforms = _ref.columnTransforms,\n      header = _ref.header;\n  return _objectSpread({}, header, {\n    label: title,\n    transforms: [scopeColTransformer, emptyCol].concat(_toConsumableArray(origTransforms || []), _toConsumableArray(columnTransforms || []), _toConsumableArray(header && header.hasOwnProperty('transforms') ? header.transforms : [])),\n    formatters: [].concat(_toConsumableArray(origFormatters || []), _toConsumableArray(header && header.hasOwnProperty('formatters') ? header.formatters : []))\n  });\n};\n/**\n * Function to generate cell for header config to change look of each cell.\n *\n * @param {*} customCell config with cellFormatters, cellTransforms, columnTransforms and rest of cell config.\n * @param {*} extra - extra\n * @returns {*} cell, transforms: Array, formatters: Array.\n */\n\n\nvar generateCell = function generateCell(_ref2, extra) {\n  var cellFormatters = _ref2.cellFormatters,\n      cellTransforms = _ref2.cellTransforms,\n      columnTransforms = _ref2.columnTransforms,\n      cell = _ref2.cell;\n  return _objectSpread({}, cell, {\n    transforms: [].concat(_toConsumableArray(cellTransforms || []), _toConsumableArray(columnTransforms || []), _toConsumableArray(cell && cell.hasOwnProperty('transforms') ? cell.transforms : []), [mapProps // This transform should be applied last so that props that are manually defined at the cell level will override all other transforms.\n    ]),\n    formatters: [defaultTitle].concat(_toConsumableArray(cellFormatters || []), _toConsumableArray(cell && cell.hasOwnProperty('formatters') ? cell.formatters : []))\n  });\n};\n/**\n * Function to map custom simple object properties to expected format with property, header, cell, extra params\n * and props.\n *\n * @param {*} column to be shown in header - either string or object with title, transformers and formatters (for cells as well).\n * @param {*} extra additional object with callbacks for specific formatters.\n * @param {*} key cell key to be shown in data-key.\n * @param {*} props additional props for each cell.\n * @returns {*} object with property, extraParams, header, cell and props.\n */\n\n\nvar mapHeader = function mapHeader(column, extra, key) {\n  var title = column.hasOwnProperty('title') ? column.title : column;\n  var dataLabel = column.hasOwnProperty('dataLabel') ? column.dataLabel : typeof title === 'string' ? title : \"column-\".concat(key);\n\n  for (var _len = arguments.length, props = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    props[_key - 3] = arguments[_key];\n  }\n\n  return {\n    property: typeof title === 'string' && title.toLowerCase().trim().replace(/\\s/g, '-') || \"column-\".concat(key),\n    extraParams: extra,\n    data: column.data,\n    header: generateHeader(column, title),\n    cell: generateCell(column, extra),\n    props: _objectSpread({\n      'data-label': dataLabel,\n      'data-key': key\n    }, column.hasOwnProperty('props') ? column.props : {}, {}, props)\n  };\n};\n/**\n * Function to define select cell in first column.\n *\n * @param {*} extraObject with onSelect callback.\n * @returns {*} object with empty title, tranforms - Array, cellTransforms - Array.\n */\n\n\nvar selectableTransforms = function selectableTransforms(_ref3) {\n  var onSelect = _ref3.onSelect,\n      canSelectAll = _ref3.canSelectAll;\n  return _toConsumableArray(onSelect ? [{\n    title: '',\n    transforms: canSelectAll && [selectable] || null,\n    cellTransforms: [selectable]\n  }] : []);\n};\n/**\n * Function to define actions in last column.\n *\n * @param {*} extraObject with actions array.\n * @returns {*} object with empty title, tranforms - Array, cellTransforms - Array.\n */\n\n\nvar actionsTransforms = function actionsTransforms(_ref4) {\n  var actions = _ref4.actions,\n      actionResolver = _ref4.actionResolver,\n      areActionsDisabled = _ref4.areActionsDisabled;\n  return _toConsumableArray(actionResolver || actions ? [{\n    title: '',\n    transforms: [emptyTD],\n    cellTransforms: [cellActions(actions, actionResolver, areActionsDisabled)]\n  }] : []);\n};\n/**\n * Function to define collapsible in first column.\n *\n * @param {*}  extraObject with onCollapse callback.\n * @returns {*} object with empty title, tranforms - Array, cellTransforms - Array.\n */\n\n\nvar collapsibleTransfroms = function collapsibleTransfroms(_ref5) {\n  var onCollapse = _ref5.onCollapse;\n  return _toConsumableArray(onCollapse ? [{\n    title: '',\n    transforms: [emptyTD],\n    cellTransforms: [collapsible]\n  }] : []);\n};\n/**\n * Function to add additional cell transforms to object.\n *\n * @param {*} cell to be expanded.\n * @param {*} additional thing to be added to cellTransforms.\n * @returns {*} object with title from cell and cellTransforms with additional in.\n */\n\n\nvar addAdditionalCellTranforms = function addAdditionalCellTranforms(cell, additional) {\n  return _objectSpread({}, cell.hasOwnProperty('title') ? cell : {\n    title: cell\n  }, {\n    cellTransforms: [].concat(_toConsumableArray(cell.hasOwnProperty('cellTransforms') ? cell.cellTransforms : []), [additional])\n  });\n};\n/**\n * Function to change expanded row with additional transforms.\n *\n * @param {*} header info with cellTransforms.\n * @param {*} extraObject with onCollapse function.\n */\n\n\nvar expandContent = function expandContent(header, _ref6) {\n  var onCollapse = _ref6.onCollapse;\n\n  if (!onCollapse) {\n    return header;\n  }\n\n  return header.map(function (cell, key) {\n    var parentIdCell = addAdditionalCellTranforms(cell, parentId);\n    return key === 0 ? addAdditionalCellTranforms(parentIdCell, expandedRow(header.length)) : parentIdCell;\n  });\n};\n/**\n * Function to join parent and their children so they can be rendered in tbody.\n *\n * @param {*} rows raw data to find out if it's child or parent.\n * @param {*} children data to render (array of react children).\n */\n\n\nexport var mapOpenedRows = function mapOpenedRows(rows, children) {\n  return rows.reduce(function (acc, curr, key) {\n    if (curr.hasOwnProperty('parent')) {\n      var parent = acc.length > 0 && acc[acc.length - 1];\n\n      if (parent) {\n        acc[acc.length - 1].rows = [].concat(_toConsumableArray(acc[acc.length - 1].rows), [children[key]]);\n\n        if (curr.hasOwnProperty('compoundParent')) {\n          // if this is compound expand, check for any open child cell\n          acc[acc.length - 1].isOpen = acc[acc.length - 1].rows.some(function (oneRow) {\n            return oneRow.props.rowData.cells.some(function (oneCell) {\n              return oneCell.props && oneCell.props.isOpen;\n            });\n          });\n        }\n      }\n    } else {\n      acc = [].concat(_toConsumableArray(acc), [_objectSpread({}, curr, {\n        rows: [children[key]]\n      })]);\n    }\n\n    return acc;\n  }, []);\n};\n\nvar rowEditTransforms = function rowEditTransforms(_ref7) {\n  var onRowEdit = _ref7.onRowEdit;\n  return _toConsumableArray(onRowEdit ? [{\n    title: '',\n    cellTransforms: [editable]\n  }] : []);\n};\n/**\n * Function to calculate columns based on custom config.\n * It adds some custom cells for collapse, select, if expanded row and actions.\n *\n * @param {*} headerRows custom object with described table header cells.\n * @param {*} extra object with custom callbacks.\n * @returns {*} expected object for react tabular table.\n */\n\n\nexport var calculateColumns = function calculateColumns(headerRows, extra) {\n  return headerRows && [].concat(_toConsumableArray(collapsibleTransfroms(extra)), _toConsumableArray(selectableTransforms(extra)), _toConsumableArray(expandContent(headerRows, extra)), _toConsumableArray(rowEditTransforms(extra)), _toConsumableArray(actionsTransforms(extra))).map(function (oneCol, key) {\n    return _objectSpread({}, mapHeader(oneCol, extra, key));\n  });\n};","map":{"version":3,"sources":["/root/kiali-ui/node_modules/@patternfly/react-table/dist/esm/components/Table/utils/headerUtils.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","scopeColTransformer","selectable","cellActions","emptyCol","mapProps","collapsible","emptyTD","expandedRow","parentId","editable","defaultTitle","generateHeader","title","origTransforms","transforms","origFormatters","formatters","columnTransforms","header","label","hasOwnProperty","generateCell","extra","cellFormatters","cellTransforms","cell","mapHeader","column","dataLabel","props","property","toLowerCase","trim","replace","extraParams","data","selectableTransforms","onSelect","canSelectAll","actionsTransforms","actions","actionResolver","areActionsDisabled","collapsibleTransfroms","onCollapse","addAdditionalCellTranforms","additional","expandContent","map","parentIdCell","mapOpenedRows","rows","children","reduce","acc","curr","parent","isOpen","some","oneRow","rowData","cells","oneCell","rowEditTransforms","onRowEdit","calculateColumns","headerRows","oneCol"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { scopeColTransformer, selectable, cellActions, emptyCol, mapProps, collapsible, emptyTD, expandedRow, parentId, editable } from './transformers';\nimport { defaultTitle } from './formatters';\n\n/**\n * Generate header with transforms and formatters from custom header object.\n *\n * @param {*} header with transforms, formatters, columnTransforms, and rest of header object.\n * @param {*} title to be used as label in header config.\n * @returns {*} header, label, transforms: Array, formatters: Array.\n */\nconst generateHeader = ({\n  transforms: origTransforms,\n  formatters: origFormatters,\n  columnTransforms,\n  header\n}, title) => _objectSpread({}, header, {\n  label: title,\n  transforms: [scopeColTransformer, emptyCol, ...(origTransforms || []), ...(columnTransforms || []), ...(header && header.hasOwnProperty('transforms') ? header.transforms : [])],\n  formatters: [...(origFormatters || []), ...(header && header.hasOwnProperty('formatters') ? header.formatters : [])]\n});\n/**\n * Function to generate cell for header config to change look of each cell.\n *\n * @param {*} customCell config with cellFormatters, cellTransforms, columnTransforms and rest of cell config.\n * @param {*} extra - extra\n * @returns {*} cell, transforms: Array, formatters: Array.\n */\n\n\nconst generateCell = ({\n  cellFormatters,\n  cellTransforms,\n  columnTransforms,\n  cell\n}, extra) => _objectSpread({}, cell, {\n  transforms: [...(cellTransforms || []), ...(columnTransforms || []), ...(cell && cell.hasOwnProperty('transforms') ? cell.transforms : []), mapProps // This transform should be applied last so that props that are manually defined at the cell level will override all other transforms.\n  ],\n  formatters: [defaultTitle, ...(cellFormatters || []), ...(cell && cell.hasOwnProperty('formatters') ? cell.formatters : [])]\n});\n/**\n * Function to map custom simple object properties to expected format with property, header, cell, extra params\n * and props.\n *\n * @param {*} column to be shown in header - either string or object with title, transformers and formatters (for cells as well).\n * @param {*} extra additional object with callbacks for specific formatters.\n * @param {*} key cell key to be shown in data-key.\n * @param {*} props additional props for each cell.\n * @returns {*} object with property, extraParams, header, cell and props.\n */\n\n\nconst mapHeader = (column, extra, key, ...props) => {\n  const title = column.hasOwnProperty('title') ? column.title : column;\n  const dataLabel = column.hasOwnProperty('dataLabel') ? column.dataLabel : typeof title === 'string' ? title : `column-${key}`;\n  return {\n    property: typeof title === 'string' && title.toLowerCase().trim().replace(/\\s/g, '-') || `column-${key}`,\n    extraParams: extra,\n    data: column.data,\n    header: generateHeader(column, title),\n    cell: generateCell(column, extra),\n    props: _objectSpread({\n      'data-label': dataLabel,\n      'data-key': key\n    }, column.hasOwnProperty('props') ? column.props : {}, {}, props)\n  };\n};\n/**\n * Function to define select cell in first column.\n *\n * @param {*} extraObject with onSelect callback.\n * @returns {*} object with empty title, tranforms - Array, cellTransforms - Array.\n */\n\n\nconst selectableTransforms = ({\n  onSelect,\n  canSelectAll\n}) => [...(onSelect ? [{\n  title: '',\n  transforms: canSelectAll && [selectable] || null,\n  cellTransforms: [selectable]\n}] : [])];\n/**\n * Function to define actions in last column.\n *\n * @param {*} extraObject with actions array.\n * @returns {*} object with empty title, tranforms - Array, cellTransforms - Array.\n */\n\n\nconst actionsTransforms = ({\n  actions,\n  actionResolver,\n  areActionsDisabled\n}) => [...(actionResolver || actions ? [{\n  title: '',\n  transforms: [emptyTD],\n  cellTransforms: [cellActions(actions, actionResolver, areActionsDisabled)]\n}] : [])];\n/**\n * Function to define collapsible in first column.\n *\n * @param {*}  extraObject with onCollapse callback.\n * @returns {*} object with empty title, tranforms - Array, cellTransforms - Array.\n */\n\n\nconst collapsibleTransfroms = ({\n  onCollapse\n}) => [...(onCollapse ? [{\n  title: '',\n  transforms: [emptyTD],\n  cellTransforms: [collapsible]\n}] : [])];\n/**\n * Function to add additional cell transforms to object.\n *\n * @param {*} cell to be expanded.\n * @param {*} additional thing to be added to cellTransforms.\n * @returns {*} object with title from cell and cellTransforms with additional in.\n */\n\n\nconst addAdditionalCellTranforms = (cell, additional) => _objectSpread({}, cell.hasOwnProperty('title') ? cell : {\n  title: cell\n}, {\n  cellTransforms: [...(cell.hasOwnProperty('cellTransforms') ? cell.cellTransforms : []), additional]\n});\n/**\n * Function to change expanded row with additional transforms.\n *\n * @param {*} header info with cellTransforms.\n * @param {*} extraObject with onCollapse function.\n */\n\n\nconst expandContent = (header, {\n  onCollapse\n}) => {\n  if (!onCollapse) {\n    return header;\n  }\n\n  return header.map((cell, key) => {\n    const parentIdCell = addAdditionalCellTranforms(cell, parentId);\n    return key === 0 ? addAdditionalCellTranforms(parentIdCell, expandedRow(header.length)) : parentIdCell;\n  });\n};\n/**\n * Function to join parent and their children so they can be rendered in tbody.\n *\n * @param {*} rows raw data to find out if it's child or parent.\n * @param {*} children data to render (array of react children).\n */\n\n\nexport const mapOpenedRows = (rows, children) => rows.reduce((acc, curr, key) => {\n  if (curr.hasOwnProperty('parent')) {\n    const parent = acc.length > 0 && acc[acc.length - 1];\n\n    if (parent) {\n      acc[acc.length - 1].rows = [...acc[acc.length - 1].rows, children[key]];\n\n      if (curr.hasOwnProperty('compoundParent')) {\n        // if this is compound expand, check for any open child cell\n        acc[acc.length - 1].isOpen = acc[acc.length - 1].rows.some(oneRow => oneRow.props.rowData.cells.some(oneCell => oneCell.props && oneCell.props.isOpen));\n      }\n    }\n  } else {\n    acc = [...acc, _objectSpread({}, curr, {\n      rows: [children[key]]\n    })];\n  }\n\n  return acc;\n}, []);\n\nconst rowEditTransforms = ({\n  onRowEdit\n}) => [...(onRowEdit ? [{\n  title: '',\n  cellTransforms: [editable]\n}] : [])];\n/**\n * Function to calculate columns based on custom config.\n * It adds some custom cells for collapse, select, if expanded row and actions.\n *\n * @param {*} headerRows custom object with described table header cells.\n * @param {*} extra object with custom callbacks.\n * @returns {*} expected object for react tabular table.\n */\n\n\nexport const calculateColumns = (headerRows, extra) => headerRows && [...collapsibleTransfroms(extra), ...selectableTransforms(extra), ...expandContent(headerRows, extra), ...rowEditTransforms(extra), ...actionsTransforms(extra)].map((oneCol, key) => _objectSpread({}, mapHeader(oneCol, extra, key)));\n//# sourceMappingURL=headerUtils.js.map"]},"metadata":{},"sourceType":"module"}