{"ast":null,"code":"import _objectSpread from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/components/Time/TimeRangeComponent.tsx\";\nimport * as React from 'react';\nimport { guardTimeRange, durationToBounds, isEqualTimeRange } from '../../types/Common';\nimport { ToolbarDropdown } from '../ToolbarDropdown/ToolbarDropdown';\nimport { serverConfig, humanDurations } from '../../config/ServerConfig';\nimport { retrieveTimeRange, storeTimeRange } from './TimeRangeHelper';\nimport { DateTimePicker } from './DateTimePicker';\nimport { timeRangeSelector } from '../../store/Selectors';\nimport { UserSettingsActions } from '../../actions/UserSettingsActions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { style } from 'typestyle';\nvar labelStyle = style({\n  margin: '5px 5px 0px 5px'\n});\n\nvar TimeRangeComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(TimeRangeComponent, _React$Component);\n\n  var _super = _createSuper(TimeRangeComponent);\n\n  function TimeRangeComponent(props) {\n    var _this;\n\n    _classCallCheck(this, TimeRangeComponent);\n\n    _this = _super.call(this, props);\n\n    _this.onDurationChanged = function (key) {\n      var range = {};\n\n      if (key === 'custom') {\n        // Convert to bounds\n        range = guardTimeRange(range, durationToBounds, function (b) {\n          return b;\n        });\n        range.rangeDuration = undefined;\n      } else {\n        range.rangeDuration = Number(key);\n        range.from = undefined;\n        range.to = undefined;\n      }\n\n      _this.props.setTimeRange(range);\n    };\n\n    _this.onStartPickerChanged = function (d) {\n      var range = {};\n\n      if (d) {\n        range = guardTimeRange(range, durationToBounds, function (b) {\n          return b;\n        });\n        range.from = d.getTime();\n\n        if (range.to && range.from > range.to) {\n          range.from = range.to;\n        }\n\n        range.rangeDuration = undefined;\n\n        _this.props.setTimeRange(range);\n      }\n    };\n\n    _this.onEndPickerChanged = function (d) {\n      var range = guardTimeRange(_this.props.timeRange, durationToBounds, function (b) {\n        return b;\n      });\n      range.to = d ? d.getTime() : undefined;\n\n      if (range.to && range.from && range.from > range.to) {\n        range.to = range.from;\n      }\n\n      _this.props.setTimeRange(range);\n    };\n\n    var _range = retrieveTimeRange();\n\n    if ((_range.rangeDuration !== undefined || _range.from !== undefined) && !isEqualTimeRange(props.timeRange, _range)) {\n      _this.props.setTimeRange(_range);\n    }\n\n    storeTimeRange(_this.props.timeRange);\n    return _this;\n  }\n\n  _createClass(TimeRangeComponent, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      storeTimeRange(this.props.timeRange);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return guardTimeRange(this.props.timeRange, function (d) {\n        return _this2.renderDuration(d);\n      }, function (ft) {\n        return _this2.renderWithCustom(ft);\n      });\n    }\n  }, {\n    key: \"renderDuration\",\n    value: function renderDuration(d) {\n      var durations = humanDurations(serverConfig, 'Last', undefined);\n\n      var options = _objectSpread({\n        custom: 'Custom'\n      }, durations);\n\n      return /*#__PURE__*/React.createElement(ToolbarDropdown, {\n        id: 'metrics_filter_interval_duration',\n        handleSelect: this.onDurationChanged,\n        initialValue: d || 'custom',\n        value: d || 'custom',\n        initialLabel: d ? serverConfig.durations[d] : 'Custom',\n        options: options,\n        tooltip: this.props.tooltip,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"renderWithCustom\",\n    value: function renderWithCustom(bounds) {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.renderDuration(), /*#__PURE__*/React.createElement(\"div\", {\n        className: labelStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, \"From\"), /*#__PURE__*/React.createElement(DateTimePicker, {\n        selected: bounds.from,\n        onChange: function onChange(date) {\n          return _this3.onStartPickerChanged(date);\n        },\n        maxDate: bounds.to,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: labelStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }, \"To\"), /*#__PURE__*/React.createElement(DateTimePicker, {\n        selected: bounds.to,\n        onChange: function onChange(date) {\n          return _this3.onEndPickerChanged(date);\n        },\n        minDate: bounds.from,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return TimeRangeComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    timeRange: timeRangeSelector(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setTimeRange: bindActionCreators(UserSettingsActions.setTimeRange, dispatch)\n  };\n};\n\nvar TimeRangeContainer = connect(mapStateToProps, mapDispatchToProps)(TimeRangeComponent);\nexport default TimeRangeContainer;","map":{"version":3,"sources":["/root/kiali-ui/src/components/Time/TimeRangeComponent.tsx"],"names":["React","guardTimeRange","durationToBounds","isEqualTimeRange","ToolbarDropdown","serverConfig","humanDurations","retrieveTimeRange","storeTimeRange","DateTimePicker","timeRangeSelector","UserSettingsActions","connect","bindActionCreators","style","labelStyle","margin","TimeRangeComponent","props","onDurationChanged","key","range","b","rangeDuration","undefined","Number","from","to","setTimeRange","onStartPickerChanged","d","getTime","onEndPickerChanged","timeRange","renderDuration","ft","renderWithCustom","durations","options","custom","tooltip","bounds","date","Component","mapStateToProps","state","mapDispatchToProps","dispatch","TimeRangeContainer"],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport {\n  DurationInSeconds,\n  BoundsInMilliseconds,\n  guardTimeRange,\n  TimeRange,\n  durationToBounds,\n  isEqualTimeRange\n} from '../../types/Common';\nimport { ToolbarDropdown } from '../ToolbarDropdown/ToolbarDropdown';\nimport { serverConfig, humanDurations } from '../../config/ServerConfig';\nimport { retrieveTimeRange, storeTimeRange } from './TimeRangeHelper';\nimport { DateTimePicker } from './DateTimePicker';\nimport { KialiAppState } from '../../store/Store';\nimport { timeRangeSelector } from '../../store/Selectors';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { KialiAppAction } from '../../actions/KialiAppAction';\nimport { UserSettingsActions } from '../../actions/UserSettingsActions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { style } from 'typestyle';\n\ntype Props = {\n  timeRange: TimeRange;\n  tooltip: string;\n  setTimeRange: (range: TimeRange) => void;\n};\n\nconst labelStyle = style({\n  margin: '5px 5px 0px 5px'\n});\n\nclass TimeRangeComponent extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    const range = retrieveTimeRange();\n    if ((range.rangeDuration !== undefined || range.from !== undefined) && !isEqualTimeRange(props.timeRange, range)) {\n      this.props.setTimeRange(range);\n    }\n    storeTimeRange(this.props.timeRange);\n  }\n\n  componentDidUpdate() {\n    storeTimeRange(this.props.timeRange);\n  }\n\n  onDurationChanged = (key: string) => {\n    let range: TimeRange = {};\n    if (key === 'custom') {\n      // Convert to bounds\n      range = guardTimeRange(range, durationToBounds, b => b);\n      range.rangeDuration = undefined;\n    } else {\n      range.rangeDuration = Number(key);\n      range.from = undefined;\n      range.to = undefined;\n    }\n    this.props.setTimeRange(range);\n  };\n\n  onStartPickerChanged = (d?: Date) => {\n    let range: TimeRange = {};\n    if (d) {\n      range = guardTimeRange(range, durationToBounds, b => b);\n      range.from = d.getTime();\n      if (range.to && range.from > range.to) {\n        range.from = range.to;\n      }\n      range.rangeDuration = undefined;\n      this.props.setTimeRange(range);\n    }\n  };\n\n  onEndPickerChanged = (d?: Date) => {\n    const range = guardTimeRange(this.props.timeRange, durationToBounds, b => b);\n    range.to = d ? d.getTime() : undefined;\n    if (range.to && range.from && range.from > range.to) {\n      range.to = range.from;\n    }\n    this.props.setTimeRange(range);\n  };\n\n  render() {\n    return guardTimeRange(\n      this.props.timeRange,\n      d => this.renderDuration(d),\n      ft => this.renderWithCustom(ft)\n    );\n  }\n\n  renderDuration(d?: DurationInSeconds) {\n    const durations = humanDurations(serverConfig, 'Last', undefined);\n    const options = { custom: 'Custom', ...durations };\n    return (\n      <ToolbarDropdown\n        id={'metrics_filter_interval_duration'}\n        handleSelect={this.onDurationChanged}\n        initialValue={d || 'custom'}\n        value={d || 'custom'}\n        initialLabel={d ? serverConfig.durations[d] : 'Custom'}\n        options={options}\n        tooltip={this.props.tooltip}\n      />\n    );\n  }\n\n  renderWithCustom(bounds: BoundsInMilliseconds) {\n    return (\n      <>\n        {this.renderDuration()}\n        <div className={labelStyle}>From</div>\n        <DateTimePicker selected={bounds.from} onChange={date => this.onStartPickerChanged(date)} maxDate={bounds.to} />\n        <div className={labelStyle}>To</div>\n        <DateTimePicker selected={bounds.to} onChange={date => this.onEndPickerChanged(date)} minDate={bounds.from} />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: KialiAppState) => {\n  return {\n    timeRange: timeRangeSelector(state)\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<KialiAppState, void, KialiAppAction>) => {\n  return {\n    setTimeRange: bindActionCreators(UserSettingsActions.setTimeRange, dispatch)\n  };\n};\n\nconst TimeRangeContainer = connect(mapStateToProps, mapDispatchToProps)(TimeRangeComponent);\nexport default TimeRangeContainer;\n"]},"metadata":{},"sourceType":"module"}