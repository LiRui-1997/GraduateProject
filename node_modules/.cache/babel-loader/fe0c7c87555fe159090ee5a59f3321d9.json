{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/components/JaegerIntegration/TraceTooltip.tsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { pluralize } from '@patternfly/react-core';\nimport { Flyout } from 'victory';\nimport { style } from 'typestyle';\nimport { averageSpanDuration, buildQueriesFromSpans, allStatsIntervals, reduceMetricsStats } from 'utils/tracing/TraceStats';\nimport MetricsStatsThunkActions from 'actions/MetricsStatsThunkActions';\nimport { renderTraceHeatMap } from './JaegerResults/StatsComparison';\nimport { PFColors } from 'components/Pf/PfColors';\nimport { HookedChartTooltip } from 'components/Charts/CustomTooltip';\nimport { formatDuration } from 'utils/tracing/TracingHelper';\nvar flyoutWidth = 280;\nvar flyoutHeight = 130;\nvar flyoutMargin = 10;\nvar innerWidth = flyoutWidth - 2 * flyoutMargin;\nvar innerHeight = flyoutHeight - 2 * flyoutMargin;\nvar tooltipStyle = style({\n  color: PFColors.Black100,\n  width: innerWidth,\n  height: innerHeight\n});\nvar titleStyle = style({\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis'\n});\nvar contentStyle = style({\n  width: '100%',\n  height: '100%'\n});\nvar leftStyle = style({\n  width: '35%',\n  height: '100%',\n  float: 'left'\n});\n\nvar TraceLabel = /*#__PURE__*/function (_React$Component) {\n  _inherits(TraceLabel, _React$Component);\n\n  var _super = _createSuper(TraceLabel);\n\n  function TraceLabel() {\n    _classCallCheck(this, TraceLabel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TraceLabel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var queries = buildQueriesFromSpans(this.props.trace.spans);\n      this.props.loadMetricsStats(queries);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var left = flyoutMargin + (this.props.x || 0) - flyoutWidth / 2;\n      var top = flyoutMargin + (this.props.y || 0) - flyoutHeight / 2;\n      var avgSpanDuration = averageSpanDuration(this.props.trace);\n      var hasStats = this.props.statsMatrix && this.props.statsMatrix.some(function (sub) {\n        return sub.some(function (v) {\n          return v !== undefined;\n        });\n      });\n      return /*#__PURE__*/React.createElement(\"foreignObject\", {\n        width: innerWidth,\n        height: innerHeight,\n        x: left,\n        y: top,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: tooltipStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: titleStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, this.props.trace.traceName || '(Missing root span)'), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: contentStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: leftStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, hasStats ? renderTraceHeatMap(this.props.statsMatrix, allStatsIntervals, true) : 'n/a'), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, formatDuration(this.props.trace.duration), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }), \"\".concat(pluralize(this.props.trace.spans.length, 'span'), \", avg=\").concat(avgSpanDuration ? formatDuration(avgSpanDuration) : 'n/a')))));\n    }\n  }]);\n\n  return TraceLabel;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  var _reduceMetricsStats = reduceMetricsStats(props.trace, allStatsIntervals, state.metricsStats.data),\n      matrix = _reduceMetricsStats.matrix,\n      isComplete = _reduceMetricsStats.isComplete;\n\n  return {\n    statsMatrix: matrix,\n    isStatsMatrixComplete: isComplete\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loadMetricsStats: function loadMetricsStats(queries) {\n      return dispatch(MetricsStatsThunkActions.load(queries));\n    }\n  };\n};\n\nvar TraceLabelContainer = connect(mapStateToProps, mapDispatchToProps)(TraceLabel);\nexport var TraceTooltip = /*#__PURE__*/function (_React$Component2) {\n  _inherits(TraceTooltip, _React$Component2);\n\n  var _super2 = _createSuper(TraceTooltip);\n\n  function TraceTooltip() {\n    _classCallCheck(this, TraceTooltip);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(TraceTooltip, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.activePoints && this.props.activePoints.length > 0) {\n        var trace = this.props.activePoints[0].trace;\n        return /*#__PURE__*/React.createElement(HookedChartTooltip, Object.assign({}, this.props, {\n          flyoutWidth: flyoutWidth,\n          flyoutHeight: flyoutHeight,\n          flyoutComponent: /*#__PURE__*/React.createElement(Flyout, {\n            style: {\n              stroke: 'none',\n              fillOpacity: 0.6\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 28\n            }\n          }),\n          labelComponent: /*#__PURE__*/React.createElement(TraceLabelContainer, {\n            trace: trace,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 27\n            }\n          }),\n          constrainToVisibleArea: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 9\n          }\n        }));\n      }\n\n      return null;\n    }\n  }]);\n\n  return TraceTooltip;\n}(React.Component);","map":{"version":3,"sources":["/root/GraduateProject/src/components/JaegerIntegration/TraceTooltip.tsx"],"names":["React","connect","pluralize","Flyout","style","averageSpanDuration","buildQueriesFromSpans","allStatsIntervals","reduceMetricsStats","MetricsStatsThunkActions","renderTraceHeatMap","PFColors","HookedChartTooltip","formatDuration","flyoutWidth","flyoutHeight","flyoutMargin","innerWidth","innerHeight","tooltipStyle","color","Black100","width","height","titleStyle","whiteSpace","overflow","textOverflow","contentStyle","leftStyle","float","TraceLabel","queries","props","trace","spans","loadMetricsStats","left","x","top","y","avgSpanDuration","hasStats","statsMatrix","some","sub","v","undefined","traceName","duration","length","Component","mapStateToProps","state","metricsStats","data","matrix","isComplete","isStatsMatrixComplete","mapDispatchToProps","dispatch","load","TraceLabelContainer","TraceTooltip","activePoints","stroke","fillOpacity"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { pluralize } from '@patternfly/react-core';\nimport { ChartLabelProps } from '@patternfly/react-charts';\nimport { Flyout } from 'victory';\nimport { style } from 'typestyle';\n\nimport { KialiAppState } from 'store/Store';\nimport {\n  averageSpanDuration,\n  buildQueriesFromSpans,\n  allStatsIntervals,\n  reduceMetricsStats,\n  StatsMatrix\n} from 'utils/tracing/TraceStats';\nimport { KialiAppAction } from 'actions/KialiAppAction';\nimport { MetricsStatsQuery } from 'types/MetricsOptions';\nimport MetricsStatsThunkActions from 'actions/MetricsStatsThunkActions';\nimport { JaegerLineInfo } from './JaegerScatter';\nimport { JaegerTrace } from 'types/JaegerInfo';\nimport { renderTraceHeatMap } from './JaegerResults/StatsComparison';\nimport { PFColors } from 'components/Pf/PfColors';\nimport { HookedChartTooltip, HookedTooltipProps } from 'components/Charts/CustomTooltip';\nimport { formatDuration } from 'utils/tracing/TracingHelper';\n\nconst flyoutWidth = 280;\nconst flyoutHeight = 130;\nconst flyoutMargin = 10;\nconst innerWidth = flyoutWidth - 2 * flyoutMargin;\nconst innerHeight = flyoutHeight - 2 * flyoutMargin;\n\nconst tooltipStyle = style({\n  color: PFColors.Black100,\n  width: innerWidth,\n  height: innerHeight\n});\n\nconst titleStyle = style({\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis'\n});\n\nconst contentStyle = style({ width: '100%', height: '100%' });\nconst leftStyle = style({ width: '35%', height: '100%', float: 'left' });\n\ntype LabelProps = ChartLabelProps & {\n  trace: JaegerTrace;\n  loadMetricsStats: (queries: MetricsStatsQuery[]) => void;\n  statsMatrix?: StatsMatrix;\n  isStatsMatrixComplete: boolean;\n};\n\nclass TraceLabel extends React.Component<LabelProps> {\n  componentDidMount() {\n    const queries = buildQueriesFromSpans(this.props.trace.spans);\n    this.props.loadMetricsStats(queries);\n  }\n\n  render() {\n    const left = flyoutMargin + (this.props.x || 0) - flyoutWidth / 2;\n    const top = flyoutMargin + (this.props.y || 0) - flyoutHeight / 2;\n    const avgSpanDuration = averageSpanDuration(this.props.trace);\n    const hasStats = this.props.statsMatrix && this.props.statsMatrix.some(sub => sub.some(v => v !== undefined));\n    return (\n      <foreignObject width={innerWidth} height={innerHeight} x={left} y={top}>\n        <div className={tooltipStyle}>\n          <div className={titleStyle}>{this.props.trace.traceName || '(Missing root span)'}</div>\n          <br />\n          <div className={contentStyle}>\n            <div className={leftStyle}>\n              {hasStats ? renderTraceHeatMap(this.props.statsMatrix!, allStatsIntervals, true) : 'n/a'}\n            </div>\n            <div>\n              {formatDuration(this.props.trace.duration)}\n              <br />\n              {`${pluralize(this.props.trace.spans.length, 'span')}, avg=${\n                avgSpanDuration ? formatDuration(avgSpanDuration) : 'n/a'\n              }`}\n            </div>\n          </div>\n        </div>\n      </foreignObject>\n    );\n  }\n}\n\nconst mapStateToProps = (state: KialiAppState, props: any) => {\n  const { matrix, isComplete } = reduceMetricsStats(props.trace, allStatsIntervals, state.metricsStats.data);\n  return {\n    statsMatrix: matrix,\n    isStatsMatrixComplete: isComplete\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<KialiAppState, void, KialiAppAction>) => ({\n  loadMetricsStats: (queries: MetricsStatsQuery[]) => dispatch(MetricsStatsThunkActions.load(queries))\n});\n\nconst TraceLabelContainer = connect(mapStateToProps, mapDispatchToProps)(TraceLabel);\n\nexport class TraceTooltip extends React.Component<HookedTooltipProps<JaegerLineInfo>> {\n  render() {\n    if (this.props.activePoints && this.props.activePoints.length > 0) {\n      const trace = this.props.activePoints[0].trace;\n      return (\n        <HookedChartTooltip\n          {...this.props}\n          flyoutWidth={flyoutWidth}\n          flyoutHeight={flyoutHeight}\n          flyoutComponent={<Flyout style={{ stroke: 'none', fillOpacity: 0.6 }} />}\n          labelComponent={<TraceLabelContainer trace={trace} />}\n          constrainToVisibleArea={true}\n        />\n      );\n    }\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}