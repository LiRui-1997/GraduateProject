{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/pages/IstioConfigNew/RequestAuthenticationForm.tsx\";\nimport * as React from 'react';\nimport { FormGroup, Switch } from '@patternfly/react-core';\nimport { TextInputBase as TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport JwtRuleBuilder from './RequestAuthorizationForm/JwtRuleBuilder';\nimport JwtRuleList from './RequestAuthorizationForm/JwtRuleList';\nexport var REQUEST_AUTHENTICATION = 'RequestAuthentication';\nexport var REQUEST_AUTHENTICATIONS = 'requestauthentications';\nexport var initRequestAuthentication = function initRequestAuthentication() {\n  return {\n    workloadSelector: '',\n    jwtRules: [],\n    addWorkloadSelector: false,\n    workloadSelectorValid: false,\n    addJWTRules: false\n  };\n};\nexport var isRequestAuthenticationStateValid = function isRequestAuthenticationStateValid(ra) {\n  var workloadSelectorRule = ra.addWorkloadSelector ? ra.workloadSelectorValid : true;\n  var jwtRulesRule = ra.addJWTRules ? ra.jwtRules.length > 0 : true; // Not yet used\n\n  return workloadSelectorRule && jwtRulesRule;\n};\n\nvar RequestAuthenticationForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(RequestAuthenticationForm, _React$Component);\n\n  var _super = _createSuper(RequestAuthenticationForm);\n\n  function RequestAuthenticationForm(props) {\n    var _this;\n\n    _classCallCheck(this, RequestAuthenticationForm);\n\n    _this = _super.call(this, props);\n\n    _this.onRequestAuthenticationChange = function () {\n      _this.props.onChange(_this.state);\n    };\n\n    _this.onChangeWorkloadSelector = function () {\n      _this.setState(function (prevState) {\n        return {\n          addWorkloadSelector: !prevState.addWorkloadSelector\n        };\n      }, function () {\n        return _this.onRequestAuthenticationChange();\n      });\n    };\n\n    _this.onChangeJwtRules = function () {\n      _this.setState(function (prevState) {\n        return {\n          addJWTRules: !prevState.addJWTRules\n        };\n      }, function () {\n        return _this.onRequestAuthenticationChange();\n      });\n    };\n\n    _this.addWorkloadLabels = function (value, _) {\n      if (value.length === 0) {\n        _this.setState({\n          workloadSelectorValid: false,\n          workloadSelector: ''\n        }, function () {\n          return _this.onRequestAuthenticationChange();\n        });\n\n        return;\n      }\n\n      value = value.trim();\n      var labels = value.split(',');\n      var isValid = true; // Some smoke validation rules for the labels\n\n      for (var i = 0; i < labels.length; i++) {\n        var label = labels[i];\n\n        if (label.indexOf('=') < 0) {\n          isValid = false;\n          break;\n        }\n\n        var splitLabel = label.split('=');\n\n        if (splitLabel.length !== 2) {\n          isValid = false;\n          break;\n        }\n\n        if (splitLabel[0].trim().length === 0 || splitLabel[1].trim().length === 0) {\n          isValid = false;\n          break;\n        }\n      }\n\n      _this.setState({\n        workloadSelectorValid: isValid,\n        workloadSelector: value\n      }, function () {\n        return _this.onRequestAuthenticationChange();\n      });\n    };\n\n    _this.onAddJwtRule = function (jwtRule) {\n      _this.setState(function (prevState) {\n        prevState.jwtRules.push(jwtRule);\n        return {\n          jwtRules: prevState.jwtRules\n        };\n      }, function () {\n        return _this.onRequestAuthenticationChange();\n      });\n    };\n\n    _this.onRemoveJwtRule = function (index) {\n      _this.setState(function (prevState) {\n        prevState.jwtRules.splice(index, 1);\n        return {\n          jwtRules: prevState.jwtRules\n        };\n      }, function () {\n        return _this.onRequestAuthenticationChange();\n      });\n    };\n\n    _this.state = initRequestAuthentication();\n    return _this;\n  }\n\n  _createClass(RequestAuthenticationForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        workloadSelector: this.props.requestAuthentication.workloadSelector,\n        jwtRules: this.props.requestAuthentication.jwtRules,\n        addWorkloadSelector: this.props.requestAuthentication.addWorkloadSelector,\n        workloadSelectorValid: this.props.requestAuthentication.workloadSelectorValid,\n        addJWTRules: this.props.requestAuthentication.addJWTRules\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"Workload Selector\",\n        fieldId: \"workloadSelectorSwitch\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        id: \"workloadSelectorSwitch\",\n        label: ' ',\n        labelOff: ' ',\n        isChecked: this.state.addWorkloadSelector,\n        onChange: this.onChangeWorkloadSelector,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      })), this.state.addWorkloadSelector && /*#__PURE__*/React.createElement(FormGroup, {\n        fieldId: \"workloadLabels\",\n        label: \"Labels\",\n        helperText: \"One or more labels to select a workload where the RequestAuthentication is applied.\",\n        helperTextInvalid: \"Enter a label in the format <label>=<value>. Enter one or multiple labels separated by comma.\",\n        isValid: this.state.workloadSelectorValid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TextInput, {\n        id: \"gwHosts\",\n        name: \"gwHosts\",\n        isDisabled: !this.state.addWorkloadSelector,\n        value: this.state.workloadSelector,\n        onChange: this.addWorkloadLabels,\n        isValid: this.state.workloadSelectorValid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"JWT Rules\",\n        fieldId: \"addJWTRules\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        id: \"addJWTRules\",\n        label: ' ',\n        labelOff: ' ',\n        isChecked: this.state.addJWTRules,\n        onChange: this.onChangeJwtRules,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }\n      })), this.state.addJWTRules && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"JWT Rule Builder\",\n        fieldId: \"jwtRulesBuilder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(JwtRuleBuilder, {\n        onAddJwtRule: this.onAddJwtRule,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"JWT Rules List\",\n        fieldId: \"jwtRulesList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(JwtRuleList, {\n        jwtRules: this.state.jwtRules,\n        onRemoveJwtRule: this.onRemoveJwtRule,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }\n      }))));\n    }\n  }]);\n\n  return RequestAuthenticationForm;\n}(React.Component);\n\nexport default RequestAuthenticationForm;","map":{"version":3,"sources":["/root/kiali-ui/src/pages/IstioConfigNew/RequestAuthenticationForm.tsx"],"names":["React","FormGroup","Switch","TextInputBase","TextInput","JwtRuleBuilder","JwtRuleList","REQUEST_AUTHENTICATION","REQUEST_AUTHENTICATIONS","initRequestAuthentication","workloadSelector","jwtRules","addWorkloadSelector","workloadSelectorValid","addJWTRules","isRequestAuthenticationStateValid","ra","workloadSelectorRule","jwtRulesRule","length","RequestAuthenticationForm","props","onRequestAuthenticationChange","onChange","state","onChangeWorkloadSelector","setState","prevState","onChangeJwtRules","addWorkloadLabels","value","_","trim","labels","split","isValid","i","label","indexOf","splitLabel","onAddJwtRule","jwtRule","push","onRemoveJwtRule","index","splice","requestAuthentication","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { FormGroup, Switch } from '@patternfly/react-core';\nimport { TextInputBase as TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport { JWTRule } from '../../types/IstioObjects';\nimport JwtRuleBuilder from './RequestAuthorizationForm/JwtRuleBuilder';\nimport JwtRuleList from './RequestAuthorizationForm/JwtRuleList';\n\ntype Props = {\n  requestAuthentication: RequestAuthenticationState;\n  onChange: (requestAuthentication: RequestAuthenticationState) => void;\n};\n\nexport type RequestAuthenticationState = {\n  workloadSelector: string;\n  jwtRules: JWTRule[];\n  addWorkloadSelector: boolean;\n  workloadSelectorValid: boolean;\n  addJWTRules: boolean;\n};\n\nexport const REQUEST_AUTHENTICATION = 'RequestAuthentication';\nexport const REQUEST_AUTHENTICATIONS = 'requestauthentications';\n\nexport const initRequestAuthentication = (): RequestAuthenticationState => ({\n  workloadSelector: '',\n  jwtRules: [],\n  addWorkloadSelector: false,\n  workloadSelectorValid: false,\n  addJWTRules: false\n});\n\nexport const isRequestAuthenticationStateValid = (ra: RequestAuthenticationState): boolean => {\n  const workloadSelectorRule = ra.addWorkloadSelector ? ra.workloadSelectorValid : true;\n  const jwtRulesRule = ra.addJWTRules ? ra.jwtRules.length > 0 : true;\n  // Not yet used\n  return workloadSelectorRule && jwtRulesRule;\n};\n\nclass RequestAuthenticationForm extends React.Component<Props, RequestAuthenticationState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = initRequestAuthentication();\n  }\n\n  componentDidMount() {\n    this.setState({\n      workloadSelector: this.props.requestAuthentication.workloadSelector,\n      jwtRules: this.props.requestAuthentication.jwtRules,\n      addWorkloadSelector: this.props.requestAuthentication.addWorkloadSelector,\n      workloadSelectorValid: this.props.requestAuthentication.workloadSelectorValid,\n      addJWTRules: this.props.requestAuthentication.addJWTRules\n    });\n  }\n\n  onRequestAuthenticationChange = () => {\n    this.props.onChange(this.state);\n  };\n\n  onChangeWorkloadSelector = () => {\n    this.setState(\n      prevState => {\n        return {\n          addWorkloadSelector: !prevState.addWorkloadSelector\n        };\n      },\n      () => this.onRequestAuthenticationChange()\n    );\n  };\n\n  onChangeJwtRules = () => {\n    this.setState(\n      prevState => {\n        return {\n          addJWTRules: !prevState.addJWTRules\n        };\n      },\n      () => this.onRequestAuthenticationChange()\n    );\n  };\n\n  addWorkloadLabels = (value: string, _) => {\n    if (value.length === 0) {\n      this.setState(\n        {\n          workloadSelectorValid: false,\n          workloadSelector: ''\n        },\n        () => this.onRequestAuthenticationChange()\n      );\n      return;\n    }\n    value = value.trim();\n    const labels: string[] = value.split(',');\n    let isValid = true;\n    // Some smoke validation rules for the labels\n    for (let i = 0; i < labels.length; i++) {\n      const label = labels[i];\n      if (label.indexOf('=') < 0) {\n        isValid = false;\n        break;\n      }\n      const splitLabel: string[] = label.split('=');\n      if (splitLabel.length !== 2) {\n        isValid = false;\n        break;\n      }\n      if (splitLabel[0].trim().length === 0 || splitLabel[1].trim().length === 0) {\n        isValid = false;\n        break;\n      }\n    }\n    this.setState(\n      {\n        workloadSelectorValid: isValid,\n        workloadSelector: value\n      },\n      () => this.onRequestAuthenticationChange()\n    );\n  };\n\n  onAddJwtRule = (jwtRule: JWTRule) => {\n    this.setState(\n      prevState => {\n        prevState.jwtRules.push(jwtRule);\n        return {\n          jwtRules: prevState.jwtRules\n        };\n      },\n      () => this.onRequestAuthenticationChange()\n    );\n  };\n\n  onRemoveJwtRule = (index: number) => {\n    this.setState(\n      prevState => {\n        prevState.jwtRules.splice(index, 1);\n        return {\n          jwtRules: prevState.jwtRules\n        };\n      },\n      () => this.onRequestAuthenticationChange()\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <FormGroup label=\"Workload Selector\" fieldId=\"workloadSelectorSwitch\">\n          <Switch\n            id=\"workloadSelectorSwitch\"\n            label={' '}\n            labelOff={' '}\n            isChecked={this.state.addWorkloadSelector}\n            onChange={this.onChangeWorkloadSelector}\n          />\n        </FormGroup>\n        {this.state.addWorkloadSelector && (\n          <FormGroup\n            fieldId=\"workloadLabels\"\n            label=\"Labels\"\n            helperText=\"One or more labels to select a workload where the RequestAuthentication is applied.\"\n            helperTextInvalid=\"Enter a label in the format <label>=<value>. Enter one or multiple labels separated by comma.\"\n            isValid={this.state.workloadSelectorValid}\n          >\n            <TextInput\n              id=\"gwHosts\"\n              name=\"gwHosts\"\n              isDisabled={!this.state.addWorkloadSelector}\n              value={this.state.workloadSelector}\n              onChange={this.addWorkloadLabels}\n              isValid={this.state.workloadSelectorValid}\n            />\n          </FormGroup>\n        )}\n        <FormGroup label=\"JWT Rules\" fieldId=\"addJWTRules\">\n          <Switch\n            id=\"addJWTRules\"\n            label={' '}\n            labelOff={' '}\n            isChecked={this.state.addJWTRules}\n            onChange={this.onChangeJwtRules}\n          />\n        </FormGroup>\n        {this.state.addJWTRules && (\n          <>\n            <FormGroup label=\"JWT Rule Builder\" fieldId=\"jwtRulesBuilder\">\n              <JwtRuleBuilder onAddJwtRule={this.onAddJwtRule} />\n            </FormGroup>\n            <FormGroup label=\"JWT Rules List\" fieldId=\"jwtRulesList\">\n              <JwtRuleList jwtRules={this.state.jwtRules} onRemoveJwtRule={this.onRemoveJwtRule} />\n            </FormGroup>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default RequestAuthenticationForm;\n"]},"metadata":{},"sourceType":"module"}