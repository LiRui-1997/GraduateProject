{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/components/Validations/ValidationSummary.tsx\";\nimport * as React from 'react';\nimport { ValidationTypes } from '../../types/IstioObjects';\nimport { style } from 'typestyle';\nimport { Text, TextVariants, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport Validation from './Validation';\nvar tooltipListStyle = style({\n  textAlign: 'left',\n  border: 0,\n  padding: '0 0 0 0',\n  margin: '0 0 0 0'\n});\nvar tooltipSentenceStyle = style({\n  textAlign: 'center',\n  border: 0,\n  padding: '0 0 0 0',\n  margin: '0 0 0 0'\n});\nexport var ValidationSummary = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ValidationSummary, _React$PureComponent);\n\n  var _super = _createSuper(ValidationSummary);\n\n  function ValidationSummary() {\n    var _this;\n\n    _classCallCheck(this, ValidationSummary);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.getTypeMessage = function (count, type) {\n      return count > 1 ? \"\".concat(count, \" \").concat(type, \"s found\") : \"\".concat(count, \" \").concat(type, \" found\");\n    };\n\n    return _this;\n  }\n\n  _createClass(ValidationSummary, [{\n    key: \"severitySummary\",\n    value: function severitySummary() {\n      var issuesMessages = [];\n\n      if (this.props.errors > 0) {\n        issuesMessages.push(this.getTypeMessage(this.props.errors, ValidationTypes.Error));\n      }\n\n      if (this.props.warnings > 0) {\n        issuesMessages.push(this.getTypeMessage(this.props.warnings, ValidationTypes.Warning));\n      }\n\n      if (issuesMessages.length === 0) {\n        issuesMessages.push('No issues found');\n      }\n\n      return issuesMessages;\n    }\n  }, {\n    key: \"severity\",\n    value: function severity() {\n      var severity = ValidationTypes.Correct;\n\n      if (this.props.errors > 0) {\n        severity = ValidationTypes.Error;\n      } else if (this.props.warnings > 0) {\n        severity = ValidationTypes.Warning;\n      }\n\n      return severity;\n    }\n  }, {\n    key: \"tooltipNA\",\n    value: function tooltipNA() {\n      return /*#__PURE__*/React.createElement(Text, {\n        className: tooltipSentenceStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 12\n        }\n      }, \"No Istio config objects found\");\n    }\n  }, {\n    key: \"tooltipNoValidationAvailable\",\n    value: function tooltipNoValidationAvailable() {\n      return /*#__PURE__*/React.createElement(Text, {\n        className: tooltipListStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 12\n        }\n      }, \"No Istio config validation available\");\n    }\n  }, {\n    key: \"tooltipSummary\",\n    value: function tooltipSummary() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n        style: {\n          textAlign: 'left',\n          textEmphasis: 'strong'\n        },\n        component: TextVariants.p,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, \"Istio config objects analyzed: \", this.props.objectCount), /*#__PURE__*/React.createElement(\"div\", {\n        className: tooltipListStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, this.severitySummary().map(function (cat) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: cat,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }\n        }, cat);\n      })));\n    }\n  }, {\n    key: \"tooltipContent\",\n    value: function tooltipContent() {\n      if (this.props.objectCount !== undefined) {\n        if (this.props.objectCount === 0) {\n          return this.tooltipNA();\n        } else {\n          return this.tooltipSummary();\n        }\n      } else {\n        return this.tooltipNoValidationAvailable();\n      }\n    }\n  }, {\n    key: \"tooltipBase\",\n    value: function tooltipBase() {\n      return this.props.objectCount === undefined || this.props.objectCount > 0 ? /*#__PURE__*/React.createElement(Validation, {\n        iconStyle: this.props.style,\n        severity: this.severity(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'inline-block',\n          marginLeft: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }\n      }, \"N/A\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        \"aria-label\": 'Validations list',\n        position: TooltipPosition.auto,\n        enableFlip: true,\n        content: this.tooltipContent(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }\n      }, this.tooltipBase());\n    }\n  }]);\n\n  return ValidationSummary;\n}(React.PureComponent);\nexport default ValidationSummary;","map":{"version":3,"sources":["/root/kiali-ui/src/components/Validations/ValidationSummary.tsx"],"names":["React","ValidationTypes","style","Text","TextVariants","Tooltip","TooltipPosition","Validation","tooltipListStyle","textAlign","border","padding","margin","tooltipSentenceStyle","ValidationSummary","getTypeMessage","count","type","issuesMessages","props","errors","push","Error","warnings","Warning","length","severity","Correct","textEmphasis","p","objectCount","severitySummary","map","cat","undefined","tooltipNA","tooltipSummary","tooltipNoValidationAvailable","display","marginLeft","auto","tooltipContent","tooltipBase","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { CSSProperties } from 'react';\nimport { ValidationTypes } from '../../types/IstioObjects';\nimport { style } from 'typestyle';\nimport { Text, TextVariants, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport Validation from './Validation';\n\ninterface Props {\n  id: string;\n  errors: number;\n  warnings: number;\n  objectCount?: number;\n  style?: CSSProperties;\n}\n\nconst tooltipListStyle = style({\n  textAlign: 'left',\n  border: 0,\n  padding: '0 0 0 0',\n  margin: '0 0 0 0'\n});\n\nconst tooltipSentenceStyle = style({\n  textAlign: 'center',\n  border: 0,\n  padding: '0 0 0 0',\n  margin: '0 0 0 0'\n});\n\nexport class ValidationSummary extends React.PureComponent<Props> {\n  getTypeMessage = (count: number, type: ValidationTypes): string => {\n    return count > 1 ? `${count} ${type}s found` : `${count} ${type} found`;\n  };\n\n  severitySummary() {\n    const issuesMessages: string[] = [];\n\n    if (this.props.errors > 0) {\n      issuesMessages.push(this.getTypeMessage(this.props.errors, ValidationTypes.Error));\n    }\n\n    if (this.props.warnings > 0) {\n      issuesMessages.push(this.getTypeMessage(this.props.warnings, ValidationTypes.Warning));\n    }\n\n    if (issuesMessages.length === 0) {\n      issuesMessages.push('No issues found');\n    }\n\n    return issuesMessages;\n  }\n\n  severity() {\n    let severity = ValidationTypes.Correct;\n    if (this.props.errors > 0) {\n      severity = ValidationTypes.Error;\n    } else if (this.props.warnings > 0) {\n      severity = ValidationTypes.Warning;\n    }\n\n    return severity;\n  }\n\n  tooltipNA() {\n    return <Text className={tooltipSentenceStyle}>No Istio config objects found</Text>;\n  }\n\n  tooltipNoValidationAvailable() {\n    return <Text className={tooltipListStyle}>No Istio config validation available</Text>;\n  }\n\n  tooltipSummary() {\n    return (\n      <>\n        <Text style={{ textAlign: 'left', textEmphasis: 'strong' }} component={TextVariants.p}>\n          Istio config objects analyzed: {this.props.objectCount}\n        </Text>\n        <div className={tooltipListStyle}>\n          {this.severitySummary().map(cat => (\n            <div key={cat}>{cat}</div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  tooltipContent() {\n    if (this.props.objectCount !== undefined) {\n      if (this.props.objectCount === 0) {\n        return this.tooltipNA();\n      } else {\n        return this.tooltipSummary();\n      }\n    } else {\n      return this.tooltipNoValidationAvailable();\n    }\n  }\n\n  tooltipBase() {\n    return this.props.objectCount === undefined || this.props.objectCount > 0 ? (\n      <Validation iconStyle={this.props.style} severity={this.severity()} />\n    ) : (\n      <div style={{ display: 'inline-block', marginLeft: '5px' }}>N/A</div>\n    );\n  }\n\n  render() {\n    return (\n      <Tooltip\n        aria-label={'Validations list'}\n        position={TooltipPosition.auto}\n        enableFlip={true}\n        content={this.tooltipContent()}\n      >\n        {this.tooltipBase()}\n      </Tooltip>\n    );\n  }\n}\n\nexport default ValidationSummary;\n"]},"metadata":{},"sourceType":"module"}