{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/components/IstioActions/IstioActionsNamespaceDropdown.tsx\";\nimport * as React from 'react';\nimport { Dropdown, DropdownGroup, DropdownItem, DropdownPosition, DropdownToggle, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport history from '../../app/History';\nimport { NEW_ISTIO_RESOURCE } from '../../pages/IstioConfigNew/IstioConfigNewPage';\nimport { serverConfig } from 'config';\n\nvar IstioActionsNamespaceDropdown = /*#__PURE__*/function (_React$Component) {\n  _inherits(IstioActionsNamespaceDropdown, _React$Component);\n\n  var _super = _createSuper(IstioActionsNamespaceDropdown);\n\n  function IstioActionsNamespaceDropdown(props) {\n    var _this;\n\n    _classCallCheck(this, IstioActionsNamespaceDropdown);\n\n    _this = _super.call(this, props);\n\n    _this.onSelect = function (_) {\n      _this.setState({\n        dropdownOpen: !_this.state.dropdownOpen\n      });\n    };\n\n    _this.onToggle = function (dropdownState) {\n      _this.setState({\n        dropdownOpen: dropdownState\n      });\n    };\n\n    _this.onClickCreate = function (type) {\n      history.push('/istio/new/' + type);\n    };\n\n    _this.renderTooltip = function (key, position, msg, child) {\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        key: 'tooltip_' + key,\n        position: position,\n        content: /*#__PURE__*/React.createElement(React.Fragment, null, msg),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'inline-block',\n          cursor: 'not-allowed',\n          textAlign: 'left'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, child));\n    };\n\n    _this.state = {\n      dropdownOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(IstioActionsNamespaceDropdown, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var dropdownItemsRaw = NEW_ISTIO_RESOURCE.map(function (r) {\n        return {\n          name: r.value,\n          action: /*#__PURE__*/React.createElement(DropdownItem, {\n            isDisabled: serverConfig.deployment.viewOnlyMode,\n            key: 'createIstioConfig_' + r.value,\n            onClick: function onClick() {\n              return _this2.onClickCreate(r.value);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 11\n            }\n          }, r.label)\n        };\n      });\n      var dropdownItems = [/*#__PURE__*/React.createElement(DropdownGroup, {\n        key: 'group_create',\n        label: 'Create',\n        className: \"kiali-group-menu\",\n        children: dropdownItemsRaw.map(function (r) {\n          return serverConfig.deployment.viewOnlyMode ? _this2.renderTooltip(r.name, TooltipPosition.left, 'User has not permissions', r.action) : r.action;\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      })];\n      return /*#__PURE__*/React.createElement(Dropdown, {\n        id: \"actions\",\n        toggle: /*#__PURE__*/React.createElement(DropdownToggle, {\n          onToggle: this.onToggle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }\n        }, \"Actions\"),\n        onSelect: this.onSelect,\n        position: DropdownPosition.right,\n        isOpen: this.state.dropdownOpen,\n        dropdownItems: dropdownItems,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return IstioActionsNamespaceDropdown;\n}(React.Component);\n\nexport default IstioActionsNamespaceDropdown;","map":{"version":3,"sources":["/root/kiali-ui/src/components/IstioActions/IstioActionsNamespaceDropdown.tsx"],"names":["React","Dropdown","DropdownGroup","DropdownItem","DropdownPosition","DropdownToggle","Tooltip","TooltipPosition","history","NEW_ISTIO_RESOURCE","serverConfig","IstioActionsNamespaceDropdown","props","onSelect","_","setState","dropdownOpen","state","onToggle","dropdownState","onClickCreate","type","push","renderTooltip","key","position","msg","child","display","cursor","textAlign","dropdownItemsRaw","map","r","name","value","action","deployment","viewOnlyMode","label","dropdownItems","left","right","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Dropdown,\n  DropdownGroup,\n  DropdownItem,\n  DropdownPosition,\n  DropdownToggle,\n  Tooltip,\n  TooltipPosition\n} from '@patternfly/react-core';\nimport history from '../../app/History';\nimport { NEW_ISTIO_RESOURCE } from '../../pages/IstioConfigNew/IstioConfigNewPage';\nimport { serverConfig } from 'config';\n\ntype Props = {};\n\ntype State = {\n  dropdownOpen: boolean;\n};\n\ntype ActionItem = {\n  name: string;\n  action: JSX.Element;\n};\n\nclass IstioActionsNamespaceDropdown extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      dropdownOpen: false\n    };\n  }\n\n  onSelect = _ => {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  };\n\n  onToggle = (dropdownState: boolean) => {\n    this.setState({\n      dropdownOpen: dropdownState\n    });\n  };\n\n  onClickCreate = (type: string) => {\n    history.push('/istio/new/' + type);\n  };\n\n  renderTooltip = (key, position, msg, child): JSX.Element => {\n    return (\n      <Tooltip key={'tooltip_' + key} position={position} content={<>{msg}</>}>\n        <div style={{ display: 'inline-block', cursor: 'not-allowed', textAlign: 'left' }}>{child}</div>\n      </Tooltip>\n    );\n  };\n\n  render() {\n    const dropdownItemsRaw = NEW_ISTIO_RESOURCE.map(\n      (r): ActionItem => ({\n        name: r.value,\n        action: (\n          <DropdownItem\n            isDisabled={serverConfig.deployment.viewOnlyMode}\n            key={'createIstioConfig_' + r.value}\n            onClick={() => this.onClickCreate(r.value)}\n          >\n            {r.label}\n          </DropdownItem>\n        )\n      })\n    );\n\n    const dropdownItems = [\n      <DropdownGroup\n        key={'group_create'}\n        label={'Create'}\n        className=\"kiali-group-menu\"\n        children={dropdownItemsRaw.map(r =>\n          serverConfig.deployment.viewOnlyMode\n            ? this.renderTooltip(r.name, TooltipPosition.left, 'User has not permissions', r.action)\n            : r.action\n        )}\n      />\n    ];\n    return (\n      <Dropdown\n        id=\"actions\"\n        toggle={<DropdownToggle onToggle={this.onToggle}>Actions</DropdownToggle>}\n        onSelect={this.onSelect}\n        position={DropdownPosition.right}\n        isOpen={this.state.dropdownOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n}\n\nexport default IstioActionsNamespaceDropdown;\n"]},"metadata":{},"sourceType":"module"}