{"ast":null,"code":"import _regeneratorRuntime from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import axios from'axios';import{config}from'../config';import{HTTP_VERBS}from'../types/Common';import{NodeType}from'../types/Graph';import{AppHealth,ServiceHealth,WorkloadHealth}from'../types/Health';export var ANONYMOUS_USER='anonymous';/** API URLs */var urls=config.api.urls;/**  Headers Definitions */var loginHeaders=config.login.headers;/**  Helpers to Requests */var getHeaders=function getHeaders(){return _objectSpread({},loginHeaders);};/** Create content type correctly for a given request type */var getHeadersWithMethod=function getHeadersWithMethod(method){var allHeaders=getHeaders();if(method===HTTP_VERBS.PATCH){allHeaders['Content-Type']='application/json';}return allHeaders;};var basicAuth=function basicAuth(username,password){return{username:username,password:password};};var newRequest=function newRequest(method,url,queryParams,data){return axios.request({method:method,url:url,data:data,headers:getHeadersWithMethod(method),params:queryParams});};/** Requests */export var extendSession=function extendSession(){return newRequest(HTTP_VERBS.GET,urls.authenticate,{},{});};export var login=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request,params,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:request=_args.length>0&&_args[0]!==undefined?_args[0]:{username:ANONYMOUS_USER,password:'anonymous',token:''};params=new URLSearchParams();params.append('token',request.token);return _context.abrupt(\"return\",axios({method:HTTP_VERBS.POST,url:urls.authenticate,headers:getHeaders(),auth:basicAuth(request.username,request.password),data:params}));case 4:case\"end\":return _context.stop();}}},_callee);}));return function login(){return _ref.apply(this,arguments);};}();export var logout=function logout(){return newRequest(HTTP_VERBS.GET,urls.logout,{},{});};export var getAuthInfo=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",newRequest(HTTP_VERBS.GET,urls.authInfo,{},{}));case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function getAuthInfo(){return _ref2.apply(this,arguments);};}();export var checkOpenshiftAuth=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:return _context3.abrupt(\"return\",newRequest(HTTP_VERBS.POST,urls.authenticate,{},data));case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function checkOpenshiftAuth(_x){return _ref3.apply(this,arguments);};}();export var getStatus=function getStatus(){return newRequest(HTTP_VERBS.GET,urls.status,{},{});};export var getNamespaces=function getNamespaces(){return newRequest(HTTP_VERBS.GET,urls.namespaces,{},{});};export var getNamespaceMetrics=function getNamespaceMetrics(namespace,params){return newRequest(HTTP_VERBS.GET,urls.namespaceMetrics(namespace),params,{});};export var getMeshTls=function getMeshTls(){return newRequest(HTTP_VERBS.GET,urls.meshTls(),{},{});};export var getIstioStatus=function getIstioStatus(){return newRequest(HTTP_VERBS.GET,urls.istioStatus(),{},{});};export var getIstioCertsInfo=function getIstioCertsInfo(){return newRequest(HTTP_VERBS.GET,urls.istioCertsInfo(),{},{});};export var getNamespaceTls=function getNamespaceTls(namespace){return newRequest(HTTP_VERBS.GET,urls.namespaceTls(namespace),{},{});};export var getNamespaceValidations=function getNamespaceValidations(namespace){return newRequest(HTTP_VERBS.GET,urls.namespaceValidations(namespace),{},{});};export var updateNamespace=function updateNamespace(namespace,jsonPatch){return newRequest(HTTP_VERBS.PATCH,urls.namespace(namespace),{},jsonPatch);};export var getIstioConfig=function getIstioConfig(namespace,objects,validate,labelSelector,workloadSelector){var params=objects&&objects.length>0?{objects:objects.join(',')}:{};if(validate){params.validate=validate;}if(labelSelector){params.labelSelector=labelSelector;}if(workloadSelector){params.workloadSelector=workloadSelector;}return newRequest(HTTP_VERBS.GET,urls.istioConfig(namespace),params,{});};export var getIstioConfigDetail=function getIstioConfigDetail(namespace,objectType,object,validate){return newRequest(HTTP_VERBS.GET,urls.istioConfigDetail(namespace,objectType,object),validate?{validate:true}:{},{});};export var deleteIstioConfigDetail=function deleteIstioConfigDetail(namespace,objectType,object){return newRequest(HTTP_VERBS.DELETE,urls.istioConfigDetail(namespace,objectType,object),{},{});};export var updateIstioConfigDetail=function updateIstioConfigDetail(namespace,objectType,object,jsonPatch){return newRequest(HTTP_VERBS.PATCH,urls.istioConfigDetail(namespace,objectType,object),{},jsonPatch);};export var createIstioConfigDetail=function createIstioConfigDetail(namespace,objectType,json){return newRequest(HTTP_VERBS.POST,urls.istioConfigCreate(namespace,objectType),{},json);};export var getServices=function getServices(namespace){return newRequest(HTTP_VERBS.GET,urls.services(namespace),{},{});};export var getServiceMetrics=function getServiceMetrics(namespace,service,params){return newRequest(HTTP_VERBS.GET,urls.serviceMetrics(namespace,service),params,{});};export var getServiceDashboard=function getServiceDashboard(namespace,service,params){return newRequest(HTTP_VERBS.GET,urls.serviceDashboard(namespace,service),params,{});};export var getAggregateMetrics=function getAggregateMetrics(namespace,aggregate,aggregateValue,params){return newRequest(HTTP_VERBS.GET,urls.aggregateMetrics(namespace,aggregate,aggregateValue),params,{});};export var getApp=function getApp(namespace,app){return newRequest(HTTP_VERBS.GET,urls.app(namespace,app),{},{});};export var getApps=function getApps(namespace){return newRequest(HTTP_VERBS.GET,urls.apps(namespace),{},{});};export var getAppMetrics=function getAppMetrics(namespace,app,params){return newRequest(HTTP_VERBS.GET,urls.appMetrics(namespace,app),params,{});};export var getAppDashboard=function getAppDashboard(namespace,app,params){return newRequest(HTTP_VERBS.GET,urls.appDashboard(namespace,app),params,{});};export var getWorkloadMetrics=function getWorkloadMetrics(namespace,workload,params){return newRequest(HTTP_VERBS.GET,urls.workloadMetrics(namespace,workload),params,{});};export var getWorkloadDashboard=function getWorkloadDashboard(namespace,workload,params){return newRequest(HTTP_VERBS.GET,urls.workloadDashboard(namespace,workload),params,{});};export var getCustomDashboard=function getCustomDashboard(ns,tpl,params){return newRequest(HTTP_VERBS.GET,urls.customDashboard(ns,tpl),params,{});};export var getServiceHealth=function getServiceHealth(namespace,service,duration,hasSidecar){var params=duration?{rateInterval:String(duration)+'s'}:{};return newRequest(HTTP_VERBS.GET,urls.serviceHealth(namespace,service),params,{}).then(function(response){return ServiceHealth.fromJson(namespace,service,response.data,{rateInterval:duration,hasSidecar:hasSidecar});});};export var getAppHealth=function getAppHealth(namespace,app,duration,hasSidecar){var params=duration?{rateInterval:String(duration)+'s'}:{};return newRequest(HTTP_VERBS.GET,urls.appHealth(namespace,app),params,{}).then(function(response){return AppHealth.fromJson(namespace,app,response.data,{rateInterval:duration,hasSidecar:hasSidecar});});};export var getWorkloadHealth=function getWorkloadHealth(namespace,workload,workloadType,durationSec,hasSidecar){var params=durationSec?{rateInterval:String(durationSec)+'s'}:{};params['type']=workloadType;return newRequest(HTTP_VERBS.GET,urls.workloadHealth(namespace,workload),params,{}).then(function(response){return WorkloadHealth.fromJson(namespace,workload,response.data,{rateInterval:durationSec,hasSidecar:hasSidecar});});};export var getNamespaceAppHealth=function getNamespaceAppHealth(namespace,duration,queryTime){var params={type:'app'};if(duration){params.rateInterval=String(duration)+'s';}if(queryTime){params.queryTime=String(queryTime);}return newRequest(HTTP_VERBS.GET,urls.namespaceHealth(namespace),params,{}).then(function(response){var ret={};Object.keys(response.data).forEach(function(k){ret[k]=AppHealth.fromJson(namespace,k,response.data[k],{rateInterval:duration,hasSidecar:true});});return ret;});};export var getNamespaceServiceHealth=function getNamespaceServiceHealth(namespace,duration,queryTime){var params={type:'service'};if(duration){params.rateInterval=String(duration)+'s';}if(queryTime){params.queryTime=String(queryTime);}return newRequest(HTTP_VERBS.GET,urls.namespaceHealth(namespace),params,{}).then(function(response){var ret={};Object.keys(response.data).forEach(function(k){ret[k]=ServiceHealth.fromJson(namespace,k,response.data[k],{rateInterval:duration,hasSidecar:true});});return ret;});};export var getNamespaceWorkloadHealth=function getNamespaceWorkloadHealth(namespace,duration,queryTime){var params={type:'workload'};if(duration){params.rateInterval=String(duration)+'s';}if(queryTime){params.queryTime=String(queryTime);}return newRequest(HTTP_VERBS.GET,urls.namespaceHealth(namespace),params,{}).then(function(response){var ret={};Object.keys(response.data).forEach(function(k){ret[k]=WorkloadHealth.fromJson(namespace,k,response.data[k],{rateInterval:duration,hasSidecar:true});});return ret;});};export var getGrafanaInfo=function getGrafanaInfo(){return newRequest(HTTP_VERBS.GET,urls.grafana,{},{});};export var getJaegerInfo=function getJaegerInfo(){return newRequest(HTTP_VERBS.GET,urls.jaeger,{},{});};export var getAppTraces=function getAppTraces(namespace,app,params){return newRequest(HTTP_VERBS.GET,urls.appTraces(namespace,app),params,{});};export var getServiceTraces=function getServiceTraces(namespace,service,params){return newRequest(HTTP_VERBS.GET,urls.serviceTraces(namespace,service),params,{});};export var getWorkloadTraces=function getWorkloadTraces(namespace,workload,params){return newRequest(HTTP_VERBS.GET,urls.workloadTraces(namespace,workload),params,{});};export var getJaegerErrorTraces=function getJaegerErrorTraces(namespace,service,duration){return newRequest(HTTP_VERBS.GET,urls.jaegerErrorTraces(namespace,service),{duration:duration},{});};export var getJaegerTrace=function getJaegerTrace(idTrace){return newRequest(HTTP_VERBS.GET,urls.jaegerTrace(idTrace),{},{});};export var getGraphElements=function getGraphElements(params){return newRequest(HTTP_VERBS.GET,urls.namespacesGraphElements,params,{});};export var getNodeGraphElements=function getNodeGraphElements(node,params){switch(node.nodeType){case NodeType.AGGREGATE:return!node.service?newRequest(HTTP_VERBS.GET,urls.aggregateGraphElements(node.namespace.name,node.aggregate,node.aggregateValue),params,{}):newRequest(HTTP_VERBS.GET,urls.aggregateByServiceGraphElements(node.namespace.name,node.aggregate,node.aggregateValue,node.service),params,{});case NodeType.APP:case NodeType.BOX:// we only support app box node graphs, so treat like app\nreturn newRequest(HTTP_VERBS.GET,urls.appGraphElements(node.namespace.name,node.app,node.version),params,{});case NodeType.SERVICE:return newRequest(HTTP_VERBS.GET,urls.serviceGraphElements(node.namespace.name,node.service),params,{});case NodeType.WORKLOAD:return newRequest(HTTP_VERBS.GET,urls.workloadGraphElements(node.namespace.name,node.workload),params,{});default:// default to namespace graph\nreturn getGraphElements(_objectSpread({namespaces:node.namespace.name},params));}};export var getServerConfig=function getServerConfig(){return newRequest(HTTP_VERBS.GET,urls.serverConfig,{},{});};export var getServiceDetail=function getServiceDetail(namespace,service,validate,rateInterval){var params={};if(validate){params.validate=true;}if(rateInterval){params.rateInterval=\"\".concat(rateInterval,\"s\");}return newRequest(HTTP_VERBS.GET,urls.service(namespace,service),params,{}).then(function(r){var info=r.data;if(info.health){// Default rate interval in backend = 600s\ninfo.health=ServiceHealth.fromJson(namespace,service,info.health,{rateInterval:rateInterval||600,hasSidecar:info.istioSidecar});}return info;});};export var getWorkloads=function getWorkloads(namespace){return newRequest(HTTP_VERBS.GET,urls.workloads(namespace),{},{});};export var getWorkload=function getWorkload(namespace,name){return newRequest(HTTP_VERBS.GET,urls.workload(namespace,name),{},{});};export var updateWorkload=function updateWorkload(namespace,name,type,jsonPatch){return newRequest(HTTP_VERBS.PATCH,urls.workload(namespace,name),{type:type},jsonPatch);};export var getPod=function getPod(namespace,name){return newRequest(HTTP_VERBS.GET,urls.pod(namespace,name),{},{});};export var getPodLogs=function getPodLogs(namespace,name,container,tailLines,sinceTime,duration,isProxy){var params={};if(container){params.container=container;}if(sinceTime){params.sinceTime=sinceTime;}if(tailLines&&tailLines>0){params.tailLines=tailLines;}if(duration&&duration>0){params.duration=\"\".concat(duration,\"s\");}params.isProxy=!!isProxy;return newRequest(HTTP_VERBS.GET,urls.podLogs(namespace,name),params,{});};export var setPodEnvoyProxyLogLevel=function setPodEnvoyProxyLogLevel(namespace,name,level){var params={};params.level=level;return newRequest(HTTP_VERBS.POST,urls.podEnvoyProxyLogging(namespace,name),params,{});};export var getPodEnvoyProxy=function getPodEnvoyProxy(namespace,pod){return newRequest(HTTP_VERBS.GET,urls.podEnvoyProxy(namespace,pod),{},{});};export var getPodEnvoyProxyResourceEntries=function getPodEnvoyProxyResourceEntries(namespace,pod,resource){return newRequest(HTTP_VERBS.GET,urls.podEnvoyProxyResourceEntries(namespace,pod,resource),{},{});};export var getErrorString=function getErrorString(error){if(error&&error.response){if(error.response.data&&error.response.data.error){return error.response.data.error;}if(error.response.statusText){var errorString=error.response.statusText;if(error.response.status===401){errorString+=': Has your session expired? Try logging in again.';}return errorString;}}return'';};export var getErrorDetail=function getErrorDetail(error){if(error&&error.response){if(error.response.data&&error.response.data.detail){return error.response.data.detail;}}return'';};export var getAppSpans=function getAppSpans(namespace,app,params){return newRequest(HTTP_VERBS.GET,urls.appSpans(namespace,app),params,{});};export var getServiceSpans=function getServiceSpans(namespace,service,params){return newRequest(HTTP_VERBS.GET,urls.serviceSpans(namespace,service),params,{});};export var getWorkloadSpans=function getWorkloadSpans(namespace,workload,params){return newRequest(HTTP_VERBS.GET,urls.workloadSpans(namespace,workload),params,{});};export var getIstioPermissions=function getIstioPermissions(namespaces){return newRequest(HTTP_VERBS.GET,urls.istioPermissions,{namespaces:namespaces.join(',')},{});};export var getIter8Info=function getIter8Info(){return newRequest(HTTP_VERBS.GET,urls.iter8,{},{});};export var getIter8Metrics=function getIter8Metrics(){return newRequest(HTTP_VERBS.GET,urls.iter8Metrics,{},{});};export var getExperiments=function getExperiments(namespaces){return newRequest(HTTP_VERBS.GET,urls.iter8Experiments,{namespaces:namespaces.join(',')},{});};export var getExperimentsByNamespace=function getExperimentsByNamespace(namespace){return newRequest(HTTP_VERBS.GET,urls.iter8ExperimentsByNamespace(namespace),{},{});};export var getExperiment=function getExperiment(namespace,name){return newRequest(HTTP_VERBS.GET,urls.iter8Experiment(namespace,name),{},{});};export var getExperimentYAML=function getExperimentYAML(namespace,name){return newRequest(HTTP_VERBS.GET,urls.iter8ExperimentYAML(namespace,name),{},{});};export var deleteExperiment=function deleteExperiment(namespace,name){return newRequest(HTTP_VERBS.DELETE,urls.iter8Experiment(namespace,name),{},{});};export var createExperiment=function createExperiment(namespace,specBody,params){return newRequest(HTTP_VERBS.POST,urls.iter8ExperimentsByNamespace(namespace),params,specBody);};export var updateExperiment=function updateExperiment(namespace,name,specBody){return newRequest(HTTP_VERBS.PATCH,urls.iter8Experiment(namespace,name),{},specBody);};export var getMetricsStats=function getMetricsStats(queries){return newRequest(HTTP_VERBS.POST,urls.metricsStats,{},{queries:queries});};export var getClusters=function getClusters(){return newRequest(HTTP_VERBS.GET,urls.clusters,{},{});};","map":null,"metadata":{},"sourceType":"module"}