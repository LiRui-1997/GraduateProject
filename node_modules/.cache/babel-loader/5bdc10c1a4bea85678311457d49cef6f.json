{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/components/JaegerIntegration/JaegerResults/SpanDetails.tsx\";\nimport * as React from 'react';\nimport { Card, CardBody } from '@patternfly/react-core';\nimport SpanTable from './SpanTable';\nimport { FilterSelected, StatefulFilters } from 'components/Filters/StatefulFilters';\nimport { spanFilters } from './Filters';\nimport { runFilters } from 'components/FilterList/FilterHelper';\nimport { TraceLabels } from './TraceLabels';\nexport var SpanDetails = /*#__PURE__*/function (_React$Component) {\n  _inherits(SpanDetails, _React$Component);\n\n  var _super = _createSuper(SpanDetails);\n\n  function SpanDetails(props) {\n    var _this;\n\n    _classCallCheck(this, SpanDetails);\n\n    _this = _super.call(this, props);\n    var filters = spanFilters(props.items);\n    _this.state = {\n      activeFilters: FilterSelected.init(filters)\n    };\n    return _this;\n  }\n\n  _createClass(SpanDetails, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var filters = spanFilters(this.props.items);\n      var filteredItems = runFilters(this.props.items, filters, this.state.activeFilters);\n      return /*#__PURE__*/React.createElement(Card, {\n        isCompact: true,\n        style: {\n          border: '1px solid #e6e6e6'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(StatefulFilters, {\n        initialFilters: filters,\n        onFilterChange: function onFilterChange(active) {\n          return _this2.setState({\n            activeFilters: active\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TraceLabels, {\n        spans: this.props.items,\n        filteredSpans: this.state.activeFilters.filters.length > 0 ? filteredItems : undefined,\n        oneline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(SpanTable, {\n        items: filteredItems,\n        namespace: this.props.namespace,\n        externalURL: this.props.externalURL,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return SpanDetails;\n}(React.Component);","map":{"version":3,"sources":["/root/kiali-ui/src/components/JaegerIntegration/JaegerResults/SpanDetails.tsx"],"names":["React","Card","CardBody","SpanTable","FilterSelected","StatefulFilters","spanFilters","runFilters","TraceLabels","SpanDetails","props","filters","items","state","activeFilters","init","filteredItems","border","active","setState","length","undefined","namespace","externalURL","Component"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,wBAA/B;AAGA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,oCAAhD;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,UAAT,QAA2B,oCAA3B;AAEA,SAASC,WAAT,QAA4B,eAA5B;AAaA,WAAaC,WAAb;AAAA;;AAAA;;AACE,uBAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AACxB,8BAAMA,KAAN;AACA,QAAMC,OAAO,GAAGL,WAAW,CAACI,KAAK,CAACE,KAAP,CAA3B;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAEV,cAAc,CAACW,IAAf,CAAoBJ,OAApB;AADJ,KAAb;AAHwB;AAMzB;;AAPH;AAAA;AAAA,WASE,kBAAS;AAAA;;AACP,UAAMA,OAAO,GAAGL,WAAW,CAAC,KAAKI,KAAL,CAAWE,KAAZ,CAA3B;AACA,UAAMI,aAAa,GAAGT,UAAU,CAAC,KAAKG,KAAL,CAAWE,KAAZ,EAAmBD,OAAnB,EAA4B,KAAKE,KAAL,CAAWC,aAAvC,CAAhC;AACA,0BACE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,KAAK,EAAE;AAAEG,UAAAA,MAAM,EAAE;AAAV,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,eAAD;AAAiB,QAAA,cAAc,EAAEN,OAAjC;AAA0C,QAAA,cAAc,EAAE,wBAAAO,MAAM;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAc;AAAEL,YAAAA,aAAa,EAAEI;AAAjB,WAAd,CAAJ;AAAA,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AACE,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWE,KADpB;AAEE,QAAA,aAAa,EAAE,KAAKC,KAAL,CAAWC,aAAX,CAAyBH,OAAzB,CAAiCS,MAAjC,GAA0C,CAA1C,GAA8CJ,aAA9C,GAA8DK,SAF/E;AAGE,QAAA,OAAO,EAAE,IAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAQE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAEL,aAAlB;AAAiC,QAAA,SAAS,EAAE,KAAKN,KAAL,CAAWY,SAAvD;AAAkE,QAAA,WAAW,EAAE,KAAKZ,KAAL,CAAWa,WAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF,CADF;AAcD;AA1BH;;AAAA;AAAA,EAAiCvB,KAAK,CAACwB,SAAvC","sourcesContent":["import * as React from 'react';\nimport { Card, CardBody } from '@patternfly/react-core';\n\nimport { RichSpanData } from 'types/JaegerInfo';\nimport SpanTable from './SpanTable';\nimport { FilterSelected, StatefulFilters } from 'components/Filters/StatefulFilters';\nimport { spanFilters } from './Filters';\nimport { runFilters } from 'components/FilterList/FilterHelper';\nimport { ActiveFiltersInfo } from 'types/Filters';\nimport { TraceLabels } from './TraceLabels';\n\ninterface Props {\n  items: RichSpanData[];\n  namespace: string;\n  target: string;\n  externalURL?: string;\n}\n\ninterface State {\n  activeFilters: ActiveFiltersInfo;\n}\n\nexport class SpanDetails extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    const filters = spanFilters(props.items);\n    this.state = {\n      activeFilters: FilterSelected.init(filters)\n    };\n  }\n\n  render() {\n    const filters = spanFilters(this.props.items);\n    const filteredItems = runFilters(this.props.items, filters, this.state.activeFilters);\n    return (\n      <Card isCompact style={{ border: '1px solid #e6e6e6' }}>\n        <CardBody>\n          <StatefulFilters initialFilters={filters} onFilterChange={active => this.setState({ activeFilters: active })}>\n            <TraceLabels\n              spans={this.props.items}\n              filteredSpans={this.state.activeFilters.filters.length > 0 ? filteredItems : undefined}\n              oneline={true}\n            />\n          </StatefulFilters>\n          <SpanTable items={filteredItems} namespace={this.props.namespace} externalURL={this.props.externalURL} />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}