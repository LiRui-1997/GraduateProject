{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/components/CytoscapeGraph/CytoscapeToolbar.tsx\";\nimport * as React from 'react';\nimport { Button, Toolbar, ToolbarItem, Tooltip } from '@patternfly/react-core';\nimport { ExpandArrowsAltIcon, PficonDragdropIcon, SearchMinusIcon, SearchPlusIcon, TopologyIcon } from '@patternfly/react-icons';\nimport { style } from 'typestyle';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { PFColors } from '../Pf/PfColors';\nimport * as CytoscapeGraphUtils from './CytoscapeGraphUtils';\nimport { ColaGraph } from './graphs/ColaGraph';\nimport { CoseGraph } from './graphs/CoseGraph';\nimport { DagreGraph } from './graphs/DagreGraph';\nimport { GraphActions } from '../../actions/GraphActions';\nimport { HistoryManager, URLParam } from '../../app/History';\nimport * as LayoutDictionary from './graphs/LayoutDictionary';\nimport { GraphToolbarActions } from '../../actions/GraphToolbarActions';\nimport { GraphTourStops } from 'pages/Graph/GraphHelpTour';\nimport TourStopContainer from 'components/Tour/TourStop';\nvar buttonStyle = style({\n  backgroundColor: PFColors.White,\n  marginRight: '1px'\n});\nvar activeButtonStyle = style({\n  color: PFColors.Active\n});\nvar cytoscapeToolbarStyle = style({\n  padding: '7px 10px'\n});\nvar cytoscapeToolbarPadStyle = style({\n  marginLeft: '9px'\n});\nvar ZOOM_STEP = 0.2;\nexport var CytoscapeToolbar = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(CytoscapeToolbar, _React$PureComponent);\n\n  var _super = _createSuper(CytoscapeToolbar);\n\n  function CytoscapeToolbar(props) {\n    var _this;\n\n    _classCallCheck(this, CytoscapeToolbar);\n\n    _this = _super.call(this, props); // Let URL override current redux state at construction time. Update URL with unset params.\n\n    _this.getCy = function () {\n      if (_this.props.cytoscapeGraphRef.current) {\n        return _this.props.cytoscapeGraphRef.current.getCy();\n      }\n\n      return null;\n    };\n\n    _this.toggleDrag = function () {\n      var cy = _this.getCy();\n\n      if (!cy) {\n        return;\n      }\n\n      cy.autoungrabify(_this.state.allowGrab);\n\n      _this.setState({\n        allowGrab: !_this.state.allowGrab\n      });\n    };\n\n    _this.zoom = function (step) {\n      var cy = _this.getCy();\n\n      var container = cy ? cy.container() : undefined;\n\n      if (cy && container) {\n        cy.zoom({\n          level: cy.zoom() * (1 + step),\n          renderedPosition: {\n            x: container.offsetWidth / 2,\n            y: container.offsetHeight / 2\n          }\n        });\n      }\n    };\n\n    _this.zoomIn = function () {\n      _this.zoom(ZOOM_STEP);\n    };\n\n    _this.zoomOut = function () {\n      _this.zoom(-ZOOM_STEP);\n    };\n\n    _this.fit = function () {\n      var cy = _this.getCy();\n\n      if (cy) {\n        CytoscapeGraphUtils.safeFit(cy);\n      }\n    };\n\n    var urlLayout = HistoryManager.getParam(URLParam.GRAPH_LAYOUT);\n\n    if (urlLayout) {\n      if (urlLayout !== props.layout.name) {\n        props.setLayout(LayoutDictionary.getLayoutByName(urlLayout));\n      }\n    } else {\n      HistoryManager.setParam(URLParam.GRAPH_LAYOUT, props.layout.name);\n    }\n\n    _this.state = {\n      allowGrab: false\n    };\n    return _this;\n  }\n\n  _createClass(CytoscapeToolbar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      // ensure redux state and URL are aligned\n      HistoryManager.setParam(URLParam.GRAPH_LAYOUT, this.props.layout.name);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Toolbar, {\n        className: cytoscapeToolbarStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ToolbarItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        content: this.state.allowGrab ? 'Disable Drag' : 'Enable Drag',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        id: \"toolbar_grab\",\n        \"aria-label\": \"Toggle Drag\",\n        className: buttonStyle,\n        variant: \"plain\",\n        onClick: function onClick() {\n          return _this2.toggleDrag();\n        },\n        isActive: this.state.allowGrab,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(PficonDragdropIcon, {\n        className: this.state.allowGrab ? activeButtonStyle : undefined,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(ToolbarItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        content: \"Zoom In\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        id: \"toolbar_zoom_in\",\n        \"aria-label\": \"Zoom In\",\n        className: [cytoscapeToolbarPadStyle, buttonStyle].join(' '),\n        variant: \"plain\",\n        onClick: function onClick() {\n          return _this2.zoomIn();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SearchPlusIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(ToolbarItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        content: \"Zoom Out\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        id: \"toolbar_zoom_out\",\n        \"aria-label\": \"Zoom Out\",\n        className: buttonStyle,\n        variant: \"plain\",\n        onClick: function onClick() {\n          return _this2.zoomOut();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SearchMinusIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(ToolbarItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        content: \"Zoom to Fit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        id: \"toolbar_graph_fit\",\n        \"aria-label\": \"Zoom to Fit\",\n        className: [cytoscapeToolbarPadStyle, buttonStyle].join(' '),\n        variant: \"plain\",\n        onClick: function onClick() {\n          return _this2.fit();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ExpandArrowsAltIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(ToolbarItem, {\n        className: cytoscapeToolbarPadStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        content: 'Layout default ' + DagreGraph.getLayout().name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        id: \"toolbar_layout_default\",\n        \"aria-label\": \"Graph Layout Default Style\",\n        className: buttonStyle,\n        variant: \"plain\",\n        onClick: function onClick() {\n          _this2.props.setLayout(DagreGraph.getLayout());\n        },\n        isActive: this.props.layout.name === DagreGraph.getLayout().name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TopologyIcon, {\n        className: this.props.layout.name === DagreGraph.getLayout().name ? activeButtonStyle : undefined,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(TourStopContainer, {\n        info: GraphTourStops.Layout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ToolbarItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        content: 'Layout 1 ' + CoseGraph.getLayout().name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        id: \"toolbar_layout1\",\n        \"aria-label\": \"Graph Layout Style 1\",\n        className: buttonStyle,\n        variant: \"plain\",\n        onClick: function onClick() {\n          _this2.props.setLayout(CoseGraph.getLayout());\n        },\n        isActive: this.props.layout.name === CoseGraph.getLayout().name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TopologyIcon, {\n        className: this.props.layout.name === CoseGraph.getLayout().name ? activeButtonStyle : undefined,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      }), ' ', \"1\")))), /*#__PURE__*/React.createElement(ToolbarItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        content: 'Layout 2 ' + ColaGraph.getLayout().name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        id: \"toolbar_layout2\",\n        \"aria-label\": \"Graph Layout Style 2\",\n        className: buttonStyle,\n        variant: \"plain\",\n        onClick: function onClick() {\n          _this2.props.setLayout(ColaGraph.getLayout());\n        },\n        isActive: this.props.layout.name === ColaGraph.getLayout().name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TopologyIcon, {\n        className: this.props.layout.name === ColaGraph.getLayout().name ? activeButtonStyle : undefined,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }\n      }), ' ', \"2\"))), /*#__PURE__*/React.createElement(TourStopContainer, {\n        info: GraphTourStops.Legend,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ToolbarItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        id: \"toolbar_toggle_legend\",\n        \"aria-label\": \"Show Legend\",\n        onClick: this.props.toggleLegend,\n        isActive: this.props.showLegend,\n        className: cytoscapeToolbarPadStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }\n      }, \"Legend\"))));\n    }\n  }]);\n\n  return CytoscapeToolbar;\n}(React.PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    layout: state.graph.layout,\n    showLegend: state.graph.toolbarState.showLegend\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setLayout: bindActionCreators(GraphActions.setLayout, dispatch),\n    toggleLegend: bindActionCreators(GraphToolbarActions.toggleLegend, dispatch)\n  };\n};\n\nvar CytoscapeToolbarContainer = connect(mapStateToProps, mapDispatchToProps)(CytoscapeToolbar);\nexport default CytoscapeToolbarContainer;","map":{"version":3,"sources":["/root/kiali-ui/src/components/CytoscapeGraph/CytoscapeToolbar.tsx"],"names":["React","Button","Toolbar","ToolbarItem","Tooltip","ExpandArrowsAltIcon","PficonDragdropIcon","SearchMinusIcon","SearchPlusIcon","TopologyIcon","style","connect","bindActionCreators","PFColors","CytoscapeGraphUtils","ColaGraph","CoseGraph","DagreGraph","GraphActions","HistoryManager","URLParam","LayoutDictionary","GraphToolbarActions","GraphTourStops","TourStopContainer","buttonStyle","backgroundColor","White","marginRight","activeButtonStyle","color","Active","cytoscapeToolbarStyle","padding","cytoscapeToolbarPadStyle","marginLeft","ZOOM_STEP","CytoscapeToolbar","props","getCy","cytoscapeGraphRef","current","toggleDrag","cy","autoungrabify","state","allowGrab","setState","zoom","step","container","undefined","level","renderedPosition","x","offsetWidth","y","offsetHeight","zoomIn","zoomOut","fit","safeFit","urlLayout","getParam","GRAPH_LAYOUT","layout","name","setLayout","getLayoutByName","setParam","join","getLayout","Layout","Legend","toggleLegend","showLegend","PureComponent","mapStateToProps","graph","toolbarState","mapDispatchToProps","dispatch","CytoscapeToolbarContainer"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as Cy from 'cytoscape';\nimport { Button, Toolbar, ToolbarItem, Tooltip } from '@patternfly/react-core';\nimport {\n  ExpandArrowsAltIcon,\n  PficonDragdropIcon,\n  SearchMinusIcon,\n  SearchPlusIcon,\n  TopologyIcon\n} from '@patternfly/react-icons';\nimport { style } from 'typestyle';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { KialiAppState } from '../../store/Store';\nimport { PFColors } from '../Pf/PfColors';\nimport * as CytoscapeGraphUtils from './CytoscapeGraphUtils';\nimport { Layout } from '../../types/Graph';\nimport { ColaGraph } from './graphs/ColaGraph';\nimport { CoseGraph } from './graphs/CoseGraph';\nimport { DagreGraph } from './graphs/DagreGraph';\nimport { KialiAppAction } from '../../actions/KialiAppAction';\nimport { GraphActions } from '../../actions/GraphActions';\nimport { HistoryManager, URLParam } from '../../app/History';\nimport * as LayoutDictionary from './graphs/LayoutDictionary';\nimport { GraphToolbarActions } from '../../actions/GraphToolbarActions';\nimport { GraphTourStops } from 'pages/Graph/GraphHelpTour';\nimport TourStopContainer from 'components/Tour/TourStop';\n\ntype ReduxProps = {\n  layout: Layout;\n  showLegend: boolean;\n\n  setLayout: (layout: Layout) => void;\n  toggleLegend: () => void;\n};\n\ntype CytoscapeToolbarProps = ReduxProps & {\n  cytoscapeGraphRef: any;\n};\n\ntype CytoscapeToolbarState = {\n  allowGrab: boolean;\n};\n\nconst buttonStyle = style({\n  backgroundColor: PFColors.White,\n  marginRight: '1px'\n});\nconst activeButtonStyle = style({\n  color: PFColors.Active\n});\nconst cytoscapeToolbarStyle = style({\n  padding: '7px 10px'\n});\nconst cytoscapeToolbarPadStyle = style({ marginLeft: '9px' });\n\nconst ZOOM_STEP = 0.2;\n\nexport class CytoscapeToolbar extends React.PureComponent<CytoscapeToolbarProps, CytoscapeToolbarState> {\n  constructor(props: CytoscapeToolbarProps) {\n    super(props);\n    // Let URL override current redux state at construction time. Update URL with unset params.\n    const urlLayout = HistoryManager.getParam(URLParam.GRAPH_LAYOUT);\n    if (urlLayout) {\n      if (urlLayout !== props.layout.name) {\n        props.setLayout(LayoutDictionary.getLayoutByName(urlLayout));\n      }\n    } else {\n      HistoryManager.setParam(URLParam.GRAPH_LAYOUT, props.layout.name);\n    }\n\n    this.state = { allowGrab: false };\n  }\n\n  componentDidUpdate() {\n    // ensure redux state and URL are aligned\n    HistoryManager.setParam(URLParam.GRAPH_LAYOUT, this.props.layout.name);\n  }\n\n  render() {\n    return (\n      <Toolbar className={cytoscapeToolbarStyle}>\n        <ToolbarItem>\n          <Tooltip content={this.state.allowGrab ? 'Disable Drag' : 'Enable Drag'}>\n            <Button\n              id=\"toolbar_grab\"\n              aria-label=\"Toggle Drag\"\n              className={buttonStyle}\n              variant=\"plain\"\n              onClick={() => this.toggleDrag()}\n              isActive={this.state.allowGrab}\n            >\n              <PficonDragdropIcon className={this.state.allowGrab ? activeButtonStyle : undefined} />\n            </Button>\n          </Tooltip>\n        </ToolbarItem>\n        <ToolbarItem>\n          <Tooltip content=\"Zoom In\">\n            <Button\n              id=\"toolbar_zoom_in\"\n              aria-label=\"Zoom In\"\n              className={[cytoscapeToolbarPadStyle, buttonStyle].join(' ')}\n              variant=\"plain\"\n              onClick={() => this.zoomIn()}\n            >\n              <SearchPlusIcon />\n            </Button>\n          </Tooltip>\n        </ToolbarItem>\n        <ToolbarItem>\n          <Tooltip content=\"Zoom Out\">\n            <Button\n              id=\"toolbar_zoom_out\"\n              aria-label=\"Zoom Out\"\n              className={buttonStyle}\n              variant=\"plain\"\n              onClick={() => this.zoomOut()}\n            >\n              <SearchMinusIcon />\n            </Button>\n          </Tooltip>\n        </ToolbarItem>\n        <ToolbarItem>\n          <Tooltip content=\"Zoom to Fit\">\n            <Button\n              id=\"toolbar_graph_fit\"\n              aria-label=\"Zoom to Fit\"\n              className={[cytoscapeToolbarPadStyle, buttonStyle].join(' ')}\n              variant=\"plain\"\n              onClick={() => this.fit()}\n            >\n              <ExpandArrowsAltIcon />\n            </Button>\n          </Tooltip>\n        </ToolbarItem>\n\n        <ToolbarItem className={cytoscapeToolbarPadStyle}>\n          <Tooltip content={'Layout default ' + DagreGraph.getLayout().name}>\n            <Button\n              id=\"toolbar_layout_default\"\n              aria-label=\"Graph Layout Default Style\"\n              className={buttonStyle}\n              variant=\"plain\"\n              onClick={() => {\n                this.props.setLayout(DagreGraph.getLayout());\n              }}\n              isActive={this.props.layout.name === DagreGraph.getLayout().name}\n            >\n              <TopologyIcon\n                className={this.props.layout.name === DagreGraph.getLayout().name ? activeButtonStyle : undefined}\n              />\n            </Button>\n          </Tooltip>\n        </ToolbarItem>\n\n        <TourStopContainer info={GraphTourStops.Layout}>\n          <ToolbarItem>\n            <Tooltip content={'Layout 1 ' + CoseGraph.getLayout().name}>\n              <Button\n                id=\"toolbar_layout1\"\n                aria-label=\"Graph Layout Style 1\"\n                className={buttonStyle}\n                variant=\"plain\"\n                onClick={() => {\n                  this.props.setLayout(CoseGraph.getLayout());\n                }}\n                isActive={this.props.layout.name === CoseGraph.getLayout().name}\n              >\n                <TopologyIcon\n                  className={this.props.layout.name === CoseGraph.getLayout().name ? activeButtonStyle : undefined}\n                />{' '}\n                1\n              </Button>\n            </Tooltip>\n          </ToolbarItem>\n        </TourStopContainer>\n\n        <ToolbarItem>\n          <Tooltip content={'Layout 2 ' + ColaGraph.getLayout().name}>\n            <Button\n              id=\"toolbar_layout2\"\n              aria-label=\"Graph Layout Style 2\"\n              className={buttonStyle}\n              variant=\"plain\"\n              onClick={() => {\n                this.props.setLayout(ColaGraph.getLayout());\n              }}\n              isActive={this.props.layout.name === ColaGraph.getLayout().name}\n            >\n              <TopologyIcon\n                className={this.props.layout.name === ColaGraph.getLayout().name ? activeButtonStyle : undefined}\n              />{' '}\n              2\n            </Button>\n          </Tooltip>\n        </ToolbarItem>\n\n        <TourStopContainer info={GraphTourStops.Legend}>\n          <ToolbarItem>\n            <Button\n              variant=\"primary\"\n              id=\"toolbar_toggle_legend\"\n              aria-label=\"Show Legend\"\n              onClick={this.props.toggleLegend}\n              isActive={this.props.showLegend}\n              className={cytoscapeToolbarPadStyle}\n            >\n              Legend\n            </Button>\n          </ToolbarItem>\n        </TourStopContainer>\n      </Toolbar>\n    );\n  }\n\n  private getCy = (): Cy.Core | null => {\n    if (this.props.cytoscapeGraphRef.current) {\n      return this.props.cytoscapeGraphRef.current.getCy();\n    }\n    return null;\n  };\n\n  private toggleDrag = () => {\n    const cy = this.getCy();\n    if (!cy) {\n      return;\n    }\n    cy.autoungrabify(this.state.allowGrab);\n    this.setState({ allowGrab: !this.state.allowGrab });\n  };\n\n  private zoom = (step: number) => {\n    const cy = this.getCy();\n    const container = cy ? cy.container() : undefined;\n    if (cy && container) {\n      cy.zoom({\n        level: cy.zoom() * (1 + step),\n        renderedPosition: {\n          x: container.offsetWidth / 2,\n          y: container.offsetHeight / 2\n        }\n      });\n    }\n  };\n\n  private zoomIn = () => {\n    this.zoom(ZOOM_STEP);\n  };\n\n  private zoomOut = () => {\n    this.zoom(-ZOOM_STEP);\n  };\n\n  private fit = () => {\n    const cy = this.getCy();\n    if (cy) {\n      CytoscapeGraphUtils.safeFit(cy);\n    }\n  };\n}\n\nconst mapStateToProps = (state: KialiAppState) => ({\n  layout: state.graph.layout,\n  showLegend: state.graph.toolbarState.showLegend\n});\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<KialiAppState, void, KialiAppAction>) => ({\n  setLayout: bindActionCreators(GraphActions.setLayout, dispatch),\n  toggleLegend: bindActionCreators(GraphToolbarActions.toggleLegend, dispatch)\n});\n\nconst CytoscapeToolbarContainer = connect(mapStateToProps, mapDispatchToProps)(CytoscapeToolbar);\nexport default CytoscapeToolbarContainer;\n"]},"metadata":{},"sourceType":"module"}