{"ast":null,"code":"import _slicedToArray from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/root/GraduateProject/src/pages/extensions/iter8/GlobalSetup/GSetup.tsx\";\n\nimport React, { useState } from 'react';\nimport { Button } from '@patternfly/react-core';\nimport CopyToClipboard from 'react-copy-to-clipboard';\n\nvar YamlContent = function YamlContent(_ref) {\n  var yaml = _ref.yaml;\n  return /*#__PURE__*/React.createElement(\"pre\", {\n    className: \"config-yaml\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 47\n    }\n  }, yaml);\n};\n\nYamlContent.displayName = 'Config';\nexport var ConfigContent = function ConfigContent(_ref2) {\n  var data = _ref2.data;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      copied = _useState2[0],\n      setCopied = _useState2[1];\n\n  var config = data && data.yaml;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Configuration\\xA0\", /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: config ? config : '',\n    onCopy: function onCopy(_, result) {\n      setCopied(result);\n      setTimeout(setCopied, 1500);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"light\",\n    disabled: !config,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, copied ? 'Copied' : 'Copy to clipboard'))));\n};\nexport default ConfigContent;","map":{"version":3,"sources":["/root/GraduateProject/src/pages/extensions/iter8/GlobalSetup/GSetup.tsx"],"names":["React","useState","Button","CopyToClipboard","YamlContent","yaml","displayName","ConfigContent","data","copied","setCopied","config","_","result","setTimeout"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,sBAA0B;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,IAA9B,CAA1B;AAAA,CAApB;;AACAD,WAAW,CAACE,WAAZ,GAA0B,QAA1B;AAGA,OAAO,IAAMC,aAAqC,GAAG,SAAxCA,aAAwC,QAAc;AAAA,MAAXC,IAAW,SAAXA,IAAW;;AACjE,kBAA4BP,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOQ,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,MAAM,GAAGH,IAAI,IAAIA,IAAI,CAACH,IAA5B;AACA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAEE,oBAAC,eAAD;AACE,IAAA,IAAI,EAAEM,MAAM,GAAGA,MAAH,GAAY,EAD1B;AAEE,IAAA,MAAM,EAAE,gBAACC,CAAD,EAAIC,MAAJ,EAAe;AACrBH,MAAAA,SAAS,CAACG,MAAD,CAAT;AACAC,MAAAA,UAAU,CAACJ,SAAD,EAAY,IAAZ,CAAV;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,QAAQ,EAAE,CAACC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,GAAG,QAAH,GAAc,mBADvB,CAPF,CAFF,CADF,CADF;AAkBD,CArBM;AAuBP,eAAeF,aAAf","sourcesContent":["import React, { useState, FC } from 'react';\r\nimport { Button } from '@patternfly/react-core';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\n\r\ntype YamlConfig = { yaml?: string };\r\n\r\ninterface ConfigContentProps {\r\n  error?: Error;\r\n  data?: YamlConfig;\r\n}\r\n\r\nconst YamlContent = ({ yaml }: YamlConfig) => <pre className=\"config-yaml\">{yaml}</pre>;\r\nYamlContent.displayName = 'Config';\r\n\r\n\r\nexport const ConfigContent: FC<ConfigContentProps> = ({ data }) => {\r\n  const [copied, setCopied] = useState(false);\r\n  const config = data && data.yaml;\r\n  return (\r\n    <>\r\n      <h2>\r\n        Configuration&nbsp;\r\n        <CopyToClipboard\r\n          text={config ? config : ''}\r\n          onCopy={(_, result) => {\r\n            setCopied(result);\r\n            setTimeout(setCopied, 1500);\r\n          }}\r\n        >\r\n          <Button color=\"light\" disabled={!config}>\r\n            {copied ? 'Copied' : 'Copy to clipboard'}\r\n          </Button>\r\n        </CopyToClipboard>\r\n      </h2>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConfigContent\r\n"]},"metadata":{},"sourceType":"module"}