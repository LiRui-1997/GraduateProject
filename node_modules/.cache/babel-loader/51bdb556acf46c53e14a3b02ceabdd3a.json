{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/components/Nav/Navigation.tsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport RenderPage from './RenderPage';\nimport Masthead from './Masthead/Masthead';\nimport Menu from './Menu';\nimport { Page, PageHeader, PageSection, Brand } from '@patternfly/react-core';\nimport { style } from 'typestyle'; // import MessageCenterContainer from '../../components/MessageCenter/MessageCenter';\n\nimport { kialiLogo, serverConfig } from '../../config';\nimport UserSettingsThunkActions from '../../actions/UserSettingsThunkActions';\nvar flexBoxColumnStyle = style({\n  display: 'flex',\n  flexDirection: 'column'\n});\nexport var Navigation = /*#__PURE__*/function (_React$Component) {\n  _inherits(Navigation, _React$Component);\n\n  var _super = _createSuper(Navigation);\n\n  function Navigation(props) {\n    var _this;\n\n    _classCallCheck(this, Navigation);\n\n    _this = _super.call(this, props);\n\n    _this.setControlledState = function (event) {\n      if ('navCollapsed' in event) {\n        _this.props.setNavCollapsed(_this.props.navCollapsed);\n      }\n    };\n\n    _this.isGraph = function () {\n      return _this.props.location.pathname.startsWith('/graph');\n    };\n\n    _this.onNavToggleDesktop = function () {\n      _this.setState({\n        isNavOpenDesktop: !_this.state.isNavOpenDesktop\n      });\n\n      _this.props.setNavCollapsed(!_this.props.navCollapsed);\n    };\n\n    _this.onNavToggleMobile = function () {\n      _this.setState({\n        isNavOpenMobile: !_this.state.isNavOpenMobile\n      });\n    };\n\n    _this.onPageResize = function (_ref) {\n      var mobileView = _ref.mobileView,\n          windowSize = _ref.windowSize;\n      var ismobile = mobileView;\n\n      if (windowSize < 1000) {\n        ismobile = true;\n      }\n\n      _this.setState({\n        isMobileView: ismobile\n      });\n    };\n\n    _this.state = {\n      isMobileView: false,\n      isNavOpenDesktop: true,\n      isNavOpenMobile: false\n    };\n    return _this;\n  }\n\n  _createClass(Navigation, [{\n    key: \"goTojaeger\",\n    value: function goTojaeger() {\n      window.open(this.props.jaegerUrl, '_blank');\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _serverConfig$cluster;\n\n      var pageTitle = serverConfig.installationTag ? serverConfig.installationTag : 'Kiali';\n\n      if (!!((_serverConfig$cluster = serverConfig.clusterInfo) === null || _serverConfig$cluster === void 0 ? void 0 : _serverConfig$cluster.name)) {\n        pageTitle += \" [\".concat(serverConfig.clusterInfo.name, \"]\");\n      }\n\n      document.title = pageTitle;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isNavOpenDesktop = _this$state.isNavOpenDesktop,\n          isNavOpenMobile = _this$state.isNavOpenMobile,\n          isMobileView = _this$state.isMobileView;\n      var Header = /*#__PURE__*/React.createElement(PageHeader, {\n        logo: /*#__PURE__*/React.createElement(Brand, {\n          src: kialiLogo,\n          alt: \"Kiali Logo\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }\n        }),\n        toolbar: /*#__PURE__*/React.createElement(Masthead, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 18\n          }\n        }),\n        showNavToggle: true,\n        onNavToggle: isMobileView ? this.onNavToggleMobile : this.onNavToggleDesktop,\n        isNavOpen: isMobileView ? isNavOpenMobile : isNavOpenDesktop || !this.props.navCollapsed,\n        role: 'kiali_header',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }\n      });\n      var Sidebar = /*#__PURE__*/React.createElement(Menu, {\n        isNavOpen: isMobileView ? isNavOpenMobile : isNavOpenDesktop || !this.props.navCollapsed,\n        location: this.props.location,\n        jaegerUrl: this.props.jaegerUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }\n      });\n      return /*#__PURE__*/React.createElement(Page, {\n        header: Header,\n        sidebar: Sidebar,\n        onPageResize: this.onPageResize,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(PageSection, {\n        className: flexBoxColumnStyle,\n        variant: 'light',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(RenderPage, {\n        isGraph: this.isGraph(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Navigation;\n}(React.Component);\nNavigation.contextTypes = {\n  router: function router() {\n    return null;\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    navCollapsed: state.userSettings.interface.navCollapse,\n    jaegerUrl: state.jaegerState.info && state.jaegerState.info.url ? state.jaegerState.info.url : undefined\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setNavCollapsed: function setNavCollapsed(collapse) {\n      return dispatch(UserSettingsThunkActions.setNavCollapsed(collapse));\n    }\n  };\n};\n\nvar NavigationContainer = connect(mapStateToProps, mapDispatchToProps)(Navigation);\nexport default NavigationContainer;","map":{"version":3,"sources":["/root/GraduateProject/src/components/Nav/Navigation.tsx"],"names":["React","connect","RenderPage","Masthead","Menu","Page","PageHeader","PageSection","Brand","style","kialiLogo","serverConfig","UserSettingsThunkActions","flexBoxColumnStyle","display","flexDirection","Navigation","props","setControlledState","event","setNavCollapsed","navCollapsed","isGraph","location","pathname","startsWith","onNavToggleDesktop","setState","isNavOpenDesktop","state","onNavToggleMobile","isNavOpenMobile","onPageResize","mobileView","windowSize","ismobile","isMobileView","window","open","jaegerUrl","pageTitle","installationTag","clusterInfo","name","document","title","Header","Sidebar","Component","contextTypes","router","mapStateToProps","userSettings","interface","navCollapse","jaegerState","info","url","undefined","mapDispatchToProps","dispatch","collapse","NavigationContainer"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport RenderPage from './RenderPage';\nimport { RouteComponentProps } from 'react-router';\nimport Masthead from './Masthead/Masthead';\nimport Menu from './Menu';\nimport { Page, PageHeader, PageSection, Brand } from '@patternfly/react-core';\nimport { style } from 'typestyle';\n\n// import MessageCenterContainer from '../../components/MessageCenter/MessageCenter';\nimport { kialiLogo, serverConfig } from '../../config';\nimport { KialiAppState } from '../../store/Store';\nimport { KialiAppAction } from '../../actions/KialiAppAction';\nimport UserSettingsThunkActions from '../../actions/UserSettingsThunkActions';\n\ntype PropsType = RouteComponentProps & {\n  navCollapsed: boolean;\n  setNavCollapsed: (collapse: boolean) => void;\n  jaegerUrl?: string;\n};\n\ntype NavigationState = {\n  isMobileView: boolean;\n  isNavOpenDesktop: boolean;\n  isNavOpenMobile: boolean;\n};\n\nconst flexBoxColumnStyle = style({\n  display: 'flex',\n  flexDirection: 'column'\n});\n\nexport class Navigation extends React.Component<PropsType, NavigationState> {\n  static contextTypes = {\n    router: () => null\n  };\n\n  constructor(props: PropsType) {\n    super(props);\n    this.state = {\n      isMobileView: false,\n      isNavOpenDesktop: true,\n      isNavOpenMobile: false\n    };\n  }\n\n  setControlledState = event => {\n    if ('navCollapsed' in event) {\n      this.props.setNavCollapsed(this.props.navCollapsed);\n    }\n  };\n\n  goTojaeger() {\n    window.open(this.props.jaegerUrl, '_blank');\n  }\n\n  componentDidMount() {\n    let pageTitle = serverConfig.installationTag ? serverConfig.installationTag : 'Kiali';\n    if (!!serverConfig.clusterInfo?.name) {\n      pageTitle += ` [${serverConfig.clusterInfo.name}]`;\n    }\n\n    document.title = pageTitle;\n  }\n\n  isGraph = () => {\n    return this.props.location.pathname.startsWith('/graph');\n  };\n\n  onNavToggleDesktop = () => {\n    this.setState({\n      isNavOpenDesktop: !this.state.isNavOpenDesktop\n    });\n    this.props.setNavCollapsed(!this.props.navCollapsed);\n  };\n\n  onNavToggleMobile = () => {\n    this.setState({\n      isNavOpenMobile: !this.state.isNavOpenMobile\n    });\n  };\n\n  onPageResize = ({ mobileView, windowSize }) => {\n    let ismobile = mobileView;\n    if (windowSize < 1000) {\n      ismobile = true;\n    }\n    this.setState({\n      isMobileView: ismobile\n    });\n  };\n\n  render() {\n    const { isNavOpenDesktop, isNavOpenMobile, isMobileView } = this.state;\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={kialiLogo} alt=\"Kiali Logo\" />}\n        toolbar={<Masthead />}\n        showNavToggle={true}\n        onNavToggle={isMobileView ? this.onNavToggleMobile : this.onNavToggleDesktop}\n        isNavOpen={isMobileView ? isNavOpenMobile : isNavOpenDesktop || !this.props.navCollapsed}\n        role={'kiali_header'}\n      />\n    );\n\n    const Sidebar = (\n      <Menu\n        isNavOpen={isMobileView ? isNavOpenMobile : isNavOpenDesktop || !this.props.navCollapsed}\n        location={this.props.location}\n        jaegerUrl={this.props.jaegerUrl}\n      />\n    );\n\n    return (\n      <Page header={Header} sidebar={Sidebar} onPageResize={this.onPageResize}>\n        {/* <MessageCenterContainer drawerTitle=\"Message Center\" /> */}\n        <PageSection className={flexBoxColumnStyle} variant={'light'}>\n          <RenderPage isGraph={this.isGraph()} />\n        </PageSection>\n      </Page>\n    );\n  }\n}\n\nconst mapStateToProps = (state: KialiAppState) => ({\n  navCollapsed: state.userSettings.interface.navCollapse,\n  jaegerUrl: state.jaegerState.info && state.jaegerState.info.url ? state.jaegerState.info.url : undefined\n});\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<KialiAppState, void, KialiAppAction>) => ({\n  setNavCollapsed: (collapse: boolean) => dispatch(UserSettingsThunkActions.setNavCollapsed(collapse))\n});\n\nconst NavigationContainer = connect(mapStateToProps, mapDispatchToProps)(Navigation);\nexport default NavigationContainer;\n"]},"metadata":{},"sourceType":"module"}