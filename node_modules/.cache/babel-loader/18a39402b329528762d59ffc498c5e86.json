{"ast":null,"code":"import _toConsumableArray from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { Data } from 'victory-core'; // Returns the min and max domain for given data\n\nexport var getDomain = function getDomain(_ref) {\n  var data = _ref.data,\n      maxDomain = _ref.maxDomain,\n      minDomain = _ref.minDomain,\n      x = _ref.x,\n      y = _ref.y;\n  // x-domain\n  var xLow = 0;\n  var xHigh = 0;\n  var xLowSearch = true;\n  var xHighSearch = true;\n\n  if (minDomain !== undefined && minDomain.x !== undefined) {\n    xLow = minDomain.x;\n    xLowSearch = false;\n  } else if (minDomain !== undefined && minDomain.y === undefined) {\n    xLow = minDomain;\n    xLowSearch = false;\n  }\n\n  if (maxDomain !== undefined && maxDomain.x !== undefined) {\n    xHigh = maxDomain.x;\n    xHighSearch = false;\n  } else if (maxDomain !== undefined && maxDomain.y === undefined) {\n    xHigh = maxDomain;\n    xHighSearch = false;\n  } // y-domain\n\n\n  var yLow = 0;\n  var yHigh = 0;\n  var yLowSearch = true;\n  var yHighSearch = true;\n\n  if (minDomain !== undefined && minDomain.y !== undefined) {\n    yLow = minDomain.y;\n    yLowSearch = false;\n  } else if (minDomain !== undefined && minDomain.x === undefined) {\n    yLow = minDomain;\n    yLowSearch = false;\n  }\n\n  if (maxDomain !== undefined && maxDomain.y !== undefined) {\n    yHigh = maxDomain.y;\n    yHighSearch = false;\n  } else if (maxDomain !== undefined && maxDomain.x === undefined) {\n    yHigh = maxDomain;\n    yHighSearch = false;\n  } // Search data for max / min range\n\n\n  var datum = Data.formatData(data, {\n    x: x,\n    y: y\n  }, ['x', 'y']);\n  datum.forEach(function (dataPoint) {\n    if (xLowSearch) {\n      if (dataPoint._x < xLow) {\n        xLow = dataPoint._x;\n      }\n    }\n\n    if (xHighSearch) {\n      if (dataPoint._x > xHigh) {\n        xHigh = dataPoint._x;\n      }\n    }\n\n    if (yLowSearch) {\n      if (dataPoint._y < yLow) {\n        yLow = dataPoint._y;\n      }\n    }\n\n    if (yHighSearch) {\n      if (dataPoint._y > yHigh) {\n        yHigh = dataPoint._y;\n      }\n    }\n  });\n  return {\n    x: [xLow, xHigh],\n    y: [yLow, yHigh]\n  };\n};\nexport var getDomains = function getDomains(_ref2) {\n  var maxDomain = _ref2.maxDomain,\n      minDomain = _ref2.minDomain,\n      sources = _ref2.sources;\n  var domains = [];\n  sources.forEach(function (source) {\n    var _ref3 = source.component ? source.component.props : undefined,\n        _ref3$data = _ref3.data,\n        compData = _ref3$data === void 0 ? source.data : _ref3$data;\n\n    var domain = getDomain({\n      data: compData,\n      maxDomain: maxDomain,\n      minDomain: minDomain,\n      x: source.component ? source.component.props.x : undefined,\n      y: source.component ? source.component.props.y : undefined\n    });\n    domains.push(domain);\n  });\n  var xDomains = [];\n  var yDomains = [];\n  domains.forEach(function (domain) {\n    xDomains.push.apply(xDomains, _toConsumableArray(domain.x));\n    yDomains.push.apply(yDomains, _toConsumableArray(domain.y));\n  });\n  var xLow = Math.min.apply(Math, xDomains);\n  var xHigh = Math.max.apply(Math, xDomains);\n  var yLow = Math.min.apply(Math, yDomains);\n  var yHigh = Math.max.apply(Math, yDomains);\n  return {\n    x: [xLow, xHigh],\n    y: [yLow, yHigh]\n  };\n};","map":{"version":3,"sources":["/root/kiali-ui/node_modules/@patternfly/react-charts/dist/esm/components/ChartUtils/chart-domain.js"],"names":["Data","getDomain","data","maxDomain","minDomain","x","y","xLow","xHigh","xLowSearch","xHighSearch","undefined","yLow","yHigh","yLowSearch","yHighSearch","datum","formatData","forEach","dataPoint","_x","_y","getDomains","sources","domains","source","component","props","compData","domain","push","xDomains","yDomains","Math","min","max"],"mappings":"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","sourcesContent":["import { Data } from 'victory-core';\n// Returns the min and max domain for given data\nexport const getDomain = ({\n  data,\n  maxDomain,\n  minDomain,\n  x,\n  y\n}) => {\n  // x-domain\n  let xLow = 0;\n  let xHigh = 0;\n  let xLowSearch = true;\n  let xHighSearch = true;\n\n  if (minDomain !== undefined && minDomain.x !== undefined) {\n    xLow = minDomain.x;\n    xLowSearch = false;\n  } else if (minDomain !== undefined && minDomain.y === undefined) {\n    xLow = minDomain;\n    xLowSearch = false;\n  }\n\n  if (maxDomain !== undefined && maxDomain.x !== undefined) {\n    xHigh = maxDomain.x;\n    xHighSearch = false;\n  } else if (maxDomain !== undefined && maxDomain.y === undefined) {\n    xHigh = maxDomain;\n    xHighSearch = false;\n  } // y-domain\n\n\n  let yLow = 0;\n  let yHigh = 0;\n  let yLowSearch = true;\n  let yHighSearch = true;\n\n  if (minDomain !== undefined && minDomain.y !== undefined) {\n    yLow = minDomain.y;\n    yLowSearch = false;\n  } else if (minDomain !== undefined && minDomain.x === undefined) {\n    yLow = minDomain;\n    yLowSearch = false;\n  }\n\n  if (maxDomain !== undefined && maxDomain.y !== undefined) {\n    yHigh = maxDomain.y;\n    yHighSearch = false;\n  } else if (maxDomain !== undefined && maxDomain.x === undefined) {\n    yHigh = maxDomain;\n    yHighSearch = false;\n  } // Search data for max / min range\n\n\n  const datum = Data.formatData(data, {\n    x,\n    y\n  }, ['x', 'y']);\n  datum.forEach(dataPoint => {\n    if (xLowSearch) {\n      if (dataPoint._x < xLow) {\n        xLow = dataPoint._x;\n      }\n    }\n\n    if (xHighSearch) {\n      if (dataPoint._x > xHigh) {\n        xHigh = dataPoint._x;\n      }\n    }\n\n    if (yLowSearch) {\n      if (dataPoint._y < yLow) {\n        yLow = dataPoint._y;\n      }\n    }\n\n    if (yHighSearch) {\n      if (dataPoint._y > yHigh) {\n        yHigh = dataPoint._y;\n      }\n    }\n  });\n  return {\n    x: [xLow, xHigh],\n    y: [yLow, yHigh]\n  };\n};\nexport const getDomains = ({\n  maxDomain,\n  minDomain,\n  sources\n}) => {\n  const domains = [];\n  sources.forEach(source => {\n    const {\n      data: compData = source.data\n    } = source.component ? source.component.props : undefined;\n    const domain = getDomain({\n      data: compData,\n      maxDomain,\n      minDomain,\n      x: source.component ? source.component.props.x : undefined,\n      y: source.component ? source.component.props.y : undefined\n    });\n    domains.push(domain);\n  });\n  const xDomains = [];\n  const yDomains = [];\n  domains.forEach(domain => {\n    xDomains.push(...domain.x);\n    yDomains.push(...domain.y);\n  });\n  const xLow = Math.min(...xDomains);\n  const xHigh = Math.max(...xDomains);\n  const yLow = Math.min(...yDomains);\n  const yHigh = Math.max(...yDomains);\n  return {\n    x: [xLow, xHigh],\n    y: [yLow, yHigh]\n  };\n};\n//# sourceMappingURL=chart-domain.js.map"]},"metadata":{},"sourceType":"module"}