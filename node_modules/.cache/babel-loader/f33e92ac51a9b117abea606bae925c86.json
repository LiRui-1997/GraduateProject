{"ast":null,"code":"export var dicIstioType = {\n  Sidecar: 'sidecars',\n  Gateway: 'gateways',\n  VirtualService: 'virtualservices',\n  DestinationRule: 'destinationrules',\n  ServiceEntry: 'serviceentries',\n  AuthorizationPolicy: 'authorizationpolicies',\n  PeerAuthentication: 'peerauthentications',\n  RequestAuthentication: 'requestauthentications',\n  WorkloadEntry: 'workloadentries',\n  WorkloadGroup: 'workloadgroups',\n  EnvoyFilter: 'envoyfilters',\n  gateways: 'Gateway',\n  virtualservices: 'VirtualService',\n  destinationrules: 'DestinationRule',\n  serviceentries: 'ServiceEntry',\n  authorizationpolicies: 'AuthorizationPolicy',\n  sidecars: 'Sidecar',\n  peerauthentications: 'PeerAuthentication',\n  requestauthentications: 'RequestAuthentication',\n  workloadentries: 'WorkloadEntry',\n  workloadgroups: 'WorkloadGroup',\n  envoyfilters: 'EnvoyFilter',\n  gateway: 'Gateway',\n  virtualservice: 'VirtualService',\n  destinationrule: 'DestinationRule',\n  serviceentry: 'ServiceEntry',\n  authorizationpolicy: 'AuthorizationPolicy',\n  sidecar: 'Sidecar',\n  peerauthentication: 'PeerAuthentication',\n  requestauthentication: 'RequestAuthentication',\n  workloadentry: 'WorkloadEntry',\n  workloadgroup: 'WorkloadGroup',\n  envoyfilter: 'EnvoyFilter'\n};\n\nvar includeName = function includeName(name, names) {\n  for (var i = 0; i < names.length; i++) {\n    if (name.includes(names[i])) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport var filterByName = function filterByName(unfiltered, names) {\n  if (names && names.length === 0) {\n    return unfiltered;\n  }\n\n  return {\n    namespace: unfiltered.namespace,\n    gateways: unfiltered.gateways.filter(function (gw) {\n      return includeName(gw.metadata.name, names);\n    }),\n    virtualServices: {\n      permissions: unfiltered.virtualServices.permissions,\n      items: unfiltered.virtualServices.items.filter(function (vs) {\n        return includeName(vs.metadata.name, names);\n      })\n    },\n    destinationRules: {\n      permissions: unfiltered.destinationRules.permissions,\n      items: unfiltered.destinationRules.items.filter(function (dr) {\n        return includeName(dr.metadata.name, names);\n      })\n    },\n    serviceEntries: unfiltered.serviceEntries.filter(function (se) {\n      return includeName(se.metadata.name, names);\n    }),\n    authorizationPolicies: unfiltered.authorizationPolicies.filter(function (rc) {\n      return includeName(rc.metadata.name, names);\n    }),\n    sidecars: unfiltered.sidecars.filter(function (sc) {\n      return includeName(sc.metadata.name, names);\n    }),\n    peerAuthentications: unfiltered.peerAuthentications.filter(function (pa) {\n      return includeName(pa.metadata.name, names);\n    }),\n    requestAuthentications: unfiltered.requestAuthentications.filter(function (ra) {\n      return includeName(ra.metadata.name, names);\n    }),\n    workloadEntries: unfiltered.workloadEntries.filter(function (we) {\n      return includeName(we.metadata.name, names);\n    }),\n    workloadGroups: unfiltered.workloadGroups.filter(function (wg) {\n      return includeName(wg.metadata.name, names);\n    }),\n    envoyFilters: unfiltered.envoyFilters.filter(function (ef) {\n      return includeName(ef.metadata.name, names);\n    }),\n    validations: unfiltered.validations,\n    permissions: unfiltered.permissions\n  };\n};\nexport var filterByConfigValidation = function filterByConfigValidation(unfiltered, configFilters) {\n  if (configFilters && configFilters.length === 0) {\n    return unfiltered;\n  }\n\n  var filtered = [];\n  var filterByValid = configFilters.indexOf('Valid') > -1;\n  var filterByNotValid = configFilters.indexOf('Not Valid') > -1;\n  var filterByNotValidated = configFilters.indexOf('Not Validated') > -1;\n  var filterByWarning = configFilters.indexOf('Warning') > -1;\n\n  if (filterByValid && filterByNotValid && filterByNotValidated && filterByWarning) {\n    return unfiltered;\n  }\n\n  unfiltered.forEach(function (item) {\n    if (filterByValid && item.validation && item.validation.valid) {\n      filtered.push(item);\n    }\n\n    if (filterByNotValid && item.validation && !item.validation.valid) {\n      filtered.push(item);\n    }\n\n    if (filterByNotValidated && !item.validation) {\n      filtered.push(item);\n    }\n\n    if (filterByWarning && item.validation && item.validation.checks.filter(function (i) {\n      return i.severity === 'warning';\n    }).length > 0) {\n      filtered.push(item);\n    }\n  });\n  return filtered;\n};\nexport var toIstioItems = function toIstioItems(istioConfigList) {\n  var istioItems = [];\n\n  var hasValidations = function hasValidations(type, name) {\n    return istioConfigList.validations[type] && istioConfigList.validations[type][name];\n  };\n\n  var nonItems = ['validations', 'permissions', 'namespace'];\n  Object.keys(istioConfigList).forEach(function (field) {\n    if (nonItems.indexOf(field) > -1) {\n      // These items do not belong to the IstioConfigItem[]\n      return;\n    }\n\n    var typeNameProto = dicIstioType[field.toLowerCase()]; // ex. serviceEntries -> ServiceEntry\n\n    var typeName = typeNameProto.toLowerCase(); // ex. ServiceEntry -> serviceentry\n\n    var entryName = typeNameProto.charAt(0).toLowerCase() + typeNameProto.slice(1);\n    var entries = istioConfigList[field];\n\n    if (!(entries instanceof Array)) {\n      // VirtualServices, DestinationRules\n      entries = entries.items;\n    }\n\n    entries.forEach(function (entry) {\n      var item = {\n        namespace: istioConfigList.namespace.name,\n        type: typeName,\n        name: entry.metadata.name,\n        creationTimestamp: entry.metadata.creationTimestamp,\n        resourceVersion: entry.metadata.resourceVersion,\n        validation: hasValidations(typeName, entry.metadata.name) ? istioConfigList.validations[typeName][entry.metadata.name] : undefined\n      };\n      item[entryName] = entry;\n      istioItems.push(item);\n    });\n  });\n  return istioItems;\n};\nexport var vsToIstioItems = function vsToIstioItems(vss, validations) {\n  var istioItems = [];\n\n  var hasValidations = function hasValidations(name) {\n    return validations.virtualservice && validations.virtualservice[name];\n  };\n\n  var typeNameProto = dicIstioType['virtualservices']; // ex. serviceEntries -> ServiceEntry\n\n  var typeName = typeNameProto.toLowerCase(); // ex. ServiceEntry -> serviceentry\n\n  var entryName = typeNameProto.charAt(0).toLowerCase() + typeNameProto.slice(1);\n  vss.forEach(function (vs) {\n    var item = {\n      namespace: vs.metadata.namespace || '',\n      type: typeName,\n      name: vs.metadata.name,\n      creationTimestamp: vs.metadata.creationTimestamp,\n      resourceVersion: vs.metadata.resourceVersion,\n      validation: hasValidations(vs.metadata.name) ? validations.virtualservice[vs.metadata.name] : undefined\n    };\n    item[entryName] = vs;\n    istioItems.push(item);\n  });\n  return istioItems;\n};\nexport var drToIstioItems = function drToIstioItems(drs, validations) {\n  var istioItems = [];\n\n  var hasValidations = function hasValidations(name) {\n    return validations.destinationrule && validations.destinationrule[name];\n  };\n\n  var typeNameProto = dicIstioType['destinationrules']; // ex. serviceEntries -> ServiceEntry\n\n  var typeName = typeNameProto.toLowerCase(); // ex. ServiceEntry -> serviceentry\n\n  var entryName = typeNameProto.charAt(0).toLowerCase() + typeNameProto.slice(1);\n  drs.forEach(function (dr) {\n    var item = {\n      namespace: dr.metadata.namespace || '',\n      type: typeName,\n      name: dr.metadata.name,\n      creationTimestamp: dr.metadata.creationTimestamp,\n      resourceVersion: dr.metadata.resourceVersion,\n      validation: hasValidations(dr.metadata.name) ? validations.destinationrule[dr.metadata.name] : undefined\n    };\n    item[entryName] = dr;\n    istioItems.push(item);\n  });\n  return istioItems;\n};\nexport var gwToIstioItems = function gwToIstioItems(gws, vss, validations) {\n  var istioItems = [];\n\n  var hasValidations = function hasValidations(name) {\n    return validations.gateway && validations.gateway[name];\n  };\n\n  var vsGateways = new Set();\n  var typeNameProto = dicIstioType['gateways']; // ex. serviceEntries -> ServiceEntry\n\n  var typeName = typeNameProto.toLowerCase(); // ex. ServiceEntry -> serviceentry\n\n  var entryName = typeNameProto.charAt(0).toLowerCase() + typeNameProto.slice(1);\n  vss.forEach(function (vs) {\n    var _vs$spec$gateways;\n\n    (_vs$spec$gateways = vs.spec.gateways) === null || _vs$spec$gateways === void 0 ? void 0 : _vs$spec$gateways.forEach(function (vsGatewayName) {\n      if (vsGatewayName.indexOf('/') < 0) {\n        vsGateways.add(vs.metadata.namespace + '/' + vsGatewayName);\n      } else {\n        vsGateways.add(vsGatewayName);\n      }\n    });\n  });\n  gws.forEach(function (gw) {\n    if (vsGateways.has(gw.metadata.namespace + '/' + gw.metadata.name)) {\n      var item = {\n        namespace: gw.metadata.namespace || '',\n        type: typeName,\n        name: gw.metadata.name,\n        creationTimestamp: gw.metadata.creationTimestamp,\n        resourceVersion: gw.metadata.resourceVersion,\n        validation: hasValidations(gw.metadata.name) ? validations.gateway[gw.metadata.name] : undefined\n      };\n      item[entryName] = gw;\n      istioItems.push(item);\n    }\n  });\n  return istioItems;\n};","map":{"version":3,"sources":["/root/GraduateProject/src/types/IstioConfigList.ts"],"names":["dicIstioType","Sidecar","Gateway","VirtualService","DestinationRule","ServiceEntry","AuthorizationPolicy","PeerAuthentication","RequestAuthentication","WorkloadEntry","WorkloadGroup","EnvoyFilter","gateways","virtualservices","destinationrules","serviceentries","authorizationpolicies","sidecars","peerauthentications","requestauthentications","workloadentries","workloadgroups","envoyfilters","gateway","virtualservice","destinationrule","serviceentry","authorizationpolicy","sidecar","peerauthentication","requestauthentication","workloadentry","workloadgroup","envoyfilter","includeName","name","names","i","length","includes","filterByName","unfiltered","namespace","filter","gw","metadata","virtualServices","permissions","items","vs","destinationRules","dr","serviceEntries","se","authorizationPolicies","rc","sc","peerAuthentications","pa","requestAuthentications","ra","workloadEntries","we","workloadGroups","wg","envoyFilters","ef","validations","filterByConfigValidation","configFilters","filtered","filterByValid","indexOf","filterByNotValid","filterByNotValidated","filterByWarning","forEach","item","validation","valid","push","checks","severity","toIstioItems","istioConfigList","istioItems","hasValidations","type","nonItems","Object","keys","field","typeNameProto","toLowerCase","typeName","entryName","charAt","slice","entries","Array","entry","creationTimestamp","resourceVersion","undefined","vsToIstioItems","vss","drToIstioItems","drs","gwToIstioItems","gws","vsGateways","Set","spec","vsGatewayName","add","has"],"mappings":"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","sourcesContent":["import Namespace from './Namespace';\nimport {\n  AuthorizationPolicy,\n  DestinationRule,\n  DestinationRules,\n  EnvoyFilter,\n  Gateway,\n  ObjectValidation,\n  PeerAuthentication,\n  RequestAuthentication,\n  ServiceEntry,\n  Sidecar,\n  Validations,\n  VirtualService,\n  VirtualServices,\n  WorkloadEntry,\n  WorkloadGroup\n} from './IstioObjects';\nimport { ResourcePermissions } from './Permissions';\n\nexport interface IstioConfigItem {\n  namespace: string;\n  type: string;\n  name: string;\n  creationTimestamp?: string;\n  resourceVersion?: string;\n  gateway?: Gateway;\n  virtualService?: VirtualService;\n  destinationRule?: DestinationRule;\n  serviceEntry?: ServiceEntry;\n  authorizationPolicy?: AuthorizationPolicy;\n  sidecar?: Sidecar;\n  peerAuthentication?: PeerAuthentication;\n  requestAuthentication?: RequestAuthentication;\n  workloadEntry?: WorkloadEntry;\n  workloadGroup?: WorkloadGroup;\n  envoyFilter?: EnvoyFilter;\n  validation?: ObjectValidation;\n}\n\nexport interface IstioConfigList {\n  namespace: Namespace;\n  gateways: Gateway[];\n  virtualServices: VirtualServices;\n  destinationRules: DestinationRules;\n  serviceEntries: ServiceEntry[];\n  workloadEntries: WorkloadEntry[];\n  workloadGroups: WorkloadGroup[];\n  envoyFilters: EnvoyFilter[];\n  authorizationPolicies: AuthorizationPolicy[];\n  sidecars: Sidecar[];\n  peerAuthentications: PeerAuthentication[];\n  requestAuthentications: RequestAuthentication[];\n  permissions: { [key: string]: ResourcePermissions };\n  validations: Validations;\n}\n\nexport const dicIstioType = {\n  Sidecar: 'sidecars',\n  Gateway: 'gateways',\n  VirtualService: 'virtualservices',\n  DestinationRule: 'destinationrules',\n  ServiceEntry: 'serviceentries',\n  AuthorizationPolicy: 'authorizationpolicies',\n  PeerAuthentication: 'peerauthentications',\n  RequestAuthentication: 'requestauthentications',\n  WorkloadEntry: 'workloadentries',\n  WorkloadGroup: 'workloadgroups',\n  EnvoyFilter: 'envoyfilters',\n\n  gateways: 'Gateway',\n  virtualservices: 'VirtualService',\n  destinationrules: 'DestinationRule',\n  serviceentries: 'ServiceEntry',\n  authorizationpolicies: 'AuthorizationPolicy',\n  sidecars: 'Sidecar',\n  peerauthentications: 'PeerAuthentication',\n  requestauthentications: 'RequestAuthentication',\n  workloadentries: 'WorkloadEntry',\n  workloadgroups: 'WorkloadGroup',\n  envoyfilters: 'EnvoyFilter',\n\n  gateway: 'Gateway',\n  virtualservice: 'VirtualService',\n  destinationrule: 'DestinationRule',\n  serviceentry: 'ServiceEntry',\n  authorizationpolicy: 'AuthorizationPolicy',\n  sidecar: 'Sidecar',\n  peerauthentication: 'PeerAuthentication',\n  requestauthentication: 'RequestAuthentication',\n  workloadentry: 'WorkloadEntry',\n  workloadgroup: 'WorkloadGroup',\n  envoyfilter: 'EnvoyFilter'\n};\n\nconst includeName = (name: string, names: string[]) => {\n  for (let i = 0; i < names.length; i++) {\n    if (name.includes(names[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const filterByName = (unfiltered: IstioConfigList, names: string[]): IstioConfigList => {\n  if (names && names.length === 0) {\n    return unfiltered;\n  }\n  return {\n    namespace: unfiltered.namespace,\n    gateways: unfiltered.gateways.filter(gw => includeName(gw.metadata.name, names)),\n    virtualServices: {\n      permissions: unfiltered.virtualServices.permissions,\n      items: unfiltered.virtualServices.items.filter(vs => includeName(vs.metadata.name, names))\n    },\n    destinationRules: {\n      permissions: unfiltered.destinationRules.permissions,\n      items: unfiltered.destinationRules.items.filter(dr => includeName(dr.metadata.name, names))\n    },\n    serviceEntries: unfiltered.serviceEntries.filter(se => includeName(se.metadata.name, names)),\n    authorizationPolicies: unfiltered.authorizationPolicies.filter(rc => includeName(rc.metadata.name, names)),\n    sidecars: unfiltered.sidecars.filter(sc => includeName(sc.metadata.name, names)),\n    peerAuthentications: unfiltered.peerAuthentications.filter(pa => includeName(pa.metadata.name, names)),\n    requestAuthentications: unfiltered.requestAuthentications.filter(ra => includeName(ra.metadata.name, names)),\n    workloadEntries: unfiltered.workloadEntries.filter(we => includeName(we.metadata.name, names)),\n    workloadGroups: unfiltered.workloadGroups.filter(wg => includeName(wg.metadata.name, names)),\n    envoyFilters: unfiltered.envoyFilters.filter(ef => includeName(ef.metadata.name, names)),\n    validations: unfiltered.validations,\n    permissions: unfiltered.permissions\n  };\n};\n\nexport const filterByConfigValidation = (unfiltered: IstioConfigItem[], configFilters: string[]): IstioConfigItem[] => {\n  if (configFilters && configFilters.length === 0) {\n    return unfiltered;\n  }\n  const filtered: IstioConfigItem[] = [];\n\n  const filterByValid = configFilters.indexOf('Valid') > -1;\n  const filterByNotValid = configFilters.indexOf('Not Valid') > -1;\n  const filterByNotValidated = configFilters.indexOf('Not Validated') > -1;\n  const filterByWarning = configFilters.indexOf('Warning') > -1;\n  if (filterByValid && filterByNotValid && filterByNotValidated && filterByWarning) {\n    return unfiltered;\n  }\n\n  unfiltered.forEach(item => {\n    if (filterByValid && item.validation && item.validation.valid) {\n      filtered.push(item);\n    }\n    if (filterByNotValid && item.validation && !item.validation.valid) {\n      filtered.push(item);\n    }\n    if (filterByNotValidated && !item.validation) {\n      filtered.push(item);\n    }\n    if (filterByWarning && item.validation && item.validation.checks.filter(i => i.severity === 'warning').length > 0) {\n      filtered.push(item);\n    }\n  });\n  return filtered;\n};\n\nexport const toIstioItems = (istioConfigList: IstioConfigList): IstioConfigItem[] => {\n  const istioItems: IstioConfigItem[] = [];\n\n  const hasValidations = (type: string, name: string) =>\n    istioConfigList.validations[type] && istioConfigList.validations[type][name];\n\n  const nonItems = ['validations', 'permissions', 'namespace'];\n\n  Object.keys(istioConfigList).forEach(field => {\n    if (nonItems.indexOf(field) > -1) {\n      // These items do not belong to the IstioConfigItem[]\n      return;\n    }\n\n    const typeNameProto = dicIstioType[field.toLowerCase()]; // ex. serviceEntries -> ServiceEntry\n    const typeName = typeNameProto.toLowerCase(); // ex. ServiceEntry -> serviceentry\n    const entryName = typeNameProto.charAt(0).toLowerCase() + typeNameProto.slice(1);\n\n    let entries = istioConfigList[field];\n    if (!(entries instanceof Array)) {\n      // VirtualServices, DestinationRules\n      entries = entries.items;\n    }\n\n    entries.forEach(entry => {\n      const item = {\n        namespace: istioConfigList.namespace.name,\n        type: typeName,\n        name: entry.metadata.name,\n        creationTimestamp: entry.metadata.creationTimestamp,\n        resourceVersion: entry.metadata.resourceVersion,\n        validation: hasValidations(typeName, entry.metadata.name)\n          ? istioConfigList.validations[typeName][entry.metadata.name]\n          : undefined\n      };\n\n      item[entryName] = entry;\n      istioItems.push(item);\n    });\n  });\n\n  return istioItems;\n};\n\nexport const vsToIstioItems = (vss: VirtualService[], validations: Validations): IstioConfigItem[] => {\n  const istioItems: IstioConfigItem[] = [];\n  const hasValidations = (name: string) => validations.virtualservice && validations.virtualservice[name];\n\n  const typeNameProto = dicIstioType['virtualservices']; // ex. serviceEntries -> ServiceEntry\n  const typeName = typeNameProto.toLowerCase(); // ex. ServiceEntry -> serviceentry\n  const entryName = typeNameProto.charAt(0).toLowerCase() + typeNameProto.slice(1);\n\n  vss.forEach(vs => {\n    const item = {\n      namespace: vs.metadata.namespace || '',\n      type: typeName,\n      name: vs.metadata.name,\n      creationTimestamp: vs.metadata.creationTimestamp,\n      resourceVersion: vs.metadata.resourceVersion,\n      validation: hasValidations(vs.metadata.name) ? validations.virtualservice[vs.metadata.name] : undefined\n    };\n    item[entryName] = vs;\n    istioItems.push(item);\n  });\n  return istioItems;\n};\n\nexport const drToIstioItems = (drs: DestinationRule[], validations: Validations): IstioConfigItem[] => {\n  const istioItems: IstioConfigItem[] = [];\n  const hasValidations = (name: string) => validations.destinationrule && validations.destinationrule[name];\n\n  const typeNameProto = dicIstioType['destinationrules']; // ex. serviceEntries -> ServiceEntry\n  const typeName = typeNameProto.toLowerCase(); // ex. ServiceEntry -> serviceentry\n  const entryName = typeNameProto.charAt(0).toLowerCase() + typeNameProto.slice(1);\n\n  drs.forEach(dr => {\n    const item = {\n      namespace: dr.metadata.namespace || '',\n      type: typeName,\n      name: dr.metadata.name,\n      creationTimestamp: dr.metadata.creationTimestamp,\n      resourceVersion: dr.metadata.resourceVersion,\n      validation: hasValidations(dr.metadata.name) ? validations.destinationrule[dr.metadata.name] : undefined\n    };\n    item[entryName] = dr;\n    istioItems.push(item);\n  });\n  return istioItems;\n};\n\nexport const gwToIstioItems = (gws: Gateway[], vss: VirtualService[], validations: Validations): IstioConfigItem[] => {\n  const istioItems: IstioConfigItem[] = [];\n  const hasValidations = (name: string) => validations.gateway && validations.gateway[name];\n  const vsGateways = new Set();\n\n  const typeNameProto = dicIstioType['gateways']; // ex. serviceEntries -> ServiceEntry\n  const typeName = typeNameProto.toLowerCase(); // ex. ServiceEntry -> serviceentry\n  const entryName = typeNameProto.charAt(0).toLowerCase() + typeNameProto.slice(1);\n\n  vss.forEach(vs => {\n    vs.spec.gateways?.forEach(vsGatewayName => {\n      if (vsGatewayName.indexOf('/') < 0) {\n        vsGateways.add(vs.metadata.namespace + '/' + vsGatewayName);\n      } else {\n        vsGateways.add(vsGatewayName);\n      }\n    });\n  });\n\n  gws.forEach(gw => {\n    if (vsGateways.has(gw.metadata.namespace + '/' + gw.metadata.name)) {\n      const item = {\n        namespace: gw.metadata.namespace || '',\n        type: typeName,\n        name: gw.metadata.name,\n        creationTimestamp: gw.metadata.creationTimestamp,\n        resourceVersion: gw.metadata.resourceVersion,\n        validation: hasValidations(gw.metadata.name) ? validations.gateway[gw.metadata.name] : undefined\n      };\n      item[entryName] = gw;\n      istioItems.push(item);\n    }\n  });\n  return istioItems;\n};\n"]},"metadata":{},"sourceType":"module"}