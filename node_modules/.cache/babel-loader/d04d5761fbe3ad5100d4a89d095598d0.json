{"ast":null,"code":"import _slicedToArray from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"/root/kiali-ui/src/components/Filters/StatefulFilters.tsx\";\nimport * as React from 'react';\nimport { Chip, ChipGroup, ChipGroupToolbarItem, FormSelect, FormSelectOption, Select, SelectOption, SelectVariant, TextInput, Toolbar, ToolbarGroup, ToolbarItem, ToolbarSection, Button } from '@patternfly/react-core';\nimport { DEFAULT_LABEL_OPERATION, FILTER_ACTION_UPDATE, FilterTypes } from '../../types/Filters';\nimport * as FilterHelper from '../FilterList/FilterHelper';\nimport { PromisesRegistry } from '../../utils/CancelablePromises';\nimport { style } from 'typestyle';\nimport { LabelFilters } from './LabelFilter';\nimport { arrayEquals, groupBy } from 'utils/Common';\nimport { labelFilter } from './CommonFilters';\n\nvar classNames = require('classnames');\n\nvar filterValuesStyle = style({\n  paddingTop: '10px'\n});\nexport var FilterSelected = function FilterSelected() {\n  _classCallCheck(this, FilterSelected);\n};\nFilterSelected.selectedFilters = undefined;\nFilterSelected.opSelected = void 0;\n\nFilterSelected.init = function (filterTypes) {\n  var active = FilterSelected.getSelected();\n\n  if (!FilterSelected.isInitialized()) {\n    active = FilterHelper.getFiltersFromURL(filterTypes);\n    FilterSelected.setSelected(active);\n  } else if (!FilterHelper.filtersMatchURL(filterTypes, active)) {\n    active = FilterHelper.setFiltersToURL(filterTypes, active);\n    FilterSelected.setSelected(active);\n  }\n\n  return active;\n};\n\nFilterSelected.resetFilters = function () {\n  FilterSelected.selectedFilters = undefined;\n};\n\nFilterSelected.setSelected = function (activeFilters) {\n  FilterSelected.selectedFilters = activeFilters.filters;\n  FilterSelected.opSelected = activeFilters.op;\n};\n\nFilterSelected.getSelected = function () {\n  return {\n    filters: FilterSelected.selectedFilters || [],\n    op: FilterSelected.opSelected || 'or'\n  };\n};\n\nFilterSelected.isInitialized = function () {\n  return FilterSelected.selectedFilters !== undefined;\n};\n\nvar filterWithChildrenStyle = style({\n  paddingRight: '10px',\n  display: 'inherit'\n});\nvar dividerStyle = style({\n  borderRight: '1px solid #d1d1d1;',\n  padding: '10px',\n  display: 'inherit'\n});\nvar paddingStyle = style({\n  padding: '10px'\n});\nexport var StatefulFilters = /*#__PURE__*/function (_React$Component) {\n  _inherits(StatefulFilters, _React$Component);\n\n  var _super = _createSuper(StatefulFilters);\n\n  function StatefulFilters(props) {\n    var _this;\n\n    _classCallCheck(this, StatefulFilters);\n\n    _this = _super.call(this, props);\n    _this.promises = new PromisesRegistry();\n\n    _this.filterAdded = function (field, value) {\n      var activeFilters = _this.state.activeFilters;\n      var activeFilter = {\n        id: field.id,\n        title: field.title,\n        value: value\n      }; // For filters that need to be updated in place instead of added, we check if it is already defined in activeFilters\n\n      var current = activeFilters.filters.filter(function (filter) {\n        return filter.id === field.id;\n      });\n\n      if (field.action === FILTER_ACTION_UPDATE && current.length > 0) {\n        current.forEach(function (filter) {\n          return filter.value = value;\n        });\n      } else {\n        activeFilters.filters.push(activeFilter);\n      }\n\n      _this.updateActiveFilters(activeFilters);\n    };\n\n    _this.selectFilterType = function (value) {\n      var currentFilterType = _this.state.currentFilterType;\n\n      var filterType = _this.state.filterTypes.filter(function (filter) {\n        return filter.id === value;\n      })[0];\n\n      if (currentFilterType !== filterType) {\n        _this.setState({\n          currentValue: '',\n          currentFilterType: filterType\n        });\n      }\n    };\n\n    _this.filterValueAheadSelected = function (_event, valueId) {\n      _this.filterValueSelected(valueId);\n\n      _this.setState({\n        isExpanded: false\n      });\n    };\n\n    _this.filterValueSelected = function (valueId) {\n      var _this$state = _this.state,\n          currentFilterType = _this$state.currentFilterType,\n          currentValue = _this$state.currentValue;\n      var filterValue = currentFilterType.filterValues.find(function (filter) {\n        return filter.id === valueId;\n      });\n\n      if (filterValue && filterValue.id !== currentValue && !_this.isActive(currentFilterType, filterValue.title)) {\n        _this.filterAdded(currentFilterType, filterValue.title);\n      }\n    };\n\n    _this.updateCurrentValue = function (value) {\n      _this.setState({\n        currentValue: value\n      });\n    };\n\n    _this.onValueKeyPress = function (keyEvent) {\n      var _this$state2 = _this.state,\n          currentValue = _this$state2.currentValue,\n          currentFilterType = _this$state2.currentFilterType;\n\n      if (keyEvent.key === 'Enter') {\n        if (currentValue && currentValue.length > 0 && !_this.isActive(currentFilterType, currentValue)) {\n          _this.filterAdded(currentFilterType, currentValue);\n        }\n\n        _this.setState({\n          currentValue: ''\n        });\n\n        keyEvent.stopPropagation();\n        keyEvent.preventDefault();\n      }\n    };\n\n    _this.isActive = function (type, value) {\n      return _this.state.activeFilters.filters.some(function (active) {\n        return value === active.value && type.id === active.id;\n      });\n    };\n\n    _this.removeFilter = function (id, value) {\n      var updated = _this.state.activeFilters.filters.filter(function (x) {\n        return x.id !== id || x.value !== value;\n      });\n\n      if (updated.length !== _this.state.activeFilters.filters.length) {\n        _this.updateActiveFilters({\n          filters: updated,\n          op: _this.state.activeFilters.op\n        });\n      }\n    };\n\n    _this.clearFilters = function () {\n      _this.updateActiveFilters({\n        filters: [],\n        op: DEFAULT_LABEL_OPERATION\n      });\n    };\n\n    _this.renderChildren = function () {\n      return _this.props.children && /*#__PURE__*/React.createElement(ToolbarGroup, {\n        style: {\n          marginRight: '10px'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 9\n        }\n      }, Array.isArray(_this.props.children) ? _this.props.children.map(function (child, index) {\n        return child && /*#__PURE__*/React.createElement(ToolbarItem, {\n          key: 'toolbar_statefulFilters_' + index,\n          className: classNames('pf-u-mr-md', index === _this.props.children.length - 1 ? paddingStyle : dividerStyle),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 19\n          }\n        }, child);\n      }) : /*#__PURE__*/React.createElement(ToolbarItem, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }\n      }, _this.props.children));\n    };\n\n    _this.onToggle = function (isExpanded) {\n      _this.setState({\n        isExpanded: isExpanded\n      });\n    };\n\n    _this.state = {\n      currentFilterType: _this.props.initialFilters[0],\n      filterTypes: _this.props.initialFilters,\n      activeFilters: FilterSelected.init(_this.props.initialFilters),\n      isExpanded: false,\n      currentValue: ''\n    };\n    return _this;\n  }\n\n  _createClass(StatefulFilters, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadDynamicFilters();\n    }\n  }, {\n    key: \"loadDynamicFilters\",\n    value: function loadDynamicFilters() {\n      var _this2 = this;\n\n      // Call all loaders from FilterTypes and set results in state\n      var filterTypePromises = this.props.initialFilters.map(function (ft) {\n        if (ft.loader) {\n          return ft.loader().then(function (values) {\n            ft.filterValues = values;\n            return {\n              id: ft.id,\n              title: ft.title,\n              placeholder: ft.placeholder,\n              filterType: ft.filterType,\n              action: ft.action,\n              filterValues: ft.filterValues\n            };\n          });\n        } else {\n          return Promise.resolve(ft);\n        }\n      });\n      this.promises.registerAll('filterType', filterTypePromises).then(function (types) {\n        return _this2.setState({\n          filterTypes: types\n        });\n      }).catch(function (err) {\n        if (!err.isCanceled) {\n          console.debug(err);\n        }\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prev) {\n      var _this3 = this;\n\n      // If the props filters changed (e.g. different values), some state update is necessary\n      if (this.props.initialFilters !== prev.initialFilters && !arrayEquals(this.props.initialFilters, prev.initialFilters, function (t1, t2) {\n        return t1.id === t2.id && arrayEquals(t1.filterValues, t2.filterValues, function (v1, v2) {\n          return v1.id === v2.id && v1.title === v2.title;\n        });\n      })) {\n        var current = this.props.initialFilters.find(function (f) {\n          return f.id === _this3.state.currentFilterType.id;\n        }) || this.props.initialFilters[0];\n\n        var _active = FilterHelper.setFiltersToURL(this.props.initialFilters, this.state.activeFilters);\n\n        this.setState({\n          currentFilterType: current,\n          filterTypes: this.props.initialFilters,\n          activeFilters: _active\n        });\n        this.loadDynamicFilters();\n      } else if (!FilterHelper.filtersMatchURL(this.state.filterTypes, this.state.activeFilters)) {\n        FilterHelper.setFiltersToURL(this.state.filterTypes, this.state.activeFilters);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.promises.cancelAll();\n    }\n  }, {\n    key: \"updateActiveFilters\",\n    value: function updateActiveFilters(activeFilters) {\n      var cleanFilters = FilterHelper.setFiltersToURL(this.state.filterTypes, activeFilters);\n      FilterSelected.setSelected(cleanFilters);\n      this.setState({\n        activeFilters: cleanFilters,\n        currentValue: ''\n      });\n      this.props.onFilterChange(cleanFilters);\n    }\n  }, {\n    key: \"renderInput\",\n    value: function renderInput() {\n      var _this4 = this;\n\n      var _this$state3 = this.state,\n          currentFilterType = _this$state3.currentFilterType,\n          currentValue = _this$state3.currentValue;\n\n      if (!currentFilterType) {\n        return null;\n      }\n\n      if (currentFilterType.filterType === FilterTypes.typeAhead) {\n        return /*#__PURE__*/React.createElement(Select, {\n          value: 'default',\n          onSelect: this.filterValueAheadSelected,\n          onToggle: this.onToggle,\n          variant: SelectVariant.typeahead,\n          isExpanded: this.state.isExpanded,\n          \"aria-label\": \"filter_select_value\",\n          placeholderText: currentFilterType.placeholder,\n          width: 'auto',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 9\n          }\n        }, currentFilterType.filterValues.map(function (filter, index) {\n          return /*#__PURE__*/React.createElement(SelectOption, {\n            key: 'filter_' + index,\n            value: filter.id,\n            label: filter.title,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 13\n            }\n          });\n        }));\n      } else if (currentFilterType.filterType === FilterTypes.select) {\n        return /*#__PURE__*/React.createElement(FormSelect, {\n          value: 'default',\n          onChange: this.filterValueSelected,\n          \"aria-label\": \"filter_select_value\",\n          style: {\n            width: 'auto'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(FormSelectOption, {\n          key: 'filter_default',\n          value: 'default',\n          label: currentFilterType.placeholder,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 11\n          }\n        }), currentFilterType.filterValues.map(function (filter, index) {\n          return /*#__PURE__*/React.createElement(FormSelectOption, {\n            key: 'filter_' + index,\n            value: filter.id,\n            label: filter.title,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 13\n            }\n          });\n        }));\n      } else if (currentFilterType.filterType === FilterTypes.label || currentFilterType.filterType === FilterTypes.nsLabel) {\n        return /*#__PURE__*/React.createElement(LabelFilters, {\n          value: currentValue,\n          onChange: this.updateCurrentValue,\n          filterAdd: function filterAdd(value) {\n            return _this4.filterAdded(currentFilterType, value);\n          },\n          isActive: function isActive(value) {\n            return _this4.isActive(currentFilterType, value);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 9\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(TextInput, {\n          type: currentFilterType.filterType,\n          value: currentValue,\n          \"aria-label\": 'filter_input_value',\n          placeholder: currentFilterType.placeholder,\n          onChange: this.updateCurrentValue,\n          onKeyPress: function onKeyPress(e) {\n            return _this4.onValueKeyPress(e);\n          },\n          style: {\n            width: 'auto'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 9\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$state4 = this.state,\n          currentFilterType = _this$state4.currentFilterType,\n          activeFilters = _this$state4.activeFilters;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Toolbar, {\n        className: \"pf-l-toolbar pf-u-justify-content-space-between pf-u-mx-xl pf-u-my-md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ToolbarSection, {\n        \"aria-label\": \"ToolbarSection\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }\n      }, this.props.childrenFirst && this.renderChildren(), /*#__PURE__*/React.createElement(ToolbarGroup, {\n        style: {\n          marginRight: '0px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ToolbarItem, {\n        className: classNames(this.props.children ? filterWithChildrenStyle : '', 'pf-u-mr-xl'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormSelect, {\n        value: currentFilterType.id,\n        \"aria-label\": 'filter_select_type',\n        onChange: this.selectFilterType,\n        style: {\n          width: 'auto',\n          backgroundColor: '#ededed',\n          borderColor: '#bbb'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 17\n        }\n      }, this.state.filterTypes.map(function (option) {\n        return /*#__PURE__*/React.createElement(FormSelectOption, {\n          key: option.id,\n          value: option.id,\n          label: option.title,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 21\n          }\n        });\n      })), this.renderInput())), !this.props.childrenFirst && this.renderChildren(), (this.state.activeFilters.filters.filter(function (f) {\n        return f.id === labelFilter.id;\n      }).length > 0 || this.state.currentFilterType.filterType === FilterTypes.label) && /*#__PURE__*/React.createElement(ToolbarGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ToolbarItem, {\n        className: classNames('pf-u-mr-md'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(paddingStyle),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 19\n        }\n      }, \"Label Operation\"), /*#__PURE__*/React.createElement(FormSelect, {\n        value: activeFilters.op,\n        onChange: function onChange(value) {\n          return _this5.updateActiveFilters({\n            filters: _this5.state.activeFilters.filters,\n            op: value\n          });\n        },\n        \"aria-label\": \"filter_select_value\",\n        style: {\n          width: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectOption, {\n        key: 'filter_or',\n        value: 'or',\n        label: 'or',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(FormSelectOption, {\n        key: 'filter_and',\n        value: 'and',\n        label: 'and',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 21\n        }\n      })))))), activeFilters && activeFilters.filters.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n        className: filterValuesStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Toolbar, {\n        className: \"pf-l-toolbar pf-u-justify-content-space-between pf-u-mx-xl pf-u-my-md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ToolbarSection, {\n        \"aria-label\": \"FiltersSection\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(React.Fragment, null, '筛选条件:'), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginLeft: '5px',\n          display: 'inline-flex',\n          height: '80%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ChipGroup, {\n        defaultIsOpen: true,\n        withToolbar: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 19\n        }\n      }, Object.entries(groupBy(activeFilters.filters, 'id')).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            category = _ref2[0],\n            items = _ref2[1];\n\n        // At least one item is present after groupBy, and all items inside category share the same title\n        var title = items[0].title;\n        return /*#__PURE__*/React.createElement(ChipGroupToolbarItem, {\n          key: category,\n          categoryName: title,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 25\n          }\n        }, items.map(function (item) {\n          return /*#__PURE__*/React.createElement(Chip, {\n            key: 'filter_' + category + '_' + item.value,\n            onClick: function onClick() {\n              return _this5.removeFilter(item.id, item.value);\n            },\n            __self: _this5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 29\n            }\n          }, item.value);\n        }));\n      }))), /*#__PURE__*/React.createElement(Button, {\n        variant: \"link\",\n        onClick: function onClick(e) {\n          e.preventDefault();\n\n          _this5.clearFilters();\n        },\n        style: {\n          marginLeft: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 17\n        }\n      }, \"Clear All Filters\")))));\n    }\n  }]);\n\n  return StatefulFilters;\n}(React.Component);","map":{"version":3,"sources":["/root/kiali-ui/src/components/Filters/StatefulFilters.tsx"],"names":["React","Chip","ChipGroup","ChipGroupToolbarItem","FormSelect","FormSelectOption","Select","SelectOption","SelectVariant","TextInput","Toolbar","ToolbarGroup","ToolbarItem","ToolbarSection","Button","DEFAULT_LABEL_OPERATION","FILTER_ACTION_UPDATE","FilterTypes","FilterHelper","PromisesRegistry","style","LabelFilters","arrayEquals","groupBy","labelFilter","classNames","require","filterValuesStyle","paddingTop","FilterSelected","selectedFilters","undefined","opSelected","init","filterTypes","active","getSelected","isInitialized","getFiltersFromURL","setSelected","filtersMatchURL","setFiltersToURL","resetFilters","activeFilters","filters","op","filterWithChildrenStyle","paddingRight","display","dividerStyle","borderRight","padding","paddingStyle","StatefulFilters","props","promises","filterAdded","field","value","state","activeFilter","id","title","current","filter","action","length","forEach","push","updateActiveFilters","selectFilterType","currentFilterType","filterType","setState","currentValue","filterValueAheadSelected","_event","valueId","filterValueSelected","isExpanded","filterValue","filterValues","find","isActive","updateCurrentValue","onValueKeyPress","keyEvent","key","stopPropagation","preventDefault","type","some","removeFilter","updated","x","clearFilters","renderChildren","children","marginRight","Array","isArray","map","child","index","onToggle","initialFilters","loadDynamicFilters","filterTypePromises","ft","loader","then","values","placeholder","Promise","resolve","registerAll","types","catch","err","isCanceled","console","debug","prev","t1","t2","v1","v2","f","cancelAll","cleanFilters","onFilterChange","typeAhead","typeahead","select","width","label","nsLabel","e","childrenFirst","backgroundColor","borderColor","option","renderInput","marginLeft","height","Object","entries","category","items","item","Component"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,IADF,EAEEC,SAFF,EAGEC,oBAHF,EAIEC,UAJF,EAKEC,gBALF,EAMEC,MANF,EAOEC,YAPF,EAQEC,aARF,EASEC,SATF,EAWEC,OAXF,EAYEC,YAZF,EAaEC,WAbF,EAcEC,cAdF,EAgBEC,MAhBF,QAiBO,wBAjBP;AAkBA,SAGEC,uBAHF,EAIEC,oBAJF,EAMEC,WANF,QAQO,qBARP;AASA,OAAO,KAAKC,YAAZ,MAA8B,4BAA9B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,KAAT,QAAsB,WAAtB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,cAArC;AACA,SAASC,WAAT,QAA4B,iBAA5B;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AAEA,IAAMC,iBAAiB,GAAGP,KAAK,CAAC;AAC9BQ,EAAAA,UAAU,EAAE;AADkB,CAAD,CAA/B;AAmBA,WAAaC,cAAb;AAAA;AAAA;AAAaA,c,CACJC,e,GAA8CC,S;AAD1CF,c,CAEJG,U;;AAFIH,c,CAIJI,I,GAAO,UAACC,WAAD,EAA+B;AAC3C,MAAIC,MAAM,GAAGN,cAAc,CAACO,WAAf,EAAb;;AACA,MAAI,CAACP,cAAc,CAACQ,aAAf,EAAL,EAAqC;AACnCF,IAAAA,MAAM,GAAGjB,YAAY,CAACoB,iBAAb,CAA+BJ,WAA/B,CAAT;AACAL,IAAAA,cAAc,CAACU,WAAf,CAA2BJ,MAA3B;AACD,GAHD,MAGO,IAAI,CAACjB,YAAY,CAACsB,eAAb,CAA6BN,WAA7B,EAA0CC,MAA1C,CAAL,EAAwD;AAC7DA,IAAAA,MAAM,GAAGjB,YAAY,CAACuB,eAAb,CAA6BP,WAA7B,EAA0CC,MAA1C,CAAT;AACAN,IAAAA,cAAc,CAACU,WAAf,CAA2BJ,MAA3B;AACD;;AACD,SAAOA,MAAP;AACD,C;;AAdUN,c,CAgBJa,Y,GAAe,YAAM;AAC1Bb,EAAAA,cAAc,CAACC,eAAf,GAAiCC,SAAjC;AACD,C;;AAlBUF,c,CAoBJU,W,GAAc,UAACI,aAAD,EAAsC;AACzDd,EAAAA,cAAc,CAACC,eAAf,GAAiCa,aAAa,CAACC,OAA/C;AACAf,EAAAA,cAAc,CAACG,UAAf,GAA4BW,aAAa,CAACE,EAA1C;AACD,C;;AAvBUhB,c,CAyBJO,W,GAAc,YAAyB;AAC5C,SAAO;AAAEQ,IAAAA,OAAO,EAAEf,cAAc,CAACC,eAAf,IAAkC,EAA7C;AAAiDe,IAAAA,EAAE,EAAEhB,cAAc,CAACG,UAAf,IAA6B;AAAlF,GAAP;AACD,C;;AA3BUH,c,CA6BJQ,a,GAAgB,YAAM;AAC3B,SAAOR,cAAc,CAACC,eAAf,KAAmCC,SAA1C;AACD,C;;AAGH,IAAMe,uBAAuB,GAAG1B,KAAK,CAAC;AAAE2B,EAAAA,YAAY,EAAE,MAAhB;AAAwBC,EAAAA,OAAO,EAAE;AAAjC,CAAD,CAArC;AACA,IAAMC,YAAY,GAAG7B,KAAK,CAAC;AAAE8B,EAAAA,WAAW,EAAE,oBAAf;AAAqCC,EAAAA,OAAO,EAAE,MAA9C;AAAsDH,EAAAA,OAAO,EAAE;AAA/D,CAAD,CAA1B;AACA,IAAMI,YAAY,GAAGhC,KAAK,CAAC;AAAE+B,EAAAA,OAAO,EAAE;AAAX,CAAD,CAA1B;AAEA,WAAaE,eAAb;AAAA;;AAAA;;AAGE,2BAAYC,KAAZ,EAAyC;AAAA;;AAAA;;AACvC,8BAAMA,KAAN;AADuC,UAFjCC,QAEiC,GAFtB,IAAIpC,gBAAJ,EAEsB;;AAAA,UAmFzCqC,WAnFyC,GAmF3B,UAACC,KAAD,EAAoBC,KAApB,EAAsC;AAClD,UAAMf,aAAa,GAAG,MAAKgB,KAAL,CAAWhB,aAAjC;AACA,UAAMiB,YAA0B,GAAG;AACjCC,QAAAA,EAAE,EAAEJ,KAAK,CAACI,EADuB;AAEjCC,QAAAA,KAAK,EAAEL,KAAK,CAACK,KAFoB;AAGjCJ,QAAAA,KAAK,EAAEA;AAH0B,OAAnC,CAFkD,CAQlD;;AACA,UAAMK,OAAO,GAAGpB,aAAa,CAACC,OAAd,CAAsBoB,MAAtB,CAA6B,UAAAA,MAAM;AAAA,eAAIA,MAAM,CAACH,EAAP,KAAcJ,KAAK,CAACI,EAAxB;AAAA,OAAnC,CAAhB;;AACA,UAAIJ,KAAK,CAACQ,MAAN,KAAiBjD,oBAAjB,IAAyC+C,OAAO,CAACG,MAAR,GAAiB,CAA9D,EAAiE;AAC/DH,QAAAA,OAAO,CAACI,OAAR,CAAgB,UAAAH,MAAM;AAAA,iBAAKA,MAAM,CAACN,KAAP,GAAeA,KAApB;AAAA,SAAtB;AACD,OAFD,MAEO;AACLf,QAAAA,aAAa,CAACC,OAAd,CAAsBwB,IAAtB,CAA2BR,YAA3B;AACD;;AAED,YAAKS,mBAAL,CAAyB1B,aAAzB;AACD,KApGwC;;AAAA,UAsGzC2B,gBAtGyC,GAsGtB,UAACZ,KAAD,EAAmB;AACpC,UAAQa,iBAAR,GAA8B,MAAKZ,KAAnC,CAAQY,iBAAR;;AACA,UAAMC,UAAU,GAAG,MAAKb,KAAL,CAAWzB,WAAX,CAAuB8B,MAAvB,CAA8B,UAAAA,MAAM;AAAA,eAAIA,MAAM,CAACH,EAAP,KAAcH,KAAlB;AAAA,OAApC,EAA6D,CAA7D,CAAnB;;AAEA,UAAIa,iBAAiB,KAAKC,UAA1B,EAAsC;AACpC,cAAKC,QAAL,CAAc;AACZC,UAAAA,YAAY,EAAE,EADF;AAEZH,UAAAA,iBAAiB,EAAEC;AAFP,SAAd;AAID;AACF,KAhHwC;;AAAA,UAkHzCG,wBAlHyC,GAkHd,UAACC,MAAD,EAAcC,OAAd,EAAuD;AAChF,YAAKC,mBAAL,CAAyBD,OAAzB;;AACA,YAAKJ,QAAL,CAAc;AAAEM,QAAAA,UAAU,EAAE;AAAd,OAAd;AACD,KArHwC;;AAAA,UAuHzCD,mBAvHyC,GAuHnB,UAACD,OAAD,EAA0C;AAC9D,wBAA4C,MAAKlB,KAAjD;AAAA,UAAQY,iBAAR,eAAQA,iBAAR;AAAA,UAA2BG,YAA3B,eAA2BA,YAA3B;AACA,UAAMM,WAAW,GAAGT,iBAAiB,CAACU,YAAlB,CAA+BC,IAA/B,CAAoC,UAAAlB,MAAM;AAAA,eAAIA,MAAM,CAACH,EAAP,KAAcgB,OAAlB;AAAA,OAA1C,CAApB;;AAEA,UAAIG,WAAW,IAAIA,WAAW,CAACnB,EAAZ,KAAmBa,YAAlC,IAAkD,CAAC,MAAKS,QAAL,CAAcZ,iBAAd,EAAiCS,WAAW,CAAClB,KAA7C,CAAvD,EAA4G;AAC1G,cAAKN,WAAL,CAAiBe,iBAAjB,EAAoCS,WAAW,CAAClB,KAAhD;AACD;AACF,KA9HwC;;AAAA,UAgIzCsB,kBAhIyC,GAgIpB,UAAA1B,KAAK,EAAI;AAC5B,YAAKe,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEhB;AAAhB,OAAd;AACD,KAlIwC;;AAAA,UAoIzC2B,eApIyC,GAoIvB,UAACC,QAAD,EAAmB;AACnC,yBAA4C,MAAK3B,KAAjD;AAAA,UAAQe,YAAR,gBAAQA,YAAR;AAAA,UAAsBH,iBAAtB,gBAAsBA,iBAAtB;;AAEA,UAAIe,QAAQ,CAACC,GAAT,KAAiB,OAArB,EAA8B;AAC5B,YAAIb,YAAY,IAAIA,YAAY,CAACR,MAAb,GAAsB,CAAtC,IAA2C,CAAC,MAAKiB,QAAL,CAAcZ,iBAAd,EAAiCG,YAAjC,CAAhD,EAAgG;AAC9F,gBAAKlB,WAAL,CAAiBe,iBAAjB,EAAoCG,YAApC;AACD;;AAED,cAAKD,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAd;;AACAY,QAAAA,QAAQ,CAACE,eAAT;AACAF,QAAAA,QAAQ,CAACG,cAAT;AACD;AACF,KAhJwC;;AAAA,UAkJzCN,QAlJyC,GAkJ9B,UAACO,IAAD,EAAmBhC,KAAnB,EAA8C;AACvD,aAAO,MAAKC,KAAL,CAAWhB,aAAX,CAAyBC,OAAzB,CAAiC+C,IAAjC,CAAsC,UAAAxD,MAAM;AAAA,eAAIuB,KAAK,KAAKvB,MAAM,CAACuB,KAAjB,IAA0BgC,IAAI,CAAC7B,EAAL,KAAY1B,MAAM,CAAC0B,EAAjD;AAAA,OAA5C,CAAP;AACD,KApJwC;;AAAA,UAsJzC+B,YAtJyC,GAsJ1B,UAAC/B,EAAD,EAAaH,KAAb,EAA+B;AAC5C,UAAMmC,OAAO,GAAG,MAAKlC,KAAL,CAAWhB,aAAX,CAAyBC,OAAzB,CAAiCoB,MAAjC,CAAwC,UAAA8B,CAAC;AAAA,eAAIA,CAAC,CAACjC,EAAF,KAASA,EAAT,IAAeiC,CAAC,CAACpC,KAAF,KAAYA,KAA/B;AAAA,OAAzC,CAAhB;;AACA,UAAImC,OAAO,CAAC3B,MAAR,KAAmB,MAAKP,KAAL,CAAWhB,aAAX,CAAyBC,OAAzB,CAAiCsB,MAAxD,EAAgE;AAC9D,cAAKG,mBAAL,CAAyB;AAAEzB,UAAAA,OAAO,EAAEiD,OAAX;AAAoBhD,UAAAA,EAAE,EAAE,MAAKc,KAAL,CAAWhB,aAAX,CAAyBE;AAAjD,SAAzB;AACD;AACF,KA3JwC;;AAAA,UA6JzCkD,YA7JyC,GA6J1B,YAAM;AACnB,YAAK1B,mBAAL,CAAyB;AAAEzB,QAAAA,OAAO,EAAE,EAAX;AAAeC,QAAAA,EAAE,EAAE9B;AAAnB,OAAzB;AACD,KA/JwC;;AAAA,UAiOzCiF,cAjOyC,GAiOxB,YAAM;AACrB,aACE,MAAK1C,KAAL,CAAW2C,QAAX,iBACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,KAAK,CAACC,OAAN,CAAc,MAAK9C,KAAL,CAAW2C,QAAzB,IACE,MAAK3C,KAAL,CAAW2C,QAAZ,CAAoCI,GAApC,CACE,UAACC,KAAD,EAAQC,KAAR;AAAA,eACED,KAAK,iBACH,oBAAC,WAAD;AACE,UAAA,GAAG,EAAE,6BAA6BC,KADpC;AAEE,UAAA,SAAS,EAAE9E,UAAU,CACnB,YADmB,EAEnB8E,KAAK,KAAM,MAAKjD,KAAL,CAAW2C,QAAZ,CAAoC/B,MAApC,GAA6C,CAAvD,GAA2Dd,YAA3D,GAA0EH,YAFvD,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOGqD,KAPH,CAFJ;AAAA,OADF,CADD,gBAgBC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,MAAKhD,KAAL,CAAW2C,QAAzB,CAjBJ,CAFJ;AAwBD,KA1PwC;;AAAA,UA4PzCO,QA5PyC,GA4P9B,UAAAzB,UAAU,EAAI;AACvB,YAAKN,QAAL,CAAc;AACZM,QAAAA,UAAU,EAAEA;AADA,OAAd;AAGD,KAhQwC;;AAEvC,UAAKpB,KAAL,GAAa;AACXY,MAAAA,iBAAiB,EAAE,MAAKjB,KAAL,CAAWmD,cAAX,CAA0B,CAA1B,CADR;AAEXvE,MAAAA,WAAW,EAAE,MAAKoB,KAAL,CAAWmD,cAFb;AAGX9D,MAAAA,aAAa,EAAEd,cAAc,CAACI,IAAf,CAAoB,MAAKqB,KAAL,CAAWmD,cAA/B,CAHJ;AAIX1B,MAAAA,UAAU,EAAE,KAJD;AAKXL,MAAAA,YAAY,EAAE;AALH,KAAb;AAFuC;AASxC;;AAZH;AAAA;AAAA,WAcE,6BAAoB;AAClB,WAAKgC,kBAAL;AACD;AAhBH;AAAA;AAAA,WAkBE,8BAA6B;AAAA;;AAC3B;AACA,UAAMC,kBAAkB,GAAG,KAAKrD,KAAL,CAAWmD,cAAX,CAA0BJ,GAA1B,CAA8B,UAAAO,EAAE,EAAI;AAC7D,YAAIA,EAAE,CAACC,MAAP,EAAe;AACb,iBAAOD,EAAE,CAACC,MAAH,GAAYC,IAAZ,CAAiB,UAAAC,MAAM,EAAI;AAChCH,YAAAA,EAAE,CAAC3B,YAAH,GAAkB8B,MAAlB;AACA,mBAAO;AACLlD,cAAAA,EAAE,EAAE+C,EAAE,CAAC/C,EADF;AAELC,cAAAA,KAAK,EAAE8C,EAAE,CAAC9C,KAFL;AAGLkD,cAAAA,WAAW,EAAEJ,EAAE,CAACI,WAHX;AAILxC,cAAAA,UAAU,EAAEoC,EAAE,CAACpC,UAJV;AAKLP,cAAAA,MAAM,EAAE2C,EAAE,CAAC3C,MALN;AAMLgB,cAAAA,YAAY,EAAE2B,EAAE,CAAC3B;AANZ,aAAP;AAQD,WAVM,CAAP;AAWD,SAZD,MAYO;AACL,iBAAOgC,OAAO,CAACC,OAAR,CAAgBN,EAAhB,CAAP;AACD;AACF,OAhB0B,CAA3B;AAkBA,WAAKrD,QAAL,CACG4D,WADH,CACe,YADf,EAC6BR,kBAD7B,EAEGG,IAFH,CAEQ,UAAAM,KAAK;AAAA,eAAI,MAAI,CAAC3C,QAAL,CAAc;AAAEvC,UAAAA,WAAW,EAAEkF;AAAf,SAAd,CAAJ;AAAA,OAFb,EAGGC,KAHH,CAGS,UAAAC,GAAG,EAAI;AACZ,YAAI,CAACA,GAAG,CAACC,UAAT,EAAqB;AACnBC,UAAAA,OAAO,CAACC,KAAR,CAAcH,GAAd;AACD;AACF,OAPH;AAQD;AA9CH;AAAA;AAAA,WAgDE,4BAAmBI,IAAnB,EAA+C;AAAA;;AAC7C;AACA,UACE,KAAKpE,KAAL,CAAWmD,cAAX,KAA8BiB,IAAI,CAACjB,cAAnC,IACA,CAACnF,WAAW,CAAC,KAAKgC,KAAL,CAAWmD,cAAZ,EAA4BiB,IAAI,CAACjB,cAAjC,EAAiD,UAACkB,EAAD,EAAKC,EAAL,EAAY;AACvE,eACED,EAAE,CAAC9D,EAAH,KAAU+D,EAAE,CAAC/D,EAAb,IACAvC,WAAW,CAACqG,EAAE,CAAC1C,YAAJ,EAAkB2C,EAAE,CAAC3C,YAArB,EAAmC,UAAC4C,EAAD,EAAKC,EAAL,EAAY;AACxD,iBAAOD,EAAE,CAAChE,EAAH,KAAUiE,EAAE,CAACjE,EAAb,IAAmBgE,EAAE,CAAC/D,KAAH,KAAagE,EAAE,CAAChE,KAA1C;AACD,SAFU,CAFb;AAMD,OAPW,CAFd,EAUE;AACA,YAAMC,OAAO,GACX,KAAKT,KAAL,CAAWmD,cAAX,CAA0BvB,IAA1B,CAA+B,UAAA6C,CAAC;AAAA,iBAAIA,CAAC,CAAClE,EAAF,KAAS,MAAI,CAACF,KAAL,CAAWY,iBAAX,CAA6BV,EAA1C;AAAA,SAAhC,KAAiF,KAAKP,KAAL,CAAWmD,cAAX,CAA0B,CAA1B,CADnF;;AAEA,YAAMtE,OAAM,GAAGjB,YAAY,CAACuB,eAAb,CAA6B,KAAKa,KAAL,CAAWmD,cAAxC,EAAwD,KAAK9C,KAAL,CAAWhB,aAAnE,CAAf;;AACA,aAAK8B,QAAL,CAAc;AACZF,UAAAA,iBAAiB,EAAER,OADP;AAEZ7B,UAAAA,WAAW,EAAE,KAAKoB,KAAL,CAAWmD,cAFZ;AAGZ9D,UAAAA,aAAa,EAAER;AAHH,SAAd;AAKA,aAAKuE,kBAAL;AACD,OApBD,MAoBO,IAAI,CAACxF,YAAY,CAACsB,eAAb,CAA6B,KAAKmB,KAAL,CAAWzB,WAAxC,EAAqD,KAAKyB,KAAL,CAAWhB,aAAhE,CAAL,EAAqF;AAC1FzB,QAAAA,YAAY,CAACuB,eAAb,CAA6B,KAAKkB,KAAL,CAAWzB,WAAxC,EAAqD,KAAKyB,KAAL,CAAWhB,aAAhE;AACD;AACF;AAzEH;AAAA;AAAA,WA2EE,gCAAuB;AACrB,WAAKY,QAAL,CAAcyE,SAAd;AACD;AA7EH;AAAA;AAAA,WA+EE,6BAAoBrF,aAApB,EAAsD;AACpD,UAAMsF,YAAY,GAAG/G,YAAY,CAACuB,eAAb,CAA6B,KAAKkB,KAAL,CAAWzB,WAAxC,EAAqDS,aAArD,CAArB;AACAd,MAAAA,cAAc,CAACU,WAAf,CAA2B0F,YAA3B;AACA,WAAKxD,QAAL,CAAc;AAAE9B,QAAAA,aAAa,EAAEsF,YAAjB;AAA+BvD,QAAAA,YAAY,EAAE;AAA7C,OAAd;AACA,WAAKpB,KAAL,CAAW4E,cAAX,CAA0BD,YAA1B;AACD;AApFH;AAAA;AAAA,WAoKE,uBAAc;AAAA;;AACZ,yBAA4C,KAAKtE,KAAjD;AAAA,UAAQY,iBAAR,gBAAQA,iBAAR;AAAA,UAA2BG,YAA3B,gBAA2BA,YAA3B;;AAEA,UAAI,CAACH,iBAAL,EAAwB;AACtB,eAAO,IAAP;AACD;;AACD,UAAIA,iBAAiB,CAACC,UAAlB,KAAiCvD,WAAW,CAACkH,SAAjD,EAA4D;AAC1D,4BACE,oBAAC,MAAD;AACE,UAAA,KAAK,EAAE,SADT;AAEE,UAAA,QAAQ,EAAE,KAAKxD,wBAFjB;AAGE,UAAA,QAAQ,EAAE,KAAK6B,QAHjB;AAIE,UAAA,OAAO,EAAEhG,aAAa,CAAC4H,SAJzB;AAKE,UAAA,UAAU,EAAE,KAAKzE,KAAL,CAAWoB,UALzB;AAME,wBAAW,qBANb;AAOE,UAAA,eAAe,EAAER,iBAAiB,CAACyC,WAPrC;AAQE,UAAA,KAAK,EAAE,MART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAUGzC,iBAAiB,CAACU,YAAlB,CAA+BoB,GAA/B,CAAmC,UAACrC,MAAD,EAASuC,KAAT;AAAA,8BAClC,oBAAC,YAAD;AAAc,YAAA,GAAG,EAAE,YAAYA,KAA/B;AAAsC,YAAA,KAAK,EAAEvC,MAAM,CAACH,EAApD;AAAwD,YAAA,KAAK,EAAEG,MAAM,CAACF,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADkC;AAAA,SAAnC,CAVH,CADF;AAgBD,OAjBD,MAiBO,IAAIS,iBAAiB,CAACC,UAAlB,KAAiCvD,WAAW,CAACoH,MAAjD,EAAyD;AAC9D,4BACE,oBAAC,UAAD;AACE,UAAA,KAAK,EAAE,SADT;AAEE,UAAA,QAAQ,EAAE,KAAKvD,mBAFjB;AAGE,wBAAW,qBAHb;AAIE,UAAA,KAAK,EAAE;AAAEwD,YAAAA,KAAK,EAAE;AAAT,WAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAME,oBAAC,gBAAD;AAAkB,UAAA,GAAG,EAAE,gBAAvB;AAAyC,UAAA,KAAK,EAAE,SAAhD;AAA2D,UAAA,KAAK,EAAE/D,iBAAiB,CAACyC,WAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,EAOGzC,iBAAiB,CAACU,YAAlB,CAA+BoB,GAA/B,CAAmC,UAACrC,MAAD,EAASuC,KAAT;AAAA,8BAClC,oBAAC,gBAAD;AAAkB,YAAA,GAAG,EAAE,YAAYA,KAAnC;AAA0C,YAAA,KAAK,EAAEvC,MAAM,CAACH,EAAxD;AAA4D,YAAA,KAAK,EAAEG,MAAM,CAACF,KAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADkC;AAAA,SAAnC,CAPH,CADF;AAaD,OAdM,MAcA,IACLS,iBAAiB,CAACC,UAAlB,KAAiCvD,WAAW,CAACsH,KAA7C,IACAhE,iBAAiB,CAACC,UAAlB,KAAiCvD,WAAW,CAACuH,OAFxC,EAGL;AACA,4BACE,oBAAC,YAAD;AACE,UAAA,KAAK,EAAE9D,YADT;AAEE,UAAA,QAAQ,EAAE,KAAKU,kBAFjB;AAGE,UAAA,SAAS,EAAE,mBAAA1B,KAAK;AAAA,mBAAI,MAAI,CAACF,WAAL,CAAiBe,iBAAjB,EAAoCb,KAApC,CAAJ;AAAA,WAHlB;AAIE,UAAA,QAAQ,EAAE,kBAAAA,KAAK;AAAA,mBAAI,MAAI,CAACyB,QAAL,CAAcZ,iBAAd,EAAiCb,KAAjC,CAAJ;AAAA,WAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,OAZM,MAYA;AACL,4BACE,oBAAC,SAAD;AACE,UAAA,IAAI,EAAEa,iBAAiB,CAACC,UAD1B;AAEE,UAAA,KAAK,EAAEE,YAFT;AAGE,wBAAY,oBAHd;AAIE,UAAA,WAAW,EAAEH,iBAAiB,CAACyC,WAJjC;AAKE,UAAA,QAAQ,EAAE,KAAK5B,kBALjB;AAME,UAAA,UAAU,EAAE,oBAAAqD,CAAC;AAAA,mBAAI,MAAI,CAACpD,eAAL,CAAqBoD,CAArB,CAAJ;AAAA,WANf;AAOE,UAAA,KAAK,EAAE;AAAEH,YAAAA,KAAK,EAAE;AAAT,WAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;AACF;AAlOH;AAAA;AAAA,WAqQE,kBAAS;AAAA;;AACP,yBAA6C,KAAK3E,KAAlD;AAAA,UAAQY,iBAAR,gBAAQA,iBAAR;AAAA,UAA2B5B,aAA3B,gBAA2BA,aAA3B;AACA,0BACE,uDACE,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,uEAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,cAAD;AAAgB,sBAAW,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKW,KAAL,CAAWoF,aAAX,IAA4B,KAAK1C,cAAL,EAD/B,eAEE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEE,UAAAA,WAAW,EAAE;AAAf,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAEzE,UAAU,CAAC,KAAK6B,KAAL,CAAW2C,QAAX,GAAsBnD,uBAAtB,GAAgD,EAAjD,EAAqD,YAArD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AACE,QAAA,KAAK,EAAEyB,iBAAiB,CAACV,EAD3B;AAEE,sBAAY,oBAFd;AAGE,QAAA,QAAQ,EAAE,KAAKS,gBAHjB;AAIE,QAAA,KAAK,EAAE;AAAEgE,UAAAA,KAAK,EAAE,MAAT;AAAiBK,UAAAA,eAAe,EAAE,SAAlC;AAA6CC,UAAAA,WAAW,EAAE;AAA1D,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMG,KAAKjF,KAAL,CAAWzB,WAAX,CAAuBmE,GAAvB,CAA2B,UAAAwC,MAAM;AAAA,4BAChC,oBAAC,gBAAD;AAAkB,UAAA,GAAG,EAAEA,MAAM,CAAChF,EAA9B;AAAkC,UAAA,KAAK,EAAEgF,MAAM,CAAChF,EAAhD;AAAoD,UAAA,KAAK,EAAEgF,MAAM,CAAC/E,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADgC;AAAA,OAAjC,CANH,CADF,EAWG,KAAKgF,WAAL,EAXH,CADF,CAFF,EAiBG,CAAC,KAAKxF,KAAL,CAAWoF,aAAZ,IAA6B,KAAK1C,cAAL,EAjBhC,EAkBG,CAAC,KAAKrC,KAAL,CAAWhB,aAAX,CAAyBC,OAAzB,CAAiCoB,MAAjC,CAAwC,UAAA+D,CAAC;AAAA,eAAIA,CAAC,CAAClE,EAAF,KAASrC,WAAW,CAACqC,EAAzB;AAAA,OAAzC,EAAsEK,MAAtE,GAA+E,CAA/E,IACA,KAAKP,KAAL,CAAWY,iBAAX,CAA6BC,UAA7B,KAA4CvD,WAAW,CAACsH,KADzD,kBAEC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAE9G,UAAU,CAAC,YAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAEA,UAAU,CAAC2B,YAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE,oBAAC,UAAD;AACE,QAAA,KAAK,EAAET,aAAa,CAACE,EADvB;AAEE,QAAA,QAAQ,EAAE,kBAAAa,KAAK;AAAA,iBACb,MAAI,CAACW,mBAAL,CAAyB;AACvBzB,YAAAA,OAAO,EAAE,MAAI,CAACe,KAAL,CAAWhB,aAAX,CAAyBC,OADX;AAEvBC,YAAAA,EAAE,EAAEa;AAFmB,WAAzB,CADa;AAAA,SAFjB;AAQE,sBAAW,qBARb;AASE,QAAA,KAAK,EAAE;AAAE4E,UAAAA,KAAK,EAAE;AAAT,SATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAWE,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAE,WAAvB;AAAoC,QAAA,KAAK,EAAE,IAA3C;AAAiD,QAAA,KAAK,EAAE,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,eAYE,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAE,YAAvB;AAAqC,QAAA,KAAK,EAAE,KAA5C;AAAmD,QAAA,KAAK,EAAE,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,CAFF,CADF,CApBJ,CADF,CADF,EA4CG3F,aAAa,IAAIA,aAAa,CAACC,OAAd,CAAsBsB,MAAtB,GAA+B,CAAhD,iBACC;AAAK,QAAA,SAAS,EAAEvC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,uEAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,cAAD;AAAgB,sBAAW,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,0CAAG,OAAH,CADF,eAEE;AAAK,QAAA,KAAK,EAAE;AAAEoH,UAAAA,UAAU,EAAE,KAAd;AAAqB/F,UAAAA,OAAO,EAAE,aAA9B;AAA6CgG,UAAAA,MAAM,EAAE;AAArD,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAW,QAAA,aAAa,EAAE,IAA1B;AAAgC,QAAA,WAAW,EAAE,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,MAAM,CAACC,OAAP,CAAe3H,OAAO,CAACoB,aAAa,CAACC,OAAf,EAAwB,IAAxB,CAAtB,EAAqDyD,GAArD,CAAyD,gBAAuB;AAAA;AAAA,YAArB8C,QAAqB;AAAA,YAAXC,KAAW;;AAC/E;AACA,YAAMtF,KAAK,GAAGsF,KAAK,CAAC,CAAD,CAAL,CAAStF,KAAvB;AACA,4BACE,oBAAC,oBAAD;AAAsB,UAAA,GAAG,EAAEqF,QAA3B;AAAqC,UAAA,YAAY,EAAErF,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGsF,KAAK,CAAC/C,GAAN,CAAU,UAAAgD,IAAI;AAAA,8BACb,oBAAC,IAAD;AACE,YAAA,GAAG,EAAE,YAAYF,QAAZ,GAAuB,GAAvB,GAA6BE,IAAI,CAAC3F,KADzC;AAEE,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACkC,YAAL,CAAkByD,IAAI,CAACxF,EAAvB,EAA2BwF,IAAI,CAAC3F,KAAhC,CAAN;AAAA,aAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIG2F,IAAI,CAAC3F,KAJR,CADa;AAAA,SAAd,CADH,CADF;AAYD,OAfA,CADH,CADF,CAFF,eAsBE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,MADV;AAEE,QAAA,OAAO,EAAE,iBAAA+E,CAAC,EAAI;AACZA,UAAAA,CAAC,CAAChD,cAAF;;AACA,UAAA,MAAI,CAACM,YAAL;AACD,SALH;AAME,QAAA,KAAK,EAAE;AAAEgD,UAAAA,UAAU,EAAE;AAAd,SANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAtBF,CADF,CADF,CA7CJ,CADF;AAsFD;AA7VH;;AAAA;AAAA,EAAqC/I,KAAK,CAACsJ,SAA3C","sourcesContent":["import * as React from 'react';\nimport {\n  Chip,\n  ChipGroup,\n  ChipGroupToolbarItem,\n  FormSelect,\n  FormSelectOption,\n  Select,\n  SelectOption,\n  SelectVariant,\n  TextInput,\n  TextInputTypes,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarSection,\n  SelectOptionObject,\n  Button\n} from '@patternfly/react-core';\nimport {\n  ActiveFilter,\n  ActiveFiltersInfo,\n  DEFAULT_LABEL_OPERATION,\n  FILTER_ACTION_UPDATE,\n  FilterType,\n  FilterTypes,\n  LabelOperation\n} from '../../types/Filters';\nimport * as FilterHelper from '../FilterList/FilterHelper';\nimport { PromisesRegistry } from '../../utils/CancelablePromises';\nimport { style } from 'typestyle';\nimport { LabelFilters } from './LabelFilter';\nimport { arrayEquals, groupBy } from 'utils/Common';\nimport { labelFilter } from './CommonFilters';\n\nvar classNames = require('classnames');\n\nconst filterValuesStyle = style({\n  paddingTop: '10px'\n});\n\nexport interface StatefulFiltersProps {\n  onFilterChange: (active: ActiveFiltersInfo) => void;\n  initialFilters: FilterType[];\n  ref?: React.RefObject<StatefulFilters>;\n  childrenFirst?: boolean;\n}\n\nexport interface StatefulFiltersState {\n  filterTypes: FilterType[];\n  currentFilterType: FilterType;\n  activeFilters: ActiveFiltersInfo;\n  currentValue: string;\n  isExpanded: boolean;\n}\n\nexport class FilterSelected {\n  static selectedFilters: ActiveFilter[] | undefined = undefined;\n  static opSelected: LabelOperation;\n\n  static init = (filterTypes: FilterType[]) => {\n    let active = FilterSelected.getSelected();\n    if (!FilterSelected.isInitialized()) {\n      active = FilterHelper.getFiltersFromURL(filterTypes);\n      FilterSelected.setSelected(active);\n    } else if (!FilterHelper.filtersMatchURL(filterTypes, active)) {\n      active = FilterHelper.setFiltersToURL(filterTypes, active);\n      FilterSelected.setSelected(active);\n    }\n    return active;\n  };\n\n  static resetFilters = () => {\n    FilterSelected.selectedFilters = undefined;\n  };\n\n  static setSelected = (activeFilters: ActiveFiltersInfo) => {\n    FilterSelected.selectedFilters = activeFilters.filters;\n    FilterSelected.opSelected = activeFilters.op;\n  };\n\n  static getSelected = (): ActiveFiltersInfo => {\n    return { filters: FilterSelected.selectedFilters || [], op: FilterSelected.opSelected || 'or' };\n  };\n\n  static isInitialized = () => {\n    return FilterSelected.selectedFilters !== undefined;\n  };\n}\n\nconst filterWithChildrenStyle = style({ paddingRight: '10px', display: 'inherit' });\nconst dividerStyle = style({ borderRight: '1px solid #d1d1d1;', padding: '10px', display: 'inherit' });\nconst paddingStyle = style({ padding: '10px' });\n\nexport class StatefulFilters extends React.Component<StatefulFiltersProps, StatefulFiltersState> {\n  private promises = new PromisesRegistry();\n\n  constructor(props: StatefulFiltersProps) {\n    super(props);\n    this.state = {\n      currentFilterType: this.props.initialFilters[0],\n      filterTypes: this.props.initialFilters,\n      activeFilters: FilterSelected.init(this.props.initialFilters),\n      isExpanded: false,\n      currentValue: ''\n    };\n  }\n\n  componentDidMount() {\n    this.loadDynamicFilters();\n  }\n\n  private loadDynamicFilters() {\n    // Call all loaders from FilterTypes and set results in state\n    const filterTypePromises = this.props.initialFilters.map(ft => {\n      if (ft.loader) {\n        return ft.loader().then(values => {\n          ft.filterValues = values;\n          return {\n            id: ft.id,\n            title: ft.title,\n            placeholder: ft.placeholder,\n            filterType: ft.filterType,\n            action: ft.action,\n            filterValues: ft.filterValues\n          };\n        });\n      } else {\n        return Promise.resolve(ft);\n      }\n    });\n\n    this.promises\n      .registerAll('filterType', filterTypePromises)\n      .then(types => this.setState({ filterTypes: types }))\n      .catch(err => {\n        if (!err.isCanceled) {\n          console.debug(err);\n        }\n      });\n  }\n\n  componentDidUpdate(prev: StatefulFiltersProps) {\n    // If the props filters changed (e.g. different values), some state update is necessary\n    if (\n      this.props.initialFilters !== prev.initialFilters &&\n      !arrayEquals(this.props.initialFilters, prev.initialFilters, (t1, t2) => {\n        return (\n          t1.id === t2.id &&\n          arrayEquals(t1.filterValues, t2.filterValues, (v1, v2) => {\n            return v1.id === v2.id && v1.title === v2.title;\n          })\n        );\n      })\n    ) {\n      const current =\n        this.props.initialFilters.find(f => f.id === this.state.currentFilterType.id) || this.props.initialFilters[0];\n      const active = FilterHelper.setFiltersToURL(this.props.initialFilters, this.state.activeFilters);\n      this.setState({\n        currentFilterType: current,\n        filterTypes: this.props.initialFilters,\n        activeFilters: active\n      });\n      this.loadDynamicFilters();\n    } else if (!FilterHelper.filtersMatchURL(this.state.filterTypes, this.state.activeFilters)) {\n      FilterHelper.setFiltersToURL(this.state.filterTypes, this.state.activeFilters);\n    }\n  }\n\n  componentWillUnmount() {\n    this.promises.cancelAll();\n  }\n\n  updateActiveFilters(activeFilters: ActiveFiltersInfo) {\n    const cleanFilters = FilterHelper.setFiltersToURL(this.state.filterTypes, activeFilters);\n    FilterSelected.setSelected(cleanFilters);\n    this.setState({ activeFilters: cleanFilters, currentValue: '' });\n    this.props.onFilterChange(cleanFilters);\n  }\n\n  filterAdded = (field: FilterType, value: string) => {\n    const activeFilters = this.state.activeFilters;\n    const activeFilter: ActiveFilter = {\n      id: field.id,\n      title: field.title,\n      value: value\n    };\n\n    // For filters that need to be updated in place instead of added, we check if it is already defined in activeFilters\n    const current = activeFilters.filters.filter(filter => filter.id === field.id);\n    if (field.action === FILTER_ACTION_UPDATE && current.length > 0) {\n      current.forEach(filter => (filter.value = value));\n    } else {\n      activeFilters.filters.push(activeFilter);\n    }\n\n    this.updateActiveFilters(activeFilters);\n  };\n\n  selectFilterType = (value: string) => {\n    const { currentFilterType } = this.state;\n    const filterType = this.state.filterTypes.filter(filter => filter.id === value)[0];\n\n    if (currentFilterType !== filterType) {\n      this.setState({\n        currentValue: '',\n        currentFilterType: filterType\n      });\n    }\n  };\n\n  filterValueAheadSelected = (_event: any, valueId: string | SelectOptionObject) => {\n    this.filterValueSelected(valueId);\n    this.setState({ isExpanded: false });\n  };\n\n  filterValueSelected = (valueId: string | SelectOptionObject) => {\n    const { currentFilterType, currentValue } = this.state;\n    const filterValue = currentFilterType.filterValues.find(filter => filter.id === valueId);\n\n    if (filterValue && filterValue.id !== currentValue && !this.isActive(currentFilterType, filterValue.title)) {\n      this.filterAdded(currentFilterType, filterValue.title);\n    }\n  };\n\n  updateCurrentValue = value => {\n    this.setState({ currentValue: value });\n  };\n\n  onValueKeyPress = (keyEvent: any) => {\n    const { currentValue, currentFilterType } = this.state;\n\n    if (keyEvent.key === 'Enter') {\n      if (currentValue && currentValue.length > 0 && !this.isActive(currentFilterType, currentValue)) {\n        this.filterAdded(currentFilterType, currentValue);\n      }\n\n      this.setState({ currentValue: '' });\n      keyEvent.stopPropagation();\n      keyEvent.preventDefault();\n    }\n  };\n\n  isActive = (type: FilterType, value: string): boolean => {\n    return this.state.activeFilters.filters.some(active => value === active.value && type.id === active.id);\n  };\n\n  removeFilter = (id: string, value: string) => {\n    const updated = this.state.activeFilters.filters.filter(x => x.id !== id || x.value !== value);\n    if (updated.length !== this.state.activeFilters.filters.length) {\n      this.updateActiveFilters({ filters: updated, op: this.state.activeFilters.op });\n    }\n  };\n\n  clearFilters = () => {\n    this.updateActiveFilters({ filters: [], op: DEFAULT_LABEL_OPERATION });\n  };\n\n  renderInput() {\n    const { currentFilterType, currentValue } = this.state;\n\n    if (!currentFilterType) {\n      return null;\n    }\n    if (currentFilterType.filterType === FilterTypes.typeAhead) {\n      return (\n        <Select\n          value={'default'}\n          onSelect={this.filterValueAheadSelected}\n          onToggle={this.onToggle}\n          variant={SelectVariant.typeahead}\n          isExpanded={this.state.isExpanded}\n          aria-label=\"filter_select_value\"\n          placeholderText={currentFilterType.placeholder}\n          width={'auto'}\n        >\n          {currentFilterType.filterValues.map((filter, index) => (\n            <SelectOption key={'filter_' + index} value={filter.id} label={filter.title} />\n          ))}\n        </Select>\n      );\n    } else if (currentFilterType.filterType === FilterTypes.select) {\n      return (\n        <FormSelect\n          value={'default'}\n          onChange={this.filterValueSelected}\n          aria-label=\"filter_select_value\"\n          style={{ width: 'auto' }}\n        >\n          <FormSelectOption key={'filter_default'} value={'default'} label={currentFilterType.placeholder} />\n          {currentFilterType.filterValues.map((filter, index) => (\n            <FormSelectOption key={'filter_' + index} value={filter.id} label={filter.title} />\n          ))}\n        </FormSelect>\n      );\n    } else if (\n      currentFilterType.filterType === FilterTypes.label ||\n      currentFilterType.filterType === FilterTypes.nsLabel\n    ) {\n      return (\n        <LabelFilters\n          value={currentValue}\n          onChange={this.updateCurrentValue}\n          filterAdd={value => this.filterAdded(currentFilterType, value)}\n          isActive={value => this.isActive(currentFilterType, value)}\n        />\n      );\n    } else {\n      return (\n        <TextInput\n          type={currentFilterType.filterType as TextInputTypes}\n          value={currentValue}\n          aria-label={'filter_input_value'}\n          placeholder={currentFilterType.placeholder}\n          onChange={this.updateCurrentValue}\n          onKeyPress={e => this.onValueKeyPress(e)}\n          style={{ width: 'auto' }}\n        />\n      );\n    }\n  }\n\n  renderChildren = () => {\n    return (\n      this.props.children && (\n        <ToolbarGroup style={{ marginRight: '10px' }}>\n          {Array.isArray(this.props.children) ? (\n            (this.props.children as Array<any>).map(\n              (child, index) =>\n                child && (\n                  <ToolbarItem\n                    key={'toolbar_statefulFilters_' + index}\n                    className={classNames(\n                      'pf-u-mr-md',\n                      index === (this.props.children as Array<any>).length - 1 ? paddingStyle : dividerStyle\n                    )}\n                  >\n                    {child}\n                  </ToolbarItem>\n                )\n            )\n          ) : (\n            <ToolbarItem>{this.props.children}</ToolbarItem>\n          )}\n        </ToolbarGroup>\n      )\n    );\n  };\n\n  onToggle = isExpanded => {\n    this.setState({\n      isExpanded: isExpanded\n    });\n  };\n\n  render() {\n    const { currentFilterType, activeFilters } = this.state;\n    return (\n      <>\n        <Toolbar className=\"pf-l-toolbar pf-u-justify-content-space-between pf-u-mx-xl pf-u-my-md\">\n          <ToolbarSection aria-label=\"ToolbarSection\">\n            {this.props.childrenFirst && this.renderChildren()}\n            <ToolbarGroup style={{ marginRight: '0px' }}>\n              <ToolbarItem className={classNames(this.props.children ? filterWithChildrenStyle : '', 'pf-u-mr-xl')}>\n                <FormSelect\n                  value={currentFilterType.id}\n                  aria-label={'filter_select_type'}\n                  onChange={this.selectFilterType}\n                  style={{ width: 'auto', backgroundColor: '#ededed', borderColor: '#bbb' }}\n                >\n                  {this.state.filterTypes.map(option => (\n                    <FormSelectOption key={option.id} value={option.id} label={option.title} />\n                  ))}\n                </FormSelect>\n                {this.renderInput()}\n              </ToolbarItem>\n            </ToolbarGroup>\n            {!this.props.childrenFirst && this.renderChildren()}\n            {(this.state.activeFilters.filters.filter(f => f.id === labelFilter.id).length > 0 ||\n              this.state.currentFilterType.filterType === FilterTypes.label) && (\n              <ToolbarGroup>\n                <ToolbarItem className={classNames('pf-u-mr-md')}>\n                  <span className={classNames(paddingStyle)}>Label Operation</span>\n                  <FormSelect\n                    value={activeFilters.op}\n                    onChange={value =>\n                      this.updateActiveFilters({\n                        filters: this.state.activeFilters.filters,\n                        op: value as LabelOperation\n                      })\n                    }\n                    aria-label=\"filter_select_value\"\n                    style={{ width: 'auto' }}\n                  >\n                    <FormSelectOption key={'filter_or'} value={'or'} label={'or'} />\n                    <FormSelectOption key={'filter_and'} value={'and'} label={'and'} />\n                  </FormSelect>\n                </ToolbarItem>\n              </ToolbarGroup>\n            )}\n          </ToolbarSection>\n        </Toolbar>\n        {activeFilters && activeFilters.filters.length > 0 && (\n          <div className={filterValuesStyle}>\n            <Toolbar className=\"pf-l-toolbar pf-u-justify-content-space-between pf-u-mx-xl pf-u-my-md\">\n              <ToolbarSection aria-label=\"FiltersSection\">\n                <>{'筛选条件:'}</>\n                <div style={{ marginLeft: '5px', display: 'inline-flex', height: '80%' }}>\n                  <ChipGroup defaultIsOpen={true} withToolbar={true}>\n                    {Object.entries(groupBy(activeFilters.filters, 'id')).map(([category, items]) => {\n                      // At least one item is present after groupBy, and all items inside category share the same title\n                      const title = items[0].title;\n                      return (\n                        <ChipGroupToolbarItem key={category} categoryName={title}>\n                          {items.map(item => (\n                            <Chip\n                              key={'filter_' + category + '_' + item.value}\n                              onClick={() => this.removeFilter(item.id, item.value)}\n                            >\n                              {item.value}\n                            </Chip>\n                          ))}\n                        </ChipGroupToolbarItem>\n                      );\n                    })}\n                  </ChipGroup>\n                </div>\n                <Button\n                  variant=\"link\"\n                  onClick={e => {\n                    e.preventDefault();\n                    this.clearFilters();\n                  }}\n                  style={{ marginLeft: '5px' }}\n                >\n                  Clear All Filters\n                </Button>\n              </ToolbarSection>\n            </Toolbar>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}