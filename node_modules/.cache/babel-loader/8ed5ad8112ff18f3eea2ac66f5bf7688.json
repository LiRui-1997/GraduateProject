{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/pages/IstioConfigDetails/IstioObjectDetails/ServiceLink.tsx\";\nimport * as React from 'react';\nimport { serverConfig } from '../../../config';\nimport { ServiceIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\n\nvar ServiceLink = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ServiceLink, _React$PureComponent);\n\n  var _super = _createSuper(ServiceLink);\n\n  function ServiceLink() {\n    var _this;\n\n    _classCallCheck(this, ServiceLink);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.emptyHost = function () {\n      return !!_this.props.host;\n    };\n\n    _this.isFQDN = function () {\n      return _this.props.host.endsWith('.' + serverConfig.istioIdentityDomain);\n    };\n\n    _this.isTwoPartsService = function () {\n      var hostParts = _this.hostParts();\n\n      return hostParts.length === 2 && hostParts[1] === _this.props.namespace;\n    };\n\n    _this.isShortName = function () {\n      return _this.props.host.split('.').length === 1;\n    };\n\n    _this.isWildCardScoped = function () {\n      return _this.props.host.startsWith('*');\n    };\n\n    _this.showLink = function () {\n      return _this.props.isValid && !_this.isWildCardScoped() && (_this.isFQDN() || _this.isTwoPartsService() || _this.isShortName());\n    };\n\n    _this.hostParts = function () {\n      return _this.props.host.split('.');\n    };\n\n    _this.getHost = function () {\n      // Shortname scenario\n      var linkInfo = [_this.props.namespace, _this.props.host]; // FQDN and TwoParts service\n\n      if (_this.isFQDN() || _this.isTwoPartsService()) {\n        var split = _this.hostParts();\n\n        linkInfo = [split[1], split[0]];\n      }\n\n      return linkInfo;\n    };\n\n    _this.renderLink = function () {\n      var link = _this.getHost(); //Render the actual link\n\n\n      return /*#__PURE__*/React.createElement(Link, {\n        to: '/namespaces/' + link[0] + '/services/' + link[1] + '?list=istioconfig',\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, _this.props.host + ' ', /*#__PURE__*/React.createElement(ServiceIcon, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(ServiceLink, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.emptyHost()) {\n        return '-';\n      }\n\n      if (this.showLink()) {\n        return this.renderLink();\n      } else {\n        return this.props.host;\n      }\n    }\n  }]);\n\n  return ServiceLink;\n}(React.PureComponent);\n\nexport default ServiceLink;","map":{"version":3,"sources":["/root/kiali-ui/src/pages/IstioConfigDetails/IstioObjectDetails/ServiceLink.tsx"],"names":["React","serverConfig","ServiceIcon","Link","ServiceLink","emptyHost","props","host","isFQDN","endsWith","istioIdentityDomain","isTwoPartsService","hostParts","length","namespace","isShortName","split","isWildCardScoped","startsWith","showLink","isValid","getHost","linkInfo","renderLink","link","PureComponent"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAQMC,W;;;;;;;;;;;;;;;;UACJC,S,GAAY,YAAe;AACzB,aAAO,CAAC,CAAC,MAAKC,KAAL,CAAWC,IAApB;AACD,K;;UAEDC,M,GAAS,YAAe;AACtB,aAAO,MAAKF,KAAL,CAAWC,IAAX,CAAgBE,QAAhB,CAAyB,MAAMR,YAAY,CAACS,mBAA5C,CAAP;AACD,K;;UAEDC,iB,GAAoB,YAAe;AACjC,UAAMC,SAAS,GAAG,MAAKA,SAAL,EAAlB;;AACA,aAAOA,SAAS,CAACC,MAAV,KAAqB,CAArB,IAA0BD,SAAS,CAAC,CAAD,CAAT,KAAiB,MAAKN,KAAL,CAAWQ,SAA7D;AACD,K;;UAEDC,W,GAAc,YAAe;AAC3B,aAAO,MAAKT,KAAL,CAAWC,IAAX,CAAgBS,KAAhB,CAAsB,GAAtB,EAA2BH,MAA3B,KAAsC,CAA7C;AACD,K;;UAEDI,gB,GAAmB,YAAe;AAChC,aAAO,MAAKX,KAAL,CAAWC,IAAX,CAAgBW,UAAhB,CAA2B,GAA3B,CAAP;AACD,K;;UAEDC,Q,GAAW,YAAe;AACxB,aACE,MAAKb,KAAL,CAAWc,OAAX,IACA,CAAC,MAAKH,gBAAL,EADD,KAEC,MAAKT,MAAL,MAAiB,MAAKG,iBAAL,EAAjB,IAA6C,MAAKI,WAAL,EAF9C,CADF;AAKD,K;;UAEDH,S,GAAY,YAAgB;AAC1B,aAAO,MAAKN,KAAL,CAAWC,IAAX,CAAgBS,KAAhB,CAAsB,GAAtB,CAAP;AACD,K;;UAEDK,O,GAAU,YAAwB;AAChC;AACA,UAAIC,QAA0B,GAAG,CAAC,MAAKhB,KAAL,CAAWQ,SAAZ,EAAuB,MAAKR,KAAL,CAAWC,IAAlC,CAAjC,CAFgC,CAIhC;;AACA,UAAI,MAAKC,MAAL,MAAiB,MAAKG,iBAAL,EAArB,EAA+C;AAC7C,YAAMK,KAAK,GAAG,MAAKJ,SAAL,EAAd;;AACAU,QAAAA,QAAQ,GAAG,CAACN,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CAAX;AACD;;AAED,aAAOM,QAAP;AACD,K;;UAEDC,U,GAAa,YAAM;AACjB,UAAMC,IAAI,GAAG,MAAKH,OAAL,EAAb,CADiB,CAEjB;;;AACA,0BACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,iBAAiBG,IAAI,CAAC,CAAD,CAArB,GAA2B,YAA3B,GAA0CA,IAAI,CAAC,CAAD,CAA9C,GAAoD,mBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,MAAKlB,KAAL,CAAWC,IAAX,GAAkB,GADrB,eAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD,K;;;;;;;WAED,kBAAS;AACP,UAAI,CAAC,KAAKF,SAAL,EAAL,EAAuB;AACrB,eAAO,GAAP;AACD;;AAED,UAAI,KAAKc,QAAL,EAAJ,EAAqB;AACnB,eAAO,KAAKI,UAAL,EAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAKjB,KAAL,CAAWC,IAAlB;AACD;AACF;;;;EApEuBP,KAAK,CAACyB,a;;AAuEhC,eAAerB,WAAf","sourcesContent":["import * as React from 'react';\nimport { serverConfig } from '../../../config';\nimport { ServiceIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  namespace: string;\n  host: string;\n  isValid: boolean;\n}\n\nclass ServiceLink extends React.PureComponent<Props> {\n  emptyHost = (): boolean => {\n    return !!this.props.host;\n  };\n\n  isFQDN = (): boolean => {\n    return this.props.host.endsWith('.' + serverConfig.istioIdentityDomain);\n  };\n\n  isTwoPartsService = (): boolean => {\n    const hostParts = this.hostParts();\n    return hostParts.length === 2 && hostParts[1] === this.props.namespace;\n  };\n\n  isShortName = (): boolean => {\n    return this.props.host.split('.').length === 1;\n  };\n\n  isWildCardScoped = (): boolean => {\n    return this.props.host.startsWith('*');\n  };\n\n  showLink = (): boolean => {\n    return (\n      this.props.isValid &&\n      !this.isWildCardScoped() &&\n      (this.isFQDN() || this.isTwoPartsService() || this.isShortName())\n    );\n  };\n\n  hostParts = (): string[] => {\n    return this.props.host.split('.');\n  };\n\n  getHost = (): [string, string] => {\n    // Shortname scenario\n    let linkInfo: [string, string] = [this.props.namespace, this.props.host];\n\n    // FQDN and TwoParts service\n    if (this.isFQDN() || this.isTwoPartsService()) {\n      const split = this.hostParts();\n      linkInfo = [split[1], split[0]];\n    }\n\n    return linkInfo;\n  };\n\n  renderLink = () => {\n    const link = this.getHost();\n    //Render the actual link\n    return (\n      <Link to={'/namespaces/' + link[0] + '/services/' + link[1] + '?list=istioconfig'}>\n        {this.props.host + ' '}\n        <ServiceIcon />\n      </Link>\n    );\n  };\n\n  render() {\n    if (!this.emptyHost()) {\n      return '-';\n    }\n\n    if (this.showLink()) {\n      return this.renderLink();\n    } else {\n      return this.props.host;\n    }\n  }\n}\n\nexport default ServiceLink;\n"]},"metadata":{},"sourceType":"module"}