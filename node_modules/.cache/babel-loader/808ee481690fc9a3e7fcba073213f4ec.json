{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/components/SummaryPanel/ResponseHostsTable.tsx\";\nimport * as React from 'react';\nimport _ from 'lodash';\nimport { style } from 'typestyle';\nimport { Tooltip } from '@patternfly/react-core';\nvar hostStyle = style({\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n});\nexport var ResponseHostsTable = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ResponseHostsTable, _React$PureComponent);\n\n  var _super = _createSuper(ResponseHostsTable);\n\n  function ResponseHostsTable() {\n    var _this;\n\n    _classCallCheck(this, ResponseHostsTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.getRows = function (responses) {\n      var rows = [];\n\n      _.keys(responses).forEach(function (code) {\n        _.keys(responses[code].hosts).forEach(function (h) {\n          rows.push({\n            key: \"\".concat(code, \" \").concat(h),\n            code: code,\n            host: h,\n            val: responses[code].hosts[h]\n          });\n        });\n      });\n\n      return rows;\n    };\n\n    return _this;\n  }\n\n  _createClass(ResponseHostsTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var rows = this.getRows(this.props.responses);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, rows.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, this.props.title), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table\",\n        style: {\n          tableLayout: 'fixed',\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        key: \"table-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          width: '18%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }\n      }, \"Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          width: '52%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 19\n        }\n      }, \"Host\"), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          width: '30%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }\n      }, \"% Req\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, rows.map(function (row) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: row.key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }\n        }, row.code), /*#__PURE__*/React.createElement(Tooltip, {\n          distance: 3,\n          maxWidth: \"25rem\",\n          content: row.host,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          className: hostStyle,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 23\n          }\n        }, row.host)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }\n        }, row.val));\n      })))) : /*#__PURE__*/React.createElement(React.Fragment, null, \"No Host Information Available\"));\n    }\n  }]);\n\n  return ResponseHostsTable;\n}(React.PureComponent);","map":{"version":3,"sources":["/root/kiali-ui/src/components/SummaryPanel/ResponseHostsTable.tsx"],"names":["React","_","style","Tooltip","hostStyle","overflow","textOverflow","whiteSpace","ResponseHostsTable","getRows","responses","rows","keys","forEach","code","hosts","h","push","key","host","val","props","length","title","tableLayout","width","map","row","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport _ from 'lodash';\nimport { style } from 'typestyle';\nimport { Responses } from '../../types/Graph';\nimport { Tooltip } from '@patternfly/react-core';\n\ntype ResponseHostsTableProps = {\n  responses: Responses;\n  title: string;\n};\n\ninterface Row {\n  code: string;\n  host: string;\n  key: string;\n  val: string;\n}\n\nconst hostStyle = style({\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n});\n\nexport class ResponseHostsTable extends React.PureComponent<ResponseHostsTableProps> {\n  render() {\n    const rows = this.getRows(this.props.responses);\n\n    return (\n      <>\n        {rows.length > 0 ? (\n          <>\n            <strong>{this.props.title}</strong>\n            <table className=\"table\" style={{ tableLayout: 'fixed', width: '100%' }}>\n              <thead>\n                <tr key=\"table-header\">\n                  <th style={{ width: '18%' }}>Code</th>\n                  <th style={{ width: '52%' }}>Host</th>\n                  <th style={{ width: '30%' }}>% Req</th>\n                </tr>\n              </thead>\n              <tbody>\n                {rows.map(row => (\n                  <tr key={row.key}>\n                    <td>{row.code}</td>\n                    <Tooltip distance={3} maxWidth=\"25rem\" content={row.host}>\n                      <td className={hostStyle}>{row.host}</td>\n                    </Tooltip>\n                    <td>{row.val}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </>\n        ) : (\n          <>No Host Information Available</>\n        )}\n      </>\n    );\n  }\n\n  private getRows = (responses: Responses): Row[] => {\n    const rows: Row[] = [];\n    _.keys(responses).forEach(code => {\n      _.keys(responses[code].hosts).forEach(h => {\n        rows.push({ key: `${code} ${h}`, code: code, host: h, val: responses[code].hosts[h] });\n      });\n    });\n    return rows;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}