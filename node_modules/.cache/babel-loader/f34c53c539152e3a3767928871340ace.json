{"ast":null,"code":"import _classCallCheck from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _ from'lodash';import*as React from'react';import{matchPath}from'react-router';import{Link}from'react-router-dom';import{Nav,NavList,NavItem,PageSidebar}from'@patternfly/react-core';import{ExternalLinkAltIcon}from'@patternfly/react-icons';import history from'../../app/History';import{navItems}from'../../routes';import{serverConfig}from'../../config';var ExternalLink=function ExternalLink(_ref){var href=_ref.href,name=_ref.name;return/*#__PURE__*/React.createElement(NavItem,{isActive:false,key:name,className:'external_link'},/*#__PURE__*/React.createElement(\"a\",{className:\"pf-c-nav__link\",href:href,target:\"_blank\",rel:\"noopener noreferrer\"},name,\" \",/*#__PURE__*/React.createElement(ExternalLinkAltIcon,{style:{margin:'-4px 0 0 5px'}})));};var Menu=/*#__PURE__*/function(_React$Component){_inherits(Menu,_React$Component);var _super=_createSuper(Menu);function Menu(props){var _this;_classCallCheck(this,Menu);_this=_super.call(this,props);_this.renderMenuItems=function(){var location=_this.props.location;var allNavItems=navItems;var activeItem=allNavItems.find(function(item){var isRoute=matchPath(location.pathname,{path:item.to,exact:true,strict:false})?true:false;if(!isRoute&&item.pathsActive){isRoute=_.filter(item.pathsActive,function(path){return path.test(location.pathname);}).length>0;}return isRoute;});return allNavItems.filter(function(item){// Extensions Nav Menu Items are conditionally rendered\nif(item.title==='Iter8 Experiments'){return serverConfig.extensions.iter8.enabled;}else if(item.title==='Mesh'){var _serverConfig$cluster;return((_serverConfig$cluster=serverConfig.clusterInfo)===null||_serverConfig$cluster===void 0?void 0:_serverConfig$cluster.name)!==undefined;}return true;}).map(function(item){if(item.title==='Distributed Tracing'){return _this.props.jaegerUrl&&/*#__PURE__*/React.createElement(ExternalLink,{key:item.to,href:_this.props.jaegerUrl,name:\"Distributed Tracing\"});}return/*#__PURE__*/React.createElement(NavItem,{isActive:activeItem===item,key:item.to},/*#__PURE__*/React.createElement(Link,{id:item.title,to:item.to,onClick:function onClick(){return history.push(item.to);}},item.title));});};_this.state={activeItem:'Overview'};return _this;}_createClass(Menu,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps.isNavOpen!==this.props.isNavOpen){// Dispatch an extra \"resize\" event when side menu toggle to force that metrics charts resize\nsetTimeout(function(){window.dispatchEvent(new Event('resize'));},200);}}},{key:\"render\",value:function render(){var isNavOpen=this.props.isNavOpen;var PageNav=/*#__PURE__*/ // <Nav onSelect={() => undefined} onToggle={() => undefined} aria-label=\"Nav\" theme={'dark'}>\nReact.createElement(Nav,{onSelect:function onSelect(){return undefined;},onToggle:function onToggle(){return undefined;},\"aria-label\":\"Nav\",theme:'dark'},/*#__PURE__*/React.createElement(NavList,null,this.renderMenuItems()));return/*#__PURE__*/React.createElement(PageSidebar,{isNavOpen:isNavOpen,nav:PageNav});}}]);return Menu;}(React.Component);Menu.contextTypes={router:function router(){return null;}};export default Menu;","map":null,"metadata":{},"sourceType":"module"}