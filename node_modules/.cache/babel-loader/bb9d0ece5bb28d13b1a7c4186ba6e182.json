{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { SummaryTableRenderer } from './BaseTable';\nimport { sortable } from '@patternfly/react-table';\nimport { FILTER_ACTION_APPEND, FilterTypes } from '../../../types/Filters';\nimport { defaultFilter, routeLink } from '../../../helpers/EnvoyHelpers';\nexport var ListenerTable = /*#__PURE__*/function () {\n  function ListenerTable(summaries, sortBy, namespaces, namespace, workload, routeLinkHandler) {\n    var _this = this;\n\n    _classCallCheck(this, ListenerTable);\n\n    this.summaries = void 0;\n    this.sortingIndex = void 0;\n    this.sortingDirection = void 0;\n    this.namespaces = void 0;\n    this.namespace = void 0;\n    this.workload = void 0;\n    this.routeLinkHandler = void 0;\n\n    this.availableFilters = function () {\n      return [{\n        id: 'address',\n        title: 'Address',\n        placeholder: 'Address',\n        filterType: FilterTypes.text,\n        action: FILTER_ACTION_APPEND,\n        filterValues: []\n      }, {\n        id: 'port',\n        title: 'Port',\n        placeholder: 'Port',\n        filterType: FilterTypes.text,\n        action: FILTER_ACTION_APPEND,\n        filterValues: []\n      }, {\n        id: 'match',\n        title: 'Match',\n        placeholder: 'Match',\n        filterType: FilterTypes.text,\n        action: FILTER_ACTION_APPEND,\n        filterValues: []\n      }, {\n        id: 'destination',\n        title: 'Destination',\n        placeholder: 'Destination',\n        filterType: FilterTypes.text,\n        action: FILTER_ACTION_APPEND,\n        filterValues: []\n      }];\n    };\n\n    this.filterMethods = function () {\n      return {\n        address: function address(entry, filter) {\n          return entry.address.includes(filter.value);\n        },\n        port: function port(entry, filter) {\n          return entry.port.toString().includes(filter.value);\n        },\n        match: function match(entry, filter) {\n          return entry.match.includes(filter.value);\n        },\n        destination: function destination(entry, filter) {\n          return entry.destination.includes(filter.value);\n        }\n      };\n    };\n\n    this.sortFields = function () {\n      return [{\n        id: 'address',\n        title: 'Address',\n        isNumeric: false,\n        param: 'addess',\n        compare: function compare(a, b) {\n          return a.address.localeCompare(b.address);\n        }\n      }, {\n        id: 'port',\n        title: 'Port',\n        isNumeric: true,\n        param: 'port',\n        compare: function compare(a, b) {\n          return a.port - b.port;\n        }\n      }, {\n        id: 'match',\n        title: 'Match',\n        isNumeric: false,\n        param: 'match',\n        compare: function compare(a, b) {\n          return a.match.localeCompare(b.match);\n        }\n      }, {\n        id: 'destination',\n        title: 'Destination',\n        isNumeric: false,\n        param: 'destination',\n        compare: function compare(a, b) {\n          return a.destination.localeCompare(b.destination);\n        }\n      }];\n    };\n\n    this.head = function () {\n      return [{\n        title: 'Address',\n        transforms: [sortable]\n      }, {\n        title: 'Port',\n        transforms: [sortable]\n      }, {\n        title: 'Match',\n        transforms: [sortable]\n      }, {\n        title: 'Destination',\n        transforms: [sortable]\n      }];\n    };\n\n    this.resource = function () {\n      return 'listeners';\n    };\n\n    this.setSorting = function (columnIndex, direction) {\n      _this.sortingDirection = direction;\n      _this.sortingIndex = columnIndex;\n    };\n\n    this.sortBy = function () {\n      return {\n        index: _this.sortingIndex,\n        direction: _this.sortingDirection\n      };\n    };\n\n    this.summaries = summaries;\n    this.sortingIndex = sortBy.index || 0;\n    this.sortingDirection = sortBy.direction || 'asc';\n    this.namespaces = namespaces;\n    this.namespace = namespace;\n    this.workload = workload;\n    this.routeLinkHandler = routeLinkHandler;\n  }\n\n  _createClass(ListenerTable, [{\n    key: \"rows\",\n    value: function rows() {\n      var _this2 = this;\n\n      return this.summaries.filter(function (value) {\n        return defaultFilter(value, _this2.filterMethods());\n      }).sort(function (a, b) {\n        var sortField = _this2.sortFields().find(function (value) {\n          return value.id === _this2.sortFields()[_this2.sortingIndex].id;\n        });\n\n        return _this2.sortingDirection === 'asc' ? sortField.compare(a, b) : sortField.compare(b, a);\n      }).map(function (summary) {\n        return [summary.address, summary.port, summary.match, routeLink(summary.destination, _this2.namespace, _this2.workload, _this2.routeLinkHandler)];\n      });\n    }\n  }]);\n\n  return ListenerTable;\n}();\nexport var ListenerSummaryTable = SummaryTableRenderer();","map":{"version":3,"sources":["/root/kiali-ui/src/components/Envoy/tables/ListenerTable.ts"],"names":["SummaryTableRenderer","sortable","FILTER_ACTION_APPEND","FilterTypes","defaultFilter","routeLink","ListenerTable","summaries","sortBy","namespaces","namespace","workload","routeLinkHandler","sortingIndex","sortingDirection","availableFilters","id","title","placeholder","filterType","text","action","filterValues","filterMethods","address","entry","filter","includes","value","port","toString","match","destination","sortFields","isNumeric","param","compare","a","b","localeCompare","head","transforms","resource","setSorting","columnIndex","direction","index","sort","sortField","find","map","summary","ListenerSummaryTable"],"mappings":"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","sourcesContent":["import { SummaryTable, SummaryTableRenderer } from './BaseTable';\nimport { ICell, ISortBy, sortable } from '@patternfly/react-table';\nimport { ListenerSummary } from '../../../types/IstioObjects';\nimport { ActiveFilter, FILTER_ACTION_APPEND, FilterType, FilterTypes } from '../../../types/Filters';\nimport { SortField } from '../../../types/SortFilters';\nimport Namespace from '../../../types/Namespace';\nimport { defaultFilter, routeLink } from '../../../helpers/EnvoyHelpers';\n\nexport class ListenerTable implements SummaryTable {\n  summaries: ListenerSummary[];\n  sortingIndex: number;\n  sortingDirection: 'asc' | 'desc';\n  namespaces: Namespace[];\n  namespace: string;\n  workload: string | undefined;\n  routeLinkHandler: () => void;\n\n  constructor(\n    summaries: ListenerSummary[],\n    sortBy: ISortBy,\n    namespaces: Namespace[],\n    namespace: string,\n    workload: string | undefined,\n    routeLinkHandler: () => void\n  ) {\n    this.summaries = summaries;\n    this.sortingIndex = sortBy.index || 0;\n    this.sortingDirection = sortBy.direction || 'asc';\n    this.namespaces = namespaces;\n    this.namespace = namespace;\n    this.workload = workload;\n    this.routeLinkHandler = routeLinkHandler;\n  }\n\n  availableFilters = (): FilterType[] => {\n    return [\n      {\n        id: 'address',\n        title: 'Address',\n        placeholder: 'Address',\n        filterType: FilterTypes.text,\n        action: FILTER_ACTION_APPEND,\n        filterValues: []\n      },\n      {\n        id: 'port',\n        title: 'Port',\n        placeholder: 'Port',\n        filterType: FilterTypes.text,\n        action: FILTER_ACTION_APPEND,\n        filterValues: []\n      },\n      {\n        id: 'match',\n        title: 'Match',\n        placeholder: 'Match',\n        filterType: FilterTypes.text,\n        action: FILTER_ACTION_APPEND,\n        filterValues: []\n      },\n      {\n        id: 'destination',\n        title: 'Destination',\n        placeholder: 'Destination',\n        filterType: FilterTypes.text,\n        action: FILTER_ACTION_APPEND,\n        filterValues: []\n      }\n    ];\n  };\n\n  filterMethods = (): { [filter_id: string]: (summary, activeFilter) => boolean } => {\n    return {\n      address: (entry: ListenerSummary, filter: ActiveFilter): boolean => {\n        return entry.address.includes(filter.value);\n      },\n      port: (entry: ListenerSummary, filter: ActiveFilter): boolean => {\n        return entry.port.toString().includes(filter.value);\n      },\n      match: (entry: ListenerSummary, filter: ActiveFilter): boolean => {\n        return entry.match.includes(filter.value);\n      },\n      destination: (entry: ListenerSummary, filter: ActiveFilter): boolean => {\n        return entry.destination.includes(filter.value);\n      }\n    };\n  };\n\n  sortFields = (): SortField<ListenerSummary>[] => {\n    return [\n      {\n        id: 'address',\n        title: 'Address',\n        isNumeric: false,\n        param: 'addess',\n        compare: (a, b) => {\n          return a.address.localeCompare(b.address);\n        }\n      },\n      {\n        id: 'port',\n        title: 'Port',\n        isNumeric: true,\n        param: 'port',\n        compare: (a, b) => {\n          return a.port - b.port;\n        }\n      },\n      {\n        id: 'match',\n        title: 'Match',\n        isNumeric: false,\n        param: 'match',\n        compare: (a, b) => {\n          return a.match.localeCompare(b.match);\n        }\n      },\n      {\n        id: 'destination',\n        title: 'Destination',\n        isNumeric: false,\n        param: 'destination',\n        compare: (a, b) => {\n          return a.destination.localeCompare(b.destination);\n        }\n      }\n    ];\n  };\n\n  head = (): ICell[] => {\n    return [\n      { title: 'Address', transforms: [sortable] },\n      { title: 'Port', transforms: [sortable] },\n      { title: 'Match', transforms: [sortable] },\n      { title: 'Destination', transforms: [sortable] }\n    ];\n  };\n\n  resource = (): string => 'listeners';\n\n  setSorting = (columnIndex: number, direction: 'asc' | 'desc') => {\n    this.sortingDirection = direction;\n    this.sortingIndex = columnIndex;\n  };\n\n  sortBy = (): ISortBy => {\n    return {\n      index: this.sortingIndex,\n      direction: this.sortingDirection\n    };\n  };\n\n  rows(): (string | number | JSX.Element)[][] {\n    return this.summaries\n      .filter((value: ListenerSummary) => {\n        return defaultFilter(value, this.filterMethods());\n      })\n      .sort((a: ListenerSummary, b: ListenerSummary) => {\n        const sortField = this.sortFields().find((value: SortField<ListenerSummary>): boolean => {\n          return value.id === this.sortFields()[this.sortingIndex].id;\n        });\n        return this.sortingDirection === 'asc' ? sortField!.compare(a, b) : sortField!.compare(b, a);\n      })\n      .map((summary: ListenerSummary) => {\n        return [\n          summary.address,\n          summary.port,\n          summary.match,\n          routeLink(summary.destination, this.namespace, this.workload, this.routeLinkHandler)\n        ];\n      });\n  }\n}\n\nexport const ListenerSummaryTable = SummaryTableRenderer<ListenerTable>();\n"]},"metadata":{},"sourceType":"module"}