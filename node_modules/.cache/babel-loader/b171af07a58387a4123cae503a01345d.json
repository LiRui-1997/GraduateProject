{"ast":null,"code":"import _objectSpread from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _excluded = [\"trRef\", \"className\", \"rowProps\", \"row\"];\nvar _jsxFileName = \"/root/GraduateProject/src/pages/extensions/iter8/Iter8ExperimentDetails/AssessmentInfoDescription.tsx\";\nimport * as React from 'react';\nimport { Divider, EmptyState, EmptyStateBody, EmptyStateVariant, Grid, GridItem, Title, Tooltip } from '@patternfly/react-core';\nimport { ChartBullet, ChartLegend, ChartThemeColor, ChartThemeVariant } from '@patternfly/react-charts';\nimport { emptyExperimentItem } from '../../../../types/Iter8';\nimport { cellWidth, expandable, Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { KialiIcon } from '../../../../config/KialiIcon';\nimport { style } from 'typestyle';\nimport { css } from '@patternfly/react-styles';\nimport { RenderComponentScroll } from '../../../../components/Nav/Page';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport * as AlertUtils from '../../../../utils/AlertUtils';\nimport { durationSelector, lastRefreshAtSelector } from '../../../../store/Selectors';\nimport { connect } from 'react-redux';\nimport * as API from '../../../../services/Api';\nvar statusIconStyle = style({\n  fontSize: '2.0em'\n});\nvar infoStyle = style({\n  margin: '0px 16px 2px 4px'\n});\n\nvar AssessmentInfoDescriptionTab = /*#__PURE__*/function (_React$Component) {\n  _inherits(AssessmentInfoDescriptionTab, _React$Component);\n\n  var _super = _createSuper(AssessmentInfoDescriptionTab);\n\n  function AssessmentInfoDescriptionTab(_props) {\n    var _this;\n\n    _classCallCheck(this, AssessmentInfoDescriptionTab);\n\n    _this = _super.call(this, _props);\n\n    _this.fetchAssesment = function () {\n      var namespace = _this.props.namespace;\n      var name = _this.props.name;\n      API.getExperiment(namespace, name).then(function (result) {\n        _this.setState({\n          experimentItem: result.data.experimentItem,\n          rows: _this.getRows()\n        });\n      }).catch(function (error) {\n        AlertUtils.addError('Could not fetch Iter8 Experiment', error);\n      });\n    };\n\n    _this.getRows = function () {\n      var _this$props$experimen, _this$props$experimen2;\n\n      var rows = [];\n      rows.push(_this.renderRow('Baseline', (_this$props$experimen = _this.props.experimentItem) === null || _this$props$experimen === void 0 ? void 0 : _this$props$experimen.baseline));\n      (_this$props$experimen2 = _this.props.experimentItem) === null || _this$props$experimen2 === void 0 ? void 0 : _this$props$experimen2.candidates.map(function (assessment) {\n        rows.push(_this.renderRow('Candidate', assessment));\n        return rows;\n      });\n      return rows;\n    };\n\n    _this.getMaxThreshold = function (name) {\n      var _this$props$experimen3;\n\n      var threshold = 0;\n      (_this$props$experimen3 = _this.props.experimentItem.baseline.criterionAssessment) === null || _this$props$experimen3 === void 0 ? void 0 : _this$props$experimen3.map(function (c, _) {\n        if (c.metric_id === name) {\n          threshold = c.statistics.value;\n        }\n      });\n\n      _this.props.experimentItem.candidates.map(function (assessment) {\n        if (assessment.criterionAssessment !== undefined) {\n          assessment.criterionAssessment.map(function (c, _) {\n            if (c.metric_id === name && c.statistics.value > threshold) {\n              threshold = c.statistics.value;\n            }\n\n            return threshold;\n          });\n        }\n\n        return threshold;\n      });\n\n      return threshold;\n    };\n\n    _this.columns = function () {\n      return [{\n        title: 'Name',\n        transforms: [cellWidth(15)]\n      }, {\n        title: 'Template'\n      }];\n    };\n\n    _this.getIcon = function (s) {\n      switch (s) {\n        case 1:\n          return /*#__PURE__*/React.createElement(Tooltip, {\n            content: /*#__PURE__*/React.createElement(React.Fragment, null, s),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(KialiIcon.Ok, {\n            className: statusIconStyle,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 13\n            }\n          }));\n\n        case 0:\n          return /*#__PURE__*/React.createElement(Tooltip, {\n            content: /*#__PURE__*/React.createElement(React.Fragment, null, s),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(KialiIcon.Error, {\n            className: statusIconStyle,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 13\n            }\n          }));\n\n        default:\n          return s;\n      }\n    };\n\n    _this.customRowWrapper = function (_ref) {\n      var trRef = _ref.trRef,\n          className = _ref.className,\n          rowProps = _ref.rowProps,\n          _ref$row = _ref.row,\n          isExpanded = _ref$row.isExpanded,\n          isHeightAuto = _ref$row.isHeightAuto,\n          props = _objectWithoutProperties(_ref, _excluded);\n\n      var dangerErrorStyle = {\n        borderLeft: '3px solid var(--pf-global--primary-color--100)'\n      };\n      return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, props, {\n        ref: trRef,\n        className: css(className, 'custom-static-class', isExpanded !== undefined && styles.tableExpandableRow, isExpanded && styles.modifiers.expanded, isHeightAuto && styles.modifiers.heightAuto),\n        hidden: isExpanded !== undefined && !isExpanded,\n        style: dangerErrorStyle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 7\n        }\n      }));\n    };\n\n    _this.state = {\n      experimentItem: emptyExperimentItem,\n      columns: [{\n        title: '目标服务',\n        cellFormatters: [expandable],\n        transforms: [cellWidth(10)]\n      }, '当前评估结果', '性能指标及监控数据'],\n      rows: _this.getRows()\n    };\n    return _this;\n  }\n\n  _createClass(AssessmentInfoDescriptionTab, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        experimentItem: this.props.experimentItem,\n        rows: this.getRows()\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.experimentItem !== prevProps.experimentItem || prevProps.lastRefreshAt !== this.props.lastRefreshAt) {\n        this.renderRows();\n      }\n    }\n  }, {\n    key: \"renderRows\",\n    value: function renderRows() {\n      this.setState({\n        experimentItem: this.props.experimentItem,\n        rows: this.getRows()\n      });\n    }\n  }, {\n    key: \"getLegend\",\n    value: function getLegend(total, idx) {\n      var shown = idx === total - 1 ? \"{[{ name: 'Current Measurement'}]}\" : '{}';\n      return shown;\n    }\n  }, {\n    key: \"renderTresholdBar\",\n    value: function renderTresholdBar(total, idx, name, statistics) {\n      var _statistics$ratio_sta, _statistics$ratio_sta2, _statistics$ratio_sta3, _statistics$ratio_sta4, _statistics$ratio_sta5, _statistics$ratio_sta6;\n\n      var value = statistics.value;\n\n      if (value === undefined) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, idx === 0 ? '' : /*#__PURE__*/React.createElement(Divider, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Grid, {\n          gutter: \"md\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(GridItem, {\n          span: 4,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }\n        }, name, \":\"), /*#__PURE__*/React.createElement(GridItem, {\n          span: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }\n        }, value), /*#__PURE__*/React.createElement(GridItem, {\n          span: 6,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }\n        })));\n      }\n\n      var valueString = value.toFixed(2);\n      var tInfo = this.props.metricInfo.get(name);\n      if (tInfo === undefined) return /*#__PURE__*/React.createElement(React.Fragment, null);\n      var baseLineValue = 1;\n\n      if (tInfo.thresholdType === 'relative') {\n        var _this$props$experimen4;\n\n        (_this$props$experimen4 = this.props.experimentItem.baseline.criterionAssessment) === null || _this$props$experimen4 === void 0 ? void 0 : _this$props$experimen4.map(function (ca, _) {\n          if (ca.metric_id === name) baseLineValue = ca.statistics.value;\n        });\n      }\n\n      var basethreshold = Number((tInfo.threshold * baseLineValue).toFixed(2));\n      var maxDomain = basethreshold * 1.5;\n\n      if (tInfo.threshold === 0) {\n        maxDomain = Number((Number((this.getMaxThreshold(name) * baseLineValue).toFixed(2)) * 1.1).toFixed(0));\n      }\n\n      maxDomain = value > maxDomain ? Number(value.toFixed(2)) : Number(maxDomain.toFixed(2));\n      var color;\n      var range1 = 0;\n      var range2 = basethreshold;\n\n      if (tInfo.preferred_direction !== undefined && tInfo.preferred_direction === 'lower') {\n        if (value >= basethreshold) {\n          color = ChartThemeColor.orange;\n        } else {\n          color = ChartThemeColor.blue;\n        }\n      } else {\n        range1 = basethreshold;\n        range2 = maxDomain;\n\n        if (value >= basethreshold) {\n          color = ChartThemeColor.blue;\n        } else {\n          color = ChartThemeColor.orange;\n        }\n      }\n\n      var range1Name = 'Lower limit';\n      var range2Name = 'Range';\n\n      if (range1 === 0) {\n        range1Name = '';\n\n        if (tInfo.threshold !== 0) {\n          range2Name = 'Upper Limit';\n        }\n      }\n\n      var marginBottom = idx === total - 1 ? ((_statistics$ratio_sta = statistics.ratio_statistics) === null || _statistics$ratio_sta === void 0 ? void 0 : _statistics$ratio_sta.credible_interval.upper) != null ? 120 : 100 : 0;\n      var height = idx === total - 1 ? 20 : 110;\n      var lowerCredible = ((_statistics$ratio_sta2 = statistics.ratio_statistics) === null || _statistics$ratio_sta2 === void 0 ? void 0 : _statistics$ratio_sta2.credible_interval.upper) != null ? [{\n        name: '有效监控数据最低值',\n        y: statistics.ratio_statistics.credible_interval.lower\n      }] : [];\n      var higherCredible = ((_statistics$ratio_sta3 = statistics.ratio_statistics) === null || _statistics$ratio_sta3 === void 0 ? void 0 : _statistics$ratio_sta3.credible_interval.upper) != null ? [{\n        name: '有效监控数据最高值',\n        y: statistics.ratio_statistics.credible_interval.upper\n      }] : [];\n      var dataLegend = ((_statistics$ratio_sta4 = statistics.ratio_statistics) === null || _statistics$ratio_sta4 === void 0 ? void 0 : _statistics$ratio_sta4.credible_interval.upper) != null ? [{\n        name: '有效监控数据最低值',\n        symbol: {\n          type: 'minus'\n        }\n      }, {\n        name: '有效监控数据最高值',\n        symbol: {\n          type: 'minus'\n        }\n      }, {\n        name: '无效数据'\n      }, {\n        name: '指标门限值'\n      }, {\n        name: '门限值以内的监控数据'\n      }, {\n        name: '门限值之外的监控数据'\n      }] : [{\n        name: '无效数据'\n      }, {\n        name: '指标门限值'\n      }, {\n        name: '门限值以内的监控数据'\n      }, {\n        name: '门限值之外的监控数据'\n      }];\n      var colorScale = ((_statistics$ratio_sta5 = statistics.ratio_statistics) === null || _statistics$ratio_sta5 === void 0 ? void 0 : _statistics$ratio_sta5.credible_interval.upper) != null ? ['#ec7a08', '#c9190a', '#ededed', '#d2d2d2', '#0466cc', '#ec7a08'] : ['#ededed', '#d2d2d2', '#0466cc', '#ec7a08'];\n      var legendHeight = ((_statistics$ratio_sta6 = statistics.ratio_statistics) === null || _statistics$ratio_sta6 === void 0 ? void 0 : _statistics$ratio_sta6.credible_interval.upper) != null ? 60 : 40;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, idx === 0 ? '' : /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        gutter: \"md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        span: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }\n      }, name), /*#__PURE__*/React.createElement(GridItem, {\n        span: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }\n      }, valueString), /*#__PURE__*/React.createElement(GridItem, {\n        span: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginTop: -50,\n          marginBottom: marginBottom\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ChartBullet, {\n        qualitativeRangeData: [{\n          name: range1Name,\n          y: range1\n        }, {\n          name: range2Name,\n          y: range2\n        }],\n        maxDomain: {\n          y: Number(maxDomain)\n        },\n        comparativeWarningMeasureData: lowerCredible,\n        comparativeErrorMeasureData: higherCredible,\n        primarySegmentedMeasureData: [{\n          name: 'Current ',\n          y: valueString\n        }],\n        constrainToVisibleArea: true,\n        themeColor: color,\n        themeVariant: ChartThemeVariant.dark,\n        padding: {\n          bottom: 0,\n          left: 0,\n          right: 0,\n          top: 0\n        },\n        height: height,\n        standalone: true,\n        labels: function labels(_ref2) {\n          var datum = _ref2.datum;\n          return \"\".concat(datum.name, \": \").concat(datum.y);\n        },\n        legendPosition: \"bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }\n      })), idx === total - 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ChartLegend, {\n        data: dataLegend,\n        style: {\n          labels: {\n            fontSize: 10\n          }\n        },\n        colorScale: colorScale,\n        itemsPerRow: 2,\n        height: legendHeight,\n        gutter: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null))));\n    }\n  }, {\n    key: \"renderRow\",\n    value: function renderRow(type, assessment) {\n      var _this$props$experimen5,\n          _this$props$experimen6,\n          _this2 = this;\n\n      return {\n        cells: [{\n          title: /*#__PURE__*/React.createElement(React.Fragment, null, type)\n        }, {\n          title: /*#__PURE__*/React.createElement(React.Fragment, null, ((_this$props$experimen5 = this.props.experimentItem) === null || _this$props$experimen5 === void 0 ? void 0 : _this$props$experimen5.winner.winning_version_found) && ((_this$props$experimen6 = this.props.experimentItem) === null || _this$props$experimen6 === void 0 ? void 0 : _this$props$experimen6.winner.name) === assessment.name ? /*#__PURE__*/React.createElement(Grid, {\n            gutter: \"md\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(GridItem, {\n            span: 6,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }\n          }, \"\\u83B7\\u80DC\\u7248\\u672C\"), /*#__PURE__*/React.createElement(GridItem, {\n            span: 6,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }\n          }, ' ', /*#__PURE__*/React.createElement(KialiIcon.Ok, {\n            className: statusIconStyle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 21\n            }\n          }))) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(Grid, {\n            gutter: \"md\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(GridItem, {\n            span: 6,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }\n          }, \"\\u670D\\u52A1\\u540D\\u79F0:\"), /*#__PURE__*/React.createElement(GridItem, {\n            span: 6,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }\n          }, assessment.name)), /*#__PURE__*/React.createElement(Grid, {\n            gutter: \"md\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(GridItem, {\n            span: 6,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }\n          }, \"\\u6D41\\u91CF\\u5360\\u6BD4:\"), /*#__PURE__*/React.createElement(GridItem, {\n            span: 6,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }\n          }, assessment.weight)), /*#__PURE__*/React.createElement(Grid, {\n            gutter: \"md\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(GridItem, {\n            span: 6,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }\n          }, \"\\u83B7\\u80DC\\u6982\\u7387:\"), /*#__PURE__*/React.createElement(GridItem, {\n            span: 6,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }\n          }, assessment.winProbability)), /*#__PURE__*/React.createElement(Grid, {\n            gutter: \"md\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(GridItem, {\n            span: 6,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }\n          }, \"\\u670D\\u52A1\\u8BF7\\u6C42\\u6570\\u91CF:\"), /*#__PURE__*/React.createElement(GridItem, {\n            span: 6,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }\n          }, assessment.requestCount)))\n        }, {\n          props: {\n            nonPadding: true\n          },\n          title: /*#__PURE__*/React.createElement(React.Fragment, null, assessment.criterionAssessment && assessment.criterionAssessment.map(function (c, i) {\n            return /*#__PURE__*/React.createElement(Grid, {\n              gutter: \"md\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 21\n              }\n            }, _this2.renderTresholdBar(assessment.criterionAssessment.length, i, c.metric_id, c.statistics));\n          }))\n        }]\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          columns = _this$state.columns,\n          rows = _this$state.rows;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RenderComponentScroll, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        gutter: \"md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        span: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        \"aria-label\": \"SpanTable\",\n        className: 'spanTracingTagsTable',\n        rows: rows,\n        cells: columns,\n        rowWrapper: function rowWrapper(props) {\n          return _this3.customRowWrapper(_objectSpread({\n            trRef: props.trRef,\n            className: props.className,\n            rowProps: props.rowProps,\n            row: props.row\n          }, props));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TableHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 17\n        }\n      }), rows.length > 0 ? /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 19\n        }\n      }) : /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: columns.length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(EmptyState, {\n        variant: EmptyStateVariant.full,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Title, {\n        headingLevel: \"h5\",\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 25\n        }\n      }, \"No Criteria found\"), /*#__PURE__*/React.createElement(EmptyStateBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 25\n        }\n      }, \"Experiment has not been started\")))))))));\n    }\n  }]);\n\n  return AssessmentInfoDescriptionTab;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    duration: durationSelector(state),\n    lastRefreshAt: lastRefreshAtSelector(state)\n  };\n};\n\nvar AssessmentInfoDescription = connect(mapStateToProps, null)(AssessmentInfoDescriptionTab);\nexport default AssessmentInfoDescription;","map":{"version":3,"sources":["/root/GraduateProject/src/pages/extensions/iter8/Iter8ExperimentDetails/AssessmentInfoDescription.tsx"],"names":["React","Divider","EmptyState","EmptyStateBody","EmptyStateVariant","Grid","GridItem","Title","Tooltip","ChartBullet","ChartLegend","ChartThemeColor","ChartThemeVariant","emptyExperimentItem","cellWidth","expandable","Table","TableBody","TableHeader","KialiIcon","style","css","RenderComponentScroll","styles","AlertUtils","durationSelector","lastRefreshAtSelector","connect","API","statusIconStyle","fontSize","infoStyle","margin","AssessmentInfoDescriptionTab","props","fetchAssesment","namespace","name","getExperiment","then","result","setState","experimentItem","data","rows","getRows","catch","error","addError","push","renderRow","baseline","candidates","map","assessment","getMaxThreshold","threshold","criterionAssessment","c","_","metric_id","statistics","value","undefined","columns","title","transforms","getIcon","s","customRowWrapper","trRef","className","rowProps","row","isExpanded","isHeightAuto","dangerErrorStyle","borderLeft","tableExpandableRow","modifiers","expanded","heightAuto","state","cellFormatters","prevProps","lastRefreshAt","renderRows","total","idx","shown","valueString","toFixed","tInfo","metricInfo","get","baseLineValue","thresholdType","ca","basethreshold","Number","maxDomain","color","range1","range2","preferred_direction","orange","blue","range1Name","range2Name","marginBottom","ratio_statistics","credible_interval","upper","height","lowerCredible","y","lower","higherCredible","dataLegend","symbol","type","colorScale","legendHeight","marginTop","dark","bottom","left","right","top","datum","labels","cells","winner","winning_version_found","weight","winProbability","requestCount","nonPadding","i","renderTresholdBar","length","full","Component","mapStateToProps","duration","AssessmentInfoDescription"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Divider,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  Grid,\n  GridItem,\n  PopoverPosition,\n  Title,\n  Tooltip\n} from '@patternfly/react-core';\nimport { ChartBullet, ChartLegend, ChartThemeColor, ChartThemeVariant } from '@patternfly/react-charts';\n\nimport {\n  emptyExperimentItem,\n  Iter8Experiment,\n  Iter8Info,\n  MetricProgressInfo,\n  Statistics\n} from '../../../../types/Iter8';\nimport {\n  cellWidth,\n  expandable,\n  ICell,\n  IRow,\n  RowWrapperProps,\n  Table,\n  TableBody,\n  TableHeader\n} from '@patternfly/react-table';\nimport { KialiIcon } from '../../../../config/KialiIcon';\nimport { style } from 'typestyle';\nimport { css } from '@patternfly/react-styles';\nimport { RenderComponentScroll } from '../../../../components/Nav/Page';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { TimeInMilliseconds } from '../../../../types/Common';\nimport * as AlertUtils from '../../../../utils/AlertUtils';\nimport { KialiAppState } from '../../../../store/Store';\nimport { durationSelector, lastRefreshAtSelector } from '../../../../store/Selectors';\nimport { connect } from 'react-redux';\nimport * as API from '../../../../services/Api';\n\ninterface AssesmentInfoDescriptionProps {\n  lastRefreshAt: TimeInMilliseconds;\n  iter8Info: Iter8Info;\n  name: string;\n  namespace: string;\n  experimentItem: Iter8Experiment;\n  metricInfo: Map<string, MetricProgressInfo>;\n  fetchOp: () => void;\n}\n\ntype State = {\n  experimentItem: Iter8Experiment;\n  columns: any;\n  rows: any;\n};\n\nconst statusIconStyle = style({\n  fontSize: '2.0em'\n});\n\nconst infoStyle = style({\n  margin: '0px 16px 2px 4px'\n});\n\nclass AssessmentInfoDescriptionTab extends React.Component<AssesmentInfoDescriptionProps, State> {\n  constructor(props: AssesmentInfoDescriptionProps) {\n    super(props);\n    this.state = {\n      experimentItem: emptyExperimentItem,\n      columns: [\n        { title: '目标服务', cellFormatters: [expandable], transforms: [cellWidth(10) as any] },\n        '当前评估结果',\n        '性能指标及监控数据'\n      ],\n      rows: this.getRows()\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      experimentItem: this.props.experimentItem,\n      rows: this.getRows()\n    });\n  }\n\n  componentDidUpdate(prevProps: AssesmentInfoDescriptionProps) {\n    if (\n      this.props.experimentItem !== prevProps.experimentItem ||\n      prevProps.lastRefreshAt !== this.props.lastRefreshAt\n    ) {\n      this.renderRows();\n    }\n  }\n\n  fetchAssesment = () => {\n    const namespace = this.props.namespace;\n    const name = this.props.name;\n    API.getExperiment(namespace, name)\n      .then(result => {\n        this.setState({\n          experimentItem: result.data.experimentItem,\n          rows: this.getRows()\n        });\n      })\n      .catch(error => {\n        AlertUtils.addError('Could not fetch Iter8 Experiment', error);\n      });\n  };\n\n  renderRows() {\n    this.setState({\n      experimentItem: this.props.experimentItem,\n      rows: this.getRows()\n    });\n  }\n\n  getLegend(total, idx) {\n    const shown = idx === total - 1 ? \"{[{ name: 'Current Measurement'}]}\" : '{}';\n    return shown;\n  }\n\n  renderTresholdBar(total, idx, name, statistics: Statistics) {\n    let value = statistics.value;\n    if (value === undefined) {\n      return (\n        <>\n          {idx === 0 ? '' : <Divider />}\n          <Grid gutter=\"md\">\n            <GridItem span={4}>{name}:</GridItem>\n            <GridItem span={2}>{value}</GridItem>\n            <GridItem span={6}></GridItem>\n          </Grid>\n        </>\n      );\n    }\n    let valueString = value.toFixed(2);\n    let tInfo = this.props.metricInfo.get(name);\n    if (tInfo === undefined) return <></>;\n\n    let baseLineValue = 1;\n    if (tInfo.thresholdType === 'relative') {\n      this.props.experimentItem.baseline.criterionAssessment?.map((ca, _) => {\n        if (ca.metric_id === name) baseLineValue = ca.statistics.value;\n      });\n    }\n\n    let basethreshold = Number((tInfo.threshold * baseLineValue).toFixed(2));\n    let maxDomain = basethreshold * 1.5;\n    if (tInfo.threshold === 0) {\n      maxDomain = Number((Number((this.getMaxThreshold(name) * baseLineValue).toFixed(2)) * 1.1).toFixed(0));\n    }\n\n    maxDomain = value > maxDomain ? Number(value.toFixed(2)) : Number(maxDomain.toFixed(2));\n\n    let color;\n    let range1 = 0;\n    let range2 = basethreshold;\n    if (tInfo.preferred_direction !== undefined && tInfo.preferred_direction === 'lower') {\n      if (value >= basethreshold) {\n        color = ChartThemeColor.orange;\n      } else {\n        color = ChartThemeColor.blue;\n      }\n    } else {\n      range1 = basethreshold;\n      range2 = maxDomain;\n      if (value >= basethreshold) {\n        color = ChartThemeColor.blue;\n      } else {\n        color = ChartThemeColor.orange;\n      }\n    }\n    let range1Name = 'Lower limit';\n    let range2Name = 'Range';\n    if (range1 === 0) {\n      range1Name = '';\n      if (tInfo.threshold !== 0) {\n        range2Name = 'Upper Limit';\n      }\n    }\n    let marginBottom =\n      idx === total - 1 ? (statistics.ratio_statistics?.credible_interval.upper != null ? 120 : 100) : 0;\n    let height = idx === total - 1 ? 20 : 110;\n\n    let lowerCredible =\n      statistics.ratio_statistics?.credible_interval.upper != null\n        ? [{ name: '有效监控数据最低值', y: statistics.ratio_statistics.credible_interval.lower }]\n        : [];\n    let higherCredible =\n      statistics.ratio_statistics?.credible_interval.upper != null\n        ? [{ name: '有效监控数据最高值', y: statistics.ratio_statistics.credible_interval.upper }]\n        : [];\n    let dataLegend =\n      statistics.ratio_statistics?.credible_interval.upper != null\n        ? [\n            { name: '有效监控数据最低值', symbol: { type: 'minus' } },\n            { name: '有效监控数据最高值', symbol: { type: 'minus' } },\n            { name: '无效数据' },\n            { name: '指标门限值' },\n            { name: '门限值以内的监控数据' },\n            { name: '门限值之外的监控数据' }\n          ]\n        : [\n            { name: '无效数据' },\n            { name: '指标门限值' },\n            { name: '门限值以内的监控数据' },\n            { name: '门限值之外的监控数据' }\n          ];\n    let colorScale =\n      statistics.ratio_statistics?.credible_interval.upper != null\n        ? ['#ec7a08', '#c9190a', '#ededed', '#d2d2d2', '#0466cc', '#ec7a08']\n        : ['#ededed', '#d2d2d2', '#0466cc', '#ec7a08'];\n    let legendHeight = statistics.ratio_statistics?.credible_interval.upper != null ? 60 : 40;\n    return (\n      <>\n        {idx === 0 ? '' : <Divider />}\n        <Grid gutter=\"md\">\n          <GridItem span={4}>{name}</GridItem>\n          <GridItem span={2}>{valueString}</GridItem>\n          <GridItem span={6}>\n            <div style={{ marginTop: -50, marginBottom: marginBottom }}>\n              <ChartBullet\n                qualitativeRangeData={[\n                  { name: range1Name, y: range1 },\n                  { name: range2Name, y: range2 }\n                ]}\n                maxDomain={{ y: Number(maxDomain) }}\n                comparativeWarningMeasureData={lowerCredible}\n                comparativeErrorMeasureData={higherCredible}\n                primarySegmentedMeasureData={[{ name: 'Current ', y: valueString }]}\n                constrainToVisibleArea\n                themeColor={color}\n                themeVariant={ChartThemeVariant.dark}\n                padding={{ bottom: 0, left: 0, right: 0, top: 0 }}\n                height={height}\n                standalone={true}\n                labels={({ datum }) => `${datum.name}: ${datum.y}`}\n                legendPosition=\"bottom\"\n              />\n            </div>\n\n            {idx === total - 1 ? (\n              <>\n                <ChartLegend\n                  data={dataLegend}\n                  style={{ labels: { fontSize: 10 } }}\n                  colorScale={colorScale}\n                  itemsPerRow={2}\n                  height={legendHeight}\n                  gutter={100}\n                />\n              </>\n            ) : (\n              <></>\n            )}\n          </GridItem>\n        </Grid>\n      </>\n    );\n  }\n\n  renderRow(type, assessment) {\n    return {\n      cells: [\n        { title: <>{type}</> },\n        {\n          title: (\n            <>\n              {this.props.experimentItem?.winner.winning_version_found &&\n              this.props.experimentItem?.winner.name === assessment.name ? (\n                <Grid gutter=\"md\">\n                  <GridItem span={6}>\n                    获胜版本\n                    {/* <Tooltip\n                      key={'winnerTooltip'}\n                      aria-label={'Winner Tooltip'}\n                      position={PopoverPosition.auto}\n                      className={'health_indicator'}\n                      content={<>{'Winning version identified by iter8 analytics'}</>}\n                    >\n                      <KialiIcon.Info className={infoStyle} />\n                    </Tooltip> */}\n                  </GridItem>\n                  <GridItem span={6}>\n                    {' '}\n                    <KialiIcon.Ok className={statusIconStyle} />\n                  </GridItem>\n                </Grid>\n              ) : (\n                <></>\n              )}\n              <Grid gutter=\"md\">\n                <GridItem span={6}>服务名称:</GridItem>\n                <GridItem span={6}>{assessment.name}</GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span={6}>流量占比:</GridItem>\n                <GridItem span={6}>{assessment.weight}</GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span={6}>获胜概率:</GridItem>\n                <GridItem span={6}>{assessment.winProbability}</GridItem>\n              </Grid>\n              <Grid gutter=\"md\">\n                <GridItem span={6}>服务请求数量:</GridItem>\n                <GridItem span={6}>{assessment.requestCount}</GridItem>\n              </Grid>\n            </>\n          )\n        },\n        {\n          props: { nonPadding: true },\n          title: (\n            <>\n              {assessment.criterionAssessment &&\n                assessment.criterionAssessment.map((c, i) => {\n                  return (\n                    <Grid gutter=\"md\">\n                      {this.renderTresholdBar(assessment.criterionAssessment.length, i, c.metric_id, c.statistics)}\n                    </Grid>\n                  );\n                })}\n            </>\n          )\n        }\n      ]\n    };\n  }\n\n  getRows = (): IRow[] => {\n    let rows: IRow[] = [];\n\n    rows.push(this.renderRow('Baseline', this.props.experimentItem?.baseline));\n    this.props.experimentItem?.candidates.map(assessment => {\n      rows.push(this.renderRow('Candidate', assessment));\n      return rows;\n    });\n    return rows;\n  };\n\n  getMaxThreshold = (name): number => {\n    let threshold = 0;\n    this.props.experimentItem.baseline.criterionAssessment?.map((c, _) => {\n      if (c.metric_id === name) {\n        threshold = c.statistics.value;\n      }\n    });\n    this.props.experimentItem.candidates.map(assessment => {\n      if (assessment.criterionAssessment !== undefined) {\n        assessment.criterionAssessment.map((c, _) => {\n          if (c.metric_id === name && c.statistics.value > threshold) {\n            threshold = c.statistics.value;\n          }\n          return threshold;\n        });\n      }\n      return threshold;\n    });\n    return threshold;\n  };\n\n  columns = (): ICell[] => {\n    return [{ title: 'Name', transforms: [cellWidth(15) as any] }, { title: 'Template' }];\n  };\n\n  getIcon = (s: number) => {\n    switch (s) {\n      case 1:\n        return (\n          <Tooltip content={<>{s}</>}>\n            <KialiIcon.Ok className={statusIconStyle} />\n          </Tooltip>\n        );\n      case 0:\n        return (\n          <Tooltip content={<>{s}</>}>\n            <KialiIcon.Error className={statusIconStyle} />\n          </Tooltip>\n        );\n      default:\n        return s;\n    }\n  };\n\n  customRowWrapper = ({ trRef, className, rowProps, row: { isExpanded, isHeightAuto }, ...props }) => {\n    const dangerErrorStyle = {\n      borderLeft: '3px solid var(--pf-global--primary-color--100)'\n    };\n\n    return (\n      <tr\n        {...props}\n        ref={trRef}\n        className={css(\n          className,\n          'custom-static-class',\n          isExpanded !== undefined && styles.tableExpandableRow,\n          isExpanded && styles.modifiers.expanded,\n          isHeightAuto && styles.modifiers.heightAuto\n        )}\n        hidden={isExpanded !== undefined && !isExpanded}\n        style={dangerErrorStyle}\n      />\n    );\n  };\n\n  render() {\n    const { columns, rows } = this.state;\n    return (\n      <>\n        <RenderComponentScroll>\n          <Grid gutter=\"md\">\n            <GridItem span={12}>\n              <Table\n                aria-label=\"SpanTable\"\n                className={'spanTracingTagsTable'}\n                rows={rows}\n                cells={columns}\n                rowWrapper={(props: RowWrapperProps) =>\n                  this.customRowWrapper({\n                    trRef: props.trRef,\n                    className: props.className,\n                    rowProps: props.rowProps,\n                    row: props.row as any,\n                    ...props\n                  })\n                }\n              >\n                <TableHeader />\n                {rows.length > 0 ? (\n                  <TableBody />\n                ) : (\n                  <tr>\n                    <td colSpan={columns.length}>\n                      <EmptyState variant={EmptyStateVariant.full}>\n                        <Title headingLevel=\"h5\" size=\"lg\">\n                          No Criteria found\n                        </Title>\n                        <EmptyStateBody>Experiment has not been started</EmptyStateBody>\n                      </EmptyState>\n                    </td>\n                  </tr>\n                )}\n              </Table>\n            </GridItem>\n          </Grid>\n        </RenderComponentScroll>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: KialiAppState) => ({\n  duration: durationSelector(state),\n  lastRefreshAt: lastRefreshAtSelector(state)\n});\n\nconst AssessmentInfoDescription = connect(mapStateToProps, null)(AssessmentInfoDescriptionTab);\n\nexport default AssessmentInfoDescription;\n"]},"metadata":{},"sourceType":"module"}