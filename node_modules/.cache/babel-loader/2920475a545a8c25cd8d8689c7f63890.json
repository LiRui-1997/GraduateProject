{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/pages/AppDetails/AppInfo.tsx\";\nimport * as React from 'react';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport * as API from '../../services/Api';\nimport * as AlertUtils from '../../utils/AlertUtils';\nimport AppDescription from './AppDescription';\nimport { RenderComponentScroll } from '../../components/Nav/Page';\nimport GraphDataSource from 'services/GraphDataSource';\nimport { connect } from 'react-redux';\nimport { durationSelector, meshWideMTLSEnabledSelector } from '../../store/Selectors';\nimport { style } from 'typestyle';\nimport MiniGraphCard from '../../components/CytoscapeGraph/MiniGraphCard';\nimport history, { URLParam } from '../../app/History';\nvar fullHeightStyle = style({\n  height: '100%'\n});\n\nvar AppInfo = /*#__PURE__*/function (_React$Component) {\n  _inherits(AppInfo, _React$Component);\n\n  var _super = _createSuper(AppInfo);\n\n  function AppInfo(props) {\n    var _this;\n\n    _classCallCheck(this, AppInfo);\n\n    _this = _super.call(this, props);\n    _this.graphDataSource = new GraphDataSource();\n\n    _this.fetchBackend = function () {\n      if (!_this.props.app) {\n        return;\n      }\n\n      _this.graphDataSource.fetchForVersionedApp(_this.props.duration, _this.props.app.namespace.name, _this.props.app.name);\n\n      var hasSidecar = _this.props.app.workloads.some(function (w) {\n        return w.istioSidecar;\n      });\n\n      API.getAppHealth(_this.props.app.namespace.name, _this.props.app.name, _this.props.duration, hasSidecar).then(function (health) {\n        return _this.setState({\n          health: health\n        });\n      }).catch(function (error) {\n        return AlertUtils.addError('Could not fetch Health.', error);\n      });\n    };\n\n    _this.goToMetrics = function (e) {\n      if (e.source !== e.target && _this.props.app) {\n        var direction = e.source === _this.props.app.name ? 'outbound' : 'inbound';\n        var destination = direction === 'inbound' ? 'source_canonical_service' : 'destination_canonical_service';\n        var urlParams = new URLSearchParams(history.location.search);\n        urlParams.set('tab', direction === 'inbound' ? 'in_metrics' : 'out_metrics');\n        urlParams.set(URLParam.BY_LABELS, destination + '=' + (e.source === _this.props.app.name ? e.target : e.source));\n        history.replace(history.location.pathname + '?' + urlParams.toString());\n      }\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(AppInfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchBackend();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prev) {\n      if (this.props.duration !== prev.duration || this.props.app !== prev.app) {\n        this.fetchBackend();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // RenderComponentScroll handles height to provide an inner scroll combined with tabs\n      // This height needs to be propagated to minigraph to proper resize in height\n      // Graph resizes correctly on width\n      var height = this.state.tabHeight ? this.state.tabHeight - 115 : 300;\n      var graphContainerStyle = style({\n        width: '100%',\n        height: height\n      });\n      return /*#__PURE__*/React.createElement(RenderComponentScroll, {\n        onResize: function onResize(height) {\n          return _this2.setState({\n            tabHeight: height\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        gutter: 'md',\n        className: fullHeightStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        span: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(AppDescription, {\n        app: this.props.app,\n        health: this.state.health,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(GridItem, {\n        span: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MiniGraphCard, {\n        onEdgeTap: this.goToMetrics,\n        dataSource: this.graphDataSource,\n        mtlsEnabled: this.props.mtlsEnabled,\n        graphContainerStyle: graphContainerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return AppInfo;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    duration: durationSelector(state),\n    lastRefreshAt: state.globalState.lastRefreshAt,\n    mtlsEnabled: meshWideMTLSEnabledSelector(state)\n  };\n};\n\nvar AppInfoContainer = connect(mapStateToProps)(AppInfo);\nexport default AppInfoContainer;","map":{"version":3,"sources":["/root/kiali-ui/src/pages/AppDetails/AppInfo.tsx"],"names":["React","Grid","GridItem","API","AlertUtils","AppDescription","RenderComponentScroll","GraphDataSource","connect","durationSelector","meshWideMTLSEnabledSelector","style","MiniGraphCard","history","URLParam","fullHeightStyle","height","AppInfo","props","graphDataSource","fetchBackend","app","fetchForVersionedApp","duration","namespace","name","hasSidecar","workloads","some","w","istioSidecar","getAppHealth","then","health","setState","catch","error","addError","goToMetrics","e","source","target","direction","destination","urlParams","URLSearchParams","location","search","set","BY_LABELS","replace","pathname","toString","state","prev","tabHeight","graphContainerStyle","width","mtlsEnabled","Component","mapStateToProps","lastRefreshAt","globalState","AppInfoContainer"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport * as API from '../../services/Api';\nimport * as AlertUtils from '../../utils/AlertUtils';\nimport AppDescription from './AppDescription';\nimport { App } from '../../types/App';\nimport { RenderComponentScroll } from '../../components/Nav/Page';\nimport { DurationInSeconds, TimeInMilliseconds } from 'types/Common';\nimport GraphDataSource from 'services/GraphDataSource';\nimport { AppHealth } from 'types/Health';\nimport { KialiAppState } from '../../store/Store';\nimport { connect } from 'react-redux';\nimport { durationSelector, meshWideMTLSEnabledSelector } from '../../store/Selectors';\nimport { style } from 'typestyle';\nimport MiniGraphCard from '../../components/CytoscapeGraph/MiniGraphCard';\nimport { GraphEdgeTapEvent } from '../../components/CytoscapeGraph/CytoscapeGraph';\nimport history, { URLParam } from '../../app/History';\n\ntype AppInfoProps = {\n  app?: App;\n  duration: DurationInSeconds;\n  lastRefreshAt: TimeInMilliseconds;\n  mtlsEnabled: boolean;\n};\n\ntype AppInfoState = {\n  health?: AppHealth;\n  tabHeight?: number;\n};\n\nconst fullHeightStyle = style({\n  height: '100%'\n});\n\nclass AppInfo extends React.Component<AppInfoProps, AppInfoState> {\n  private graphDataSource = new GraphDataSource();\n\n  constructor(props: AppInfoProps) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.fetchBackend();\n  }\n\n  componentDidUpdate(prev: AppInfoProps) {\n    if (this.props.duration !== prev.duration || this.props.app !== prev.app) {\n      this.fetchBackend();\n    }\n  }\n\n  private fetchBackend = () => {\n    if (!this.props.app) {\n      return;\n    }\n    this.graphDataSource.fetchForVersionedApp(this.props.duration, this.props.app.namespace.name, this.props.app.name);\n    const hasSidecar = this.props.app.workloads.some(w => w.istioSidecar);\n    API.getAppHealth(this.props.app.namespace.name, this.props.app.name, this.props.duration, hasSidecar)\n      .then(health => this.setState({ health: health }))\n      .catch(error => AlertUtils.addError('Could not fetch Health.', error));\n  };\n\n  goToMetrics = (e: GraphEdgeTapEvent) => {\n    if (e.source !== e.target && this.props.app) {\n      const direction = e.source === this.props.app.name ? 'outbound' : 'inbound';\n      const destination = direction === 'inbound' ? 'source_canonical_service' : 'destination_canonical_service';\n      const urlParams = new URLSearchParams(history.location.search);\n      urlParams.set('tab', direction === 'inbound' ? 'in_metrics' : 'out_metrics');\n      urlParams.set(URLParam.BY_LABELS, destination + '=' + (e.source === this.props.app.name ? e.target : e.source));\n      history.replace(history.location.pathname + '?' + urlParams.toString());\n    }\n  };\n\n  render() {\n    // RenderComponentScroll handles height to provide an inner scroll combined with tabs\n    // This height needs to be propagated to minigraph to proper resize in height\n    // Graph resizes correctly on width\n    const height = this.state.tabHeight ? this.state.tabHeight - 115 : 300;\n    const graphContainerStyle = style({ width: '100%', height: height });\n    return (\n      <RenderComponentScroll onResize={height => this.setState({ tabHeight: height })}>\n        <Grid gutter={'md'} className={fullHeightStyle}>\n          <GridItem span={4}>\n            <AppDescription app={this.props.app} health={this.state.health} />\n          </GridItem>\n          <GridItem span={8}>\n            <MiniGraphCard\n              onEdgeTap={this.goToMetrics}\n              dataSource={this.graphDataSource}\n              mtlsEnabled={this.props.mtlsEnabled}\n              graphContainerStyle={graphContainerStyle}\n            />\n          </GridItem>\n        </Grid>\n      </RenderComponentScroll>\n    );\n  }\n}\n\nconst mapStateToProps = (state: KialiAppState) => ({\n  duration: durationSelector(state),\n  lastRefreshAt: state.globalState.lastRefreshAt,\n  mtlsEnabled: meshWideMTLSEnabledSelector(state)\n});\n\nconst AppInfoContainer = connect(mapStateToProps)(AppInfo);\nexport default AppInfoContainer;\n"]},"metadata":{},"sourceType":"module"}