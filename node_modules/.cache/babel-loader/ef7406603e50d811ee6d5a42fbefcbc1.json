{"ast":null,"code":"import _slicedToArray from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/pages/Overview/OverviewPage.tsx\";\nimport * as React from 'react';\nimport { Button, Card, CardActions, CardBody, CardHead, CardHeader, EmptyState, EmptyStateBody, EmptyStateVariant, Grid, GridItem, Modal, Title, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { style } from 'typestyle';\nimport _ from 'lodash';\nimport { FilterSelected } from '../../components/Filters/StatefulFilters';\nimport * as FilterHelper from '../../components/FilterList/FilterHelper';\nimport * as API from '../../services/Api';\nimport { DEGRADED, FAILURE, HEALTHY, NOT_READY } from '../../types/Health';\nimport { PromisesRegistry } from '../../utils/CancelablePromises';\nimport OverviewToolbarContainer, { OverviewDisplayMode, OverviewToolbar } from './OverviewToolbar';\nimport NamespaceMTLSStatusContainer from '../../components/MTls/NamespaceMTLSStatus';\nimport { RenderComponentScroll } from '../../components/Nav/Page';\nimport OverviewCardContentCompact from './OverviewCardContentCompact';\nimport OverviewCardContentExpanded from './OverviewCardContentExpanded';\nimport { computePrometheusRateParams } from '../../services/Prometheus';\nimport { connect } from 'react-redux';\nimport { durationSelector, meshWideMTLSStatusSelector, refreshIntervalSelector } from '../../store/Selectors';\nimport { nsWideMTLSStatus } from '../../types/TLSStatus';\nimport { switchType } from './OverviewHelper';\nimport * as Sorts from './Sorts';\nimport * as Filters from './Filters';\nimport ValidationSummary from '../../components/Validations/ValidationSummary';\nimport { Paths, serverConfig } from '../../config';\nimport { PFColors } from '../../components/Pf/PfColors';\nimport VirtualList from '../../components/VirtualList/VirtualList';\nimport { OverviewNamespaceActions } from './OverviewNamespaceActions';\nimport history, { HistoryManager, URLParam } from '../../app/History';\nimport { buildGraphAuthorizationPolicy, buildNamespaceInjectionPatch } from '../../components/IstioWizards/WizardActions';\nimport * as AlertUtils from '../../utils/AlertUtils';\nimport { MessageType } from '../../types/MessageCenter';\nimport GraphDataSource from '../../services/GraphDataSource';\nimport { AUTHORIZATION_POLICIES } from '../IstioConfigNew/AuthorizationPolicyForm';\nimport ValidationSummaryLink from '../../components/Link/ValidationSummaryLink';\nimport { ISTIO_DASHBOARDS } from '../../types/GrafanaInfo';\nvar gridStyleCompact = style({\n  backgroundColor: '#f5f5f5',\n  paddingBottom: '20px',\n  marginTop: '0px'\n});\nvar gridStyleList = style({\n  backgroundColor: '#f5f5f5',\n  // The VirtualTable component has a different style than cards\n  // We need to adjust the grid style if we are on compact vs list view\n  padding: '0 !important',\n  marginTop: '0px'\n});\nvar cardGridStyle = style({\n  borderTop: '2px solid #39a5dc',\n  textAlign: 'center',\n  marginTop: '0px',\n  marginBottom: '10px'\n});\nvar emptyStateStyle = style({\n  height: '300px',\n  marginRight: 5,\n  marginBottom: 10,\n  marginTop: 10\n});\nvar cardHeaderStyle = style({\n  width: '75%',\n  textAlign: 'left'\n});\nvar cardNamespaceNameNormalStyle = style({\n  display: 'inline-block',\n  verticalAlign: 'middle'\n}); // CSS trick to apply ellipsis only on certain cases\n// With actions on Card, there are some CSS calculation in the Cards, so the\n// maxWidth calc() used doesn't work well for all cases\n\nvar NS_LONG = 20;\nvar cardNamespaceNameLongStyle = style({\n  display: 'inline-block',\n  maxWidth: 'calc(100% - 75px)',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  verticalAlign: 'middle',\n  whiteSpace: 'nowrap'\n});\nvar Show;\n\n(function (Show) {\n  Show[Show[\"GRAPH\"] = 0] = \"GRAPH\";\n  Show[Show[\"APPLICATIONS\"] = 1] = \"APPLICATIONS\";\n  Show[Show[\"WORKLOADS\"] = 2] = \"WORKLOADS\";\n  Show[Show[\"SERVICES\"] = 3] = \"SERVICES\";\n  Show[Show[\"ISTIO_CONFIG\"] = 4] = \"ISTIO_CONFIG\";\n})(Show || (Show = {}));\n\nexport var OverviewPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(OverviewPage, _React$Component);\n\n  var _super = _createSuper(OverviewPage);\n\n  // Grafana promise is only invoked by componentDidMount() no need to repeat it on componentDidUpdate()\n  function OverviewPage(props) {\n    var _this;\n\n    _classCallCheck(this, OverviewPage);\n\n    _this = _super.call(this, props);\n    _this.sFOverviewToolbar = React.createRef();\n    _this.promises = new PromisesRegistry();\n\n    _this.getStartDisplayMode = function (isCompact) {\n      // Check if there is a displayMode option\n      var historyDisplayMode = HistoryManager.getParam(URLParam.DISPLAY_MODE);\n\n      if (historyDisplayMode) {\n        return Number(historyDisplayMode);\n      } // In this case is the first time that we are loading Overview Page, calculate the best view\n\n\n      return isCompact ? OverviewDisplayMode.COMPACT : OverviewDisplayMode.EXPAND;\n    };\n\n    _this.load = function () {\n      _this.promises.cancelAll();\n\n      _this.promises.register('namespaces', API.getNamespaces()).then(function (namespacesResponse) {\n        var nameFilters = FilterSelected.getSelected().filters.filter(function (f) {\n          return f.id === Filters.nameFilter.id;\n        });\n        var allNamespaces = namespacesResponse.data.filter(function (ns) {\n          return nameFilters.length === 0 || nameFilters.some(function (f) {\n            return ns.name.includes(f.value);\n          });\n        }).map(function (ns) {\n          var previous = _this.state.namespaces.find(function (prev) {\n            return prev.name === ns.name;\n          });\n\n          return {\n            name: ns.name,\n            status: previous ? previous.status : undefined,\n            tlsStatus: previous ? previous.tlsStatus : undefined,\n            metrics: previous ? previous.metrics : undefined,\n            errorMetrics: previous ? previous.errorMetrics : undefined,\n            validations: previous ? previous.validations : undefined,\n            labels: ns.labels\n          };\n        });\n        var isAscending = FilterHelper.isCurrentSortAscending();\n        var sortField = FilterHelper.currentSortField(Sorts.sortFields);\n        var type = OverviewToolbar.currentOverviewType();\n\n        var displayMode = _this.getStartDisplayMode(allNamespaces.length > 16); // Set state before actually fetching health\n\n\n        _this.setState(function (prevState) {\n          return {\n            type: type,\n            namespaces: Sorts.sortFunc(allNamespaces, sortField, isAscending),\n            displayMode: displayMode,\n            showConfirmModal: prevState.showConfirmModal,\n            nsTarget: prevState.nsTarget,\n            opTarget: prevState.opTarget\n          };\n        }, function () {\n          _this.fetchHealth(isAscending, sortField, type);\n\n          _this.fetchTLS(isAscending, sortField);\n\n          _this.fetchValidations(isAscending, sortField);\n\n          _this.fetchPermissions();\n\n          if (displayMode !== OverviewDisplayMode.COMPACT) {\n            _this.fetchMetrics();\n          }\n        });\n      }).catch(function (namespacesError) {\n        if (!namespacesError.isCanceled) {\n          _this.handleAxiosError('Could not fetch namespace list', namespacesError);\n        }\n      });\n    };\n\n    _this.sort = function (sortField, isAscending) {\n      var sorted = Sorts.sortFunc(_this.state.namespaces, sortField, isAscending);\n\n      _this.setState({\n        namespaces: sorted\n      });\n    };\n\n    _this.setDisplayMode = function (mode) {\n      _this.setState({\n        displayMode: mode\n      });\n\n      HistoryManager.setParam(URLParam.DISPLAY_MODE, String(mode));\n\n      if (mode === OverviewDisplayMode.EXPAND) {\n        // Load metrics\n        _this.fetchMetrics();\n      }\n    };\n\n    _this.isNamespaceEmpty = function (ns) {\n      return !!ns.status && ns.status.inError.length + ns.status.inSuccess.length + ns.status.inWarning.length + ns.status.notAvailable.length === 0;\n    };\n\n    _this.show = function (showType, namespace, graphType) {\n      var destination = '';\n\n      switch (showType) {\n        case Show.GRAPH:\n          destination = \"/graph/namespaces?namespaces=\".concat(namespace, \"&graphType=\").concat(graphType);\n          break;\n\n        case Show.APPLICATIONS:\n          destination = \"/\".concat(Paths.APPLICATIONS, \"?namespaces=\") + namespace;\n          break;\n\n        case Show.WORKLOADS:\n          destination = \"/\".concat(Paths.WORKLOADS, \"?namespaces=\") + namespace;\n          break;\n\n        case Show.SERVICES:\n          destination = \"/\".concat(Paths.SERVICES, \"?namespaces=\") + namespace;\n          break;\n\n        case Show.ISTIO_CONFIG:\n          destination = \"/\".concat(Paths.ISTIO, \"?namespaces=\") + namespace;\n          break;\n\n        default: // Nothing to do on default case\n\n      }\n\n      history.push(destination);\n    };\n\n    _this.getNamespaceActions = function (nsInfo) {\n      // Today actions are fixed, but soon actions may depend of the state of a namespace\n      // So we keep this wrapped in a showActions function.\n      var namespaceActions = [{\n        isGroup: true,\n        isSeparator: false,\n        isDisabled: false,\n        title: 'Show',\n        children: [{\n          isGroup: true,\n          isSeparator: false,\n          isDisabled: false,\n          title: 'Graph',\n          action: function action(ns) {\n            return _this.show(Show.GRAPH, ns, _this.state.type);\n          }\n        }, {\n          isGroup: true,\n          isSeparator: false,\n          isDisabled: false,\n          title: 'Applications',\n          action: function action(ns) {\n            return _this.show(Show.APPLICATIONS, ns, _this.state.type);\n          }\n        }, {\n          isGroup: true,\n          isSeparator: false,\n          isDisabled: false,\n          title: 'Workloads',\n          action: function action(ns) {\n            return _this.show(Show.WORKLOADS, ns, _this.state.type);\n          }\n        }, {\n          isGroup: true,\n          isSeparator: false,\n          isDisabled: false,\n          title: 'Services',\n          action: function action(ns) {\n            return _this.show(Show.SERVICES, ns, _this.state.type);\n          }\n        }, {\n          isGroup: true,\n          isSeparator: false,\n          isDisabled: false,\n          title: 'Istio Config',\n          action: function action(ns) {\n            return _this.show(Show.ISTIO_CONFIG, ns, _this.state.type);\n          }\n        }]\n      }]; // We are going to assume that if the user can create/update Istio AuthorizationPolicies in a namespace\n      // then it can use the Istio Injection Actions.\n      // RBAC allow more fine granularity but Kiali won't check that in detail.\n\n      var canWrite = false;\n\n      if (_this.state.permissions && _this.state.permissions[nsInfo.name] && _this.state.permissions[nsInfo.name][AUTHORIZATION_POLICIES]) {\n        var resourcePermission = _this.state.permissions[nsInfo.name][AUTHORIZATION_POLICIES];\n        canWrite = resourcePermission.create && resourcePermission.update && resourcePermission.delete;\n      }\n\n      if (serverConfig.istioNamespace !== nsInfo.name) {\n        var _nsInfo$istioConfig;\n\n        if (serverConfig.kialiFeatureFlags.istioInjectionAction && !serverConfig.kialiFeatureFlags.istioUpgradeAction) {\n          namespaceActions.push({\n            isGroup: false,\n            isSeparator: true,\n            isDisabled: false\n          });\n          var enableAction = {\n            isGroup: false,\n            isSeparator: false,\n            isDisabled: !canWrite,\n            title: 'Enable Auto Injection',\n            action: function action(ns) {\n              return _this.onAddRemoveAutoInjection(ns, true, false);\n            }\n          };\n          var disableAction = {\n            isGroup: false,\n            isSeparator: false,\n            isDisabled: !canWrite,\n            title: 'Disable Auto Injection',\n            action: function action(ns) {\n              return _this.onAddRemoveAutoInjection(ns, false, false);\n            }\n          };\n          var removeAction = {\n            isGroup: false,\n            isSeparator: false,\n            isDisabled: !canWrite,\n            title: 'Remove Auto Injection',\n            action: function action(ns) {\n              return _this.onAddRemoveAutoInjection(ns, false, true);\n            }\n          };\n\n          if (nsInfo.labels && (nsInfo.labels[serverConfig.istioLabels.injectionLabelName] && nsInfo.labels[serverConfig.istioLabels.injectionLabelName] === 'enabled' || nsInfo.labels[serverConfig.istioLabels.injectionLabelRev])) {\n            namespaceActions.push(disableAction);\n            namespaceActions.push(removeAction);\n          } else if (nsInfo.labels && nsInfo.labels[serverConfig.istioLabels.injectionLabelName] && nsInfo.labels[serverConfig.istioLabels.injectionLabelName] === 'disabled') {\n            namespaceActions.push(enableAction);\n            namespaceActions.push(removeAction);\n          } else {\n            namespaceActions.push(enableAction);\n          }\n\n          namespaceActions.push({\n            isGroup: false,\n            isSeparator: true,\n            isDisabled: false\n          });\n        }\n\n        if (serverConfig.kialiFeatureFlags.istioUpgradeAction && serverConfig.istioCanaryRevision.upgrade && serverConfig.istioCanaryRevision.current) {\n          namespaceActions.push({\n            isGroup: false,\n            isSeparator: true,\n            isDisabled: false\n          });\n          var upgradeAction = {\n            isGroup: false,\n            isSeparator: false,\n            isDisabled: !canWrite,\n            title: 'Upgrade to ' + serverConfig.istioCanaryRevision.upgrade + ' revision',\n            action: function action(ns) {\n              return _this.onUpgradeDowngradeIstio(ns, serverConfig.istioCanaryRevision.upgrade);\n            }\n          };\n          var downgradeAction = {\n            isGroup: false,\n            isSeparator: false,\n            isDisabled: !canWrite,\n            title: 'Downgrade to ' + serverConfig.istioCanaryRevision.current + ' revision',\n            action: function action(ns) {\n              return _this.onUpgradeDowngradeIstio(ns, serverConfig.istioCanaryRevision.current);\n            }\n          };\n\n          if (nsInfo.labels && (nsInfo.labels[serverConfig.istioLabels.injectionLabelRev] && nsInfo.labels[serverConfig.istioLabels.injectionLabelRev] === serverConfig.istioCanaryRevision.current || nsInfo.labels[serverConfig.istioLabels.injectionLabelName] && nsInfo.labels[serverConfig.istioLabels.injectionLabelName] === 'enabled')) {\n            namespaceActions.push(upgradeAction);\n            namespaceActions.push({\n              isGroup: false,\n              isSeparator: true,\n              isDisabled: false\n            });\n          } else if (nsInfo.labels && nsInfo.labels[serverConfig.istioLabels.injectionLabelRev] && nsInfo.labels[serverConfig.istioLabels.injectionLabelRev] === serverConfig.istioCanaryRevision.upgrade) {\n            namespaceActions.push(downgradeAction);\n            namespaceActions.push({\n              isGroup: false,\n              isSeparator: true,\n              isDisabled: false\n            });\n          }\n        }\n\n        var aps = ((_nsInfo$istioConfig = nsInfo.istioConfig) === null || _nsInfo$istioConfig === void 0 ? void 0 : _nsInfo$istioConfig.authorizationPolicies) || [];\n        var addAuthorizationAction = {\n          isGroup: false,\n          isSeparator: false,\n          isDisabled: !canWrite,\n          title: (aps.length === 0 ? 'Create ' : 'Update') + ' Traffic Policies',\n          action: function action(ns) {\n            if (aps.length === 0) {\n              _this.onCreateTrafficPolicies(ns);\n            } else {\n              _this.onUpdateTrafficPolicies(ns);\n            }\n          }\n        };\n        var removeAuthorizationAction = {\n          isGroup: false,\n          isSeparator: false,\n          isDisabled: !canWrite,\n          title: 'Delete Traffic Policies',\n          action: function action(ns) {\n            return _this.onDeleteTrafficPolicies(ns);\n          }\n        };\n        namespaceActions.push(addAuthorizationAction);\n\n        if (aps.length > 0) {\n          namespaceActions.push(removeAuthorizationAction);\n        }\n      } else if (_this.state.grafanaLinks.length > 0) {\n        // Istio namespace will render external Grafana dashboards\n        namespaceActions.push({\n          isGroup: false,\n          isSeparator: true,\n          isDisabled: false\n        });\n\n        _this.state.grafanaLinks.forEach(function (link) {\n          var grafanaDashboard = {\n            isGroup: false,\n            isSeparator: false,\n            isDisabled: false,\n            isExternal: true,\n            title: link.name,\n            action: function action(_ns) {\n              window.open(link.url, '_blank');\n\n              _this.load();\n            }\n          };\n          namespaceActions.push(grafanaDashboard);\n        });\n      }\n\n      return namespaceActions;\n    };\n\n    _this.onAddRemoveAutoInjection = function (ns, enable, remove) {\n      var jsonPatch = buildNamespaceInjectionPatch(enable, remove, null);\n      API.updateNamespace(ns, jsonPatch).then(function (_) {\n        AlertUtils.add('Namespace ' + ns + ' updated', 'default', MessageType.SUCCESS);\n\n        _this.load();\n      }).catch(function (error) {\n        AlertUtils.addError('Could not update namespace ' + ns, error);\n      });\n    };\n\n    _this.onUpgradeDowngradeIstio = function (ns, revision) {\n      var jsonPatch = buildNamespaceInjectionPatch(false, false, revision);\n      API.updateNamespace(ns, jsonPatch).then(function (_) {\n        AlertUtils.add('Namespace ' + ns + ' updated', 'default', MessageType.SUCCESS);\n\n        _this.load();\n      }).catch(function (error) {\n        AlertUtils.addError('Could not update namespace ' + ns, error);\n      });\n    };\n\n    _this.onCreateTrafficPolicies = function (ns) {\n      _this.onAddRemoveAuthorizationPolicy(ns, [], false);\n    };\n\n    _this.onUpdateTrafficPolicies = function (ns) {\n      _this.setState({\n        showConfirmModal: true,\n        nsTarget: ns,\n        opTarget: 'update'\n      });\n    };\n\n    _this.onDeleteTrafficPolicies = function (ns) {\n      _this.setState({\n        showConfirmModal: true,\n        nsTarget: ns,\n        opTarget: 'delete'\n      });\n    };\n\n    _this.onAddRemoveAuthorizationPolicy = function (ns, authorizationPolicies, remove) {\n      if (authorizationPolicies.length > 0) {\n        _this.promises.registerAll('authorizationPoliciesDelete', authorizationPolicies.map(function (ap) {\n          return API.deleteIstioConfigDetail(ns, 'authorizationpolicies', ap.metadata.name);\n        })).then(function (_) {\n          if (!remove) {\n            _this.createAuthorizationPolicies(ns, _this.load);\n          } else {\n            _this.load();\n          }\n        }).catch(function (errorDelete) {\n          if (!errorDelete.isCanceled) {\n            AlertUtils.addError('Could not delete AuthorizationPolicies.', errorDelete);\n          }\n        });\n      } else {\n        if (!remove) {\n          _this.createAuthorizationPolicies(ns, _this.load);\n        } else {\n          AlertUtils.addInfo('Namespace ' + ns + \" doesn't have AuthorizationPolicy config.\");\n        }\n      }\n    };\n\n    _this.createAuthorizationPolicies = function (ns, callback) {\n      var graphDataSource = new GraphDataSource();\n      graphDataSource.on('fetchSuccess', function () {\n        var aps = buildGraphAuthorizationPolicy(ns, graphDataSource.graphDefinition);\n\n        _this.promises.registerAll('authorizationPoliciesCreate', aps.map(function (ap) {\n          return API.createIstioConfigDetail(ns, 'authorizationpolicies', JSON.stringify(ap));\n        })).then(function (results) {\n          if (results.length > 0) {\n            AlertUtils.add('AuthorizationPolicies created for ' + ns + ' namespace.', 'default', MessageType.SUCCESS);\n          }\n\n          callback();\n        }).catch(function (errorCreate) {\n          if (!errorCreate.isCanceled) {\n            AlertUtils.addError('Could not create AuthorizationPolicies.', errorCreate);\n          }\n        });\n      });\n      graphDataSource.on('fetchError', function (errorMessage) {\n        if (errorMessage !== '') {\n          errorMessage = 'Could not fetch traffic data: ' + errorMessage;\n        } else {\n          errorMessage = 'Could not fetch traffic data.';\n        }\n\n        AlertUtils.addError(errorMessage);\n      });\n      graphDataSource.fetchForNamespace(_this.props.duration, ns);\n    };\n\n    _this.hideConfirmModal = function () {\n      _this.setState({\n        showConfirmModal: false,\n        nsTarget: '',\n        opTarget: ''\n      });\n    };\n\n    _this.onConfirmModal = function () {\n      var aps = [];\n\n      for (var i = 0; i < _this.state.namespaces.length; i++) {\n        var nsInfo = _this.state.namespaces[i];\n\n        if (_this.state.namespaces[i].name === _this.state.nsTarget) {\n          var _nsInfo$istioConfig2;\n\n          aps = ((_nsInfo$istioConfig2 = nsInfo.istioConfig) === null || _nsInfo$istioConfig2 === void 0 ? void 0 : _nsInfo$istioConfig2.authorizationPolicies) || [];\n          break;\n        }\n      }\n\n      var nsTarget = _this.state.nsTarget;\n      var remove = _this.state.opTarget === 'delete';\n\n      _this.setState({\n        showConfirmModal: false,\n        nsTarget: '',\n        opTarget: ''\n      }, function () {\n        return _this.onAddRemoveAuthorizationPolicy(nsTarget, aps, remove);\n      });\n    };\n\n    var display = HistoryManager.getParam(URLParam.DISPLAY_MODE);\n    _this.state = {\n      namespaces: [],\n      type: OverviewToolbar.currentOverviewType(),\n      displayMode: display ? Number(display) : OverviewDisplayMode.EXPAND,\n      permissions: {},\n      showConfirmModal: false,\n      nsTarget: '',\n      opTarget: '',\n      grafanaLinks: []\n    };\n    return _this;\n  }\n\n  _createClass(OverviewPage, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.duration !== this.props.duration || prevProps.navCollapse !== this.props.navCollapse) {\n        // Reload to avoid graphical glitches with charts\n        // TODO: this workaround should probably be deleted after switch to Patternfly 4, see https://issues.jboss.org/browse/KIALI-3116\n        this.load();\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchGrafanaInfo();\n      this.load();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.promises.cancelAll();\n    }\n  }, {\n    key: \"sortFields\",\n    value: function sortFields() {\n      return Sorts.sortFields;\n    }\n  }, {\n    key: \"fetchHealth\",\n    value: function fetchHealth(isAscending, sortField, type) {\n      var _this2 = this;\n\n      var duration = FilterHelper.currentDuration(); // debounce async for back-pressure, ten by ten\n\n      _.chunk(this.state.namespaces, 10).forEach(function (chunk) {\n        _this2.promises.registerChained('healthchunks', undefined, function () {\n          return _this2.fetchHealthChunk(chunk, duration, type);\n        }).then(function () {\n          _this2.setState(function (prevState) {\n            var newNamespaces = prevState.namespaces.slice();\n\n            if (sortField.id === 'health') {\n              newNamespaces = Sorts.sortFunc(newNamespaces, sortField, isAscending);\n            }\n\n            return {\n              namespaces: newNamespaces\n            };\n          });\n        });\n      });\n    }\n  }, {\n    key: \"fetchGrafanaInfo\",\n    value: function fetchGrafanaInfo() {\n      var _this3 = this;\n\n      if (!OverviewPage.grafanaInfoPromise) {\n        OverviewPage.grafanaInfoPromise = API.getGrafanaInfo().then(function (response) {\n          if (response.status === 204) {\n            return undefined;\n          }\n\n          return response.data;\n        });\n      }\n\n      OverviewPage.grafanaInfoPromise.then(function (grafanaInfo) {\n        if (grafanaInfo) {\n          // For Overview Page only Performance and Wasm Extension dashboard are interesting\n          _this3.setState({\n            grafanaLinks: grafanaInfo.externalLinks.filter(function (link) {\n              return ISTIO_DASHBOARDS.indexOf(link.name) > -1;\n            })\n          });\n        } else {\n          _this3.setState({\n            grafanaLinks: []\n          });\n        }\n      }).catch(function (err) {\n        AlertUtils.addMessage(_objectSpread(_objectSpread({}, AlertUtils.extractAxiosError('Could not fetch Grafana info. Turning off links to Grafana.', err)), {}, {\n          group: 'default',\n          type: MessageType.INFO,\n          showNotification: false\n        }));\n      });\n    }\n  }, {\n    key: \"fetchHealthChunk\",\n    value: function fetchHealthChunk(chunk, duration, type) {\n      var _this4 = this;\n\n      var apiFunc = switchType(type, API.getNamespaceAppHealth, API.getNamespaceServiceHealth, API.getNamespaceWorkloadHealth);\n      return Promise.all(chunk.map(function (nsInfo) {\n        var healthPromise = apiFunc(nsInfo.name, duration);\n        return healthPromise.then(function (rs) {\n          return {\n            health: rs,\n            nsInfo: nsInfo\n          };\n        });\n      })).then(function (results) {\n        results.forEach(function (result) {\n          var nsStatus = {\n            inNotReady: [],\n            inError: [],\n            inWarning: [],\n            inSuccess: [],\n            notAvailable: []\n          };\n          Object.keys(result.health).forEach(function (item) {\n            var health = result.health[item];\n            var status = health.getGlobalStatus();\n\n            if (status === FAILURE) {\n              nsStatus.inError.push(item);\n            } else if (status === DEGRADED) {\n              nsStatus.inWarning.push(item);\n            } else if (status === HEALTHY) {\n              nsStatus.inSuccess.push(item);\n            } else if (status === NOT_READY) {\n              nsStatus.inNotReady.push(item);\n            } else {\n              nsStatus.notAvailable.push(item);\n            }\n          });\n          result.nsInfo.status = nsStatus;\n        });\n      }).catch(function (err) {\n        return _this4.handleAxiosError('Could not fetch health', err);\n      });\n    }\n  }, {\n    key: \"fetchMetrics\",\n    value: function fetchMetrics() {\n      var _this5 = this;\n\n      var duration = FilterHelper.currentDuration(); // debounce async for back-pressure, ten by ten\n\n      _.chunk(this.state.namespaces, 10).forEach(function (chunk) {\n        _this5.promises.registerChained('metricschunks', undefined, function () {\n          return _this5.fetchMetricsChunk(chunk, duration);\n        }).then(function () {\n          _this5.setState(function (prevState) {\n            return {\n              namespaces: prevState.namespaces.slice()\n            };\n          });\n        });\n      });\n    }\n  }, {\n    key: \"fetchMetricsChunk\",\n    value: function fetchMetricsChunk(chunk, duration) {\n      var _this6 = this;\n\n      var rateParams = computePrometheusRateParams(duration, 10);\n      var optionsIn = {\n        filters: ['request_count', 'request_error_count'],\n        duration: duration,\n        step: rateParams.step,\n        rateInterval: rateParams.rateInterval,\n        direction: 'inbound',\n        reporter: 'destination'\n      };\n      return Promise.all(chunk.map(function (nsInfo) {\n        return API.getNamespaceMetrics(nsInfo.name, optionsIn).then(function (rs) {\n          nsInfo.metrics = rs.data.request_count;\n          nsInfo.errorMetrics = rs.data.request_error_count;\n          return nsInfo;\n        });\n      })).catch(function (err) {\n        return _this6.handleAxiosError('Could not fetch metrics', err);\n      });\n    }\n  }, {\n    key: \"fetchTLS\",\n    value: function fetchTLS(isAscending, sortField) {\n      var _this7 = this;\n\n      _.chunk(this.state.namespaces, 10).forEach(function (chunk) {\n        _this7.promises.registerChained('tlschunks', undefined, function () {\n          return _this7.fetchTLSChunk(chunk);\n        }).then(function () {\n          _this7.setState(function (prevState) {\n            var newNamespaces = prevState.namespaces.slice();\n\n            if (sortField.id === 'mtls') {\n              newNamespaces = Sorts.sortFunc(newNamespaces, sortField, isAscending);\n            }\n\n            return {\n              namespaces: newNamespaces\n            };\n          });\n        });\n      });\n    }\n  }, {\n    key: \"fetchTLSChunk\",\n    value: function fetchTLSChunk(chunk) {\n      var _this8 = this;\n\n      return Promise.all(chunk.map(function (nsInfo) {\n        return API.getNamespaceTls(nsInfo.name).then(function (rs) {\n          return {\n            status: rs.data,\n            nsInfo: nsInfo\n          };\n        });\n      })).then(function (results) {\n        results.forEach(function (result) {\n          result.nsInfo.tlsStatus = {\n            status: nsWideMTLSStatus(result.status.status, _this8.props.meshStatus)\n          };\n        });\n      }).catch(function (err) {\n        return _this8.handleAxiosError('Could not fetch TLS status', err);\n      });\n    }\n  }, {\n    key: \"fetchValidations\",\n    value: function fetchValidations(isAscending, sortField) {\n      var _this9 = this;\n\n      _.chunk(this.state.namespaces, 10).forEach(function (chunk) {\n        _this9.promises.registerChained('validationchunks', undefined, function () {\n          return _this9.fetchValidationChunk(chunk);\n        }).then(function () {\n          _this9.setState(function (prevState) {\n            var newNamespaces = prevState.namespaces.slice();\n\n            if (sortField.id === 'validations') {\n              newNamespaces = Sorts.sortFunc(newNamespaces, sortField, isAscending);\n            }\n\n            return {\n              namespaces: newNamespaces\n            };\n          });\n        });\n      });\n    }\n  }, {\n    key: \"fetchValidationChunk\",\n    value: function fetchValidationChunk(chunk) {\n      var _this10 = this;\n\n      return Promise.all(chunk.map(function (nsInfo) {\n        return Promise.all([API.getNamespaceValidations(nsInfo.name), API.getIstioConfig(nsInfo.name, ['authorizationpolicies'], false, '', '')]).then(function (results) {\n          return {\n            validations: results[0].data,\n            istioConfig: results[1].data,\n            nsInfo: nsInfo\n          };\n        });\n      })).then(function (results) {\n        results.forEach(function (result) {\n          result.nsInfo.validations = result.validations;\n          result.nsInfo.istioConfig = result.istioConfig;\n        });\n      }).catch(function (err) {\n        return _this10.handleAxiosError('Could not fetch validations status', err);\n      });\n    }\n  }, {\n    key: \"fetchPermissions\",\n    value: function fetchPermissions() {\n      var _this11 = this;\n\n      this.promises.register('namespacepermissions', API.getIstioPermissions(this.state.namespaces.map(function (ns) {\n        return ns.name;\n      }))).then(function (result) {\n        _this11.setState({\n          permissions: result.data\n        });\n      });\n    }\n  }, {\n    key: \"handleAxiosError\",\n    value: function handleAxiosError(message, error) {\n      FilterHelper.handleError(\"\".concat(message, \": \").concat(API.getErrorString(error)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this12 = this;\n\n      var sm = this.state.displayMode === OverviewDisplayMode.COMPACT ? 3 : 6;\n      var md = this.state.displayMode === OverviewDisplayMode.COMPACT ? 3 : 4;\n      var filteredNamespaces = FilterHelper.runFilters(this.state.namespaces, Filters.availableFilters, FilterSelected.getSelected());\n      var namespaceActions = filteredNamespaces.map(function (ns, i) {\n        var actions = _this12.getNamespaceActions(ns);\n\n        return /*#__PURE__*/React.createElement(OverviewNamespaceActions, {\n          key: 'namespaceAction_' + i,\n          namespace: ns.name,\n          actions: actions,\n          __self: _this12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 884,\n            columnNumber: 14\n          }\n        });\n      });\n      var modalAction = this.state.opTarget.length > 0 ? this.state.opTarget.charAt(0).toLocaleUpperCase() + this.state.opTarget.slice(1) : '';\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(OverviewToolbarContainer, {\n        onRefresh: this.load,\n        onError: FilterHelper.handleError,\n        sort: this.sort,\n        displayMode: this.state.displayMode,\n        setDisplayMode: this.setDisplayMode,\n        statefulFilterRef: this.sFOverviewToolbar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 9\n        }\n      }), filteredNamespaces.length > 0 ? /*#__PURE__*/React.createElement(RenderComponentScroll, {\n        className: this.state.displayMode === OverviewDisplayMode.LIST ? gridStyleList : gridStyleCompact,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 11\n        }\n      }, this.state.displayMode === OverviewDisplayMode.LIST ? /*#__PURE__*/React.createElement(VirtualList, {\n        rows: filteredNamespaces,\n        sort: this.sort,\n        statefulProps: this.sFOverviewToolbar,\n        actions: namespaceActions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 15\n        }\n      }) : /*#__PURE__*/React.createElement(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 912,\n          columnNumber: 15\n        }\n      }, filteredNamespaces.map(function (ns, i) {\n        var isLongNs = ns.name.length > NS_LONG;\n        return /*#__PURE__*/React.createElement(GridItem, {\n          sm: sm,\n          md: md,\n          key: 'CardItem_' + ns.name,\n          style: {\n            margin: '0px 5px 0 5px'\n          },\n          __self: _this12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 916,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          isCompact: true,\n          className: cardGridStyle,\n          __self: _this12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 917,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(CardHead, {\n          __self: _this12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 918,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(CardActions, {\n          __self: _this12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 919,\n            columnNumber: 27\n          }\n        }, namespaceActions[i]), /*#__PURE__*/React.createElement(CardHeader, {\n          className: cardHeaderStyle,\n          __self: _this12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Title, {\n          headingLevel: \"h5\",\n          size: \"lg\",\n          __self: _this12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: isLongNs ? cardNamespaceNameLongStyle : cardNamespaceNameNormalStyle,\n          title: ns.name,\n          __self: _this12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 922,\n            columnNumber: 31\n          }\n        }, ns.name)))), /*#__PURE__*/React.createElement(CardBody, {\n          __self: _this12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 931,\n            columnNumber: 25\n          }\n        }, _this12.renderLabels(ns), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: 'left'\n          },\n          __self: _this12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: 'inline-block',\n            width: '125px'\n          },\n          __self: _this12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 934,\n            columnNumber: 29\n          }\n        }, \"Istio Config\"), ns.tlsStatus && /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(NamespaceMTLSStatusContainer, {\n          status: ns.tlsStatus.status,\n          __self: _this12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 33\n          }\n        })), _this12.renderIstioConfigStatus(ns)), _this12.renderStatuses(ns))));\n      }))) : /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          backgroundColor: '#f5f5f5'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(EmptyState, {\n        className: emptyStateStyle,\n        variant: EmptyStateVariant.full,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Title, {\n        headingLevel: \"h5\",\n        size: \"lg\",\n        style: {\n          marginTop: '50px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 954,\n          columnNumber: 15\n        }\n      }, \"No unfiltered namespaces\"), /*#__PURE__*/React.createElement(EmptyStateBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 957,\n          columnNumber: 15\n        }\n      }, \"Either all namespaces are being filtered or the user has no permission to access namespaces.\"))), /*#__PURE__*/React.createElement(Modal, {\n        isSmall: true,\n        title: 'Confirm ' + modalAction + ' Traffic Policies ?',\n        isOpen: this.state.showConfirmModal,\n        onClose: this.hideConfirmModal,\n        actions: [/*#__PURE__*/React.createElement(Button, {\n          key: \"cancel\",\n          variant: \"secondary\",\n          onClick: this.hideConfirmModal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 13\n          }\n        }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n          key: \"confirm\",\n          variant: \"danger\",\n          onClick: this.onConfirmModal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 972,\n            columnNumber: 13\n          }\n        }, modalAction)],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 9\n        }\n      }, 'Namespace ' + this.state.nsTarget + ' has existing AuthorizationPolicy objects. Do you want to ' + this.state.opTarget + ' them ?'));\n    }\n  }, {\n    key: \"renderLabels\",\n    value: function renderLabels(ns) {\n      var _this13 = this;\n\n      var labelsLength = ns.labels ? \"\".concat(Object.entries(ns.labels).length) : 'No';\n      var labelContent = ns.labels ? /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: PFColors.Blue400,\n          textAlign: 'left',\n          cursor: 'pointer'\n        },\n        onClick: function onClick() {\n          return _this13.setDisplayMode(OverviewDisplayMode.LIST);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        \"aria-label\": 'Labels list',\n        position: TooltipPosition.right,\n        enableFlip: true,\n        distance: 5,\n        content: /*#__PURE__*/React.createElement(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1000,\n            columnNumber: 13\n          }\n        }, Object.entries(ns.labels || []).map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: key,\n            __self: _this13,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1002,\n              columnNumber: 17\n            }\n          }, key, \": \", value);\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 994,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"labels_info\",\n        style: {\n          display: 'inline'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1009,\n          columnNumber: 11\n        }\n      }, labelsLength, \" Label\", labelsLength !== '1' ? 's' : ''))) : /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 7\n        }\n      }, \"No labels\");\n      return labelContent;\n    }\n  }, {\n    key: \"renderStatuses\",\n    value: function renderStatuses(ns) {\n      if (ns.status) {\n        if (this.state.displayMode === OverviewDisplayMode.COMPACT) {\n          return /*#__PURE__*/React.createElement(OverviewCardContentCompact, {\n            key: ns.name,\n            name: ns.name,\n            status: ns.status,\n            type: this.state.type,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1023,\n              columnNumber: 16\n            }\n          });\n        }\n\n        return /*#__PURE__*/React.createElement(OverviewCardContentExpanded, {\n          key: ns.name,\n          name: ns.name,\n          duration: FilterHelper.currentDuration(),\n          status: ns.status,\n          type: this.state.type,\n          metrics: ns.metrics,\n          errorMetrics: ns.errorMetrics,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1026,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: 70\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 12\n        }\n      });\n    }\n  }, {\n    key: \"renderIstioConfigStatus\",\n    value: function renderIstioConfigStatus(ns) {\n      var validations = {\n        objectCount: 0,\n        errors: 0,\n        warnings: 0\n      };\n\n      if (!!ns.validations) {\n        validations = ns.validations;\n      }\n\n      return /*#__PURE__*/React.createElement(ValidationSummaryLink, {\n        namespace: ns.name,\n        objectCount: validations.objectCount,\n        errors: validations.errors,\n        warnings: validations.warnings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ValidationSummary, {\n        id: 'ns-val-' + ns.name,\n        errors: validations.errors,\n        warnings: validations.warnings,\n        objectCount: validations.objectCount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1053,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return OverviewPage;\n}(React.Component);\nOverviewPage.grafanaInfoPromise = void 0;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    duration: durationSelector(state),\n    meshStatus: meshWideMTLSStatusSelector(state),\n    navCollapse: state.userSettings.interface.navCollapse,\n    refreshInterval: refreshIntervalSelector(state)\n  };\n};\n\nvar OverviewPageContainer = connect(mapStateToProps)(OverviewPage);\nexport default OverviewPageContainer;","map":{"version":3,"sources":["/root/GraduateProject/src/pages/Overview/OverviewPage.tsx"],"names":["React","Button","Card","CardActions","CardBody","CardHead","CardHeader","EmptyState","EmptyStateBody","EmptyStateVariant","Grid","GridItem","Modal","Title","Tooltip","TooltipPosition","style","_","FilterSelected","FilterHelper","API","DEGRADED","FAILURE","HEALTHY","NOT_READY","PromisesRegistry","OverviewToolbarContainer","OverviewDisplayMode","OverviewToolbar","NamespaceMTLSStatusContainer","RenderComponentScroll","OverviewCardContentCompact","OverviewCardContentExpanded","computePrometheusRateParams","connect","durationSelector","meshWideMTLSStatusSelector","refreshIntervalSelector","nsWideMTLSStatus","switchType","Sorts","Filters","ValidationSummary","Paths","serverConfig","PFColors","VirtualList","OverviewNamespaceActions","history","HistoryManager","URLParam","buildGraphAuthorizationPolicy","buildNamespaceInjectionPatch","AlertUtils","MessageType","GraphDataSource","AUTHORIZATION_POLICIES","ValidationSummaryLink","ISTIO_DASHBOARDS","gridStyleCompact","backgroundColor","paddingBottom","marginTop","gridStyleList","padding","cardGridStyle","borderTop","textAlign","marginBottom","emptyStateStyle","height","marginRight","cardHeaderStyle","width","cardNamespaceNameNormalStyle","display","verticalAlign","NS_LONG","cardNamespaceNameLongStyle","maxWidth","overflow","textOverflow","whiteSpace","Show","OverviewPage","props","sFOverviewToolbar","createRef","promises","getStartDisplayMode","isCompact","historyDisplayMode","getParam","DISPLAY_MODE","Number","COMPACT","EXPAND","load","cancelAll","register","getNamespaces","then","namespacesResponse","nameFilters","getSelected","filters","filter","f","id","nameFilter","allNamespaces","data","ns","length","some","name","includes","value","map","previous","state","namespaces","find","prev","status","undefined","tlsStatus","metrics","errorMetrics","validations","labels","isAscending","isCurrentSortAscending","sortField","currentSortField","sortFields","type","currentOverviewType","displayMode","setState","prevState","sortFunc","showConfirmModal","nsTarget","opTarget","fetchHealth","fetchTLS","fetchValidations","fetchPermissions","fetchMetrics","catch","namespacesError","isCanceled","handleAxiosError","sort","sorted","setDisplayMode","mode","setParam","String","isNamespaceEmpty","inError","inSuccess","inWarning","notAvailable","show","showType","namespace","graphType","destination","GRAPH","APPLICATIONS","WORKLOADS","SERVICES","ISTIO_CONFIG","ISTIO","push","getNamespaceActions","nsInfo","namespaceActions","isGroup","isSeparator","isDisabled","title","children","action","canWrite","permissions","resourcePermission","create","update","delete","istioNamespace","kialiFeatureFlags","istioInjectionAction","istioUpgradeAction","enableAction","onAddRemoveAutoInjection","disableAction","removeAction","istioLabels","injectionLabelName","injectionLabelRev","istioCanaryRevision","upgrade","current","upgradeAction","onUpgradeDowngradeIstio","downgradeAction","aps","istioConfig","authorizationPolicies","addAuthorizationAction","onCreateTrafficPolicies","onUpdateTrafficPolicies","removeAuthorizationAction","onDeleteTrafficPolicies","grafanaLinks","forEach","link","grafanaDashboard","isExternal","_ns","window","open","url","enable","remove","jsonPatch","updateNamespace","add","SUCCESS","error","addError","revision","onAddRemoveAuthorizationPolicy","registerAll","ap","deleteIstioConfigDetail","metadata","createAuthorizationPolicies","errorDelete","addInfo","callback","graphDataSource","on","graphDefinition","createIstioConfigDetail","JSON","stringify","results","errorCreate","errorMessage","fetchForNamespace","duration","hideConfirmModal","onConfirmModal","i","prevProps","navCollapse","fetchGrafanaInfo","currentDuration","chunk","registerChained","fetchHealthChunk","newNamespaces","slice","grafanaInfoPromise","getGrafanaInfo","response","grafanaInfo","externalLinks","indexOf","err","addMessage","extractAxiosError","group","INFO","showNotification","apiFunc","getNamespaceAppHealth","getNamespaceServiceHealth","getNamespaceWorkloadHealth","Promise","all","healthPromise","rs","health","result","nsStatus","inNotReady","Object","keys","item","getGlobalStatus","fetchMetricsChunk","rateParams","optionsIn","step","rateInterval","direction","reporter","getNamespaceMetrics","request_count","request_error_count","fetchTLSChunk","getNamespaceTls","meshStatus","fetchValidationChunk","getNamespaceValidations","getIstioConfig","getIstioPermissions","message","handleError","getErrorString","sm","md","filteredNamespaces","runFilters","availableFilters","actions","modalAction","charAt","toLocaleUpperCase","LIST","isLongNs","margin","renderLabels","renderIstioConfigStatus","renderStatuses","full","labelsLength","entries","labelContent","color","Blue400","cursor","right","key","objectCount","errors","warnings","Component","mapStateToProps","userSettings","interface","refreshInterval","OverviewPageContainer"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,WAHF,EAIEC,QAJF,EAKEC,QALF,EAMEC,UANF,EAOEC,UAPF,EAQEC,cARF,EASEC,iBATF,EAUEC,IAVF,EAWEC,QAXF,EAYEC,KAZF,EAaEC,KAbF,EAcEC,OAdF,EAeEC,eAfF,QAgBO,wBAhBP;AAiBA,SAASC,KAAT,QAAsB,WAAtB;AAEA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,cAAT,QAAgD,0CAAhD;AACA,OAAO,KAAKC,YAAZ,MAA8B,0CAA9B;AACA,OAAO,KAAKC,GAAZ,MAAqB,oBAArB;AACA,SACEC,QADF,EAEEC,OAFF,EAIEC,OAJF,EAKEC,SALF,QASO,oBATP;AAWA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,OAAOC,wBAAP,IAAmCC,mBAAnC,EAAwDC,eAAxD,QAA6F,mBAA7F;AAEA,OAAOC,4BAAP,MAAyC,2CAAzC;AACA,SAASC,qBAAT,QAAsC,2BAAtC;AACA,OAAOC,0BAAP,MAAuC,8BAAvC;AACA,OAAOC,2BAAP,MAAwC,+BAAxC;AAEA,SAASC,2BAAT,QAA4C,2BAA5C;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA2BC,0BAA3B,EAAuDC,uBAAvD,QAAsF,uBAAtF;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,OAAOC,iBAAP,MAA8B,gDAA9B;AAEA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,cAApC;AACA,SAASC,QAAT,QAAyB,8BAAzB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,SAAkCC,wBAAlC,QAAkE,4BAAlE;AACA,OAAOC,OAAP,IAAkBC,cAAlB,EAAkCC,QAAlC,QAAkD,mBAAlD;AACA,SACEC,6BADF,EAEEC,4BAFF,QAGO,6CAHP;AAIA,OAAO,KAAKC,UAAZ,MAA4B,wBAA5B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AAGA,SAASC,sBAAT,QAAuC,2CAAvC;AACA,OAAOC,qBAAP,MAAkC,6CAAlC;AACA,SAAsBC,gBAAtB,QAA8C,yBAA9C;AAGA,IAAMC,gBAAgB,GAAG3C,KAAK,CAAC;AAC7B4C,EAAAA,eAAe,EAAE,SADY;AAE7BC,EAAAA,aAAa,EAAE,MAFc;AAG7BC,EAAAA,SAAS,EAAE;AAHkB,CAAD,CAA9B;AAMA,IAAMC,aAAa,GAAG/C,KAAK,CAAC;AAC1B4C,EAAAA,eAAe,EAAE,SADS;AAE1B;AACA;AACAI,EAAAA,OAAO,EAAE,cAJiB;AAK1BF,EAAAA,SAAS,EAAE;AALe,CAAD,CAA3B;AAQA,IAAMG,aAAa,GAAGjD,KAAK,CAAC;AAC1BkD,EAAAA,SAAS,EAAE,mBADe;AAE1BC,EAAAA,SAAS,EAAE,QAFe;AAG1BL,EAAAA,SAAS,EAAE,KAHe;AAI1BM,EAAAA,YAAY,EAAE;AAJY,CAAD,CAA3B;AAOA,IAAMC,eAAe,GAAGrD,KAAK,CAAC;AAC5BsD,EAAAA,MAAM,EAAE,OADoB;AAE5BC,EAAAA,WAAW,EAAE,CAFe;AAG5BH,EAAAA,YAAY,EAAE,EAHc;AAI5BN,EAAAA,SAAS,EAAE;AAJiB,CAAD,CAA7B;AAOA,IAAMU,eAAe,GAAGxD,KAAK,CAAC;AAC5ByD,EAAAA,KAAK,EAAE,KADqB;AAE5BN,EAAAA,SAAS,EAAE;AAFiB,CAAD,CAA7B;AAKA,IAAMO,4BAA4B,GAAG1D,KAAK,CAAC;AACzC2D,EAAAA,OAAO,EAAE,cADgC;AAEzCC,EAAAA,aAAa,EAAE;AAF0B,CAAD,CAA1C,C,CAKA;AACA;AACA;;AACA,IAAMC,OAAO,GAAG,EAAhB;AAEA,IAAMC,0BAA0B,GAAG9D,KAAK,CAAC;AACvC2D,EAAAA,OAAO,EAAE,cAD8B;AAEvCI,EAAAA,QAAQ,EAAE,mBAF6B;AAGvCC,EAAAA,QAAQ,EAAE,QAH6B;AAIvCC,EAAAA,YAAY,EAAE,UAJyB;AAKvCL,EAAAA,aAAa,EAAE,QALwB;AAMvCM,EAAAA,UAAU,EAAE;AAN2B,CAAD,CAAxC;IASKC,I;;WAAAA,I;AAAAA,EAAAA,I,CAAAA,I;AAAAA,EAAAA,I,CAAAA,I;AAAAA,EAAAA,I,CAAAA,I;AAAAA,EAAAA,I,CAAAA,I;AAAAA,EAAAA,I,CAAAA,I;GAAAA,I,KAAAA,I;;AA4BL,WAAaC,YAAb;AAAA;;AAAA;;AAGE;AAGA,wBAAYC,KAAZ,EAAkC;AAAA;;AAAA;;AAChC,8BAAMA,KAAN;AADgC,UAL1BC,iBAK0B,GAL4BtF,KAAK,CAACuF,SAAN,EAK5B;AAAA,UAJ1BC,QAI0B,GAJf,IAAI/D,gBAAJ,EAIe;;AAAA,UAoClCgE,mBApCkC,GAoCZ,UAACC,SAAD,EAAwB;AAC5C;AACA,UAAMC,kBAAkB,GAAG1C,cAAc,CAAC2C,QAAf,CAAwB1C,QAAQ,CAAC2C,YAAjC,CAA3B;;AACA,UAAIF,kBAAJ,EAAwB;AACtB,eAAOG,MAAM,CAACH,kBAAD,CAAb;AACD,OAL2C,CAO5C;;;AACA,aAAOD,SAAS,GAAG/D,mBAAmB,CAACoE,OAAvB,GAAiCpE,mBAAmB,CAACqE,MAArE;AACD,KA7CiC;;AAAA,UA+ClCC,IA/CkC,GA+C3B,YAAM;AACX,YAAKT,QAAL,CAAcU,SAAd;;AACA,YAAKV,QAAL,CACGW,QADH,CACY,YADZ,EAC0B/E,GAAG,CAACgF,aAAJ,EAD1B,EAEGC,IAFH,CAEQ,UAAAC,kBAAkB,EAAI;AAC1B,YAAMC,WAAW,GAAGrF,cAAc,CAACsF,WAAf,GAA6BC,OAA7B,CAAqCC,MAArC,CAA4C,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,EAAF,KAASnE,OAAO,CAACoE,UAAR,CAAmBD,EAAhC;AAAA,SAA7C,CAApB;AACA,YAAME,aAA8B,GAAGR,kBAAkB,CAACS,IAAnB,CACpCL,MADoC,CAC7B,UAAAM,EAAE,EAAI;AACZ,iBAAOT,WAAW,CAACU,MAAZ,KAAuB,CAAvB,IAA4BV,WAAW,CAACW,IAAZ,CAAiB,UAAAP,CAAC;AAAA,mBAAIK,EAAE,CAACG,IAAH,CAAQC,QAAR,CAAiBT,CAAC,CAACU,KAAnB,CAAJ;AAAA,WAAlB,CAAnC;AACD,SAHoC,EAIpCC,GAJoC,CAIhC,UAAAN,EAAE,EAAI;AACT,cAAMO,QAAQ,GAAG,MAAKC,KAAL,CAAWC,UAAX,CAAsBC,IAAtB,CAA2B,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACR,IAAL,KAAcH,EAAE,CAACG,IAArB;AAAA,WAA/B,CAAjB;;AACA,iBAAO;AACLA,YAAAA,IAAI,EAAEH,EAAE,CAACG,IADJ;AAELS,YAAAA,MAAM,EAAEL,QAAQ,GAAGA,QAAQ,CAACK,MAAZ,GAAqBC,SAFhC;AAGLC,YAAAA,SAAS,EAAEP,QAAQ,GAAGA,QAAQ,CAACO,SAAZ,GAAwBD,SAHtC;AAILE,YAAAA,OAAO,EAAER,QAAQ,GAAGA,QAAQ,CAACQ,OAAZ,GAAsBF,SAJlC;AAKLG,YAAAA,YAAY,EAAET,QAAQ,GAAGA,QAAQ,CAACS,YAAZ,GAA2BH,SAL5C;AAMLI,YAAAA,WAAW,EAAEV,QAAQ,GAAGA,QAAQ,CAACU,WAAZ,GAA0BJ,SAN1C;AAOLK,YAAAA,MAAM,EAAElB,EAAE,CAACkB;AAPN,WAAP;AASD,SAfoC,CAAvC;AAgBA,YAAMC,WAAW,GAAGhH,YAAY,CAACiH,sBAAb,EAApB;AACA,YAAMC,SAAS,GAAGlH,YAAY,CAACmH,gBAAb,CAA8B9F,KAAK,CAAC+F,UAApC,CAAlB;AACA,YAAMC,IAAI,GAAG5G,eAAe,CAAC6G,mBAAhB,EAAb;;AACA,YAAMC,WAAW,GAAG,MAAKjD,mBAAL,CAAyBqB,aAAa,CAACG,MAAd,GAAuB,EAAhD,CAApB,CArB0B,CAuB1B;;;AACA,cAAK0B,QAAL,CACE,UAAAC,SAAS,EAAI;AACX,iBAAO;AACLJ,YAAAA,IAAI,EAAEA,IADD;AAELf,YAAAA,UAAU,EAAEjF,KAAK,CAACqG,QAAN,CAAe/B,aAAf,EAA8BuB,SAA9B,EAAyCF,WAAzC,CAFP;AAGLO,YAAAA,WAAW,EAAEA,WAHR;AAILI,YAAAA,gBAAgB,EAAEF,SAAS,CAACE,gBAJvB;AAKLC,YAAAA,QAAQ,EAAEH,SAAS,CAACG,QALf;AAMLC,YAAAA,QAAQ,EAAEJ,SAAS,CAACI;AANf,WAAP;AAQD,SAVH,EAWE,YAAM;AACJ,gBAAKC,WAAL,CAAiBd,WAAjB,EAA8BE,SAA9B,EAAyCG,IAAzC;;AACA,gBAAKU,QAAL,CAAcf,WAAd,EAA2BE,SAA3B;;AACA,gBAAKc,gBAAL,CAAsBhB,WAAtB,EAAmCE,SAAnC;;AACA,gBAAKe,gBAAL;;AACA,cAAIV,WAAW,KAAK/G,mBAAmB,CAACoE,OAAxC,EAAiD;AAC/C,kBAAKsD,YAAL;AACD;AACF,SAnBH;AAqBD,OA/CH,EAgDGC,KAhDH,CAgDS,UAAAC,eAAe,EAAI;AACxB,YAAI,CAACA,eAAe,CAACC,UAArB,EAAiC;AAC/B,gBAAKC,gBAAL,CAAsB,gCAAtB,EAAwDF,eAAxD;AACD;AACF,OApDH;AAqDD,KAtGiC;;AAAA,UA2TlCG,IA3TkC,GA2T3B,UAACrB,SAAD,EAAsCF,WAAtC,EAA+D;AACpE,UAAMwB,MAAM,GAAGnH,KAAK,CAACqG,QAAN,CAAe,MAAKrB,KAAL,CAAWC,UAA1B,EAAsCY,SAAtC,EAAiDF,WAAjD,CAAf;;AACA,YAAKQ,QAAL,CAAc;AAAElB,QAAAA,UAAU,EAAEkC;AAAd,OAAd;AACD,KA9TiC;;AAAA,UAgUlCC,cAhUkC,GAgUjB,UAACC,IAAD,EAA+B;AAC9C,YAAKlB,QAAL,CAAc;AAAED,QAAAA,WAAW,EAAEmB;AAAf,OAAd;;AACA5G,MAAAA,cAAc,CAAC6G,QAAf,CAAwB5G,QAAQ,CAAC2C,YAAjC,EAA+CkE,MAAM,CAACF,IAAD,CAArD;;AACA,UAAIA,IAAI,KAAKlI,mBAAmB,CAACqE,MAAjC,EAAyC;AACvC;AACA,cAAKqD,YAAL;AACD;AACF,KAvUiC;;AAAA,UAyUlCW,gBAzUkC,GAyUf,UAAChD,EAAD,EAAgC;AACjD,aACE,CAAC,CAACA,EAAE,CAACY,MAAL,IACAZ,EAAE,CAACY,MAAH,CAAUqC,OAAV,CAAkBhD,MAAlB,GACED,EAAE,CAACY,MAAH,CAAUsC,SAAV,CAAoBjD,MADtB,GAEED,EAAE,CAACY,MAAH,CAAUuC,SAAV,CAAoBlD,MAFtB,GAGED,EAAE,CAACY,MAAH,CAAUwC,YAAV,CAAuBnD,MAHzB,KAIE,CANJ;AAQD,KAlViC;;AAAA,UAoVlCoD,IApVkC,GAoV3B,UAACC,QAAD,EAAiBC,SAAjB,EAAoCC,SAApC,EAA0D;AAC/D,UAAIC,WAAW,GAAG,EAAlB;;AACA,cAAQH,QAAR;AACE,aAAKnF,IAAI,CAACuF,KAAV;AACED,UAAAA,WAAW,0CAAmCF,SAAnC,wBAA0DC,SAA1D,CAAX;AACA;;AACF,aAAKrF,IAAI,CAACwF,YAAV;AACEF,UAAAA,WAAW,GAAG,WAAI9H,KAAK,CAACgI,YAAV,oBAAuCJ,SAArD;AACA;;AACF,aAAKpF,IAAI,CAACyF,SAAV;AACEH,UAAAA,WAAW,GAAG,WAAI9H,KAAK,CAACiI,SAAV,oBAAoCL,SAAlD;AACA;;AACF,aAAKpF,IAAI,CAAC0F,QAAV;AACEJ,UAAAA,WAAW,GAAG,WAAI9H,KAAK,CAACkI,QAAV,oBAAmCN,SAAjD;AACA;;AACF,aAAKpF,IAAI,CAAC2F,YAAV;AACEL,UAAAA,WAAW,GAAG,WAAI9H,KAAK,CAACoI,KAAV,oBAAgCR,SAA9C;AACA;;AACF,gBAhBF,CAiBE;;AAjBF;;AAmBAvH,MAAAA,OAAO,CAACgI,IAAR,CAAaP,WAAb;AACD,KA1WiC;;AAAA,UA4WlCQ,mBA5WkC,GA4WZ,UAACC,MAAD,EAAsD;AAC1E;AACA;AACA,UAAMC,gBAA2C,GAAG,CAClD;AACEC,QAAAA,OAAO,EAAE,IADX;AAEEC,QAAAA,WAAW,EAAE,KAFf;AAGEC,QAAAA,UAAU,EAAE,KAHd;AAIEC,QAAAA,KAAK,EAAE,MAJT;AAKEC,QAAAA,QAAQ,EAAE,CACR;AACEJ,UAAAA,OAAO,EAAE,IADX;AAEEC,UAAAA,WAAW,EAAE,KAFf;AAGEC,UAAAA,UAAU,EAAE,KAHd;AAIEC,UAAAA,KAAK,EAAE,OAJT;AAKEE,UAAAA,MAAM,EAAE,gBAACzE,EAAD;AAAA,mBAAgB,MAAKqD,IAAL,CAAUlF,IAAI,CAACuF,KAAf,EAAsB1D,EAAtB,EAA0B,MAAKQ,KAAL,CAAWgB,IAArC,CAAhB;AAAA;AALV,SADQ,EAQR;AACE4C,UAAAA,OAAO,EAAE,IADX;AAEEC,UAAAA,WAAW,EAAE,KAFf;AAGEC,UAAAA,UAAU,EAAE,KAHd;AAIEC,UAAAA,KAAK,EAAE,cAJT;AAKEE,UAAAA,MAAM,EAAE,gBAACzE,EAAD;AAAA,mBAAgB,MAAKqD,IAAL,CAAUlF,IAAI,CAACwF,YAAf,EAA6B3D,EAA7B,EAAiC,MAAKQ,KAAL,CAAWgB,IAA5C,CAAhB;AAAA;AALV,SARQ,EAeR;AACE4C,UAAAA,OAAO,EAAE,IADX;AAEEC,UAAAA,WAAW,EAAE,KAFf;AAGEC,UAAAA,UAAU,EAAE,KAHd;AAIEC,UAAAA,KAAK,EAAE,WAJT;AAKEE,UAAAA,MAAM,EAAE,gBAACzE,EAAD;AAAA,mBAAgB,MAAKqD,IAAL,CAAUlF,IAAI,CAACyF,SAAf,EAA0B5D,EAA1B,EAA8B,MAAKQ,KAAL,CAAWgB,IAAzC,CAAhB;AAAA;AALV,SAfQ,EAsBR;AACE4C,UAAAA,OAAO,EAAE,IADX;AAEEC,UAAAA,WAAW,EAAE,KAFf;AAGEC,UAAAA,UAAU,EAAE,KAHd;AAIEC,UAAAA,KAAK,EAAE,UAJT;AAKEE,UAAAA,MAAM,EAAE,gBAACzE,EAAD;AAAA,mBAAgB,MAAKqD,IAAL,CAAUlF,IAAI,CAAC0F,QAAf,EAAyB7D,EAAzB,EAA6B,MAAKQ,KAAL,CAAWgB,IAAxC,CAAhB;AAAA;AALV,SAtBQ,EA6BR;AACE4C,UAAAA,OAAO,EAAE,IADX;AAEEC,UAAAA,WAAW,EAAE,KAFf;AAGEC,UAAAA,UAAU,EAAE,KAHd;AAIEC,UAAAA,KAAK,EAAE,cAJT;AAKEE,UAAAA,MAAM,EAAE,gBAACzE,EAAD;AAAA,mBAAgB,MAAKqD,IAAL,CAAUlF,IAAI,CAAC2F,YAAf,EAA6B9D,EAA7B,EAAiC,MAAKQ,KAAL,CAAWgB,IAA5C,CAAhB;AAAA;AALV,SA7BQ;AALZ,OADkD,CAApD,CAH0E,CAgD1E;AACA;AACA;;AACA,UAAIkD,QAAQ,GAAG,KAAf;;AACA,UACE,MAAKlE,KAAL,CAAWmE,WAAX,IACA,MAAKnE,KAAL,CAAWmE,WAAX,CAAuBT,MAAM,CAAC/D,IAA9B,CADA,IAEA,MAAKK,KAAL,CAAWmE,WAAX,CAAuBT,MAAM,CAAC/D,IAA9B,EAAoC3D,sBAApC,CAHF,EAIE;AACA,YAAMoI,kBAAkB,GAAG,MAAKpE,KAAL,CAAWmE,WAAX,CAAuBT,MAAM,CAAC/D,IAA9B,EAAoC3D,sBAApC,CAA3B;AACAkI,QAAAA,QAAQ,GAAGE,kBAAkB,CAACC,MAAnB,IAA6BD,kBAAkB,CAACE,MAAhD,IAA0DF,kBAAkB,CAACG,MAAxF;AACD;;AAED,UAAInJ,YAAY,CAACoJ,cAAb,KAAgCd,MAAM,CAAC/D,IAA3C,EAAiD;AAAA;;AAC/C,YAAIvE,YAAY,CAACqJ,iBAAb,CAA+BC,oBAA/B,IAAuD,CAACtJ,YAAY,CAACqJ,iBAAb,CAA+BE,kBAA3F,EAA+G;AAC7GhB,UAAAA,gBAAgB,CAACH,IAAjB,CAAsB;AACpBI,YAAAA,OAAO,EAAE,KADW;AAEpBC,YAAAA,WAAW,EAAE,IAFO;AAGpBC,YAAAA,UAAU,EAAE;AAHQ,WAAtB;AAKA,cAAMc,YAAY,GAAG;AACnBhB,YAAAA,OAAO,EAAE,KADU;AAEnBC,YAAAA,WAAW,EAAE,KAFM;AAGnBC,YAAAA,UAAU,EAAE,CAACI,QAHM;AAInBH,YAAAA,KAAK,EAAE,uBAJY;AAKnBE,YAAAA,MAAM,EAAE,gBAACzE,EAAD;AAAA,qBAAgB,MAAKqF,wBAAL,CAA8BrF,EAA9B,EAAkC,IAAlC,EAAwC,KAAxC,CAAhB;AAAA;AALW,WAArB;AAOA,cAAMsF,aAAa,GAAG;AACpBlB,YAAAA,OAAO,EAAE,KADW;AAEpBC,YAAAA,WAAW,EAAE,KAFO;AAGpBC,YAAAA,UAAU,EAAE,CAACI,QAHO;AAIpBH,YAAAA,KAAK,EAAE,wBAJa;AAKpBE,YAAAA,MAAM,EAAE,gBAACzE,EAAD;AAAA,qBAAgB,MAAKqF,wBAAL,CAA8BrF,EAA9B,EAAkC,KAAlC,EAAyC,KAAzC,CAAhB;AAAA;AALY,WAAtB;AAOA,cAAMuF,YAAY,GAAG;AACnBnB,YAAAA,OAAO,EAAE,KADU;AAEnBC,YAAAA,WAAW,EAAE,KAFM;AAGnBC,YAAAA,UAAU,EAAE,CAACI,QAHM;AAInBH,YAAAA,KAAK,EAAE,uBAJY;AAKnBE,YAAAA,MAAM,EAAE,gBAACzE,EAAD;AAAA,qBAAgB,MAAKqF,wBAAL,CAA8BrF,EAA9B,EAAkC,KAAlC,EAAyC,IAAzC,CAAhB;AAAA;AALW,WAArB;;AAOA,cACEkE,MAAM,CAAChD,MAAP,KACEgD,MAAM,CAAChD,MAAP,CAActF,YAAY,CAAC4J,WAAb,CAAyBC,kBAAvC,KACAvB,MAAM,CAAChD,MAAP,CAActF,YAAY,CAAC4J,WAAb,CAAyBC,kBAAvC,MAA+D,SADhE,IAECvB,MAAM,CAAChD,MAAP,CAActF,YAAY,CAAC4J,WAAb,CAAyBE,iBAAvC,CAHF,CADF,EAKE;AACAvB,YAAAA,gBAAgB,CAACH,IAAjB,CAAsBsB,aAAtB;AACAnB,YAAAA,gBAAgB,CAACH,IAAjB,CAAsBuB,YAAtB;AACD,WARD,MAQO,IACLrB,MAAM,CAAChD,MAAP,IACAgD,MAAM,CAAChD,MAAP,CAActF,YAAY,CAAC4J,WAAb,CAAyBC,kBAAvC,CADA,IAEAvB,MAAM,CAAChD,MAAP,CAActF,YAAY,CAAC4J,WAAb,CAAyBC,kBAAvC,MAA+D,UAH1D,EAIL;AACAtB,YAAAA,gBAAgB,CAACH,IAAjB,CAAsBoB,YAAtB;AACAjB,YAAAA,gBAAgB,CAACH,IAAjB,CAAsBuB,YAAtB;AACD,WAPM,MAOA;AACLpB,YAAAA,gBAAgB,CAACH,IAAjB,CAAsBoB,YAAtB;AACD;;AACDjB,UAAAA,gBAAgB,CAACH,IAAjB,CAAsB;AACpBI,YAAAA,OAAO,EAAE,KADW;AAEpBC,YAAAA,WAAW,EAAE,IAFO;AAGpBC,YAAAA,UAAU,EAAE;AAHQ,WAAtB;AAKD;;AACD,YACE1I,YAAY,CAACqJ,iBAAb,CAA+BE,kBAA/B,IACAvJ,YAAY,CAAC+J,mBAAb,CAAiCC,OADjC,IAEAhK,YAAY,CAAC+J,mBAAb,CAAiCE,OAHnC,EAIE;AACA1B,UAAAA,gBAAgB,CAACH,IAAjB,CAAsB;AACpBI,YAAAA,OAAO,EAAE,KADW;AAEpBC,YAAAA,WAAW,EAAE,IAFO;AAGpBC,YAAAA,UAAU,EAAE;AAHQ,WAAtB;AAKA,cAAMwB,aAAa,GAAG;AACpB1B,YAAAA,OAAO,EAAE,KADW;AAEpBC,YAAAA,WAAW,EAAE,KAFO;AAGpBC,YAAAA,UAAU,EAAE,CAACI,QAHO;AAIpBH,YAAAA,KAAK,EAAE,gBAAgB3I,YAAY,CAAC+J,mBAAb,CAAiCC,OAAjD,GAA2D,WAJ9C;AAKpBnB,YAAAA,MAAM,EAAE,gBAACzE,EAAD;AAAA,qBAAgB,MAAK+F,uBAAL,CAA6B/F,EAA7B,EAAiCpE,YAAY,CAAC+J,mBAAb,CAAiCC,OAAlE,CAAhB;AAAA;AALY,WAAtB;AAOA,cAAMI,eAAe,GAAG;AACtB5B,YAAAA,OAAO,EAAE,KADa;AAEtBC,YAAAA,WAAW,EAAE,KAFS;AAGtBC,YAAAA,UAAU,EAAE,CAACI,QAHS;AAItBH,YAAAA,KAAK,EAAE,kBAAkB3I,YAAY,CAAC+J,mBAAb,CAAiCE,OAAnD,GAA6D,WAJ9C;AAKtBpB,YAAAA,MAAM,EAAE,gBAACzE,EAAD;AAAA,qBAAgB,MAAK+F,uBAAL,CAA6B/F,EAA7B,EAAiCpE,YAAY,CAAC+J,mBAAb,CAAiCE,OAAlE,CAAhB;AAAA;AALc,WAAxB;;AAOA,cACE3B,MAAM,CAAChD,MAAP,KACEgD,MAAM,CAAChD,MAAP,CAActF,YAAY,CAAC4J,WAAb,CAAyBE,iBAAvC,KACAxB,MAAM,CAAChD,MAAP,CAActF,YAAY,CAAC4J,WAAb,CAAyBE,iBAAvC,MAA8D9J,YAAY,CAAC+J,mBAAb,CAAiCE,OADhG,IAEE3B,MAAM,CAAChD,MAAP,CAActF,YAAY,CAAC4J,WAAb,CAAyBC,kBAAvC,KACCvB,MAAM,CAAChD,MAAP,CAActF,YAAY,CAAC4J,WAAb,CAAyBC,kBAAvC,MAA+D,SAJnE,CADF,EAME;AACAtB,YAAAA,gBAAgB,CAACH,IAAjB,CAAsB8B,aAAtB;AACA3B,YAAAA,gBAAgB,CAACH,IAAjB,CAAsB;AACpBI,cAAAA,OAAO,EAAE,KADW;AAEpBC,cAAAA,WAAW,EAAE,IAFO;AAGpBC,cAAAA,UAAU,EAAE;AAHQ,aAAtB;AAKD,WAbD,MAaO,IACLJ,MAAM,CAAChD,MAAP,IACAgD,MAAM,CAAChD,MAAP,CAActF,YAAY,CAAC4J,WAAb,CAAyBE,iBAAvC,CADA,IAEAxB,MAAM,CAAChD,MAAP,CAActF,YAAY,CAAC4J,WAAb,CAAyBE,iBAAvC,MAA8D9J,YAAY,CAAC+J,mBAAb,CAAiCC,OAH1F,EAIL;AACAzB,YAAAA,gBAAgB,CAACH,IAAjB,CAAsBgC,eAAtB;AACA7B,YAAAA,gBAAgB,CAACH,IAAjB,CAAsB;AACpBI,cAAAA,OAAO,EAAE,KADW;AAEpBC,cAAAA,WAAW,EAAE,IAFO;AAGpBC,cAAAA,UAAU,EAAE;AAHQ,aAAtB;AAKD;AACF;;AACD,YAAM2B,GAAG,GAAG,wBAAA/B,MAAM,CAACgC,WAAP,4EAAoBC,qBAApB,KAA6C,EAAzD;AACA,YAAMC,sBAAsB,GAAG;AAC7BhC,UAAAA,OAAO,EAAE,KADoB;AAE7BC,UAAAA,WAAW,EAAE,KAFgB;AAG7BC,UAAAA,UAAU,EAAE,CAACI,QAHgB;AAI7BH,UAAAA,KAAK,EAAE,CAAC0B,GAAG,CAAChG,MAAJ,KAAe,CAAf,GAAmB,SAAnB,GAA+B,QAAhC,IAA4C,mBAJtB;AAK7BwE,UAAAA,MAAM,EAAE,gBAACzE,EAAD,EAAgB;AACtB,gBAAIiG,GAAG,CAAChG,MAAJ,KAAe,CAAnB,EAAsB;AACpB,oBAAKoG,uBAAL,CAA6BrG,EAA7B;AACD,aAFD,MAEO;AACL,oBAAKsG,uBAAL,CAA6BtG,EAA7B;AACD;AACF;AAX4B,SAA/B;AAaA,YAAMuG,yBAAyB,GAAG;AAChCnC,UAAAA,OAAO,EAAE,KADuB;AAEhCC,UAAAA,WAAW,EAAE,KAFmB;AAGhCC,UAAAA,UAAU,EAAE,CAACI,QAHmB;AAIhCH,UAAAA,KAAK,EAAE,yBAJyB;AAKhCE,UAAAA,MAAM,EAAE,gBAACzE,EAAD;AAAA,mBAAgB,MAAKwG,uBAAL,CAA6BxG,EAA7B,CAAhB;AAAA;AALwB,SAAlC;AAOAmE,QAAAA,gBAAgB,CAACH,IAAjB,CAAsBoC,sBAAtB;;AACA,YAAIH,GAAG,CAAChG,MAAJ,GAAa,CAAjB,EAAoB;AAClBkE,UAAAA,gBAAgB,CAACH,IAAjB,CAAsBuC,yBAAtB;AACD;AACF,OA/HD,MA+HO,IAAI,MAAK/F,KAAL,CAAWiG,YAAX,CAAwBxG,MAAxB,GAAiC,CAArC,EAAwC;AAC7C;AACAkE,QAAAA,gBAAgB,CAACH,IAAjB,CAAsB;AACpBI,UAAAA,OAAO,EAAE,KADW;AAEpBC,UAAAA,WAAW,EAAE,IAFO;AAGpBC,UAAAA,UAAU,EAAE;AAHQ,SAAtB;;AAKA,cAAK9D,KAAL,CAAWiG,YAAX,CAAwBC,OAAxB,CAAgC,UAAAC,IAAI,EAAI;AACtC,cAAMC,gBAAgB,GAAG;AACvBxC,YAAAA,OAAO,EAAE,KADc;AAEvBC,YAAAA,WAAW,EAAE,KAFU;AAGvBC,YAAAA,UAAU,EAAE,KAHW;AAIvBuC,YAAAA,UAAU,EAAE,IAJW;AAKvBtC,YAAAA,KAAK,EAAEoC,IAAI,CAACxG,IALW;AAMvBsE,YAAAA,MAAM,EAAE,gBAACqC,GAAD,EAAiB;AACvBC,cAAAA,MAAM,CAACC,IAAP,CAAYL,IAAI,CAACM,GAAjB,EAAsB,QAAtB;;AACA,oBAAKhI,IAAL;AACD;AATsB,WAAzB;AAWAkF,UAAAA,gBAAgB,CAACH,IAAjB,CAAsB4C,gBAAtB;AACD,SAbD;AAcD;;AAED,aAAOzC,gBAAP;AACD,KAhkBiC;;AAAA,UAkkBlCkB,wBAlkBkC,GAkkBP,UAACrF,EAAD,EAAakH,MAAb,EAA8BC,MAA9B,EAAwD;AACjF,UAAMC,SAAS,GAAGhL,4BAA4B,CAAC8K,MAAD,EAASC,MAAT,EAAiB,IAAjB,CAA9C;AACA/M,MAAAA,GAAG,CAACiN,eAAJ,CAAoBrH,EAApB,EAAwBoH,SAAxB,EACG/H,IADH,CACQ,UAAApF,CAAC,EAAI;AACToC,QAAAA,UAAU,CAACiL,GAAX,CAAe,eAAetH,EAAf,GAAoB,UAAnC,EAA+C,SAA/C,EAA0D1D,WAAW,CAACiL,OAAtE;;AACA,cAAKtI,IAAL;AACD,OAJH,EAKGqD,KALH,CAKS,UAAAkF,KAAK,EAAI;AACdnL,QAAAA,UAAU,CAACoL,QAAX,CAAoB,gCAAgCzH,EAApD,EAAwDwH,KAAxD;AACD,OAPH;AAQD,KA5kBiC;;AAAA,UA8kBlCzB,uBA9kBkC,GA8kBR,UAAC/F,EAAD,EAAa0H,QAAb,EAAwC;AAChE,UAAMN,SAAS,GAAGhL,4BAA4B,CAAC,KAAD,EAAQ,KAAR,EAAesL,QAAf,CAA9C;AACAtN,MAAAA,GAAG,CAACiN,eAAJ,CAAoBrH,EAApB,EAAwBoH,SAAxB,EACG/H,IADH,CACQ,UAAApF,CAAC,EAAI;AACToC,QAAAA,UAAU,CAACiL,GAAX,CAAe,eAAetH,EAAf,GAAoB,UAAnC,EAA+C,SAA/C,EAA0D1D,WAAW,CAACiL,OAAtE;;AACA,cAAKtI,IAAL;AACD,OAJH,EAKGqD,KALH,CAKS,UAAAkF,KAAK,EAAI;AACdnL,QAAAA,UAAU,CAACoL,QAAX,CAAoB,gCAAgCzH,EAApD,EAAwDwH,KAAxD;AACD,OAPH;AAQD,KAxlBiC;;AAAA,UA0lBlCnB,uBA1lBkC,GA0lBR,UAACrG,EAAD,EAAgB;AACxC,YAAK2H,8BAAL,CAAoC3H,EAApC,EAAwC,EAAxC,EAA4C,KAA5C;AACD,KA5lBiC;;AAAA,UA8lBlCsG,uBA9lBkC,GA8lBR,UAACtG,EAAD,EAAgB;AACxC,YAAK2B,QAAL,CAAc;AACZG,QAAAA,gBAAgB,EAAE,IADN;AAEZC,QAAAA,QAAQ,EAAE/B,EAFE;AAGZgC,QAAAA,QAAQ,EAAE;AAHE,OAAd;AAKD,KApmBiC;;AAAA,UAsmBlCwE,uBAtmBkC,GAsmBR,UAACxG,EAAD,EAAgB;AACxC,YAAK2B,QAAL,CAAc;AACZG,QAAAA,gBAAgB,EAAE,IADN;AAEZC,QAAAA,QAAQ,EAAE/B,EAFE;AAGZgC,QAAAA,QAAQ,EAAE;AAHE,OAAd;AAKD,KA5mBiC;;AAAA,UA8mBlC2F,8BA9mBkC,GA8mBD,UAC/B3H,EAD+B,EAE/BmG,qBAF+B,EAG/BgB,MAH+B,EAItB;AACT,UAAIhB,qBAAqB,CAAClG,MAAtB,GAA+B,CAAnC,EAAsC;AACpC,cAAKzB,QAAL,CACGoJ,WADH,CAEI,6BAFJ,EAGIzB,qBAAqB,CAAC7F,GAAtB,CAA0B,UAAAuH,EAAE;AAAA,iBAAIzN,GAAG,CAAC0N,uBAAJ,CAA4B9H,EAA5B,EAAgC,uBAAhC,EAAyD6H,EAAE,CAACE,QAAH,CAAY5H,IAArE,CAAJ;AAAA,SAA5B,CAHJ,EAKGd,IALH,CAKQ,UAAApF,CAAC,EAAI;AACT,cAAI,CAACkN,MAAL,EAAa;AACX,kBAAKa,2BAAL,CAAiChI,EAAjC,EAAqC,MAAKf,IAA1C;AACD,WAFD,MAEO;AACL,kBAAKA,IAAL;AACD;AACF,SAXH,EAYGqD,KAZH,CAYS,UAAA2F,WAAW,EAAI;AACpB,cAAI,CAACA,WAAW,CAACzF,UAAjB,EAA6B;AAC3BnG,YAAAA,UAAU,CAACoL,QAAX,CAAoB,yCAApB,EAA+DQ,WAA/D;AACD;AACF,SAhBH;AAiBD,OAlBD,MAkBO;AACL,YAAI,CAACd,MAAL,EAAa;AACX,gBAAKa,2BAAL,CAAiChI,EAAjC,EAAqC,MAAKf,IAA1C;AACD,SAFD,MAEO;AACL5C,UAAAA,UAAU,CAAC6L,OAAX,CAAmB,eAAelI,EAAf,GAAoB,2CAAvC;AACD;AACF;AACF,KA5oBiC;;AAAA,UA8oBlCgI,2BA9oBkC,GA8oBJ,UAAChI,EAAD,EAAamI,QAAb,EAAsC;AAClE,UAAMC,eAAe,GAAG,IAAI7L,eAAJ,EAAxB;AACA6L,MAAAA,eAAe,CAACC,EAAhB,CAAmB,cAAnB,EAAmC,YAAM;AACvC,YAAMpC,GAAG,GAAG9J,6BAA6B,CAAC6D,EAAD,EAAKoI,eAAe,CAACE,eAArB,CAAzC;;AACA,cAAK9J,QAAL,CACGoJ,WADH,CAEI,6BAFJ,EAGI3B,GAAG,CAAC3F,GAAJ,CAAQ,UAAAuH,EAAE;AAAA,iBAAIzN,GAAG,CAACmO,uBAAJ,CAA4BvI,EAA5B,EAAgC,uBAAhC,EAAyDwI,IAAI,CAACC,SAAL,CAAeZ,EAAf,CAAzD,CAAJ;AAAA,SAAV,CAHJ,EAKGxI,IALH,CAKQ,UAAAqJ,OAAO,EAAI;AACf,cAAIA,OAAO,CAACzI,MAAR,GAAiB,CAArB,EAAwB;AACtB5D,YAAAA,UAAU,CAACiL,GAAX,CAAe,uCAAuCtH,EAAvC,GAA4C,aAA3D,EAA0E,SAA1E,EAAqF1D,WAAW,CAACiL,OAAjG;AACD;;AACDY,UAAAA,QAAQ;AACT,SAVH,EAWG7F,KAXH,CAWS,UAAAqG,WAAW,EAAI;AACpB,cAAI,CAACA,WAAW,CAACnG,UAAjB,EAA6B;AAC3BnG,YAAAA,UAAU,CAACoL,QAAX,CAAoB,yCAApB,EAA+DkB,WAA/D;AACD;AACF,SAfH;AAgBD,OAlBD;AAmBAP,MAAAA,eAAe,CAACC,EAAhB,CAAmB,YAAnB,EAAiC,UAACO,YAAD,EAAiC;AAChE,YAAIA,YAAY,KAAK,EAArB,EAAyB;AACvBA,UAAAA,YAAY,GAAG,mCAAmCA,YAAlD;AACD,SAFD,MAEO;AACLA,UAAAA,YAAY,GAAG,+BAAf;AACD;;AACDvM,QAAAA,UAAU,CAACoL,QAAX,CAAoBmB,YAApB;AACD,OAPD;AAQAR,MAAAA,eAAe,CAACS,iBAAhB,CAAkC,MAAKxK,KAAL,CAAWyK,QAA7C,EAAuD9I,EAAvD;AACD,KA5qBiC;;AAAA,UA8qBlC+I,gBA9qBkC,GA8qBf,YAAM;AACvB,YAAKpH,QAAL,CAAc;AACZG,QAAAA,gBAAgB,EAAE,KADN;AAEZC,QAAAA,QAAQ,EAAE,EAFE;AAGZC,QAAAA,QAAQ,EAAE;AAHE,OAAd;AAKD,KAprBiC;;AAAA,UAsrBlCgH,cAtrBkC,GAsrBjB,YAAM;AACrB,UAAI/C,GAA0B,GAAG,EAAjC;;AACA,WAAK,IAAIgD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAKzI,KAAL,CAAWC,UAAX,CAAsBR,MAA1C,EAAkDgJ,CAAC,EAAnD,EAAuD;AACrD,YAAM/E,MAAM,GAAG,MAAK1D,KAAL,CAAWC,UAAX,CAAsBwI,CAAtB,CAAf;;AACA,YAAI,MAAKzI,KAAL,CAAWC,UAAX,CAAsBwI,CAAtB,EAAyB9I,IAAzB,KAAkC,MAAKK,KAAL,CAAWuB,QAAjD,EAA2D;AAAA;;AACzDkE,UAAAA,GAAG,GAAG,yBAAA/B,MAAM,CAACgC,WAAP,8EAAoBC,qBAApB,KAA6C,EAAnD;AACA;AACD;AACF;;AACD,UAAMpE,QAAQ,GAAG,MAAKvB,KAAL,CAAWuB,QAA5B;AACA,UAAMoF,MAAM,GAAG,MAAK3G,KAAL,CAAWwB,QAAX,KAAwB,QAAvC;;AACA,YAAKL,QAAL,CACE;AACEG,QAAAA,gBAAgB,EAAE,KADpB;AAEEC,QAAAA,QAAQ,EAAE,EAFZ;AAGEC,QAAAA,QAAQ,EAAE;AAHZ,OADF,EAME;AAAA,eAAM,MAAK2F,8BAAL,CAAoC5F,QAApC,EAA8CkE,GAA9C,EAAmDkB,MAAnD,CAAN;AAAA,OANF;AAQD,KAzsBiC;;AAEhC,QAAMxJ,OAAO,GAAG1B,cAAc,CAAC2C,QAAf,CAAwB1C,QAAQ,CAAC2C,YAAjC,CAAhB;AACA,UAAK2B,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXe,MAAAA,IAAI,EAAE5G,eAAe,CAAC6G,mBAAhB,EAFK;AAGXC,MAAAA,WAAW,EAAE/D,OAAO,GAAGmB,MAAM,CAACnB,OAAD,CAAT,GAAqBhD,mBAAmB,CAACqE,MAHlD;AAIX2F,MAAAA,WAAW,EAAE,EAJF;AAKX7C,MAAAA,gBAAgB,EAAE,KALP;AAMXC,MAAAA,QAAQ,EAAE,EANC;AAOXC,MAAAA,QAAQ,EAAE,EAPC;AAQXyE,MAAAA,YAAY,EAAE;AARH,KAAb;AAHgC;AAajC;;AAnBH;AAAA;AAAA,WAqBE,4BAAmByC,SAAnB,EAA6C;AAC3C,UAAIA,SAAS,CAACJ,QAAV,KAAuB,KAAKzK,KAAL,CAAWyK,QAAlC,IAA8CI,SAAS,CAACC,WAAV,KAA0B,KAAK9K,KAAL,CAAW8K,WAAvF,EAAoG;AAClG;AACA;AACA,aAAKlK,IAAL;AACD;AACF;AA3BH;AAAA;AAAA,WA6BE,6BAAoB;AAClB,WAAKmK,gBAAL;AACA,WAAKnK,IAAL;AACD;AAhCH;AAAA;AAAA,WAkCE,gCAAuB;AACrB,WAAKT,QAAL,CAAcU,SAAd;AACD;AApCH;AAAA;AAAA,WAsCE,sBAAa;AACX,aAAO1D,KAAK,CAAC+F,UAAb;AACD;AAxCH;AAAA;AAAA,WA8GE,qBAAYJ,WAAZ,EAAkCE,SAAlC,EAAuEG,IAAvE,EAA2F;AAAA;;AACzF,UAAMsH,QAAQ,GAAG3O,YAAY,CAACkP,eAAb,EAAjB,CADyF,CAEzF;;AACApP,MAAAA,CAAC,CAACqP,KAAF,CAAQ,KAAK9I,KAAL,CAAWC,UAAnB,EAA+B,EAA/B,EAAmCiG,OAAnC,CAA2C,UAAA4C,KAAK,EAAI;AAClD,QAAA,MAAI,CAAC9K,QAAL,CACG+K,eADH,CACmB,cADnB,EACmC1I,SADnC,EAC8C;AAAA,iBAAM,MAAI,CAAC2I,gBAAL,CAAsBF,KAAtB,EAA6BR,QAA7B,EAAuCtH,IAAvC,CAAN;AAAA,SAD9C,EAEGnC,IAFH,CAEQ,YAAM;AACV,UAAA,MAAI,CAACsC,QAAL,CAAc,UAAAC,SAAS,EAAI;AACzB,gBAAI6H,aAAa,GAAG7H,SAAS,CAACnB,UAAV,CAAqBiJ,KAArB,EAApB;;AACA,gBAAIrI,SAAS,CAACzB,EAAV,KAAiB,QAArB,EAA+B;AAC7B6J,cAAAA,aAAa,GAAGjO,KAAK,CAACqG,QAAN,CAAe4H,aAAf,EAA8BpI,SAA9B,EAAyCF,WAAzC,CAAhB;AACD;;AACD,mBAAO;AAAEV,cAAAA,UAAU,EAAEgJ;AAAd,aAAP;AACD,WAND;AAOD,SAVH;AAWD,OAZD;AAaD;AA9HH;AAAA;AAAA,WAgIE,4BAAmB;AAAA;;AACjB,UAAI,CAACrL,YAAY,CAACuL,kBAAlB,EAAsC;AACpCvL,QAAAA,YAAY,CAACuL,kBAAb,GAAkCvP,GAAG,CAACwP,cAAJ,GAAqBvK,IAArB,CAA0B,UAAAwK,QAAQ,EAAI;AACtE,cAAIA,QAAQ,CAACjJ,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,mBAAOC,SAAP;AACD;;AACD,iBAAOgJ,QAAQ,CAAC9J,IAAhB;AACD,SALiC,CAAlC;AAMD;;AACD3B,MAAAA,YAAY,CAACuL,kBAAb,CACGtK,IADH,CACQ,UAAAyK,WAAW,EAAI;AACnB,YAAIA,WAAJ,EAAiB;AACf;AACA,UAAA,MAAI,CAACnI,QAAL,CAAc;AACZ8E,YAAAA,YAAY,EAAEqD,WAAW,CAACC,aAAZ,CAA0BrK,MAA1B,CAAiC,UAAAiH,IAAI;AAAA,qBAAIjK,gBAAgB,CAACsN,OAAjB,CAAyBrD,IAAI,CAACxG,IAA9B,IAAsC,CAAC,CAA3C;AAAA,aAArC;AADF,WAAd;AAGD,SALD,MAKO;AACL,UAAA,MAAI,CAACwB,QAAL,CAAc;AAAE8E,YAAAA,YAAY,EAAE;AAAhB,WAAd;AACD;AACF,OAVH,EAWGnE,KAXH,CAWS,UAAA2H,GAAG,EAAI;AACZ5N,QAAAA,UAAU,CAAC6N,UAAX,iCACK7N,UAAU,CAAC8N,iBAAX,CAA6B,6DAA7B,EAA4FF,GAA5F,CADL;AAEEG,UAAAA,KAAK,EAAE,SAFT;AAGE5I,UAAAA,IAAI,EAAElF,WAAW,CAAC+N,IAHpB;AAIEC,UAAAA,gBAAgB,EAAE;AAJpB;AAMD,OAlBH;AAmBD;AA5JH;AAAA;AAAA,WA8JE,0BAAiBhB,KAAjB,EAAyCR,QAAzC,EAAsEtH,IAAtE,EAA0F;AAAA;;AACxF,UAAM+I,OAAO,GAAGhP,UAAU,CACxBiG,IADwB,EAExBpH,GAAG,CAACoQ,qBAFoB,EAGxBpQ,GAAG,CAACqQ,yBAHoB,EAIxBrQ,GAAG,CAACsQ,0BAJoB,CAA1B;AAMA,aAAOC,OAAO,CAACC,GAAR,CACLtB,KAAK,CAAChJ,GAAN,CAAU,UAAA4D,MAAM,EAAI;AAClB,YAAM2G,aAA6F,GAAGN,OAAO,CAC3GrG,MAAM,CAAC/D,IADoG,EAE3G2I,QAF2G,CAA7G;AAIA,eAAO+B,aAAa,CAACxL,IAAd,CAAmB,UAAAyL,EAAE;AAAA,iBAAK;AAAEC,YAAAA,MAAM,EAAED,EAAV;AAAc5G,YAAAA,MAAM,EAAEA;AAAtB,WAAL;AAAA,SAArB,CAAP;AACD,OAND,CADK,EASJ7E,IATI,CASC,UAAAqJ,OAAO,EAAI;AACfA,QAAAA,OAAO,CAAChC,OAAR,CAAgB,UAAAsE,MAAM,EAAI;AACxB,cAAMC,QAAyB,GAAG;AAChCC,YAAAA,UAAU,EAAE,EADoB;AAEhCjI,YAAAA,OAAO,EAAE,EAFuB;AAGhCE,YAAAA,SAAS,EAAE,EAHqB;AAIhCD,YAAAA,SAAS,EAAE,EAJqB;AAKhCE,YAAAA,YAAY,EAAE;AALkB,WAAlC;AAOA+H,UAAAA,MAAM,CAACC,IAAP,CAAYJ,MAAM,CAACD,MAAnB,EAA2BrE,OAA3B,CAAmC,UAAA2E,IAAI,EAAI;AACzC,gBAAMN,MAAc,GAAGC,MAAM,CAACD,MAAP,CAAcM,IAAd,CAAvB;AACA,gBAAMzK,MAAM,GAAGmK,MAAM,CAACO,eAAP,EAAf;;AACA,gBAAI1K,MAAM,KAAKtG,OAAf,EAAwB;AACtB2Q,cAAAA,QAAQ,CAAChI,OAAT,CAAiBe,IAAjB,CAAsBqH,IAAtB;AACD,aAFD,MAEO,IAAIzK,MAAM,KAAKvG,QAAf,EAAyB;AAC9B4Q,cAAAA,QAAQ,CAAC9H,SAAT,CAAmBa,IAAnB,CAAwBqH,IAAxB;AACD,aAFM,MAEA,IAAIzK,MAAM,KAAKrG,OAAf,EAAwB;AAC7B0Q,cAAAA,QAAQ,CAAC/H,SAAT,CAAmBc,IAAnB,CAAwBqH,IAAxB;AACD,aAFM,MAEA,IAAIzK,MAAM,KAAKpG,SAAf,EAA0B;AAC/ByQ,cAAAA,QAAQ,CAACC,UAAT,CAAoBlH,IAApB,CAAyBqH,IAAzB;AACD,aAFM,MAEA;AACLJ,cAAAA,QAAQ,CAAC7H,YAAT,CAAsBY,IAAtB,CAA2BqH,IAA3B;AACD;AACF,WAdD;AAeAL,UAAAA,MAAM,CAAC9G,MAAP,CAActD,MAAd,GAAuBqK,QAAvB;AACD,SAxBD;AAyBD,OAnCI,EAoCJ3I,KApCI,CAoCE,UAAA2H,GAAG;AAAA,eAAI,MAAI,CAACxH,gBAAL,CAAsB,wBAAtB,EAAgDwH,GAAhD,CAAJ;AAAA,OApCL,CAAP;AAqCD;AA1MH;AAAA;AAAA,WA4ME,wBAAe;AAAA;;AACb,UAAMnB,QAAQ,GAAG3O,YAAY,CAACkP,eAAb,EAAjB,CADa,CAEb;;AACApP,MAAAA,CAAC,CAACqP,KAAF,CAAQ,KAAK9I,KAAL,CAAWC,UAAnB,EAA+B,EAA/B,EAAmCiG,OAAnC,CAA2C,UAAA4C,KAAK,EAAI;AAClD,QAAA,MAAI,CAAC9K,QAAL,CACG+K,eADH,CACmB,eADnB,EACoC1I,SADpC,EAC+C;AAAA,iBAAM,MAAI,CAAC0K,iBAAL,CAAuBjC,KAAvB,EAA8BR,QAA9B,CAAN;AAAA,SAD/C,EAEGzJ,IAFH,CAEQ,YAAM;AACV,UAAA,MAAI,CAACsC,QAAL,CAAc,UAAAC,SAAS,EAAI;AACzB,mBAAO;AAAEnB,cAAAA,UAAU,EAAEmB,SAAS,CAACnB,UAAV,CAAqBiJ,KAArB;AAAd,aAAP;AACD,WAFD;AAGD,SANH;AAOD,OARD;AASD;AAxNH;AAAA;AAAA,WA0NE,2BAAkBJ,KAAlB,EAA0CR,QAA1C,EAA4D;AAAA;;AAC1D,UAAM0C,UAAU,GAAGvQ,2BAA2B,CAAC6N,QAAD,EAAW,EAAX,CAA9C;AACA,UAAM2C,SAA8B,GAAG;AACrChM,QAAAA,OAAO,EAAE,CAAC,eAAD,EAAkB,qBAAlB,CAD4B;AAErCqJ,QAAAA,QAAQ,EAAEA,QAF2B;AAGrC4C,QAAAA,IAAI,EAAEF,UAAU,CAACE,IAHoB;AAIrCC,QAAAA,YAAY,EAAEH,UAAU,CAACG,YAJY;AAKrCC,QAAAA,SAAS,EAAE,SAL0B;AAMrCC,QAAAA,QAAQ,EAAE;AAN2B,OAAvC;AAQA,aAAOlB,OAAO,CAACC,GAAR,CACLtB,KAAK,CAAChJ,GAAN,CAAU,UAAA4D,MAAM,EAAI;AAClB,eAAO9J,GAAG,CAAC0R,mBAAJ,CAAwB5H,MAAM,CAAC/D,IAA/B,EAAqCsL,SAArC,EAAgDpM,IAAhD,CAAqD,UAAAyL,EAAE,EAAI;AAChE5G,UAAAA,MAAM,CAACnD,OAAP,GAAiB+J,EAAE,CAAC/K,IAAH,CAAQgM,aAAzB;AACA7H,UAAAA,MAAM,CAAClD,YAAP,GAAsB8J,EAAE,CAAC/K,IAAH,CAAQiM,mBAA9B;AACA,iBAAO9H,MAAP;AACD,SAJM,CAAP;AAKD,OAND,CADK,EAQL5B,KARK,CAQC,UAAA2H,GAAG;AAAA,eAAI,MAAI,CAACxH,gBAAL,CAAsB,yBAAtB,EAAiDwH,GAAjD,CAAJ;AAAA,OARJ,CAAP;AASD;AA7OH;AAAA;AAAA,WA+OE,kBAAS9I,WAAT,EAA+BE,SAA/B,EAAoE;AAAA;;AAClEpH,MAAAA,CAAC,CAACqP,KAAF,CAAQ,KAAK9I,KAAL,CAAWC,UAAnB,EAA+B,EAA/B,EAAmCiG,OAAnC,CAA2C,UAAA4C,KAAK,EAAI;AAClD,QAAA,MAAI,CAAC9K,QAAL,CACG+K,eADH,CACmB,WADnB,EACgC1I,SADhC,EAC2C;AAAA,iBAAM,MAAI,CAACoL,aAAL,CAAmB3C,KAAnB,CAAN;AAAA,SAD3C,EAEGjK,IAFH,CAEQ,YAAM;AACV,UAAA,MAAI,CAACsC,QAAL,CAAc,UAAAC,SAAS,EAAI;AACzB,gBAAI6H,aAAa,GAAG7H,SAAS,CAACnB,UAAV,CAAqBiJ,KAArB,EAApB;;AACA,gBAAIrI,SAAS,CAACzB,EAAV,KAAiB,MAArB,EAA6B;AAC3B6J,cAAAA,aAAa,GAAGjO,KAAK,CAACqG,QAAN,CAAe4H,aAAf,EAA8BpI,SAA9B,EAAyCF,WAAzC,CAAhB;AACD;;AACD,mBAAO;AAAEV,cAAAA,UAAU,EAAEgJ;AAAd,aAAP;AACD,WAND;AAOD,SAVH;AAWD,OAZD;AAaD;AA7PH;AAAA;AAAA,WA+PE,uBAAcH,KAAd,EAAsC;AAAA;;AACpC,aAAOqB,OAAO,CAACC,GAAR,CACLtB,KAAK,CAAChJ,GAAN,CAAU,UAAA4D,MAAM,EAAI;AAClB,eAAO9J,GAAG,CAAC8R,eAAJ,CAAoBhI,MAAM,CAAC/D,IAA3B,EAAiCd,IAAjC,CAAsC,UAAAyL,EAAE;AAAA,iBAAK;AAAElK,YAAAA,MAAM,EAAEkK,EAAE,CAAC/K,IAAb;AAAmBmE,YAAAA,MAAM,EAAEA;AAA3B,WAAL;AAAA,SAAxC,CAAP;AACD,OAFD,CADK,EAKJ7E,IALI,CAKC,UAAAqJ,OAAO,EAAI;AACfA,QAAAA,OAAO,CAAChC,OAAR,CAAgB,UAAAsE,MAAM,EAAI;AACxBA,UAAAA,MAAM,CAAC9G,MAAP,CAAcpD,SAAd,GAA0B;AACxBF,YAAAA,MAAM,EAAEtF,gBAAgB,CAAC0P,MAAM,CAACpK,MAAP,CAAcA,MAAf,EAAuB,MAAI,CAACvC,KAAL,CAAW8N,UAAlC;AADA,WAA1B;AAGD,SAJD;AAKD,OAXI,EAYJ7J,KAZI,CAYE,UAAA2H,GAAG;AAAA,eAAI,MAAI,CAACxH,gBAAL,CAAsB,4BAAtB,EAAoDwH,GAApD,CAAJ;AAAA,OAZL,CAAP;AAaD;AA7QH;AAAA;AAAA,WA+QE,0BAAiB9I,WAAjB,EAAuCE,SAAvC,EAA4E;AAAA;;AAC1EpH,MAAAA,CAAC,CAACqP,KAAF,CAAQ,KAAK9I,KAAL,CAAWC,UAAnB,EAA+B,EAA/B,EAAmCiG,OAAnC,CAA2C,UAAA4C,KAAK,EAAI;AAClD,QAAA,MAAI,CAAC9K,QAAL,CACG+K,eADH,CACmB,kBADnB,EACuC1I,SADvC,EACkD;AAAA,iBAAM,MAAI,CAACuL,oBAAL,CAA0B9C,KAA1B,CAAN;AAAA,SADlD,EAEGjK,IAFH,CAEQ,YAAM;AACV,UAAA,MAAI,CAACsC,QAAL,CAAc,UAAAC,SAAS,EAAI;AACzB,gBAAI6H,aAAa,GAAG7H,SAAS,CAACnB,UAAV,CAAqBiJ,KAArB,EAApB;;AACA,gBAAIrI,SAAS,CAACzB,EAAV,KAAiB,aAArB,EAAoC;AAClC6J,cAAAA,aAAa,GAAGjO,KAAK,CAACqG,QAAN,CAAe4H,aAAf,EAA8BpI,SAA9B,EAAyCF,WAAzC,CAAhB;AACD;;AACD,mBAAO;AAAEV,cAAAA,UAAU,EAAEgJ;AAAd,aAAP;AACD,WAND;AAOD,SAVH;AAWD,OAZD;AAaD;AA7RH;AAAA;AAAA,WA+RE,8BAAqBH,KAArB,EAA6C;AAAA;;AAC3C,aAAOqB,OAAO,CAACC,GAAR,CACLtB,KAAK,CAAChJ,GAAN,CAAU,UAAA4D,MAAM,EAAI;AAClB,eAAOyG,OAAO,CAACC,GAAR,CAAY,CACjBxQ,GAAG,CAACiS,uBAAJ,CAA4BnI,MAAM,CAAC/D,IAAnC,CADiB,EAEjB/F,GAAG,CAACkS,cAAJ,CAAmBpI,MAAM,CAAC/D,IAA1B,EAAgC,CAAC,uBAAD,CAAhC,EAA2D,KAA3D,EAAkE,EAAlE,EAAsE,EAAtE,CAFiB,CAAZ,EAGJd,IAHI,CAGC,UAAAqJ,OAAO,EAAI;AACjB,iBAAO;AAAEzH,YAAAA,WAAW,EAAEyH,OAAO,CAAC,CAAD,CAAP,CAAW3I,IAA1B;AAAgCmG,YAAAA,WAAW,EAAEwC,OAAO,CAAC,CAAD,CAAP,CAAW3I,IAAxD;AAA8DmE,YAAAA,MAAM,EAAEA;AAAtE,WAAP;AACD,SALM,CAAP;AAMD,OAPD,CADK,EAUJ7E,IAVI,CAUC,UAAAqJ,OAAO,EAAI;AACfA,QAAAA,OAAO,CAAChC,OAAR,CAAgB,UAAAsE,MAAM,EAAI;AACxBA,UAAAA,MAAM,CAAC9G,MAAP,CAAcjD,WAAd,GAA4B+J,MAAM,CAAC/J,WAAnC;AACA+J,UAAAA,MAAM,CAAC9G,MAAP,CAAcgC,WAAd,GAA4B8E,MAAM,CAAC9E,WAAnC;AACD,SAHD;AAID,OAfI,EAgBJ5D,KAhBI,CAgBE,UAAA2H,GAAG;AAAA,eAAI,OAAI,CAACxH,gBAAL,CAAsB,oCAAtB,EAA4DwH,GAA5D,CAAJ;AAAA,OAhBL,CAAP;AAiBD;AAjTH;AAAA;AAAA,WAmTE,4BAAmB;AAAA;;AACjB,WAAKzL,QAAL,CACGW,QADH,CACY,sBADZ,EACoC/E,GAAG,CAACmS,mBAAJ,CAAwB,KAAK/L,KAAL,CAAWC,UAAX,CAAsBH,GAAtB,CAA0B,UAAAN,EAAE;AAAA,eAAIA,EAAE,CAACG,IAAP;AAAA,OAA5B,CAAxB,CADpC,EAEGd,IAFH,CAEQ,UAAA2L,MAAM,EAAI;AACd,QAAA,OAAI,CAACrJ,QAAL,CAAc;AACZgD,UAAAA,WAAW,EAAEqG,MAAM,CAACjL;AADR,SAAd;AAGD,OANH;AAOD;AA3TH;AAAA;AAAA,WA6TE,0BAAiByM,OAAjB,EAAkChF,KAAlC,EAAqD;AACnDrN,MAAAA,YAAY,CAACsS,WAAb,WAA4BD,OAA5B,eAAwCpS,GAAG,CAACsS,cAAJ,CAAmBlF,KAAnB,CAAxC;AACD;AA/TH;AAAA;AAAA,WAitBE,kBAAS;AAAA;;AACP,UAAMmF,EAAE,GAAG,KAAKnM,KAAL,CAAWkB,WAAX,KAA2B/G,mBAAmB,CAACoE,OAA/C,GAAyD,CAAzD,GAA6D,CAAxE;AACA,UAAM6N,EAAE,GAAG,KAAKpM,KAAL,CAAWkB,WAAX,KAA2B/G,mBAAmB,CAACoE,OAA/C,GAAyD,CAAzD,GAA6D,CAAxE;AACA,UAAM8N,kBAAkB,GAAG1S,YAAY,CAAC2S,UAAb,CACzB,KAAKtM,KAAL,CAAWC,UADc,EAEzBhF,OAAO,CAACsR,gBAFiB,EAGzB7S,cAAc,CAACsF,WAAf,EAHyB,CAA3B;AAKA,UAAM2E,gBAAgB,GAAG0I,kBAAkB,CAACvM,GAAnB,CAAuB,UAACN,EAAD,EAAKiJ,CAAL,EAAW;AACzD,YAAM+D,OAAO,GAAG,OAAI,CAAC/I,mBAAL,CAAyBjE,EAAzB,CAAhB;;AACA,4BAAO,oBAAC,wBAAD;AAA0B,UAAA,GAAG,EAAE,qBAAqBiJ,CAApD;AAAuD,UAAA,SAAS,EAAEjJ,EAAE,CAACG,IAArE;AAA2E,UAAA,OAAO,EAAE6M,OAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAHwB,CAAzB;AAIA,UAAMC,WAAW,GACf,KAAKzM,KAAL,CAAWwB,QAAX,CAAoB/B,MAApB,GAA6B,CAA7B,GACI,KAAKO,KAAL,CAAWwB,QAAX,CAAoBkL,MAApB,CAA2B,CAA3B,EAA8BC,iBAA9B,KAAoD,KAAK3M,KAAL,CAAWwB,QAAX,CAAoB0H,KAApB,CAA0B,CAA1B,CADxD,GAEI,EAHN;AAIA,0BACE,uDACE,oBAAC,wBAAD;AACE,QAAA,SAAS,EAAE,KAAKzK,IADlB;AAEE,QAAA,OAAO,EAAE9E,YAAY,CAACsS,WAFxB;AAGE,QAAA,IAAI,EAAE,KAAK/J,IAHb;AAIE,QAAA,WAAW,EAAE,KAAKlC,KAAL,CAAWkB,WAJ1B;AAKE,QAAA,cAAc,EAAE,KAAKkB,cALvB;AAME,QAAA,iBAAiB,EAAE,KAAKtE,iBAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASGuO,kBAAkB,CAAC5M,MAAnB,GAA4B,CAA5B,gBACC,oBAAC,qBAAD;AACE,QAAA,SAAS,EAAE,KAAKO,KAAL,CAAWkB,WAAX,KAA2B/G,mBAAmB,CAACyS,IAA/C,GAAsDrQ,aAAtD,GAAsEJ,gBADnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGG,KAAK6D,KAAL,CAAWkB,WAAX,KAA2B/G,mBAAmB,CAACyS,IAA/C,gBACC,oBAAC,WAAD;AACE,QAAA,IAAI,EAAEP,kBADR;AAEE,QAAA,IAAI,EAAE,KAAKnK,IAFb;AAGE,QAAA,aAAa,EAAE,KAAKpE,iBAHtB;AAIE,QAAA,OAAO,EAAE6F,gBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,gBAQC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG0I,kBAAkB,CAACvM,GAAnB,CAAuB,UAACN,EAAD,EAAKiJ,CAAL,EAAW;AACjC,YAAMoE,QAAQ,GAAGrN,EAAE,CAACG,IAAH,CAAQF,MAAR,GAAiBpC,OAAlC;AACA,4BACE,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE8O,EAAd;AAAkB,UAAA,EAAE,EAAEC,EAAtB;AAA0B,UAAA,GAAG,EAAE,cAAc5M,EAAE,CAACG,IAAhD;AAAsD,UAAA,KAAK,EAAE;AAAEmN,YAAAA,MAAM,EAAE;AAAV,WAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAE,IAAjB;AAAuB,UAAA,SAAS,EAAErQ,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAckH,gBAAgB,CAAC8E,CAAD,CAA9B,CADF,eAEE,oBAAC,UAAD;AAAY,UAAA,SAAS,EAAEzL,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,KAAD;AAAO,UAAA,YAAY,EAAC,IAApB;AAAyB,UAAA,IAAI,EAAC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AACE,UAAA,SAAS,EAAE6P,QAAQ,GAAGvP,0BAAH,GAAgCJ,4BADrD;AAEE,UAAA,KAAK,EAAEsC,EAAE,CAACG,IAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIGH,EAAE,CAACG,IAJN,CADF,CADF,CAFF,CADF,eAcE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,OAAI,CAACoN,YAAL,CAAkBvN,EAAlB,CADH,eAEE;AAAK,UAAA,KAAK,EAAE;AAAE7C,YAAAA,SAAS,EAAE;AAAb,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,KAAK,EAAE;AAAEQ,YAAAA,OAAO,EAAE,cAAX;AAA2BF,YAAAA,KAAK,EAAE;AAAlC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGuC,EAAE,CAACc,SAAH,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,4BAAD;AAA8B,UAAA,MAAM,EAAEd,EAAE,CAACc,SAAH,CAAaF,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAHJ,EAOG,OAAI,CAAC4M,uBAAL,CAA6BxN,EAA7B,CAPH,CAFF,EAWG,OAAI,CAACyN,cAAL,CAAoBzN,EAApB,CAXH,CAdF,CADF,CADF;AAgCD,OAlCA,CADH,CAXJ,CADD,gBAoDC;AAAK,QAAA,KAAK,EAAE;AAAEpD,UAAAA,eAAe,EAAE;AAAnB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAES,eAAvB;AAAwC,QAAA,OAAO,EAAE5D,iBAAiB,CAACiU,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,YAAY,EAAC,IAApB;AAAyB,QAAA,IAAI,EAAC,IAA9B;AAAmC,QAAA,KAAK,EAAE;AAAE5Q,UAAAA,SAAS,EAAE;AAAb,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,eAIE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wGAJF,CADF,CA7DJ,eAwEE,oBAAC,KAAD;AACE,QAAA,OAAO,EAAE,IADX;AAEE,QAAA,KAAK,EAAE,aAAamQ,WAAb,GAA2B,qBAFpC;AAGE,QAAA,MAAM,EAAE,KAAKzM,KAAL,CAAWsB,gBAHrB;AAIE,QAAA,OAAO,EAAE,KAAKiH,gBAJhB;AAKE,QAAA,OAAO,EAAE,cACP,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAC,QAAZ;AAAqB,UAAA,OAAO,EAAC,WAA7B;AAAyC,UAAA,OAAO,EAAE,KAAKA,gBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADO,eAIP,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAC,SAAZ;AAAsB,UAAA,OAAO,EAAC,QAA9B;AAAuC,UAAA,OAAO,EAAE,KAAKC,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGiE,WADH,CAJO,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAcG,eACC,KAAKzM,KAAL,CAAWuB,QADZ,GAEC,4DAFD,GAGC,KAAKvB,KAAL,CAAWwB,QAHZ,GAIC,SAlBJ,CAxEF,CADF;AA+FD;AAh0BH;AAAA;AAAA,WAk0BE,sBAAahC,EAAb,EAA6C;AAAA;;AAC3C,UAAM2N,YAAY,GAAG3N,EAAE,CAACkB,MAAH,aAAeiK,MAAM,CAACyC,OAAP,CAAe5N,EAAE,CAACkB,MAAlB,EAA0BjB,MAAzC,IAAoD,IAAzE;AACA,UAAM4N,YAAY,GAAG7N,EAAE,CAACkB,MAAH,gBACnB;AACE,QAAA,KAAK,EAAE;AAAE4M,UAAAA,KAAK,EAAEjS,QAAQ,CAACkS,OAAlB;AAA2B5Q,UAAAA,SAAS,EAAE,MAAtC;AAA8C6Q,UAAAA,MAAM,EAAE;AAAtD,SADT;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,OAAI,CAACpL,cAAL,CAAoBjI,mBAAmB,CAACyS,IAAxC,CAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE,oBAAC,OAAD;AACE,sBAAY,aADd;AAEE,QAAA,QAAQ,EAAErT,eAAe,CAACkU,KAF5B;AAGE,QAAA,UAAU,EAAE,IAHd;AAIE,QAAA,QAAQ,EAAE,CAJZ;AAKE,QAAA,OAAO,eACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG9C,MAAM,CAACyC,OAAP,CAAe5N,EAAE,CAACkB,MAAH,IAAa,EAA5B,EAAgCZ,GAAhC,CAAoC;AAAA;AAAA,cAAE4N,GAAF;AAAA,cAAO7N,KAAP;;AAAA,8BACnC;AAAI,YAAA,GAAG,EAAE6N,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGA,GADH,QACU7N,KADV,CADmC;AAAA,SAApC,CADH,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAeE;AAAK,QAAA,EAAE,EAAC,aAAR;AAAsB,QAAA,KAAK,EAAE;AAAE1C,UAAAA,OAAO,EAAE;AAAX,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGgQ,YADH,YACuBA,YAAY,KAAK,GAAjB,GAAuB,GAAvB,GAA6B,EADpD,CAfF,CAJF,CADmB,gBA0BnB;AAAK,QAAA,KAAK,EAAE;AAAExQ,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA1BF;AA4BA,aAAO0Q,YAAP;AACD;AAj2BH;AAAA;AAAA,WAm2BE,wBAAe7N,EAAf,EAA+C;AAC7C,UAAIA,EAAE,CAACY,MAAP,EAAe;AACb,YAAI,KAAKJ,KAAL,CAAWkB,WAAX,KAA2B/G,mBAAmB,CAACoE,OAAnD,EAA4D;AAC1D,8BAAO,oBAAC,0BAAD;AAA4B,YAAA,GAAG,EAAEiB,EAAE,CAACG,IAApC;AAA0C,YAAA,IAAI,EAAEH,EAAE,CAACG,IAAnD;AAAyD,YAAA,MAAM,EAAEH,EAAE,CAACY,MAApE;AAA4E,YAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWgB,IAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,4BACE,oBAAC,2BAAD;AACE,UAAA,GAAG,EAAExB,EAAE,CAACG,IADV;AAEE,UAAA,IAAI,EAAEH,EAAE,CAACG,IAFX;AAGE,UAAA,QAAQ,EAAEhG,YAAY,CAACkP,eAAb,EAHZ;AAIE,UAAA,MAAM,EAAErJ,EAAE,CAACY,MAJb;AAKE,UAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWgB,IALnB;AAME,UAAA,OAAO,EAAExB,EAAE,CAACe,OANd;AAOE,UAAA,YAAY,EAAEf,EAAE,CAACgB,YAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;AACD,0BAAO;AAAK,QAAA,KAAK,EAAE;AAAE1D,UAAAA,MAAM,EAAE;AAAV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AAr3BH;AAAA;AAAA,WAu3BE,iCAAwB0C,EAAxB,EAAwD;AACtD,UAAIiB,WAA6B,GAAG;AAAEkN,QAAAA,WAAW,EAAE,CAAf;AAAkBC,QAAAA,MAAM,EAAE,CAA1B;AAA6BC,QAAAA,QAAQ,EAAE;AAAvC,OAApC;;AACA,UAAI,CAAC,CAACrO,EAAE,CAACiB,WAAT,EAAsB;AACpBA,QAAAA,WAAW,GAAGjB,EAAE,CAACiB,WAAjB;AACD;;AAED,0BACE,oBAAC,qBAAD;AACE,QAAA,SAAS,EAAEjB,EAAE,CAACG,IADhB;AAEE,QAAA,WAAW,EAAEc,WAAW,CAACkN,WAF3B;AAGE,QAAA,MAAM,EAAElN,WAAW,CAACmN,MAHtB;AAIE,QAAA,QAAQ,EAAEnN,WAAW,CAACoN,QAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME,oBAAC,iBAAD;AACE,QAAA,EAAE,EAAE,YAAYrO,EAAE,CAACG,IADrB;AAEE,QAAA,MAAM,EAAEc,WAAW,CAACmN,MAFtB;AAGE,QAAA,QAAQ,EAAEnN,WAAW,CAACoN,QAHxB;AAIE,QAAA,WAAW,EAAEpN,WAAW,CAACkN,WAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAeD;AA54BH;;AAAA;AAAA,EAAkCnV,KAAK,CAACsV,SAAxC;AAAalQ,Y,CAIJuL,kB;;AA24BT,IAAM4E,eAAe,GAAG,SAAlBA,eAAkB,CAAC/N,KAAD;AAAA,SAAuC;AAC7DsI,IAAAA,QAAQ,EAAE3N,gBAAgB,CAACqF,KAAD,CADmC;AAE7D2L,IAAAA,UAAU,EAAE/Q,0BAA0B,CAACoF,KAAD,CAFuB;AAG7D2I,IAAAA,WAAW,EAAE3I,KAAK,CAACgO,YAAN,CAAmBC,SAAnB,CAA6BtF,WAHmB;AAI7DuF,IAAAA,eAAe,EAAErT,uBAAuB,CAACmF,KAAD;AAJqB,GAAvC;AAAA,CAAxB;;AAOA,IAAMmO,qBAAqB,GAAGzT,OAAO,CAACqT,eAAD,CAAP,CAAyBnQ,YAAzB,CAA9B;AACA,eAAeuQ,qBAAf","sourcesContent":["import * as React from 'react';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardBody,\n  CardHead,\n  CardHeader,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  Grid,\n  GridItem,\n  Modal,\n  Title,\n  Tooltip,\n  TooltipPosition\n} from '@patternfly/react-core';\nimport { style } from 'typestyle';\nimport { AxiosError } from 'axios';\nimport _ from 'lodash';\nimport { FilterSelected, StatefulFilters } from '../../components/Filters/StatefulFilters';\nimport * as FilterHelper from '../../components/FilterList/FilterHelper';\nimport * as API from '../../services/Api';\nimport {\n  DEGRADED,\n  FAILURE,\n  Health,\n  HEALTHY,\n  NOT_READY,\n  NamespaceAppHealth,\n  NamespaceServiceHealth,\n  NamespaceWorkloadHealth\n} from '../../types/Health';\nimport { SortField } from '../../types/SortFilters';\nimport { PromisesRegistry } from '../../utils/CancelablePromises';\nimport OverviewToolbarContainer, { OverviewDisplayMode, OverviewToolbar, OverviewType } from './OverviewToolbar';\nimport NamespaceInfo, { NamespaceStatus } from './NamespaceInfo';\nimport NamespaceMTLSStatusContainer from '../../components/MTls/NamespaceMTLSStatus';\nimport { RenderComponentScroll } from '../../components/Nav/Page';\nimport OverviewCardContentCompact from './OverviewCardContentCompact';\nimport OverviewCardContentExpanded from './OverviewCardContentExpanded';\nimport { IstioMetricsOptions } from '../../types/MetricsOptions';\nimport { computePrometheusRateParams } from '../../services/Prometheus';\nimport { KialiAppState } from '../../store/Store';\nimport { connect } from 'react-redux';\nimport { durationSelector, meshWideMTLSStatusSelector, refreshIntervalSelector } from '../../store/Selectors';\nimport { nsWideMTLSStatus } from '../../types/TLSStatus';\nimport { switchType } from './OverviewHelper';\nimport * as Sorts from './Sorts';\nimport * as Filters from './Filters';\nimport ValidationSummary from '../../components/Validations/ValidationSummary';\nimport { DurationInSeconds, IntervalInMilliseconds } from 'types/Common';\nimport { Paths, serverConfig } from '../../config';\nimport { PFColors } from '../../components/Pf/PfColors';\nimport VirtualList from '../../components/VirtualList/VirtualList';\nimport { OverviewNamespaceAction, OverviewNamespaceActions } from './OverviewNamespaceActions';\nimport history, { HistoryManager, URLParam } from '../../app/History';\nimport {\n  buildGraphAuthorizationPolicy,\n  buildNamespaceInjectionPatch\n} from '../../components/IstioWizards/WizardActions';\nimport * as AlertUtils from '../../utils/AlertUtils';\nimport { MessageType } from '../../types/MessageCenter';\nimport GraphDataSource from '../../services/GraphDataSource';\nimport { AuthorizationPolicy, ValidationStatus } from '../../types/IstioObjects';\nimport { IstioPermissions } from '../../types/IstioConfigDetails';\nimport { AUTHORIZATION_POLICIES } from '../IstioConfigNew/AuthorizationPolicyForm';\nimport ValidationSummaryLink from '../../components/Link/ValidationSummaryLink';\nimport { GrafanaInfo, ISTIO_DASHBOARDS } from '../../types/GrafanaInfo';\nimport { ExternalLink } from '../../types/Dashboards';\n\nconst gridStyleCompact = style({\n  backgroundColor: '#f5f5f5',\n  paddingBottom: '20px',\n  marginTop: '0px'\n});\n\nconst gridStyleList = style({\n  backgroundColor: '#f5f5f5',\n  // The VirtualTable component has a different style than cards\n  // We need to adjust the grid style if we are on compact vs list view\n  padding: '0 !important',\n  marginTop: '0px'\n});\n\nconst cardGridStyle = style({\n  borderTop: '2px solid #39a5dc',\n  textAlign: 'center',\n  marginTop: '0px',\n  marginBottom: '10px'\n});\n\nconst emptyStateStyle = style({\n  height: '300px',\n  marginRight: 5,\n  marginBottom: 10,\n  marginTop: 10\n});\n\nconst cardHeaderStyle = style({\n  width: '75%',\n  textAlign: 'left'\n});\n\nconst cardNamespaceNameNormalStyle = style({\n  display: 'inline-block',\n  verticalAlign: 'middle'\n});\n\n// CSS trick to apply ellipsis only on certain cases\n// With actions on Card, there are some CSS calculation in the Cards, so the\n// maxWidth calc() used doesn't work well for all cases\nconst NS_LONG = 20;\n\nconst cardNamespaceNameLongStyle = style({\n  display: 'inline-block',\n  maxWidth: 'calc(100% - 75px)',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  verticalAlign: 'middle',\n  whiteSpace: 'nowrap'\n});\n\nenum Show {\n  GRAPH,\n  APPLICATIONS,\n  WORKLOADS,\n  SERVICES,\n  ISTIO_CONFIG\n}\n\ntype State = {\n  namespaces: NamespaceInfo[];\n  type: OverviewType;\n  displayMode: OverviewDisplayMode;\n  permissions: IstioPermissions;\n  showConfirmModal: boolean;\n  nsTarget: string;\n  opTarget: string;\n  grafanaLinks: ExternalLink[];\n};\n\ntype ReduxProps = {\n  duration: DurationInSeconds;\n  meshStatus: string;\n  navCollapse: boolean;\n  refreshInterval: IntervalInMilliseconds;\n};\n\ntype OverviewProps = ReduxProps & {};\n\nexport class OverviewPage extends React.Component<OverviewProps, State> {\n  private sFOverviewToolbar: React.RefObject<StatefulFilters> = React.createRef();\n  private promises = new PromisesRegistry();\n  // Grafana promise is only invoked by componentDidMount() no need to repeat it on componentDidUpdate()\n  static grafanaInfoPromise: Promise<GrafanaInfo | undefined> | undefined;\n\n  constructor(props: OverviewProps) {\n    super(props);\n    const display = HistoryManager.getParam(URLParam.DISPLAY_MODE);\n    this.state = {\n      namespaces: [],\n      type: OverviewToolbar.currentOverviewType(),\n      displayMode: display ? Number(display) : OverviewDisplayMode.EXPAND,\n      permissions: {},\n      showConfirmModal: false,\n      nsTarget: '',\n      opTarget: '',\n      grafanaLinks: []\n    };\n  }\n\n  componentDidUpdate(prevProps: OverviewProps) {\n    if (prevProps.duration !== this.props.duration || prevProps.navCollapse !== this.props.navCollapse) {\n      // Reload to avoid graphical glitches with charts\n      // TODO: this workaround should probably be deleted after switch to Patternfly 4, see https://issues.jboss.org/browse/KIALI-3116\n      this.load();\n    }\n  }\n\n  componentDidMount() {\n    this.fetchGrafanaInfo();\n    this.load();\n  }\n\n  componentWillUnmount() {\n    this.promises.cancelAll();\n  }\n\n  sortFields() {\n    return Sorts.sortFields;\n  }\n\n  getStartDisplayMode = (isCompact: boolean) => {\n    // Check if there is a displayMode option\n    const historyDisplayMode = HistoryManager.getParam(URLParam.DISPLAY_MODE);\n    if (historyDisplayMode) {\n      return Number(historyDisplayMode);\n    }\n\n    // In this case is the first time that we are loading Overview Page, calculate the best view\n    return isCompact ? OverviewDisplayMode.COMPACT : OverviewDisplayMode.EXPAND;\n  };\n\n  load = () => {\n    this.promises.cancelAll();\n    this.promises\n      .register('namespaces', API.getNamespaces())\n      .then(namespacesResponse => {\n        const nameFilters = FilterSelected.getSelected().filters.filter(f => f.id === Filters.nameFilter.id);\n        const allNamespaces: NamespaceInfo[] = namespacesResponse.data\n          .filter(ns => {\n            return nameFilters.length === 0 || nameFilters.some(f => ns.name.includes(f.value));\n          })\n          .map(ns => {\n            const previous = this.state.namespaces.find(prev => prev.name === ns.name);\n            return {\n              name: ns.name,\n              status: previous ? previous.status : undefined,\n              tlsStatus: previous ? previous.tlsStatus : undefined,\n              metrics: previous ? previous.metrics : undefined,\n              errorMetrics: previous ? previous.errorMetrics : undefined,\n              validations: previous ? previous.validations : undefined,\n              labels: ns.labels\n            };\n          });\n        const isAscending = FilterHelper.isCurrentSortAscending();\n        const sortField = FilterHelper.currentSortField(Sorts.sortFields);\n        const type = OverviewToolbar.currentOverviewType();\n        const displayMode = this.getStartDisplayMode(allNamespaces.length > 16);\n\n        // Set state before actually fetching health\n        this.setState(\n          prevState => {\n            return {\n              type: type,\n              namespaces: Sorts.sortFunc(allNamespaces, sortField, isAscending),\n              displayMode: displayMode,\n              showConfirmModal: prevState.showConfirmModal,\n              nsTarget: prevState.nsTarget,\n              opTarget: prevState.opTarget\n            };\n          },\n          () => {\n            this.fetchHealth(isAscending, sortField, type);\n            this.fetchTLS(isAscending, sortField);\n            this.fetchValidations(isAscending, sortField);\n            this.fetchPermissions();\n            if (displayMode !== OverviewDisplayMode.COMPACT) {\n              this.fetchMetrics();\n            }\n          }\n        );\n      })\n      .catch(namespacesError => {\n        if (!namespacesError.isCanceled) {\n          this.handleAxiosError('Could not fetch namespace list', namespacesError);\n        }\n      });\n  };\n\n  fetchHealth(isAscending: boolean, sortField: SortField<NamespaceInfo>, type: OverviewType) {\n    const duration = FilterHelper.currentDuration();\n    // debounce async for back-pressure, ten by ten\n    _.chunk(this.state.namespaces, 10).forEach(chunk => {\n      this.promises\n        .registerChained('healthchunks', undefined, () => this.fetchHealthChunk(chunk, duration, type))\n        .then(() => {\n          this.setState(prevState => {\n            let newNamespaces = prevState.namespaces.slice();\n            if (sortField.id === 'health') {\n              newNamespaces = Sorts.sortFunc(newNamespaces, sortField, isAscending);\n            }\n            return { namespaces: newNamespaces };\n          });\n        });\n    });\n  }\n\n  fetchGrafanaInfo() {\n    if (!OverviewPage.grafanaInfoPromise) {\n      OverviewPage.grafanaInfoPromise = API.getGrafanaInfo().then(response => {\n        if (response.status === 204) {\n          return undefined;\n        }\n        return response.data;\n      });\n    }\n    OverviewPage.grafanaInfoPromise\n      .then(grafanaInfo => {\n        if (grafanaInfo) {\n          // For Overview Page only Performance and Wasm Extension dashboard are interesting\n          this.setState({\n            grafanaLinks: grafanaInfo.externalLinks.filter(link => ISTIO_DASHBOARDS.indexOf(link.name) > -1)\n          });\n        } else {\n          this.setState({ grafanaLinks: [] });\n        }\n      })\n      .catch(err => {\n        AlertUtils.addMessage({\n          ...AlertUtils.extractAxiosError('Could not fetch Grafana info. Turning off links to Grafana.', err),\n          group: 'default',\n          type: MessageType.INFO,\n          showNotification: false\n        });\n      });\n  }\n\n  fetchHealthChunk(chunk: NamespaceInfo[], duration: DurationInSeconds, type: OverviewType) {\n    const apiFunc = switchType(\n      type,\n      API.getNamespaceAppHealth,\n      API.getNamespaceServiceHealth,\n      API.getNamespaceWorkloadHealth\n    );\n    return Promise.all(\n      chunk.map(nsInfo => {\n        const healthPromise: Promise<NamespaceAppHealth | NamespaceWorkloadHealth | NamespaceServiceHealth> = apiFunc(\n          nsInfo.name,\n          duration\n        );\n        return healthPromise.then(rs => ({ health: rs, nsInfo: nsInfo }));\n      })\n    )\n      .then(results => {\n        results.forEach(result => {\n          const nsStatus: NamespaceStatus = {\n            inNotReady: [],\n            inError: [],\n            inWarning: [],\n            inSuccess: [],\n            notAvailable: []\n          };\n          Object.keys(result.health).forEach(item => {\n            const health: Health = result.health[item];\n            const status = health.getGlobalStatus();\n            if (status === FAILURE) {\n              nsStatus.inError.push(item);\n            } else if (status === DEGRADED) {\n              nsStatus.inWarning.push(item);\n            } else if (status === HEALTHY) {\n              nsStatus.inSuccess.push(item);\n            } else if (status === NOT_READY) {\n              nsStatus.inNotReady.push(item);\n            } else {\n              nsStatus.notAvailable.push(item);\n            }\n          });\n          result.nsInfo.status = nsStatus;\n        });\n      })\n      .catch(err => this.handleAxiosError('Could not fetch health', err));\n  }\n\n  fetchMetrics() {\n    const duration = FilterHelper.currentDuration();\n    // debounce async for back-pressure, ten by ten\n    _.chunk(this.state.namespaces, 10).forEach(chunk => {\n      this.promises\n        .registerChained('metricschunks', undefined, () => this.fetchMetricsChunk(chunk, duration))\n        .then(() => {\n          this.setState(prevState => {\n            return { namespaces: prevState.namespaces.slice() };\n          });\n        });\n    });\n  }\n\n  fetchMetricsChunk(chunk: NamespaceInfo[], duration: number) {\n    const rateParams = computePrometheusRateParams(duration, 10);\n    const optionsIn: IstioMetricsOptions = {\n      filters: ['request_count', 'request_error_count'],\n      duration: duration,\n      step: rateParams.step,\n      rateInterval: rateParams.rateInterval,\n      direction: 'inbound',\n      reporter: 'destination'\n    };\n    return Promise.all(\n      chunk.map(nsInfo => {\n        return API.getNamespaceMetrics(nsInfo.name, optionsIn).then(rs => {\n          nsInfo.metrics = rs.data.request_count;\n          nsInfo.errorMetrics = rs.data.request_error_count;\n          return nsInfo;\n        });\n      })\n    ).catch(err => this.handleAxiosError('Could not fetch metrics', err));\n  }\n\n  fetchTLS(isAscending: boolean, sortField: SortField<NamespaceInfo>) {\n    _.chunk(this.state.namespaces, 10).forEach(chunk => {\n      this.promises\n        .registerChained('tlschunks', undefined, () => this.fetchTLSChunk(chunk))\n        .then(() => {\n          this.setState(prevState => {\n            let newNamespaces = prevState.namespaces.slice();\n            if (sortField.id === 'mtls') {\n              newNamespaces = Sorts.sortFunc(newNamespaces, sortField, isAscending);\n            }\n            return { namespaces: newNamespaces };\n          });\n        });\n    });\n  }\n\n  fetchTLSChunk(chunk: NamespaceInfo[]) {\n    return Promise.all(\n      chunk.map(nsInfo => {\n        return API.getNamespaceTls(nsInfo.name).then(rs => ({ status: rs.data, nsInfo: nsInfo }));\n      })\n    )\n      .then(results => {\n        results.forEach(result => {\n          result.nsInfo.tlsStatus = {\n            status: nsWideMTLSStatus(result.status.status, this.props.meshStatus)\n          };\n        });\n      })\n      .catch(err => this.handleAxiosError('Could not fetch TLS status', err));\n  }\n\n  fetchValidations(isAscending: boolean, sortField: SortField<NamespaceInfo>) {\n    _.chunk(this.state.namespaces, 10).forEach(chunk => {\n      this.promises\n        .registerChained('validationchunks', undefined, () => this.fetchValidationChunk(chunk))\n        .then(() => {\n          this.setState(prevState => {\n            let newNamespaces = prevState.namespaces.slice();\n            if (sortField.id === 'validations') {\n              newNamespaces = Sorts.sortFunc(newNamespaces, sortField, isAscending);\n            }\n            return { namespaces: newNamespaces };\n          });\n        });\n    });\n  }\n\n  fetchValidationChunk(chunk: NamespaceInfo[]) {\n    return Promise.all(\n      chunk.map(nsInfo => {\n        return Promise.all([\n          API.getNamespaceValidations(nsInfo.name),\n          API.getIstioConfig(nsInfo.name, ['authorizationpolicies'], false, '', '')\n        ]).then(results => {\n          return { validations: results[0].data, istioConfig: results[1].data, nsInfo: nsInfo };\n        });\n      })\n    )\n      .then(results => {\n        results.forEach(result => {\n          result.nsInfo.validations = result.validations;\n          result.nsInfo.istioConfig = result.istioConfig;\n        });\n      })\n      .catch(err => this.handleAxiosError('Could not fetch validations status', err));\n  }\n\n  fetchPermissions() {\n    this.promises\n      .register('namespacepermissions', API.getIstioPermissions(this.state.namespaces.map(ns => ns.name)))\n      .then(result => {\n        this.setState({\n          permissions: result.data\n        });\n      });\n  }\n\n  handleAxiosError(message: string, error: AxiosError) {\n    FilterHelper.handleError(`${message}: ${API.getErrorString(error)}`);\n  }\n\n  sort = (sortField: SortField<NamespaceInfo>, isAscending: boolean) => {\n    const sorted = Sorts.sortFunc(this.state.namespaces, sortField, isAscending);\n    this.setState({ namespaces: sorted });\n  };\n\n  setDisplayMode = (mode: OverviewDisplayMode) => {\n    this.setState({ displayMode: mode });\n    HistoryManager.setParam(URLParam.DISPLAY_MODE, String(mode));\n    if (mode === OverviewDisplayMode.EXPAND) {\n      // Load metrics\n      this.fetchMetrics();\n    }\n  };\n\n  isNamespaceEmpty = (ns: NamespaceInfo): boolean => {\n    return (\n      !!ns.status &&\n      ns.status.inError.length +\n        ns.status.inSuccess.length +\n        ns.status.inWarning.length +\n        ns.status.notAvailable.length ===\n        0\n    );\n  };\n\n  show = (showType: Show, namespace: string, graphType: string) => {\n    let destination = '';\n    switch (showType) {\n      case Show.GRAPH:\n        destination = `/graph/namespaces?namespaces=${namespace}&graphType=${graphType}`;\n        break;\n      case Show.APPLICATIONS:\n        destination = `/${Paths.APPLICATIONS}?namespaces=` + namespace;\n        break;\n      case Show.WORKLOADS:\n        destination = `/${Paths.WORKLOADS}?namespaces=` + namespace;\n        break;\n      case Show.SERVICES:\n        destination = `/${Paths.SERVICES}?namespaces=` + namespace;\n        break;\n      case Show.ISTIO_CONFIG:\n        destination = `/${Paths.ISTIO}?namespaces=` + namespace;\n        break;\n      default:\n      // Nothing to do on default case\n    }\n    history.push(destination);\n  };\n\n  getNamespaceActions = (nsInfo: NamespaceInfo): OverviewNamespaceAction[] => {\n    // Today actions are fixed, but soon actions may depend of the state of a namespace\n    // So we keep this wrapped in a showActions function.\n    const namespaceActions: OverviewNamespaceAction[] = [\n      {\n        isGroup: true,\n        isSeparator: false,\n        isDisabled: false,\n        title: 'Show',\n        children: [\n          {\n            isGroup: true,\n            isSeparator: false,\n            isDisabled: false,\n            title: 'Graph',\n            action: (ns: string) => this.show(Show.GRAPH, ns, this.state.type)\n          },\n          {\n            isGroup: true,\n            isSeparator: false,\n            isDisabled: false,\n            title: 'Applications',\n            action: (ns: string) => this.show(Show.APPLICATIONS, ns, this.state.type)\n          },\n          {\n            isGroup: true,\n            isSeparator: false,\n            isDisabled: false,\n            title: 'Workloads',\n            action: (ns: string) => this.show(Show.WORKLOADS, ns, this.state.type)\n          },\n          {\n            isGroup: true,\n            isSeparator: false,\n            isDisabled: false,\n            title: 'Services',\n            action: (ns: string) => this.show(Show.SERVICES, ns, this.state.type)\n          },\n          {\n            isGroup: true,\n            isSeparator: false,\n            isDisabled: false,\n            title: 'Istio Config',\n            action: (ns: string) => this.show(Show.ISTIO_CONFIG, ns, this.state.type)\n          }\n        ]\n      }\n    ];\n    // We are going to assume that if the user can create/update Istio AuthorizationPolicies in a namespace\n    // then it can use the Istio Injection Actions.\n    // RBAC allow more fine granularity but Kiali won't check that in detail.\n    let canWrite = false;\n    if (\n      this.state.permissions &&\n      this.state.permissions[nsInfo.name] &&\n      this.state.permissions[nsInfo.name][AUTHORIZATION_POLICIES]\n    ) {\n      const resourcePermission = this.state.permissions[nsInfo.name][AUTHORIZATION_POLICIES];\n      canWrite = resourcePermission.create && resourcePermission.update && resourcePermission.delete;\n    }\n\n    if (serverConfig.istioNamespace !== nsInfo.name) {\n      if (serverConfig.kialiFeatureFlags.istioInjectionAction && !serverConfig.kialiFeatureFlags.istioUpgradeAction) {\n        namespaceActions.push({\n          isGroup: false,\n          isSeparator: true,\n          isDisabled: false\n        });\n        const enableAction = {\n          isGroup: false,\n          isSeparator: false,\n          isDisabled: !canWrite,\n          title: 'Enable Auto Injection',\n          action: (ns: string) => this.onAddRemoveAutoInjection(ns, true, false)\n        };\n        const disableAction = {\n          isGroup: false,\n          isSeparator: false,\n          isDisabled: !canWrite,\n          title: 'Disable Auto Injection',\n          action: (ns: string) => this.onAddRemoveAutoInjection(ns, false, false)\n        };\n        const removeAction = {\n          isGroup: false,\n          isSeparator: false,\n          isDisabled: !canWrite,\n          title: 'Remove Auto Injection',\n          action: (ns: string) => this.onAddRemoveAutoInjection(ns, false, true)\n        };\n        if (\n          nsInfo.labels &&\n          ((nsInfo.labels[serverConfig.istioLabels.injectionLabelName] &&\n            nsInfo.labels[serverConfig.istioLabels.injectionLabelName] === 'enabled') ||\n            nsInfo.labels[serverConfig.istioLabels.injectionLabelRev])\n        ) {\n          namespaceActions.push(disableAction);\n          namespaceActions.push(removeAction);\n        } else if (\n          nsInfo.labels &&\n          nsInfo.labels[serverConfig.istioLabels.injectionLabelName] &&\n          nsInfo.labels[serverConfig.istioLabels.injectionLabelName] === 'disabled'\n        ) {\n          namespaceActions.push(enableAction);\n          namespaceActions.push(removeAction);\n        } else {\n          namespaceActions.push(enableAction);\n        }\n        namespaceActions.push({\n          isGroup: false,\n          isSeparator: true,\n          isDisabled: false\n        });\n      }\n      if (\n        serverConfig.kialiFeatureFlags.istioUpgradeAction &&\n        serverConfig.istioCanaryRevision.upgrade &&\n        serverConfig.istioCanaryRevision.current\n      ) {\n        namespaceActions.push({\n          isGroup: false,\n          isSeparator: true,\n          isDisabled: false\n        });\n        const upgradeAction = {\n          isGroup: false,\n          isSeparator: false,\n          isDisabled: !canWrite,\n          title: 'Upgrade to ' + serverConfig.istioCanaryRevision.upgrade + ' revision',\n          action: (ns: string) => this.onUpgradeDowngradeIstio(ns, serverConfig.istioCanaryRevision.upgrade)\n        };\n        const downgradeAction = {\n          isGroup: false,\n          isSeparator: false,\n          isDisabled: !canWrite,\n          title: 'Downgrade to ' + serverConfig.istioCanaryRevision.current + ' revision',\n          action: (ns: string) => this.onUpgradeDowngradeIstio(ns, serverConfig.istioCanaryRevision.current)\n        };\n        if (\n          nsInfo.labels &&\n          ((nsInfo.labels[serverConfig.istioLabels.injectionLabelRev] &&\n            nsInfo.labels[serverConfig.istioLabels.injectionLabelRev] === serverConfig.istioCanaryRevision.current) ||\n            (nsInfo.labels[serverConfig.istioLabels.injectionLabelName] &&\n              nsInfo.labels[serverConfig.istioLabels.injectionLabelName] === 'enabled'))\n        ) {\n          namespaceActions.push(upgradeAction);\n          namespaceActions.push({\n            isGroup: false,\n            isSeparator: true,\n            isDisabled: false\n          });\n        } else if (\n          nsInfo.labels &&\n          nsInfo.labels[serverConfig.istioLabels.injectionLabelRev] &&\n          nsInfo.labels[serverConfig.istioLabels.injectionLabelRev] === serverConfig.istioCanaryRevision.upgrade\n        ) {\n          namespaceActions.push(downgradeAction);\n          namespaceActions.push({\n            isGroup: false,\n            isSeparator: true,\n            isDisabled: false\n          });\n        }\n      }\n      const aps = nsInfo.istioConfig?.authorizationPolicies || [];\n      const addAuthorizationAction = {\n        isGroup: false,\n        isSeparator: false,\n        isDisabled: !canWrite,\n        title: (aps.length === 0 ? 'Create ' : 'Update') + ' Traffic Policies',\n        action: (ns: string) => {\n          if (aps.length === 0) {\n            this.onCreateTrafficPolicies(ns);\n          } else {\n            this.onUpdateTrafficPolicies(ns);\n          }\n        }\n      };\n      const removeAuthorizationAction = {\n        isGroup: false,\n        isSeparator: false,\n        isDisabled: !canWrite,\n        title: 'Delete Traffic Policies',\n        action: (ns: string) => this.onDeleteTrafficPolicies(ns)\n      };\n      namespaceActions.push(addAuthorizationAction);\n      if (aps.length > 0) {\n        namespaceActions.push(removeAuthorizationAction);\n      }\n    } else if (this.state.grafanaLinks.length > 0) {\n      // Istio namespace will render external Grafana dashboards\n      namespaceActions.push({\n        isGroup: false,\n        isSeparator: true,\n        isDisabled: false\n      });\n      this.state.grafanaLinks.forEach(link => {\n        const grafanaDashboard = {\n          isGroup: false,\n          isSeparator: false,\n          isDisabled: false,\n          isExternal: true,\n          title: link.name,\n          action: (_ns: string) => {\n            window.open(link.url, '_blank');\n            this.load();\n          }\n        };\n        namespaceActions.push(grafanaDashboard);\n      });\n    }\n\n    return namespaceActions;\n  };\n\n  onAddRemoveAutoInjection = (ns: string, enable: boolean, remove: boolean): void => {\n    const jsonPatch = buildNamespaceInjectionPatch(enable, remove, null);\n    API.updateNamespace(ns, jsonPatch)\n      .then(_ => {\n        AlertUtils.add('Namespace ' + ns + ' updated', 'default', MessageType.SUCCESS);\n        this.load();\n      })\n      .catch(error => {\n        AlertUtils.addError('Could not update namespace ' + ns, error);\n      });\n  };\n\n  onUpgradeDowngradeIstio = (ns: string, revision: string): void => {\n    const jsonPatch = buildNamespaceInjectionPatch(false, false, revision);\n    API.updateNamespace(ns, jsonPatch)\n      .then(_ => {\n        AlertUtils.add('Namespace ' + ns + ' updated', 'default', MessageType.SUCCESS);\n        this.load();\n      })\n      .catch(error => {\n        AlertUtils.addError('Could not update namespace ' + ns, error);\n      });\n  };\n\n  onCreateTrafficPolicies = (ns: string) => {\n    this.onAddRemoveAuthorizationPolicy(ns, [], false);\n  };\n\n  onUpdateTrafficPolicies = (ns: string) => {\n    this.setState({\n      showConfirmModal: true,\n      nsTarget: ns,\n      opTarget: 'update'\n    });\n  };\n\n  onDeleteTrafficPolicies = (ns: string) => {\n    this.setState({\n      showConfirmModal: true,\n      nsTarget: ns,\n      opTarget: 'delete'\n    });\n  };\n\n  onAddRemoveAuthorizationPolicy = (\n    ns: string,\n    authorizationPolicies: AuthorizationPolicy[],\n    remove: boolean\n  ): void => {\n    if (authorizationPolicies.length > 0) {\n      this.promises\n        .registerAll(\n          'authorizationPoliciesDelete',\n          authorizationPolicies.map(ap => API.deleteIstioConfigDetail(ns, 'authorizationpolicies', ap.metadata.name))\n        )\n        .then(_ => {\n          if (!remove) {\n            this.createAuthorizationPolicies(ns, this.load);\n          } else {\n            this.load();\n          }\n        })\n        .catch(errorDelete => {\n          if (!errorDelete.isCanceled) {\n            AlertUtils.addError('Could not delete AuthorizationPolicies.', errorDelete);\n          }\n        });\n    } else {\n      if (!remove) {\n        this.createAuthorizationPolicies(ns, this.load);\n      } else {\n        AlertUtils.addInfo('Namespace ' + ns + \" doesn't have AuthorizationPolicy config.\");\n      }\n    }\n  };\n\n  createAuthorizationPolicies = (ns: string, callback: () => void) => {\n    const graphDataSource = new GraphDataSource();\n    graphDataSource.on('fetchSuccess', () => {\n      const aps = buildGraphAuthorizationPolicy(ns, graphDataSource.graphDefinition);\n      this.promises\n        .registerAll(\n          'authorizationPoliciesCreate',\n          aps.map(ap => API.createIstioConfigDetail(ns, 'authorizationpolicies', JSON.stringify(ap)))\n        )\n        .then(results => {\n          if (results.length > 0) {\n            AlertUtils.add('AuthorizationPolicies created for ' + ns + ' namespace.', 'default', MessageType.SUCCESS);\n          }\n          callback();\n        })\n        .catch(errorCreate => {\n          if (!errorCreate.isCanceled) {\n            AlertUtils.addError('Could not create AuthorizationPolicies.', errorCreate);\n          }\n        });\n    });\n    graphDataSource.on('fetchError', (errorMessage: string | null) => {\n      if (errorMessage !== '') {\n        errorMessage = 'Could not fetch traffic data: ' + errorMessage;\n      } else {\n        errorMessage = 'Could not fetch traffic data.';\n      }\n      AlertUtils.addError(errorMessage);\n    });\n    graphDataSource.fetchForNamespace(this.props.duration, ns);\n  };\n\n  hideConfirmModal = () => {\n    this.setState({\n      showConfirmModal: false,\n      nsTarget: '',\n      opTarget: ''\n    });\n  };\n\n  onConfirmModal = () => {\n    let aps: AuthorizationPolicy[] = [];\n    for (let i = 0; i < this.state.namespaces.length; i++) {\n      const nsInfo = this.state.namespaces[i];\n      if (this.state.namespaces[i].name === this.state.nsTarget) {\n        aps = nsInfo.istioConfig?.authorizationPolicies || [];\n        break;\n      }\n    }\n    const nsTarget = this.state.nsTarget;\n    const remove = this.state.opTarget === 'delete';\n    this.setState(\n      {\n        showConfirmModal: false,\n        nsTarget: '',\n        opTarget: ''\n      },\n      () => this.onAddRemoveAuthorizationPolicy(nsTarget, aps, remove)\n    );\n  };\n\n  render() {\n    const sm = this.state.displayMode === OverviewDisplayMode.COMPACT ? 3 : 6;\n    const md = this.state.displayMode === OverviewDisplayMode.COMPACT ? 3 : 4;\n    const filteredNamespaces = FilterHelper.runFilters(\n      this.state.namespaces,\n      Filters.availableFilters,\n      FilterSelected.getSelected()\n    );\n    const namespaceActions = filteredNamespaces.map((ns, i) => {\n      const actions = this.getNamespaceActions(ns);\n      return <OverviewNamespaceActions key={'namespaceAction_' + i} namespace={ns.name} actions={actions} />;\n    });\n    const modalAction =\n      this.state.opTarget.length > 0\n        ? this.state.opTarget.charAt(0).toLocaleUpperCase() + this.state.opTarget.slice(1)\n        : '';\n    return (\n      <>\n        <OverviewToolbarContainer\n          onRefresh={this.load}\n          onError={FilterHelper.handleError}\n          sort={this.sort}\n          displayMode={this.state.displayMode}\n          setDisplayMode={this.setDisplayMode}\n          statefulFilterRef={this.sFOverviewToolbar}\n        />\n        {filteredNamespaces.length > 0 ? (\n          <RenderComponentScroll\n            className={this.state.displayMode === OverviewDisplayMode.LIST ? gridStyleList : gridStyleCompact}\n          >\n            {this.state.displayMode === OverviewDisplayMode.LIST ? (\n              <VirtualList\n                rows={filteredNamespaces}\n                sort={this.sort}\n                statefulProps={this.sFOverviewToolbar}\n                actions={namespaceActions}\n              />\n            ) : (\n              <Grid>\n                {filteredNamespaces.map((ns, i) => {\n                  const isLongNs = ns.name.length > NS_LONG;\n                  return (\n                    <GridItem sm={sm} md={md} key={'CardItem_' + ns.name} style={{ margin: '0px 5px 0 5px' }}>\n                      <Card isCompact={true} className={cardGridStyle}>\n                        <CardHead>\n                          <CardActions>{namespaceActions[i]}</CardActions>\n                          <CardHeader className={cardHeaderStyle}>\n                            <Title headingLevel=\"h5\" size=\"lg\">\n                              <span\n                                className={isLongNs ? cardNamespaceNameLongStyle : cardNamespaceNameNormalStyle}\n                                title={ns.name}\n                              >\n                                {ns.name}\n                              </span>\n                            </Title>\n                          </CardHeader>\n                        </CardHead>\n                        <CardBody>\n                          {this.renderLabels(ns)}\n                          <div style={{ textAlign: 'left' }}>\n                            <div style={{ display: 'inline-block', width: '125px' }}>Istio Config</div>\n                            {ns.tlsStatus && (\n                              <span>\n                                <NamespaceMTLSStatusContainer status={ns.tlsStatus.status} />\n                              </span>\n                            )}\n                            {this.renderIstioConfigStatus(ns)}\n                          </div>\n                          {this.renderStatuses(ns)}\n                        </CardBody>\n                      </Card>\n                    </GridItem>\n                  );\n                })}\n              </Grid>\n            )}\n          </RenderComponentScroll>\n        ) : (\n          <div style={{ backgroundColor: '#f5f5f5' }}>\n            <EmptyState className={emptyStateStyle} variant={EmptyStateVariant.full}>\n              <Title headingLevel=\"h5\" size=\"lg\" style={{ marginTop: '50px' }}>\n                No unfiltered namespaces\n              </Title>\n              <EmptyStateBody>\n                Either all namespaces are being filtered or the user has no permission to access namespaces.\n              </EmptyStateBody>\n            </EmptyState>\n          </div>\n        )}\n        <Modal\n          isSmall={true}\n          title={'Confirm ' + modalAction + ' Traffic Policies ?'}\n          isOpen={this.state.showConfirmModal}\n          onClose={this.hideConfirmModal}\n          actions={[\n            <Button key=\"cancel\" variant=\"secondary\" onClick={this.hideConfirmModal}>\n              Cancel\n            </Button>,\n            <Button key=\"confirm\" variant=\"danger\" onClick={this.onConfirmModal}>\n              {modalAction}\n            </Button>\n          ]}\n        >\n          {'Namespace ' +\n            this.state.nsTarget +\n            ' has existing AuthorizationPolicy objects. Do you want to ' +\n            this.state.opTarget +\n            ' them ?'}\n        </Modal>\n      </>\n    );\n  }\n\n  renderLabels(ns: NamespaceInfo): JSX.Element {\n    const labelsLength = ns.labels ? `${Object.entries(ns.labels).length}` : 'No';\n    const labelContent = ns.labels ? (\n      <div\n        style={{ color: PFColors.Blue400, textAlign: 'left', cursor: 'pointer' }}\n        onClick={() => this.setDisplayMode(OverviewDisplayMode.LIST)}\n      >\n        <Tooltip\n          aria-label={'Labels list'}\n          position={TooltipPosition.right}\n          enableFlip={true}\n          distance={5}\n          content={\n            <ul>\n              {Object.entries(ns.labels || []).map(([key, value]) => (\n                <li key={key}>\n                  {key}: {value}\n                </li>\n              ))}\n            </ul>\n          }\n        >\n          <div id=\"labels_info\" style={{ display: 'inline' }}>\n            {labelsLength} Label{labelsLength !== '1' ? 's' : ''}\n          </div>\n        </Tooltip>\n      </div>\n    ) : (\n      <div style={{ textAlign: 'left' }}>No labels</div>\n    );\n    return labelContent;\n  }\n\n  renderStatuses(ns: NamespaceInfo): JSX.Element {\n    if (ns.status) {\n      if (this.state.displayMode === OverviewDisplayMode.COMPACT) {\n        return <OverviewCardContentCompact key={ns.name} name={ns.name} status={ns.status} type={this.state.type} />;\n      }\n      return (\n        <OverviewCardContentExpanded\n          key={ns.name}\n          name={ns.name}\n          duration={FilterHelper.currentDuration()}\n          status={ns.status}\n          type={this.state.type}\n          metrics={ns.metrics}\n          errorMetrics={ns.errorMetrics}\n        />\n      );\n    }\n    return <div style={{ height: 70 }} />;\n  }\n\n  renderIstioConfigStatus(ns: NamespaceInfo): JSX.Element {\n    let validations: ValidationStatus = { objectCount: 0, errors: 0, warnings: 0 };\n    if (!!ns.validations) {\n      validations = ns.validations;\n    }\n\n    return (\n      <ValidationSummaryLink\n        namespace={ns.name}\n        objectCount={validations.objectCount}\n        errors={validations.errors}\n        warnings={validations.warnings}\n      >\n        <ValidationSummary\n          id={'ns-val-' + ns.name}\n          errors={validations.errors}\n          warnings={validations.warnings}\n          objectCount={validations.objectCount}\n        />\n      </ValidationSummaryLink>\n    );\n  }\n}\n\nconst mapStateToProps = (state: KialiAppState): ReduxProps => ({\n  duration: durationSelector(state),\n  meshStatus: meshWideMTLSStatusSelector(state),\n  navCollapse: state.userSettings.interface.navCollapse,\n  refreshInterval: refreshIntervalSelector(state)\n});\n\nconst OverviewPageContainer = connect(mapStateToProps)(OverviewPage);\nexport default OverviewPageContainer;\n"]},"metadata":{},"sourceType":"module"}