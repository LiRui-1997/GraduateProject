{"ast":null,"code":"import _objectSpread from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _jsxFileName = \"/root/kiali-ui/src/components/SummaryPanel/RateChart.tsx\",\n    _this3 = this;\n\nimport * as React from 'react';\nimport { Chart, ChartBar, ChartStack, ChartAxis, ChartTooltip } from '@patternfly/react-charts';\nimport { VictoryLegend } from 'victory';\nimport { PFColors } from '../../components/Pf/PfColors';\nimport { SUMMARY_PANEL_CHART_WIDTH } from '../../types/Graph';\nimport { addLegendEvent } from 'utils/VictoryEvents';\nexport var legendHeight = 25;\nexport var legendTopMargin = 20;\nexport var RateChart = /*#__PURE__*/function (_React$Component) {\n  _inherits(RateChart, _React$Component);\n\n  var _super = _createSuper(RateChart);\n\n  function RateChart(props) {\n    var _this;\n\n    _classCallCheck(this, RateChart);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      hiddenSeries: new Set()\n    };\n    return _this;\n  }\n\n  _createClass(RateChart, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var singleBar = this.props.series[0].datapoints.length === 1;\n      var height = this.props.height + legendTopMargin + legendHeight;\n      var padding = {\n        top: singleBar ? 10 : 15,\n        left: 5 + this.props.xLabelsWidth,\n        bottom: 10 + legendTopMargin + legendHeight,\n        right: 10\n      };\n      var events = [];\n      this.props.series.forEach(function (_, idx) {\n        addLegendEvent(events, {\n          legendName: _this2.props.baseName + '-legend',\n          idx: idx,\n          serieID: _this2.props.baseName + '-bars-' + idx,\n          onClick: function onClick(__) {\n            // Same event can be fired for several targets, so make sure we only apply it once\n            if (!_this2.state.hiddenSeries.delete(idx)) {\n              // Was not already hidden => add to set\n              _this2.state.hiddenSeries.add(idx);\n            }\n\n            _this2.setState({\n              hiddenSeries: new Set(_this2.state.hiddenSeries)\n            });\n\n            return null;\n          },\n          onMouseOver: function onMouseOver(props) {\n            return {\n              style: _objectSpread(_objectSpread({}, props.style), {}, {\n                strokeWidth: 4,\n                fillOpacity: 0.5\n              })\n            };\n          }\n        });\n      });\n      var fontSize = getComputedStyle(document.body).getPropertyValue('--graph-side-panel--font-size');\n      var fontSizePx = getComputedStyle(document.body).getPropertyValue('--graph-side-panel--font-size-px');\n      var horizontalAxisStyle = {\n        tickLabels: {\n          fontSize: fontSize,\n          padding: 3\n        }\n      };\n      var verticalAxisStyle = singleBar ? {\n        tickLabels: {\n          fill: 'none',\n          fontSize: fontSize\n        }\n      } : {\n        tickLabels: {\n          padding: 2,\n          fontSize: fontSize\n        }\n      };\n      return /*#__PURE__*/React.createElement(Chart, {\n        height: height,\n        width: SUMMARY_PANEL_CHART_WIDTH,\n        padding: padding,\n        domainPadding: {\n          x: singleBar ? [15, 15] : [30, 25]\n        },\n        domain: {\n          y: [0, 100]\n        },\n        events: events,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ChartStack, {\n        colorScale: this.props.series.filter(function (_, idx) {\n          return !_this2.state.hiddenSeries.has(idx);\n        }).map(function (d) {\n          return d.color;\n        }),\n        horizontal: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, this.props.series.map(function (datum, idx) {\n        if (_this2.state.hiddenSeries.has(idx)) {\n          return undefined;\n        }\n\n        return /*#__PURE__*/React.createElement(ChartBar, {\n          key: _this2.props.baseName + '-bars-' + idx,\n          name: _this2.props.baseName + '-bars-' + idx,\n          data: datum.datapoints.map(function (dp) {\n            return _objectSpread(_objectSpread({}, dp), {}, {\n              label: \"\".concat(dp.name, \": \").concat(dp.y.toFixed(2), \" %\")\n            });\n          }),\n          barWidth: 10,\n          labelComponent: /*#__PURE__*/React.createElement(ChartTooltip, {\n            constrainToVisibleArea: true,\n            flyoutStyle: {\n              stroke: 'none',\n              fillOpacity: 0.6\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }\n          }),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }\n        });\n      })), /*#__PURE__*/React.createElement(ChartAxis, {\n        style: verticalAxisStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ChartAxis, {\n        style: horizontalAxisStyle,\n        dependentAxis: true,\n        showGrid: true,\n        crossAxis: false,\n        tickValues: [0, 25, 50, 75, 100],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(VictoryLegend, {\n        style: {\n          labels: {\n            fontSize: Number(fontSizePx)\n          }\n        },\n        name: this.props.baseName + '-legend',\n        data: this.props.series.map(function (s, idx) {\n          if (_this2.state.hiddenSeries.has(idx)) {\n            return _objectSpread(_objectSpread({}, s.legendItem), {}, {\n              symbol: {\n                fill: PFColors.Black600\n              }\n            });\n          }\n\n          return s.legendItem;\n        }),\n        x: this.props.xLabelsWidth,\n        y: height - legendHeight,\n        height: legendHeight,\n        width: SUMMARY_PANEL_CHART_WIDTH,\n        gutter: 14,\n        symbolSpacer: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return RateChart;\n}(React.Component);\nexport var renderRateChartHttp = function renderRateChartHttp(percent2xx, percent3xx, percent4xx, percent5xx, percentNR) {\n  var vcLines = [{\n    name: 'OK',\n    x: 'rate',\n    y: percent2xx,\n    color: PFColors.Success\n  }, {\n    name: '3xx',\n    x: 'rate',\n    y: percent3xx,\n    color: PFColors.Info\n  }, {\n    name: '4xx',\n    x: 'rate',\n    y: percent4xx,\n    color: PFColors.ChartWarning\n  }, // 4xx client error, use close but distinct color\n  {\n    name: '5xx',\n    x: 'rate',\n    y: percent5xx,\n    color: PFColors.ChartDanger\n  }, {\n    name: 'No Response',\n    x: 'rate',\n    y: percentNR,\n    color: PFColors.ChartOther\n  } // No Response, just use black\n  ].map(function (dp) {\n    return {\n      datapoints: [dp],\n      color: dp.color,\n      legendItem: {\n        name: dp.name === 'No Response' ? 'NR' : dp.name,\n        symbol: {\n          fill: dp.color\n        }\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(RateChart, {\n    baseName: 'rate-http',\n    height: 80,\n    xLabelsWidth: 0,\n    series: vcLines,\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 10\n    }\n  });\n};\nexport var renderRateChartGrpc = function renderRateChartGrpc(percentOK, percentErr) {\n  var vcLines = [{\n    name: 'OK',\n    x: 'rate',\n    y: percentOK,\n    color: PFColors.Success\n  }, {\n    name: 'Err',\n    x: 'rate',\n    y: percentErr,\n    color: PFColors.Danger\n  }].map(function (dp) {\n    return {\n      datapoints: [dp],\n      color: dp.color,\n      legendItem: {\n        name: dp.name,\n        symbol: {\n          fill: dp.color\n        }\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(RateChart, {\n    baseName: 'rate-grpc',\n    height: 80,\n    xLabelsWidth: 0,\n    series: vcLines,\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 10\n    }\n  });\n};\nexport var renderInOutRateChartHttp = function renderInOutRateChartHttp(percent2xxIn, percent3xxIn, percent4xxIn, percent5xxIn, percentNRIn, percent2xxOut, percent3xxOut, percent4xxOut, percent5xxOut, percentNROut) {\n  var vcLines = [{\n    name: 'OK',\n    dp: [{\n      x: 'In',\n      y: percent2xxIn\n    }, {\n      x: 'Out',\n      y: percent2xxOut\n    }],\n    color: PFColors.Success\n  }, {\n    name: '3xx',\n    dp: [{\n      x: 'In',\n      y: percent3xxIn\n    }, {\n      x: 'Out',\n      y: percent3xxOut\n    }],\n    color: PFColors.Info\n  }, {\n    name: '4xx',\n    dp: [{\n      x: 'In',\n      y: percent4xxIn\n    }, {\n      x: 'Out',\n      y: percent4xxOut\n    }],\n    color: PFColors.ChartWarning\n  }, // 4xx client error, use close but distinct color\n  {\n    name: '5xx',\n    dp: [{\n      x: 'In',\n      y: percent5xxIn\n    }, {\n      x: 'Out',\n      y: percent5xxOut\n    }],\n    color: PFColors.ChartDanger\n  }, {\n    name: 'No Response',\n    dp: [{\n      x: 'In',\n      y: percentNRIn\n    }, {\n      x: 'Out',\n      y: percentNROut\n    }],\n    color: PFColors.ChartOther\n  } // No Response error, just use black\n  ].map(function (line) {\n    return {\n      datapoints: line.dp.map(function (dp) {\n        return _objectSpread({\n          name: line.name,\n          color: line.color\n        }, dp);\n      }),\n      color: line.color,\n      legendItem: {\n        name: line.name === 'No Response' ? 'NR' : line.name,\n        symbol: {\n          fill: line.color\n        }\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(RateChart, {\n    baseName: 'in-out-rate-http',\n    height: 80,\n    xLabelsWidth: 25,\n    series: vcLines,\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 10\n    }\n  });\n};\nexport var renderInOutRateChartGrpc = function renderInOutRateChartGrpc(percentOKIn, percentErrIn, percentOKOut, percentErrOut) {\n  var vcLines = [{\n    name: 'OK',\n    dp: [{\n      x: 'In',\n      y: percentOKIn\n    }, {\n      x: 'Out',\n      y: percentOKOut\n    }],\n    color: PFColors.Success\n  }, {\n    name: 'Err',\n    dp: [{\n      x: 'In',\n      y: percentErrIn\n    }, {\n      x: 'Out',\n      y: percentErrOut\n    }],\n    color: PFColors.Danger\n  }].map(function (line) {\n    return {\n      datapoints: line.dp.map(function (dp) {\n        return _objectSpread({\n          name: line.name,\n          color: line.color\n        }, dp);\n      }),\n      color: line.color,\n      legendItem: {\n        name: line.name,\n        symbol: {\n          fill: line.color\n        }\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(RateChart, {\n    baseName: 'in-out-rate-grpc',\n    height: 132,\n    xLabelsWidth: 25,\n    series: vcLines,\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 10\n    }\n  });\n};","map":{"version":3,"sources":["/root/kiali-ui/src/components/SummaryPanel/RateChart.tsx"],"names":["React","Chart","ChartBar","ChartStack","ChartAxis","ChartTooltip","VictoryLegend","PFColors","SUMMARY_PANEL_CHART_WIDTH","addLegendEvent","legendHeight","legendTopMargin","RateChart","props","state","hiddenSeries","Set","singleBar","series","datapoints","length","height","padding","top","left","xLabelsWidth","bottom","right","events","forEach","_","idx","legendName","baseName","serieID","onClick","__","delete","add","setState","onMouseOver","style","strokeWidth","fillOpacity","fontSize","getComputedStyle","document","body","getPropertyValue","fontSizePx","horizontalAxisStyle","tickLabels","verticalAxisStyle","fill","x","y","filter","has","map","d","color","datum","undefined","dp","label","name","toFixed","stroke","labels","Number","s","legendItem","symbol","Black600","Component","renderRateChartHttp","percent2xx","percent3xx","percent4xx","percent5xx","percentNR","vcLines","Success","Info","ChartWarning","ChartDanger","ChartOther","renderRateChartGrpc","percentOK","percentErr","Danger","renderInOutRateChartHttp","percent2xxIn","percent3xxIn","percent4xxIn","percent5xxIn","percentNRIn","percent2xxOut","percent3xxOut","percent4xxOut","percent5xxOut","percentNROut","line","renderInOutRateChartGrpc","percentOKIn","percentErrIn","percentOKOut","percentErrOut"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Chart, ChartBar, ChartStack, ChartAxis, ChartTooltip } from '@patternfly/react-charts';\nimport { VictoryLegend } from 'victory';\n\nimport { PFColors } from '../../components/Pf/PfColors';\nimport { SUMMARY_PANEL_CHART_WIDTH } from '../../types/Graph';\nimport { RichDataPoint, VCLines } from 'types/VictoryChartInfo';\nimport { addLegendEvent, VCEvent } from 'utils/VictoryEvents';\n\nexport const legendHeight = 25;\nexport const legendTopMargin = 20;\n\ntype Props = {\n  baseName: string;\n  series: VCLines<RichDataPoint>;\n  height: number;\n  xLabelsWidth: number;\n};\n\ntype State = {\n  hiddenSeries: Set<number>;\n};\n\nexport class RateChart extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hiddenSeries: new Set() };\n  }\n\n  render() {\n    const singleBar = this.props.series[0].datapoints.length === 1;\n    let height = this.props.height + legendTopMargin + legendHeight;\n    const padding = {\n      top: singleBar ? 10 : 15,\n      left: 5 + this.props.xLabelsWidth,\n      bottom: 10 + legendTopMargin + legendHeight,\n      right: 10\n    };\n    const events: VCEvent[] = [];\n    this.props.series.forEach((_, idx) => {\n      addLegendEvent(events, {\n        legendName: this.props.baseName + '-legend',\n        idx: idx,\n        serieID: this.props.baseName + '-bars-' + idx,\n        onClick: __ => {\n          // Same event can be fired for several targets, so make sure we only apply it once\n          if (!this.state.hiddenSeries.delete(idx)) {\n            // Was not already hidden => add to set\n            this.state.hiddenSeries.add(idx);\n          }\n          this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n          return null;\n        },\n        onMouseOver: props => {\n          return {\n            style: { ...props.style, strokeWidth: 4, fillOpacity: 0.5 }\n          };\n        }\n      });\n    });\n    const fontSize = getComputedStyle(document.body).getPropertyValue('--graph-side-panel--font-size');\n    const fontSizePx = getComputedStyle(document.body).getPropertyValue('--graph-side-panel--font-size-px');\n    const horizontalAxisStyle = { tickLabels: { fontSize: fontSize, padding: 3 } };\n    const verticalAxisStyle = singleBar\n      ? { tickLabels: { fill: 'none', fontSize: fontSize } }\n      : { tickLabels: { padding: 2, fontSize: fontSize } };\n    return (\n      <Chart\n        height={height}\n        width={SUMMARY_PANEL_CHART_WIDTH}\n        padding={padding}\n        domainPadding={{ x: singleBar ? [15, 15] : [30, 25] }}\n        domain={{ y: [0, 100] }}\n        events={events}\n      >\n        <ChartStack\n          colorScale={this.props.series.filter((_, idx) => !this.state.hiddenSeries.has(idx)).map(d => d.color)}\n          horizontal={true}\n        >\n          {this.props.series.map((datum, idx) => {\n            if (this.state.hiddenSeries.has(idx)) {\n              return undefined;\n            }\n            return (\n              <ChartBar\n                key={this.props.baseName + '-bars-' + idx}\n                name={this.props.baseName + '-bars-' + idx}\n                data={datum.datapoints.map(dp => {\n                  return {\n                    ...dp,\n                    label: `${dp.name}: ${dp.y.toFixed(2)} %`\n                  };\n                })}\n                barWidth={10}\n                labelComponent={\n                  <ChartTooltip constrainToVisibleArea={true} flyoutStyle={{ stroke: 'none', fillOpacity: 0.6 }} />\n                }\n              />\n            );\n          })}\n        </ChartStack>\n        <ChartAxis style={verticalAxisStyle} />\n        <ChartAxis\n          style={horizontalAxisStyle}\n          dependentAxis={true}\n          showGrid={true}\n          crossAxis={false}\n          tickValues={[0, 25, 50, 75, 100]}\n        />\n        <VictoryLegend\n          style={{ labels: { fontSize: Number(fontSizePx) } }}\n          name={this.props.baseName + '-legend'}\n          data={this.props.series.map((s, idx) => {\n            if (this.state.hiddenSeries.has(idx)) {\n              return { ...s.legendItem, symbol: { fill: PFColors.Black600 } };\n            }\n            return s.legendItem;\n          })}\n          x={this.props.xLabelsWidth}\n          y={height - legendHeight}\n          height={legendHeight}\n          width={SUMMARY_PANEL_CHART_WIDTH}\n          gutter={14}\n          symbolSpacer={8}\n        />\n      </Chart>\n    );\n  }\n}\n\nexport const renderRateChartHttp = (\n  percent2xx: number,\n  percent3xx: number,\n  percent4xx: number,\n  percent5xx: number,\n  percentNR: number\n) => {\n  const vcLines: VCLines<RichDataPoint> = [\n    { name: 'OK', x: 'rate', y: percent2xx, color: PFColors.Success },\n    { name: '3xx', x: 'rate', y: percent3xx, color: PFColors.Info },\n    { name: '4xx', x: 'rate', y: percent4xx, color: PFColors.ChartWarning }, // 4xx client error, use close but distinct color\n    { name: '5xx', x: 'rate', y: percent5xx, color: PFColors.ChartDanger },\n    { name: 'No Response', x: 'rate', y: percentNR, color: PFColors.ChartOther } // No Response, just use black\n  ].map(dp => {\n    return {\n      datapoints: [dp],\n      color: dp.color,\n      legendItem: {\n        name: dp.name === 'No Response' ? 'NR' : dp.name,\n        symbol: { fill: dp.color }\n      }\n    };\n  });\n  return <RateChart baseName={'rate-http'} height={80} xLabelsWidth={0} series={vcLines} />;\n};\n\nexport const renderRateChartGrpc = (percentOK: number, percentErr: number) => {\n  const vcLines: VCLines<RichDataPoint> = [\n    { name: 'OK', x: 'rate', y: percentOK, color: PFColors.Success },\n    { name: 'Err', x: 'rate', y: percentErr, color: PFColors.Danger }\n  ].map(dp => {\n    return {\n      datapoints: [dp],\n      color: dp.color,\n      legendItem: {\n        name: dp.name,\n        symbol: { fill: dp.color }\n      }\n    };\n  });\n  return <RateChart baseName={'rate-grpc'} height={80} xLabelsWidth={0} series={vcLines} />;\n};\n\nexport const renderInOutRateChartHttp = (\n  percent2xxIn: number,\n  percent3xxIn: number,\n  percent4xxIn: number,\n  percent5xxIn: number,\n  percentNRIn: number,\n  percent2xxOut: number,\n  percent3xxOut: number,\n  percent4xxOut: number,\n  percent5xxOut: number,\n  percentNROut: number\n) => {\n  const vcLines: VCLines<RichDataPoint> = [\n    {\n      name: 'OK',\n      dp: [\n        { x: 'In', y: percent2xxIn },\n        { x: 'Out', y: percent2xxOut }\n      ],\n      color: PFColors.Success\n    },\n    {\n      name: '3xx',\n      dp: [\n        { x: 'In', y: percent3xxIn },\n        { x: 'Out', y: percent3xxOut }\n      ],\n      color: PFColors.Info\n    },\n    {\n      name: '4xx',\n      dp: [\n        { x: 'In', y: percent4xxIn },\n        { x: 'Out', y: percent4xxOut }\n      ],\n      color: PFColors.ChartWarning\n    }, // 4xx client error, use close but distinct color\n    {\n      name: '5xx',\n      dp: [\n        { x: 'In', y: percent5xxIn },\n        { x: 'Out', y: percent5xxOut }\n      ],\n      color: PFColors.ChartDanger\n    },\n    {\n      name: 'No Response',\n      dp: [\n        { x: 'In', y: percentNRIn },\n        { x: 'Out', y: percentNROut }\n      ],\n      color: PFColors.ChartOther\n    } // No Response error, just use black\n  ].map(line => {\n    return {\n      datapoints: line.dp.map(dp => ({\n        name: line.name,\n        color: line.color,\n        ...dp\n      })),\n      color: line.color,\n      legendItem: {\n        name: line.name === 'No Response' ? 'NR' : line.name,\n        symbol: { fill: line.color }\n      }\n    };\n  });\n  return <RateChart baseName={'in-out-rate-http'} height={80} xLabelsWidth={25} series={vcLines} />;\n};\n\nexport const renderInOutRateChartGrpc = (\n  percentOKIn: number,\n  percentErrIn: number,\n  percentOKOut: number,\n  percentErrOut: number\n) => {\n  const vcLines: VCLines<RichDataPoint> = [\n    {\n      name: 'OK',\n      dp: [\n        { x: 'In', y: percentOKIn },\n        { x: 'Out', y: percentOKOut }\n      ],\n      color: PFColors.Success\n    },\n    {\n      name: 'Err',\n      dp: [\n        { x: 'In', y: percentErrIn },\n        { x: 'Out', y: percentErrOut }\n      ],\n      color: PFColors.Danger\n    }\n  ].map(line => {\n    return {\n      datapoints: line.dp.map(dp => ({\n        name: line.name,\n        color: line.color,\n        ...dp\n      })),\n      color: line.color,\n      legendItem: {\n        name: line.name,\n        symbol: { fill: line.color }\n      }\n    };\n  });\n  return <RateChart baseName={'in-out-rate-grpc'} height={132} xLabelsWidth={25} series={vcLines} />;\n};\n"]},"metadata":{},"sourceType":"module"}