{"ast":null,"code":"import WorkloadListPage from './pages/WorkloadList/WorkloadListPage';\nimport ServiceListPage from './pages/ServiceList/ServiceListPage';\nimport IstioConfigPage from './pages/IstioConfigList/IstioConfigListPage';\nimport IstioConfigDetailsPage from './pages/IstioConfigDetails/IstioConfigDetailsPage';\nimport WorkloadDetailsPage from './pages/WorkloadDetails/WorkloadDetailsPage'; // import AppListPage from './pages/AppList/AppListPage';\n\nimport AppDetailsPage from './pages/AppDetails/AppDetailsPage';\nimport OverviewPageContainer from './pages/Overview/OverviewPage';\nimport GraphPageContainer from './pages/Graph/GraphPage';\nimport { Paths } from './config';\nimport ServiceDetailsPageContainer from './pages/ServiceDetails/ServiceDetailsPage';\nimport IstioConfigNewPageContainer from './pages/IstioConfigNew/IstioConfigNewPage';\nimport ExperimentListPage from './pages/extensions/iter8/Iter8ExperimentList/ExperimentListPage';\nimport ExperimentCreatePageContainer from './pages/extensions/iter8/Iter8ExperimentDetails/ExperimentCreatePage';\nimport ExperimentDetailsPage from './pages/extensions/iter8/Iter8ExperimentDetails/ExperimentDetailsPage';\nimport ExperimentCreateFromFileContainer from './pages/extensions/iter8/Iter8ExperimentDetails/ExperimentCreateFromFile';\nimport MeshPage from 'pages/Mesh/MeshPage';\nimport Metrics from './pages/extensions/iter8/metrics/Metrics';\nimport Traffic from './pages/extensions/iter8/TrafficInjection/Traffic';\nimport MSetup from './pages/extensions/iter8/MSetup/MSetup';\nimport Repo from './pages/extensions/iter8/Repo/repo';\n/**\n * Return array of objects that describe vertical menu\n * @return {array}\n */\n\nvar navItems = [{\n  title: '智能决策实验',\n  to: '/extensions/iter8',\n  pathsActive: [/^\\/extensions\\/iter8/, new RegExp('^/extensions/namespaces/(.*)/iter8')]\n}, {\n  title: '服务网格配置',\n  to: '/' + Paths.ISTIO,\n  pathsActive: [new RegExp('^/namespaces/(.*)/' + Paths.ISTIO + '/(.*)'), new RegExp('/' + Paths.ISTIO + '/new/(.*)')]\n}, {\n  title: '服务调用分析',\n  to: '/graph/namespaces/',\n  pathsActive: [/^\\/graph\\/(.*)/]\n}, // {\n//   title: 'Overview',\n//   to: '/overview',\n//   pathsActive: [/^\\/overview\\/(.*)/]\n// },\n{\n  title: '服务流量注入',\n  to: '/' + Paths.Traffic,\n  pathsActive: [new RegExp('^/namespaces/(.*)/' + Paths.WORKLOADS + '/(.*)')]\n}, {\n  title: '性能指标设置',\n  to: '/' + Paths.MSetup,\n  pathsActive: [new RegExp('^/namespaces/(.*)/' + Paths.WORKLOADS + '/(.*)')]\n}, {\n  title: '性能指标监控',\n  to: '/' + Paths.Metrics,\n  pathsActive: [new RegExp('^/namespaces/(.*)/' + Paths.APPLICATIONS + '/(.*)')]\n}, {\n  title: '服务配置仓库',\n  to: '/' + Paths.Repo,\n  pathsActive: [new RegExp('^/namespaces/(.*)/' + Paths.WORKLOADS + '/(.*)')]\n} // {\n//   title: 'Services',\n//   to: '/' + Paths.SERVICES,\n//   pathsActive: [new RegExp('^/namespaces/(.*)/' + Paths.SERVICES + '/(.*)')]\n// },\n// {\n//   title: 'Distributed Tracing',\n//   to: '/jaeger'\n// },\n// {\n//   title: 'Mesh',\n//   to: '/mesh'\n// }\n]; // const extensionsItems: MenuItem[] = [\n//   {\n//     title: '智能决策实验',\n//     to: '/extensions/iter8',\n//     pathsActive: [/^\\/extensions\\/iter8/, new RegExp('^/extensions/namespaces/(.*)/iter8')]\n//   }\n// ];\n\nvar defaultRoute = '/extensions/iter8';\nvar pathRoutes = [{\n  path: '/overview',\n  component: OverviewPageContainer\n}, {\n  path: '/graph/node/namespaces/:namespace/' + Paths.AGGREGATES + '/:aggregate/:aggregateValue',\n  component: GraphPageContainer\n}, {\n  path: '/graph/node/namespaces/:namespace/' + Paths.APPLICATIONS + '/:app/versions/:version',\n  component: GraphPageContainer\n}, {\n  path: '/graph/node/namespaces/:namespace/' + Paths.APPLICATIONS + '/:app',\n  component: GraphPageContainer\n}, {\n  path: '/graph/node/namespaces/:namespace/' + Paths.SERVICES + '/:service',\n  component: GraphPageContainer\n}, {\n  path: '/graph/node/namespaces/:namespace/' + Paths.WORKLOADS + '/:workload',\n  component: GraphPageContainer\n}, {\n  path: '/graph/namespaces',\n  component: GraphPageContainer\n}, {\n  path: '/namespaces/:namespace/' + Paths.SERVICES + '/:service',\n  component: ServiceDetailsPageContainer\n}, {\n  path: '/namespaces/:namespace/' + Paths.ISTIO + '/:objectType/:object',\n  component: IstioConfigDetailsPage\n}, {\n  path: '/' + Paths.SERVICES,\n  component: ServiceListPage\n}, {\n  path: '/' + Paths.Metrics,\n  component: Metrics\n}, {\n  path: '/' + Paths.Traffic,\n  component: Traffic\n}, {\n  path: '/' + Paths.MSetup,\n  component: MSetup\n}, {\n  path: '/' + Paths.Repo,\n  component: Repo\n}, {\n  path: '/' + Paths.APPLICATIONS,\n  component: Metrics\n}, {\n  path: '/namespaces/:namespace/' + Paths.APPLICATIONS + '/:app',\n  component: AppDetailsPage\n}, {\n  path: '/' + Paths.WORKLOADS,\n  component: WorkloadListPage\n}, {\n  path: '/namespaces/:namespace/' + Paths.WORKLOADS + '/:workload',\n  component: WorkloadDetailsPage\n}, {\n  path: '/' + Paths.ISTIO + '/new/:objectType',\n  component: IstioConfigNewPageContainer\n}, {\n  path: '/' + Paths.ISTIO,\n  component: IstioConfigPage\n}, {\n  path: '/' + Paths.JAEGER,\n  component: undefined\n}, {\n  path: '/' + Paths.MESH,\n  component: MeshPage\n}];\nvar extensionsRoutes = [// Keep routes ordered with the more specific URLs first\n// Extension will follow /extensions/<extension>/namespaces/:namespace/experiments/:name pattern\n// To make RenderPage.tsx routes easy to filter without regex\n{\n  path: '/extensions/namespaces/:namespace/iter8/:name',\n  component: ExperimentDetailsPage\n}, {\n  path: '/extensions/iter8/new',\n  component: ExperimentCreatePageContainer\n}, {\n  path: '/extensions/iter8/newFromFile',\n  component: ExperimentCreateFromFileContainer\n}, {\n  path: '/extensions/iter8',\n  component: ExperimentListPage\n}, {\n  path: '/extensions/iter8/metrics',\n  component: Metrics\n}];\nexport { defaultRoute, navItems, pathRoutes, extensionsRoutes };","map":{"version":3,"sources":["/root/GraduateProject/src/routes.tsx"],"names":["WorkloadListPage","ServiceListPage","IstioConfigPage","IstioConfigDetailsPage","WorkloadDetailsPage","AppDetailsPage","OverviewPageContainer","GraphPageContainer","Paths","ServiceDetailsPageContainer","IstioConfigNewPageContainer","ExperimentListPage","ExperimentCreatePageContainer","ExperimentDetailsPage","ExperimentCreateFromFileContainer","MeshPage","Metrics","Traffic","MSetup","Repo","navItems","title","to","pathsActive","RegExp","ISTIO","WORKLOADS","APPLICATIONS","defaultRoute","pathRoutes","path","component","AGGREGATES","SERVICES","JAEGER","undefined","MESH","extensionsRoutes"],"mappings":"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","sourcesContent":["import WorkloadListPage from './pages/WorkloadList/WorkloadListPage';\nimport ServiceListPage from './pages/ServiceList/ServiceListPage';\nimport IstioConfigPage from './pages/IstioConfigList/IstioConfigListPage';\nimport IstioConfigDetailsPage from './pages/IstioConfigDetails/IstioConfigDetailsPage';\nimport WorkloadDetailsPage from './pages/WorkloadDetails/WorkloadDetailsPage';\n// import AppListPage from './pages/AppList/AppListPage';\nimport AppDetailsPage from './pages/AppDetails/AppDetailsPage';\nimport OverviewPageContainer from './pages/Overview/OverviewPage';\nimport { MenuItem, Path } from './types/Routes';\nimport GraphPageContainer from './pages/Graph/GraphPage';\nimport { Paths } from './config';\nimport ServiceDetailsPageContainer from './pages/ServiceDetails/ServiceDetailsPage';\nimport IstioConfigNewPageContainer from './pages/IstioConfigNew/IstioConfigNewPage';\nimport ExperimentListPage from './pages/extensions/iter8/Iter8ExperimentList/ExperimentListPage';\nimport ExperimentCreatePageContainer from './pages/extensions/iter8/Iter8ExperimentDetails/ExperimentCreatePage';\nimport ExperimentDetailsPage from './pages/extensions/iter8/Iter8ExperimentDetails/ExperimentDetailsPage';\nimport ExperimentCreateFromFileContainer from './pages/extensions/iter8/Iter8ExperimentDetails/ExperimentCreateFromFile';\nimport MeshPage from 'pages/Mesh/MeshPage';\nimport Metrics from './pages/extensions/iter8/metrics/Metrics';\nimport Traffic from './pages/extensions/iter8/TrafficInjection/Traffic';\nimport MSetup from './pages/extensions/iter8/MSetup/MSetup';\nimport Repo from './pages/extensions/iter8/Repo/repo';\n\n/**\n * Return array of objects that describe vertical menu\n * @return {array}\n */\nconst navItems: MenuItem[] = [\n  {\n    title: '智能决策实验',\n    to: '/extensions/iter8',\n    pathsActive: [/^\\/extensions\\/iter8/, new RegExp('^/extensions/namespaces/(.*)/iter8')]\n  },\n  {\n    title: '服务网格配置',\n    to: '/' + Paths.ISTIO,\n    pathsActive: [new RegExp('^/namespaces/(.*)/' + Paths.ISTIO + '/(.*)'), new RegExp('/' + Paths.ISTIO + '/new/(.*)')]\n  },\n  {\n    title: '服务调用分析',\n    to: '/graph/namespaces/',\n    pathsActive: [/^\\/graph\\/(.*)/]\n  },\n  // {\n  //   title: 'Overview',\n  //   to: '/overview',\n  //   pathsActive: [/^\\/overview\\/(.*)/]\n  // },\n  {\n    title: '服务流量注入',\n    to: '/' + Paths.Traffic,\n    pathsActive: [new RegExp('^/namespaces/(.*)/' + Paths.WORKLOADS + '/(.*)')]\n  },\n  {\n    title: '性能指标设置',\n    to: '/' + Paths.MSetup,\n    pathsActive: [new RegExp('^/namespaces/(.*)/' + Paths.WORKLOADS + '/(.*)')]\n  },\n  {\n    title: '性能指标监控',\n    to: '/' + Paths.Metrics,\n    pathsActive: [new RegExp('^/namespaces/(.*)/' + Paths.APPLICATIONS + '/(.*)')]\n  },\n  {\n    title: '服务配置仓库',\n    to: '/' + Paths.Repo,\n    pathsActive: [new RegExp('^/namespaces/(.*)/' + Paths.WORKLOADS + '/(.*)')]\n  }\n  // {\n  //   title: 'Services',\n  //   to: '/' + Paths.SERVICES,\n  //   pathsActive: [new RegExp('^/namespaces/(.*)/' + Paths.SERVICES + '/(.*)')]\n  // },\n\n  // {\n  //   title: 'Distributed Tracing',\n  //   to: '/jaeger'\n  // },\n  // {\n  //   title: 'Mesh',\n  //   to: '/mesh'\n  // }\n];\n\n// const extensionsItems: MenuItem[] = [\n//   {\n//     title: '智能决策实验',\n//     to: '/extensions/iter8',\n//     pathsActive: [/^\\/extensions\\/iter8/, new RegExp('^/extensions/namespaces/(.*)/iter8')]\n//   }\n// ];\n\nconst defaultRoute = '/extensions/iter8';\n\nconst pathRoutes: Path[] = [\n  {\n    path: '/overview',\n    component: OverviewPageContainer\n  },\n  {\n    path: '/graph/node/namespaces/:namespace/' + Paths.AGGREGATES + '/:aggregate/:aggregateValue',\n    component: GraphPageContainer\n  },\n  {\n    path: '/graph/node/namespaces/:namespace/' + Paths.APPLICATIONS + '/:app/versions/:version',\n    component: GraphPageContainer\n  },\n  {\n    path: '/graph/node/namespaces/:namespace/' + Paths.APPLICATIONS + '/:app',\n    component: GraphPageContainer\n  },\n  {\n    path: '/graph/node/namespaces/:namespace/' + Paths.SERVICES + '/:service',\n    component: GraphPageContainer\n  },\n  {\n    path: '/graph/node/namespaces/:namespace/' + Paths.WORKLOADS + '/:workload',\n    component: GraphPageContainer\n  },\n  {\n    path: '/graph/namespaces',\n    component: GraphPageContainer\n  },\n  {\n    path: '/namespaces/:namespace/' + Paths.SERVICES + '/:service',\n    component: ServiceDetailsPageContainer\n  },\n  {\n    path: '/namespaces/:namespace/' + Paths.ISTIO + '/:objectType/:object',\n    component: IstioConfigDetailsPage\n  },\n  {\n    path: '/' + Paths.SERVICES,\n    component: ServiceListPage\n  },\n  {\n    path: '/' + Paths.Metrics,\n    component: Metrics\n  },\n  {\n    path: '/' + Paths.Traffic,\n    component: Traffic\n  },\n  {\n    path: '/' + Paths.MSetup,\n    component: MSetup\n  },\n  {\n    path: '/' + Paths.Repo,\n    component: Repo\n  },\n  {\n    path: '/' + Paths.APPLICATIONS,\n    component: Metrics\n  },\n  {\n    path: '/namespaces/:namespace/' + Paths.APPLICATIONS + '/:app',\n    component: AppDetailsPage\n  },\n  {\n    path: '/' + Paths.WORKLOADS,\n    component: WorkloadListPage\n  },\n  {\n    path: '/namespaces/:namespace/' + Paths.WORKLOADS + '/:workload',\n    component: WorkloadDetailsPage\n  },\n  {\n    path: '/' + Paths.ISTIO + '/new/:objectType',\n    component: IstioConfigNewPageContainer\n  },\n  {\n    path: '/' + Paths.ISTIO,\n    component: IstioConfigPage\n  },\n  {\n    path: '/' + Paths.JAEGER,\n    component: undefined\n  },\n  {\n    path: '/' + Paths.MESH,\n    component: MeshPage\n  }\n];\n\nconst extensionsRoutes: Path[] = [\n  // Keep routes ordered with the more specific URLs first\n  // Extension will follow /extensions/<extension>/namespaces/:namespace/experiments/:name pattern\n  // To make RenderPage.tsx routes easy to filter without regex\n  {\n    path: '/extensions/namespaces/:namespace/iter8/:name',\n    component: ExperimentDetailsPage\n  },\n  {\n    path: '/extensions/iter8/new',\n    component: ExperimentCreatePageContainer\n  },\n  {\n    path: '/extensions/iter8/newFromFile',\n    component: ExperimentCreateFromFileContainer\n  },\n  {\n    path: '/extensions/iter8',\n    component: ExperimentListPage\n  },\n  {\n    path: '/extensions/iter8/metrics',\n    component: Metrics\n  }\n];\n\nexport { defaultRoute, navItems, pathRoutes, extensionsRoutes };\n"]},"metadata":{},"sourceType":"module"}