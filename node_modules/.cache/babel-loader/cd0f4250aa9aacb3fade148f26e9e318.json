{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/pages/IstioConfigNew/GatewayForm/ServerList.tsx\";\nimport * as React from 'react';\nimport { cellWidth, Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { style } from 'typestyle';\nimport { PFColors } from '../../../components/Pf/PfColors';\nvar noServerStyle = style({\n  marginTop: 10,\n  color: PFColors.Red100,\n  textAlign: 'center',\n  width: '100%'\n});\nvar headerCells = [{\n  title: 'Server Hosts',\n  transforms: [cellWidth(100)],\n  props: {}\n}, {\n  title: 'Port',\n  transforms: [cellWidth(20)],\n  props: {}\n}, {\n  title: 'TLS',\n  transforms: [cellWidth(100)],\n  props: {}\n}, {\n  title: '',\n  props: {}\n}];\n\nvar ServerList = /*#__PURE__*/function (_React$Component) {\n  _inherits(ServerList, _React$Component);\n\n  var _super = _createSuper(ServerList);\n\n  function ServerList() {\n    var _this;\n\n    _classCallCheck(this, ServerList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.rows = function () {\n      return _this.props.serverList.map(function (server, i) {\n        return {\n          key: 'server_' + i,\n          cells: [/*#__PURE__*/React.createElement(React.Fragment, null, server.hosts.map(function (host) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 15\n              }\n            }, host);\n          })), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }\n          }, server.port.name), /*#__PURE__*/React.createElement(\"div\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }\n          }, \"[\", server.port.number, \", \", server.port.protocol, \"]\")), /*#__PURE__*/React.createElement(React.Fragment, null, server.tls ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }\n          }, server.tls.mode), server.tls.serverCertificate && server.tls.serverCertificate.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }\n          }, \"[\", server.tls.serverCertificate, \"]\") : undefined, server.tls.privateKey && server.tls.privateKey.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }\n          }, \"[\", server.tls.privateKey, \"]\") : undefined, server.tls.caCertificates && server.tls.caCertificates.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }\n          }, \"[\", server.tls.caCertificates, \"]\") : undefined) : undefined), /*#__PURE__*/React.createElement(React.Fragment, null)]\n        };\n      });\n    };\n\n    _this.actionResolver = function (rowData, _ref) {\n      var rowIndex = _ref.rowIndex;\n      var removeAction = {\n        title: 'Remove Rule',\n        // @ts-ignore\n        onClick: function onClick(event, rowIndex, rowData, extraData) {\n          _this.props.onRemoveServer(rowIndex);\n        }\n      };\n      return [removeAction];\n    };\n\n    return _this;\n  }\n\n  _createClass(ServerList, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n        \"aria-label\": \"Server List\",\n        cells: headerCells,\n        rows: this.rows() // @ts-ignore\n        ,\n        actionResolver: this.actionResolver,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      })), this.props.serverList.length === 0 && /*#__PURE__*/React.createElement(\"div\", {\n        className: noServerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 48\n        }\n      }, \"No Servers defined\"));\n    }\n  }]);\n\n  return ServerList;\n}(React.Component);\n\nexport default ServerList;","map":{"version":3,"sources":["/root/GraduateProject/src/pages/IstioConfigNew/GatewayForm/ServerList.tsx"],"names":["React","cellWidth","Table","TableBody","TableHeader","style","PFColors","noServerStyle","marginTop","color","Red100","textAlign","width","headerCells","title","transforms","props","ServerList","rows","serverList","map","server","i","key","cells","hosts","host","port","name","number","protocol","tls","mode","serverCertificate","length","undefined","privateKey","caCertificates","actionResolver","rowData","rowIndex","removeAction","onClick","event","extraData","onRemoveServer","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Server } from '../../../types/IstioObjects';\nimport { cellWidth, ICell, Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { style } from 'typestyle';\nimport { PFColors } from '../../../components/Pf/PfColors';\n\ntype Props = {\n  serverList: Server[];\n  onRemoveServer: (index: number) => void;\n};\n\nconst noServerStyle = style({\n  marginTop: 10,\n  color: PFColors.Red100,\n  textAlign: 'center',\n  width: '100%'\n});\n\nconst headerCells: ICell[] = [\n  {\n    title: 'Server Hosts',\n    transforms: [cellWidth(100) as any],\n    props: {}\n  },\n  {\n    title: 'Port',\n    transforms: [cellWidth(20) as any],\n    props: {}\n  },\n  {\n    title: 'TLS',\n    transforms: [cellWidth(100) as any],\n    props: {}\n  },\n  {\n    title: '',\n    props: {}\n  }\n];\n\nclass ServerList extends React.Component<Props> {\n  rows = () => {\n    return this.props.serverList.map((server, i) => {\n      return {\n        key: 'server_' + i,\n        cells: [\n          <>\n            {server.hosts.map(host => (\n              <div>{host}</div>\n            ))}\n          </>,\n          <>\n            <div>{server.port.name}</div>\n            <div>\n              [{server.port.number}, {server.port.protocol}]\n            </div>\n          </>,\n          <>\n            {server.tls ? (\n              <>\n                <div>{server.tls.mode}</div>\n                {server.tls.serverCertificate && server.tls.serverCertificate.length > 0 ? (\n                  <div>[{server.tls.serverCertificate}]</div>\n                ) : undefined}\n                {server.tls.privateKey && server.tls.privateKey.length > 0 ? (\n                  <div>[{server.tls.privateKey}]</div>\n                ) : undefined}\n                {server.tls.caCertificates && server.tls.caCertificates.length > 0 ? (\n                  <div>[{server.tls.caCertificates}]</div>\n                ) : undefined}\n              </>\n            ) : undefined}\n          </>,\n          <></>\n        ]\n      };\n    });\n  };\n\n  // @ts-ignore\n  actionResolver = (rowData, { rowIndex }) => {\n    const removeAction = {\n      title: 'Remove Rule',\n      // @ts-ignore\n      onClick: (event, rowIndex, rowData, extraData) => {\n        this.props.onRemoveServer(rowIndex);\n      }\n    };\n    return [removeAction];\n  };\n\n  render() {\n    return (\n      <>\n        <Table\n          aria-label=\"Server List\"\n          cells={headerCells}\n          rows={this.rows()}\n          // @ts-ignore\n          actionResolver={this.actionResolver}\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n        {this.props.serverList.length === 0 && <div className={noServerStyle}>No Servers defined</div>}\n      </>\n    );\n  }\n}\n\nexport default ServerList;\n"]},"metadata":{},"sourceType":"module"}