{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/pages/extensions/iter8/Iter8ExperimentDetails/ExperimentCreateFromFile.tsx\";\nimport * as React from 'react';\nimport * as API from '../../../../services/Api';\nimport * as AlertUtils from '../../../../utils/AlertUtils';\nimport { ActionGroup, Button, ButtonVariant, FileUpload, Form, FormGroup, Grid, GridItem // InputGroup,\n, Text } from '@patternfly/react-core';\nimport history from '../../../../app/History';\nimport { namespacesToString } from '../../../../types/Namespace';\nimport { PromisesRegistry } from '../../../../utils/CancelablePromises';\nimport { activeNamespacesSelector } from '../../../../store/Selectors';\nimport { connect } from 'react-redux';\nimport { style } from 'typestyle';\nimport { jsYaml, parseYamlValidations } from '../../../../types/AceValidations';\nimport AceEditor from 'react-ace';\nimport { aceOptions } from '../../../../types/IstioConfigDetails'; // import { TextInputBase as TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\n\nimport { PFColors } from '../../../../components/Pf/PfColors';\nimport DefaultSecondaryMasthead from '../../../../components/DefaultSecondaryMasthead/DefaultSecondaryMasthead';\nvar containerPadding = style({\n  padding: '20px 20px 20px 20px'\n});\n\nvar ExperimentCreateFromFile = /*#__PURE__*/function (_React$Component) {\n  _inherits(ExperimentCreateFromFile, _React$Component);\n\n  var _super = _createSuper(ExperimentCreateFromFile);\n\n  function ExperimentCreateFromFile(props) {\n    var _this;\n\n    _classCallCheck(this, ExperimentCreateFromFile);\n\n    _this = _super.call(this, props);\n    _this.aceEditorRef = void 0;\n    _this.promises = new PromisesRegistry();\n\n    _this.handleFileChange = function (experimentYaml, filename, _) {\n      return _this.setState({\n        experimentYaml: experimentYaml,\n        filename: filename\n      });\n    };\n\n    _this.handleFileReadStarted = function () {\n      return _this.setState({\n        isLoading: true\n      });\n    };\n\n    _this.handleFileReadFinished = function () {\n      return _this.setState({\n        isLoading: false\n      });\n    };\n\n    _this.goExperimentsPage = function () {\n      history.push('/extensions/iter8');\n    };\n\n    _this.onEditorChange = function (value) {\n      _this.setState({\n        isModified: true,\n        yamlModified: false,\n        experimentYaml: value\n      });\n    };\n\n    _this.createExperiment = function () {\n      // if (this.props.activeNamespaces.length === 1) {\n      var nsName = _this.props.activeNamespaces[0].name;\n      var params = {};\n      params.type = 'json';\n      var experimentJson = jsYaml.safeLoad(_this.state.experimentYaml);\n\n      _this.promises.register('Create Iter8 Experiment', API.createExperiment(nsName, JSON.stringify(experimentJson), params)).then(function (_) {\n        return _this.goExperimentsPage();\n      }).catch(function (error) {\n        return AlertUtils.addError('Could not create Experiment.', error);\n      });\n    };\n\n    _this.renderEditor = function () {\n      var yamlSource = _this.state.experimentYaml;\n      var editorSpan = 12;\n      var editorValidations = parseYamlValidations(yamlSource);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n        style: {\n          margin: '10px'\n        },\n        gutter: 'md',\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        span: editorSpan,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(AceEditor, {\n        ref: _this.aceEditorRef,\n        mode: \"yaml\",\n        theme: \"eclipse\",\n        onChange: _this.onEditorChange,\n        width: '100%',\n        height: 'calc(var(--kiali-details-pages-tab-content-height) - 340px)',\n        className: 'istio-ace-editor',\n        wrapEnabled: true,\n        readOnly: false,\n        setOptions: aceOptions,\n        value: yamlSource,\n        annotations: editorValidations.annotations,\n        markers: editorValidations.markers,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }))));\n    };\n\n    _this.updateValue = function (val) {\n      _this.setState({\n        yamlFilename: val\n      });\n    };\n\n    _this.loadFromURL = function () {\n      _this.setState({\n        isLoading: true\n      });\n\n      var controller = new AbortController();\n      setTimeout(function () {\n        return controller.abort();\n      }, 5000);\n      var promise = fetch(_this.state.yamlFilename, {\n        signal: controller.signal\n      }).then(function (resp) {\n        if (!resp.ok) {\n          AlertUtils.addError('Response :' + resp.status);\n\n          _this.setState({\n            isLoading: false\n          });\n\n          throw resp;\n        }\n\n        return resp.text();\n      }).then(function (data) {\n        _this.setState(function (prevState) {\n          return {\n            experimentYaml: data,\n            isLoading: !prevState.isLoading\n          };\n        });\n      });\n      promise.catch(function (err) {\n        if (err.name === 'AbortError') {\n          AlertUtils.addError('Request took more than 5 seconds. Automatically cancelled.', err);\n\n          _this.setState({\n            isLoading: false\n          });\n\n          return;\n        }\n\n        AlertUtils.addError('Invalid fetch URL', err);\n\n        _this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    _this.clearURL = function () {\n      _this.setState({\n        yamlFilename: '',\n        experimentYaml: ''\n      });\n    };\n\n    _this.isFormValid = function () {\n      return _this.props.activeNamespaces.length === 1 && _this.state.experimentYaml !== '';\n    };\n\n    _this.isURL = function () {\n      return _this.state.yamlFilename !== '';\n    };\n\n    _this.state = {\n      filename: '',\n      yamlFilename: '',\n      experimentYaml: '',\n      isLoading: false,\n      isModified: false,\n      yamlModified: false\n    };\n    _this.aceEditorRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(ExperimentCreateFromFile, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.promises.cancelAll();\n    } // Invoke the history object to update and URL and start a routing\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          filename = _this$state.filename,\n          isLoading = _this$state.isLoading,\n          experimentYaml = _this$state.experimentYaml;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DefaultSecondaryMasthead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        style: {\n          margin: '10px'\n        },\n        gutter: 'md',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        span: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        isHorizontal: true,\n        className: containerPadding,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        fieldId: \"title\",\n        label: \"\\u672C\\u5730\\u5BFC\\u5165\\u914D\\u7F6E\\u6587\\u4EF6\",\n        isRequired: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FileUpload, {\n        id: \"text-file-with-edits-allowed\",\n        type: \"text\",\n        value: experimentYaml,\n        filename: filename,\n        onChange: this.handleFileChange,\n        onReadStarted: this.handleFileReadStarted,\n        onReadFinished: this.handleFileReadFinished,\n        isLoading: isLoading,\n        hideDefaultPreview: true,\n        isReadOnly: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(GridItem, {\n        span: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(GridItem, {\n        span: 7,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }\n      }, this.props.activeNamespaces.length === 1 ? /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }\n      }, \"\\u5B9E\\u9A8C\\u5C06\\u521B\\u5EFA\\u5728\", namespacesToString(this.props.activeNamespaces), \"\\u547D\\u540D\\u7A7A\\u95F4\\u4E0B\") : /*#__PURE__*/React.createElement(Text, {\n        style: {\n          color: PFColors.Red100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 15\n        }\n      }, \"\\u672A\\u9009\\u62E9\\u547D\\u540D\\u7A7A\\u95F4\\uFF01\")), /*#__PURE__*/React.createElement(GridItem, {\n        span: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ActionGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          float: 'left',\n          paddingTop: '10px',\n          paddingBottom: '10px',\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          float: 'right',\n          paddingRight: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: ButtonVariant.primary,\n        isDisabled: !this.isFormValid(),\n        onClick: function onClick() {\n          return _this2.createExperiment();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 19\n        }\n      }, \"\\u521B\\u5EFA\")), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          float: 'right',\n          paddingRight: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: ButtonVariant.secondary,\n        onClick: function onClick() {\n          _this2.goExperimentsPage();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 19\n        }\n      }, \"\\u53D6\\u6D88\"))))), /*#__PURE__*/React.createElement(GridItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }\n      }, \" \", this.renderEditor())));\n    }\n  }]);\n\n  return ExperimentCreateFromFile;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    activeNamespaces: activeNamespacesSelector(state)\n  };\n};\n\nvar ExperimentCreateFromFileContainer = connect(mapStateToProps, null)(ExperimentCreateFromFile);\nexport default ExperimentCreateFromFileContainer;","map":{"version":3,"sources":["/root/GraduateProject/src/pages/extensions/iter8/Iter8ExperimentDetails/ExperimentCreateFromFile.tsx"],"names":["React","API","AlertUtils","ActionGroup","Button","ButtonVariant","FileUpload","Form","FormGroup","Grid","GridItem","Text","history","namespacesToString","PromisesRegistry","activeNamespacesSelector","connect","style","jsYaml","parseYamlValidations","AceEditor","aceOptions","PFColors","DefaultSecondaryMasthead","containerPadding","padding","ExperimentCreateFromFile","props","aceEditorRef","promises","handleFileChange","experimentYaml","filename","_","setState","handleFileReadStarted","isLoading","handleFileReadFinished","goExperimentsPage","push","onEditorChange","value","isModified","yamlModified","createExperiment","nsName","activeNamespaces","name","params","type","experimentJson","safeLoad","state","register","JSON","stringify","then","catch","error","addError","renderEditor","yamlSource","editorSpan","editorValidations","margin","annotations","markers","updateValue","val","yamlFilename","loadFromURL","controller","AbortController","setTimeout","abort","promise","fetch","signal","resp","ok","status","text","data","prevState","err","clearURL","isFormValid","length","isURL","createRef","cancelAll","backgroundColor","color","Red100","float","paddingTop","paddingBottom","width","paddingRight","primary","secondary","Component","mapStateToProps","ExperimentCreateFromFileContainer"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as API from '../../../../services/Api';\nimport * as AlertUtils from '../../../../utils/AlertUtils';\nimport {\n  ActionGroup,\n  Button,\n  ButtonVariant,\n  FileUpload,\n  Form,\n  FormGroup,\n  Grid,\n  GridItem,\n  // InputGroup,\n  Text\n} from '@patternfly/react-core';\nimport history from '../../../../app/History';\nimport Namespace, { namespacesToString } from '../../../../types/Namespace';\nimport { PromisesRegistry } from '../../../../utils/CancelablePromises';\nimport { KialiAppState } from '../../../../store/Store';\nimport { activeNamespacesSelector } from '../../../../store/Selectors';\nimport { connect } from 'react-redux';\nimport { style } from 'typestyle';\nimport { jsYaml, parseYamlValidations } from '../../../../types/AceValidations';\nimport AceEditor from 'react-ace';\nimport { aceOptions } from '../../../../types/IstioConfigDetails';\n// import { TextInputBase as TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport { PFColors } from '../../../../components/Pf/PfColors';\nimport DefaultSecondaryMasthead from '../../../../components/DefaultSecondaryMasthead/DefaultSecondaryMasthead';\n\ninterface Props {\n  activeNamespaces: Namespace[];\n  serviceName: string;\n  namespace: string;\n  showAdvanced: boolean;\n}\n\ninterface State {\n  filename: string;\n  experimentYaml: any;\n  isLoading: boolean;\n  yamlModified: boolean;\n  isModified: boolean;\n  yamlFilename: string;\n}\n\nconst containerPadding = style({ padding: '20px 20px 20px 20px' });\n\nclass ExperimentCreateFromFile extends React.Component<Props, State> {\n  aceEditorRef: React.RefObject<AceEditor>;\n  private promises = new PromisesRegistry();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      filename: '',\n      yamlFilename: '',\n      experimentYaml: '',\n      isLoading: false,\n      isModified: false,\n      yamlModified: false\n    };\n    this.aceEditorRef = React.createRef();\n  }\n\n  handleFileChange = (experimentYaml, filename, _) => this.setState({ experimentYaml, filename });\n  handleFileReadStarted = () => this.setState({ isLoading: true });\n  handleFileReadFinished = () => this.setState({ isLoading: false });\n\n  componentWillUnmount() {\n    this.promises.cancelAll();\n  }\n\n  // Invoke the history object to update and URL and start a routing\n  goExperimentsPage = () => {\n    history.push('/extensions/iter8');\n  };\n\n  onEditorChange = (value: string) => {\n    this.setState({\n      isModified: true,\n      yamlModified: false,\n      experimentYaml: value\n    });\n  };\n\n  // It invokes backend to create  a new experiment\n  createExperiment = () => {\n    // if (this.props.activeNamespaces.length === 1) {\n    const nsName = this.props.activeNamespaces[0].name;\n    const params: any = {};\n    params.type = 'json';\n    let experimentJson = jsYaml.safeLoad(this.state.experimentYaml);\n    this.promises\n      .register('Create Iter8 Experiment', API.createExperiment(nsName, JSON.stringify(experimentJson), params))\n      .then(_ => this.goExperimentsPage())\n      .catch(error => AlertUtils.addError('Could not create Experiment.', error));\n  };\n\n  renderEditor = () => {\n    const yamlSource = this.state.experimentYaml;\n    const editorSpan = 12;\n    let editorValidations = parseYamlValidations(yamlSource);\n\n    return (\n      <>\n        <Grid style={{ margin: '10px' }} gutter={'md'}>\n          <GridItem span={editorSpan}>\n            <AceEditor\n              ref={this.aceEditorRef}\n              mode=\"yaml\"\n              theme=\"eclipse\"\n              onChange={this.onEditorChange}\n              width={'100%'}\n              height={'calc(var(--kiali-details-pages-tab-content-height) - 340px)'}\n              className={'istio-ace-editor'}\n              wrapEnabled={true}\n              readOnly={false}\n              setOptions={aceOptions}\n              value={yamlSource}\n              annotations={editorValidations.annotations}\n              markers={editorValidations.markers}\n            />\n          </GridItem>\n        </Grid>\n      </>\n    );\n  };\n\n  updateValue = (val: string) => {\n    this.setState({ yamlFilename: val });\n  };\n\n  loadFromURL = () => {\n    this.setState({ isLoading: true });\n    const controller = new AbortController();\n    setTimeout(() => controller.abort(), 5000);\n\n    const promise = fetch(this.state.yamlFilename, {\n      signal: controller.signal\n    })\n      .then(resp => {\n        if (!resp.ok) {\n          AlertUtils.addError('Response :' + resp.status);\n          this.setState({ isLoading: false });\n          throw resp;\n        }\n        return resp.text();\n      })\n      .then(data => {\n        this.setState(prevState => {\n          return {\n            experimentYaml: data,\n            isLoading: !prevState.isLoading\n          };\n        });\n      });\n    promise.catch(err => {\n      if (err.name === 'AbortError') {\n        AlertUtils.addError('Request took more than 5 seconds. Automatically cancelled.', err);\n        this.setState({ isLoading: false });\n        return;\n      }\n      AlertUtils.addError('Invalid fetch URL', err);\n\n      this.setState({ isLoading: false });\n    });\n  };\n\n  clearURL = () => {\n    this.setState({ yamlFilename: '', experimentYaml: '' });\n  };\n\n  isFormValid = (): boolean => {\n    return this.props.activeNamespaces.length === 1 && this.state.experimentYaml !== '';\n  };\n\n  isURL = (): boolean => {\n    return this.state.yamlFilename !== '';\n  };\n\n  render() {\n    const { filename, isLoading, experimentYaml } = this.state;\n    return (\n      <>\n        <div style={{ backgroundColor: '#fff' }}>\n          <DefaultSecondaryMasthead />\n        </div>\n        <Grid style={{ margin: '10px' }} gutter={'md'}>\n          <GridItem span={12}>\n            <Form isHorizontal={true} className={containerPadding}>\n              <FormGroup fieldId=\"title\" label=\"本地导入配置文件\" isRequired={true}>\n                <FileUpload\n                  id=\"text-file-with-edits-allowed\"\n                  type=\"text\"\n                  value={experimentYaml}\n                  filename={filename}\n                  onChange={this.handleFileChange}\n                  onReadStarted={this.handleFileReadStarted}\n                  onReadFinished={this.handleFileReadFinished}\n                  isLoading={isLoading}\n                  hideDefaultPreview\n                  isReadOnly={false}\n                />\n              </FormGroup>\n\n              {/* <FormGroup\n                fieldId=\"title\"\n                label=\"Load from Github\"\n                isRequired={true}\n                helperText=\"example: https://raw.githubusercontent.com/iter8-tools/iter8/master/test/data/bookinfo/canary/canary_reviews-v2_to_reviews-v3.yaml\"\n                helperTextInvalid=\"Name cannot be empty and must be a DNS subdomain name as defined in RFC 1123.\"\n              >\n                <InputGroup>\n                  <TextInput\n                    id=\"url\"\n                    value={this.state.yamlFilename}\n                    onChange={value => this.updateValue(value)}\n                    onKeyPress={e => {\n                      if (e.key === 'Enter') {\n                        this.loadFromURL();\n                      }\n                    }}\n                  />\n                  <Button\n                    style={{ paddingLeft: '29px', paddingRight: '29px' }}\n                    variant={ButtonVariant.primary}\n                    isDisabled={this.state.yamlFilename === ''}\n                    onClick={() => {\n                      this.loadFromURL();\n                    }}\n                  >\n                    Load\n                  </Button>\n                  <Button\n                    variant={ButtonVariant.primary}\n                    isDisabled={this.state.yamlFilename === ''}\n                    onClick={() => {\n                      this.clearURL();\n                    }}\n                  >\n                    Clear\n                  </Button>\n                </InputGroup>\n              </FormGroup> */}\n            </Form>\n          </GridItem>\n          <GridItem span={1}></GridItem>\n          <GridItem span={7}>\n            {this.props.activeNamespaces.length === 1 ? (\n              <Text>实验将创建在{namespacesToString(this.props.activeNamespaces)}命名空间下</Text>\n            ) : (\n              <Text style={{ color: PFColors.Red100 }}>未选择命名空间！</Text>\n            )}\n          </GridItem>\n          <GridItem span={3}>\n            <ActionGroup>\n              <span\n                style={{\n                  float: 'left',\n                  paddingTop: '10px',\n                  paddingBottom: '10px',\n                  width: '100%'\n                }}\n              >\n                <span style={{ float: 'right', paddingRight: '20px' }}>\n                  <Button\n                    variant={ButtonVariant.primary}\n                    isDisabled={!this.isFormValid()}\n                    onClick={() => this.createExperiment()}\n                  >\n                    创建\n                  </Button>\n                </span>\n                <span style={{ float: 'right', paddingRight: '5px' }}>\n                  <Button\n                    variant={ButtonVariant.secondary}\n                    onClick={() => {\n                      this.goExperimentsPage();\n                    }}\n                  >\n                    取消\n                  </Button>\n                </span>\n              </span>\n            </ActionGroup>\n          </GridItem>\n\n          <GridItem> {this.renderEditor()}</GridItem>\n        </Grid>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: KialiAppState) => ({\n  activeNamespaces: activeNamespacesSelector(state)\n});\n\nconst ExperimentCreateFromFileContainer = connect(mapStateToProps, null)(ExperimentCreateFromFile);\n\nexport default ExperimentCreateFromFileContainer;\n"]},"metadata":{},"sourceType":"module"}