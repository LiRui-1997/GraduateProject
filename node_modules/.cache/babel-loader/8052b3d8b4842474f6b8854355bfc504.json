{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/root/kiali-ui/src/components/Link/KialiPageLink.tsx\";\n\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { serverConfig } from '../../config';\n\nvar KialiPageLink = function KialiPageLink(props) {\n  var _serverConfig$cluster, _clusterInfo$kialiIns;\n\n  // Without a cluster, simply render a local link\n  if (props.cluster === undefined) {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: props.href,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 12\n      }\n    }, props.children);\n  } // If cluster is specified, and it's the home cluster, render a local link.\n\n\n  if (!((_serverConfig$cluster = serverConfig.clusterInfo) === null || _serverConfig$cluster === void 0 ? void 0 : _serverConfig$cluster.name) || props.cluster === serverConfig.clusterInfo.name) {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: props.href,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    }, props.children);\n  } // If it's a remote cluster, check if there is an accessible Kiali on that cluster.\n  // If there is, render an external link. Else, render plain text.\n\n\n  var clusterInfo = serverConfig.clusters[props.cluster];\n  var kialiInstance = clusterInfo === null || clusterInfo === void 0 ? void 0 : (_clusterInfo$kialiIns = clusterInfo.kialiInstances) === null || _clusterInfo$kialiIns === void 0 ? void 0 : _clusterInfo$kialiIns.find(function (instance) {\n    return instance.url.length !== 0;\n  });\n\n  if (kialiInstance === undefined) {\n    return props.children;\n  } else {\n    var href = kialiInstance.url.replace(/\\/$/g, '') + '/console' + props.href;\n    return /*#__PURE__*/React.createElement(\"a\", {\n      href: href,\n      rel: \"noreferrer noopener\",\n      target: \"_blank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, props.children, \" \", /*#__PURE__*/React.createElement(ExternalLinkAltIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 26\n      }\n    }));\n  }\n};\n\nexport default KialiPageLink;","map":{"version":3,"sources":["/root/kiali-ui/src/components/Link/KialiPageLink.tsx"],"names":["React","Link","ExternalLinkAltIcon","serverConfig","KialiPageLink","props","cluster","undefined","href","children","clusterInfo","name","clusters","kialiInstance","kialiInstances","find","instance","url","length","replace"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,YAAT,QAA6B,cAA7B;;AAOA,IAAMC,aAA2C,GAAG,SAA9CA,aAA8C,CAAAC,KAAK,EAAI;AAAA;;AAC3D;AACA,MAAIA,KAAK,CAACC,OAAN,KAAkBC,SAAtB,EAAiC;AAC/B,wBAAO,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAEF,KAAK,CAACG,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBH,KAAK,CAACI,QAA7B,CAAP;AACD,GAJ0D,CAM3D;;;AACA,MAAI,2BAACN,YAAY,CAACO,WAAd,0DAAC,sBAA0BC,IAA3B,KAAmCN,KAAK,CAACC,OAAN,KAAkBH,YAAY,CAACO,WAAb,CAAyBC,IAAlF,EAAwF;AACtF,wBAAO,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAEN,KAAK,CAACG,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBH,KAAK,CAACI,QAA7B,CAAP;AACD,GAT0D,CAW3D;AACA;;;AACA,MAAMC,WAAW,GAAGP,YAAY,CAACS,QAAb,CAAsBP,KAAK,CAACC,OAA5B,CAApB;AACA,MAAMO,aAAa,GAAGH,WAAH,aAAGA,WAAH,gDAAGA,WAAW,CAAEI,cAAhB,0DAAG,sBAA6BC,IAA7B,CAAkC,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,GAAT,CAAaC,MAAb,KAAwB,CAA5B;AAAA,GAA1C,CAAtB;;AAEA,MAAIL,aAAa,KAAKN,SAAtB,EAAiC;AAC/B,WAAOF,KAAK,CAACI,QAAb;AACD,GAFD,MAEO;AACL,QAAMD,IAAI,GAAGK,aAAa,CAACI,GAAd,CAAkBE,OAAlB,CAA0B,MAA1B,EAAkC,EAAlC,IAAwC,UAAxC,GAAqDd,KAAK,CAACG,IAAxE;AACA,wBACE;AAAG,MAAA,IAAI,EAAEA,IAAT;AAAe,MAAA,GAAG,EAAC,qBAAnB;AAAyC,MAAA,MAAM,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,KAAK,CAACI,QADT,oBACmB,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnB,CADF;AAKD;AACF,CA1BD;;AA4BA,eAAeL,aAAf","sourcesContent":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { serverConfig } from '../../config';\n\ninterface KialiPageLinkProps {\n  cluster?: string;\n  href: string;\n}\n\nconst KialiPageLink: React.FC<KialiPageLinkProps> = props => {\n  // Without a cluster, simply render a local link\n  if (props.cluster === undefined) {\n    return <Link to={props.href}>{props.children}</Link>;\n  }\n\n  // If cluster is specified, and it's the home cluster, render a local link.\n  if (!serverConfig.clusterInfo?.name || props.cluster === serverConfig.clusterInfo.name) {\n    return <Link to={props.href}>{props.children}</Link>;\n  }\n\n  // If it's a remote cluster, check if there is an accessible Kiali on that cluster.\n  // If there is, render an external link. Else, render plain text.\n  const clusterInfo = serverConfig.clusters[props.cluster];\n  const kialiInstance = clusterInfo?.kialiInstances?.find(instance => instance.url.length !== 0);\n\n  if (kialiInstance === undefined) {\n    return props.children as React.ReactElement<any>;\n  } else {\n    const href = kialiInstance.url.replace(/\\/$/g, '') + '/console' + props.href;\n    return (\n      <a href={href} rel=\"noreferrer noopener\" target=\"_blank\">\n        {props.children} <ExternalLinkAltIcon />\n      </a>\n    );\n  }\n};\n\nexport default KialiPageLink;\n"]},"metadata":{},"sourceType":"module"}