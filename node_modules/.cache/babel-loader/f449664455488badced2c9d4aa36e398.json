{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/components/IstioActions/IstioActionsButtons.tsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { GlobalActions } from '../../actions/GlobalActions';\nimport { Button, ButtonVariant } from '@patternfly/react-core';\n\nvar IstioActionButtons = /*#__PURE__*/function (_React$Component) {\n  _inherits(IstioActionButtons, _React$Component);\n\n  var _super = _createSuper(IstioActionButtons);\n\n  function IstioActionButtons(props) {\n    var _this;\n\n    _classCallCheck(this, IstioActionButtons);\n\n    _this = _super.call(this, props);\n\n    _this.hideConfirmModal = function () {\n      _this.setState({\n        showConfirmModal: false\n      });\n    };\n\n    _this.handleRefresh = function () {\n      _this.props.onRefresh();\n\n      _this.props.setLastRefreshAt(Date.now());\n    };\n\n    _this.state = {\n      showConfirmModal: false\n    };\n    return _this;\n  }\n\n  _createClass(IstioActionButtons, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          float: 'left',\n          padding: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, !this.props.readOnly && /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingRight: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: ButtonVariant.primary,\n        isDisabled: !this.props.canUpdate,\n        onClick: this.props.onUpdate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }, \"\\u4FDD\\u5B58\")), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingRight: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: ButtonVariant.secondary,\n        onClick: this.handleRefresh,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, \"\\u5237\\u65B0\")), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingRight: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: ButtonVariant.secondary,\n        onClick: this.props.onCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, this.props.readOnly ? '关闭' : '取消'))), this.props.showOverview && /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          float: 'right',\n          padding: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingLeft: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: ButtonVariant.link,\n        onClick: this.props.onOverview,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, this.props.overview ? 'Close Overview' : 'Show Overview'))));\n    }\n  }]);\n\n  return IstioActionButtons;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setLastRefreshAt: function setLastRefreshAt(lastRefreshAt) {\n      dispatch(GlobalActions.setLastRefreshAt(lastRefreshAt));\n    }\n  };\n};\n\nvar IstioActionButtonsContainer = connect(null, mapDispatchToProps)(IstioActionButtons);\nexport default IstioActionButtonsContainer;","map":{"version":3,"sources":["/root/GraduateProject/src/components/IstioActions/IstioActionsButtons.tsx"],"names":["React","connect","GlobalActions","Button","ButtonVariant","IstioActionButtons","props","hideConfirmModal","setState","showConfirmModal","handleRefresh","onRefresh","setLastRefreshAt","Date","now","state","float","padding","readOnly","paddingRight","primary","canUpdate","onUpdate","secondary","onCancel","showOverview","paddingLeft","link","onOverview","overview","Component","mapDispatchToProps","dispatch","lastRefreshAt","IstioActionButtonsContainer"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { TimeInMilliseconds } from '../../types/Common';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { KialiAppAction } from '../../actions/KialiAppAction';\nimport { KialiAppState } from '../../store/Store';\nimport { GlobalActions } from '../../actions/GlobalActions';\nimport { Button, ButtonVariant } from '@patternfly/react-core';\n\ntype ReduxProps = {\n  setLastRefreshAt: (lastRefreshAt: TimeInMilliseconds) => void;\n};\n\ntype Props = ReduxProps & {\n  objectName: string;\n  readOnly: boolean;\n  canUpdate: boolean;\n  onCancel: () => void;\n  onUpdate: () => void;\n  onRefresh: () => void;\n  showOverview: boolean;\n  overview: boolean;\n  onOverview: () => void;\n};\n\ntype State = {\n  showConfirmModal: boolean;\n};\n\nclass IstioActionButtons extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { showConfirmModal: false };\n  }\n  hideConfirmModal = () => {\n    this.setState({ showConfirmModal: false });\n  };\n  render() {\n    return (\n      <>\n        <span style={{ float: 'left', padding: '10px' }}>\n          {!this.props.readOnly && (\n            <span style={{ paddingRight: '5px' }}>\n              <Button variant={ButtonVariant.primary} isDisabled={!this.props.canUpdate} onClick={this.props.onUpdate}>\n                保存\n              </Button>\n            </span>\n          )}\n          <span style={{ paddingRight: '5px' }}>\n            <Button variant={ButtonVariant.secondary} onClick={this.handleRefresh}>\n              刷新\n            </Button>\n          </span>\n          <span style={{ paddingRight: '5px' }}>\n            <Button variant={ButtonVariant.secondary} onClick={this.props.onCancel}>\n              {this.props.readOnly ? '关闭' : '取消'}\n            </Button>\n          </span>\n        </span>\n        {this.props.showOverview && (\n          <span style={{ float: 'right', padding: '10px' }}>\n            <span style={{ paddingLeft: '5px' }}>\n              <Button variant={ButtonVariant.link} onClick={this.props.onOverview}>\n                {this.props.overview ? 'Close Overview' : 'Show Overview'}\n              </Button>\n            </span>\n          </span>\n        )}\n      </>\n    );\n  }\n\n  private handleRefresh = () => {\n    this.props.onRefresh();\n    this.props.setLastRefreshAt(Date.now());\n  };\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<KialiAppState, void, KialiAppAction>) => {\n  return {\n    setLastRefreshAt: (lastRefreshAt: TimeInMilliseconds) => {\n      dispatch(GlobalActions.setLastRefreshAt(lastRefreshAt));\n    }\n  };\n};\n\nconst IstioActionButtonsContainer = connect(null, mapDispatchToProps)(IstioActionButtons);\n\nexport default IstioActionButtonsContainer;\n"]},"metadata":{},"sourceType":"module"}