{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * The unique id is used for unique hashes.\n */\n\nvar uniqueId = 0;\n/**\n * Tag styles with this string to get unique hashes.\n */\n\nexports.IS_UNIQUE = '__DO_NOT_DEDUPE_STYLE__';\nvar upperCasePattern = /[A-Z]/g;\nvar msPattern = /^ms-/;\nvar interpolatePattern = /&/g;\nvar escapePattern = /[ !#$%&()*+,./;<=>?@[\\]^`{|}~\"'\\\\]/g;\n\nvar propLower = function propLower(m) {\n  return \"-\" + m.toLowerCase();\n};\n/**\n * CSS properties that are valid unit-less numbers.\n *\n * Ref: https://github.com/facebook/react/blob/master/packages/react-dom/src/shared/CSSProperty.js\n */\n\n\nvar CSS_NUMBER = {\n  'animation-iteration-count': true,\n  'border-image-outset': true,\n  'border-image-slice': true,\n  'border-image-width': true,\n  'box-flex': true,\n  'box-flex-group': true,\n  'box-ordinal-group': true,\n  'column-count': true,\n  'columns': true,\n  'counter-increment': true,\n  'counter-reset': true,\n  'flex': true,\n  'flex-grow': true,\n  'flex-positive': true,\n  'flex-shrink': true,\n  'flex-negative': true,\n  'flex-order': true,\n  'font-weight': true,\n  'grid-area': true,\n  'grid-column': true,\n  'grid-column-end': true,\n  'grid-column-span': true,\n  'grid-column-start': true,\n  'grid-row': true,\n  'grid-row-end': true,\n  'grid-row-span': true,\n  'grid-row-start': true,\n  'line-clamp': true,\n  'line-height': true,\n  'opacity': true,\n  'order': true,\n  'orphans': true,\n  'tab-size': true,\n  'widows': true,\n  'z-index': true,\n  'zoom': true,\n  // SVG properties.\n  'fill-opacity': true,\n  'flood-opacity': true,\n  'stop-opacity': true,\n  'stroke-dasharray': true,\n  'stroke-dashoffset': true,\n  'stroke-miterlimit': true,\n  'stroke-opacity': true,\n  'stroke-width': true\n}; // Add vendor prefixes to all unit-less properties.\n\nfor (var _i = 0, _a = Object.keys(CSS_NUMBER); _i < _a.length; _i++) {\n  var property = _a[_i];\n\n  for (var _b = 0, _c = ['-webkit-', '-ms-', '-moz-', '-o-', '']; _b < _c.length; _b++) {\n    var prefix = _c[_b];\n    CSS_NUMBER[prefix + property] = true;\n  }\n}\n/**\n * Escape a CSS class name.\n */\n\n\nexports.escape = function (str) {\n  return str.replace(escapePattern, '\\\\$&');\n};\n/**\n * Transform a JavaScript property into a CSS property.\n */\n\n\nfunction hyphenate(propertyName) {\n  return propertyName.replace(upperCasePattern, propLower).replace(msPattern, '-ms-'); // Internet Explorer vendor prefix.\n}\n\nexports.hyphenate = hyphenate;\n/**\n * Generate a hash value from a string.\n */\n\nfunction stringHash(str) {\n  var value = 5381;\n  var len = str.length;\n\n  while (len--) {\n    value = value * 33 ^ str.charCodeAt(len);\n  }\n\n  return (value >>> 0).toString(36);\n}\n\nexports.stringHash = stringHash;\n/**\n * Transform a style string to a CSS string.\n */\n\nfunction styleToString(key, value) {\n  if (typeof value === 'number' && value !== 0 && !CSS_NUMBER.hasOwnProperty(key)) {\n    return key + \":\" + value + \"px\";\n  }\n\n  return key + \":\" + value;\n}\n/**\n * Sort an array of tuples by first value.\n */\n\n\nfunction sortTuples(value) {\n  return value.sort(function (a, b) {\n    return a[0] > b[0] ? 1 : -1;\n  });\n}\n/**\n * Categorize user styles.\n */\n\n\nfunction parseStyles(styles, hasNestedStyles) {\n  var properties = [];\n  var nestedStyles = [];\n  var isUnique = false; // Sort keys before adding to styles.\n\n  for (var _i = 0, _a = Object.keys(styles); _i < _a.length; _i++) {\n    var key = _a[_i];\n    var value = styles[key];\n\n    if (value !== null && value !== undefined) {\n      if (key === exports.IS_UNIQUE) {\n        isUnique = true;\n      } else if (typeof value === 'object' && !Array.isArray(value)) {\n        nestedStyles.push([key.trim(), value]);\n      } else {\n        properties.push([hyphenate(key.trim()), value]);\n      }\n    }\n  }\n\n  return {\n    style: stringifyProperties(sortTuples(properties)),\n    nested: hasNestedStyles ? nestedStyles : sortTuples(nestedStyles),\n    isUnique: isUnique\n  };\n}\n/**\n * Stringify an array of property tuples.\n */\n\n\nfunction stringifyProperties(properties) {\n  return properties.map(function (_a) {\n    var name = _a[0],\n        value = _a[1];\n    if (!Array.isArray(value)) return styleToString(name, value);\n    return value.map(function (x) {\n      return styleToString(name, x);\n    }).join(';');\n  }).join(';');\n}\n/**\n * Interpolate CSS selectors.\n */\n\n\nfunction interpolate(selector, parent) {\n  if (selector.indexOf('&') === -1) return parent + \" \" + selector;\n  return selector.replace(interpolatePattern, parent);\n}\n/**\n * Recursive loop building styles with deferred selectors.\n */\n\n\nfunction stylize(selector, styles, rulesList, stylesList, parent) {\n  var _a = parseStyles(styles, selector !== ''),\n      style = _a.style,\n      nested = _a.nested,\n      isUnique = _a.isUnique;\n\n  var pid = style;\n\n  if (selector.charCodeAt(0) === 64\n  /* @ */\n  ) {\n      var child = {\n        selector: selector,\n        styles: [],\n        rules: [],\n        style: parent ? '' : style\n      };\n      rulesList.push(child); // Nested styles support (e.g. `.foo > @media > .bar`).\n\n      if (style && parent) child.styles.push({\n        selector: parent,\n        style: style,\n        isUnique: isUnique\n      });\n\n      for (var _i = 0, nested_1 = nested; _i < nested_1.length; _i++) {\n        var _b = nested_1[_i],\n            name = _b[0],\n            value = _b[1];\n        pid += name + stylize(name, value, child.rules, child.styles, parent);\n      }\n    } else {\n    var key = parent ? interpolate(selector, parent) : selector;\n    if (style) stylesList.push({\n      selector: key,\n      style: style,\n      isUnique: isUnique\n    });\n\n    for (var _c = 0, nested_2 = nested; _c < nested_2.length; _c++) {\n      var _d = nested_2[_c],\n          name = _d[0],\n          value = _d[1];\n      pid += name + stylize(name, value, rulesList, stylesList, key);\n    }\n  }\n\n  return pid;\n}\n/**\n * Transform `stylize` tree into style objects.\n */\n\n\nfunction composeStylize(cache, pid, rulesList, stylesList, className, isStyle) {\n  for (var _i = 0, stylesList_1 = stylesList; _i < stylesList_1.length; _i++) {\n    var _a = stylesList_1[_i],\n        selector = _a.selector,\n        style = _a.style,\n        isUnique = _a.isUnique;\n    var key = isStyle ? interpolate(selector, className) : selector;\n    var id = isUnique ? \"u\\0\" + (++uniqueId).toString(36) : \"s\\0\" + pid + \"\\0\" + style;\n    var item = new Style(style, id);\n    item.add(new Selector(key, \"k\\0\" + pid + \"\\0\" + key));\n    cache.add(item);\n  }\n\n  for (var _b = 0, rulesList_1 = rulesList; _b < rulesList_1.length; _b++) {\n    var _c = rulesList_1[_b],\n        selector = _c.selector,\n        style = _c.style,\n        rules = _c.rules,\n        styles = _c.styles;\n    var item = new Rule(selector, style, \"r\\0\" + pid + \"\\0\" + selector + \"\\0\" + style);\n    composeStylize(item, pid, rules, styles, className, isStyle);\n    cache.add(item);\n  }\n}\n/**\n * Cache to list to styles.\n */\n\n\nfunction join(arr) {\n  var res = '';\n\n  for (var i = 0; i < arr.length; i++) {\n    res += arr[i];\n  }\n\n  return res;\n}\n/**\n * Noop changes.\n */\n\n\nvar noopChanges = {\n  add: function add() {\n    return undefined;\n  },\n  change: function change() {\n    return undefined;\n  },\n  remove: function remove() {\n    return undefined;\n  }\n};\n/**\n * Implement a cache/event emitter.\n */\n\nvar Cache =\n/** @class */\nfunction () {\n  function Cache(changes) {\n    if (changes === void 0) {\n      changes = noopChanges;\n    }\n\n    this.changes = changes;\n    this.sheet = [];\n    this.changeId = 0;\n    this._keys = [];\n    this._children = Object.create(null);\n    this._counters = Object.create(null);\n  }\n\n  Cache.prototype.add = function (style) {\n    var count = this._counters[style.id] || 0;\n    var item = this._children[style.id] || style.clone();\n    this._counters[style.id] = count + 1;\n\n    if (count === 0) {\n      this._children[item.id] = item;\n\n      this._keys.push(item.id);\n\n      this.sheet.push(item.getStyles());\n      this.changeId++;\n      this.changes.add(item, this._keys.length - 1);\n    } else if (item instanceof Cache && style instanceof Cache) {\n      var curIndex = this._keys.indexOf(style.id);\n\n      var prevItemChangeId = item.changeId;\n      item.merge(style);\n\n      if (item.changeId !== prevItemChangeId) {\n        this.sheet.splice(curIndex, 1, item.getStyles());\n        this.changeId++;\n        this.changes.change(item, curIndex, curIndex);\n      }\n    }\n\n    return item;\n  };\n\n  Cache.prototype.remove = function (style) {\n    var count = this._counters[style.id];\n\n    if (count !== undefined && count > 0) {\n      this._counters[style.id] = count - 1;\n      var item = this._children[style.id];\n\n      var index = this._keys.indexOf(item.id);\n\n      if (count === 1) {\n        delete this._counters[style.id];\n        delete this._children[style.id];\n\n        this._keys.splice(index, 1);\n\n        this.sheet.splice(index, 1);\n        this.changeId++;\n        this.changes.remove(item, index);\n      } else if (item instanceof Cache && style instanceof Cache) {\n        var prevChangeId = item.changeId;\n        item.unmerge(style);\n\n        if (item.changeId !== prevChangeId) {\n          this.sheet.splice(index, 1, item.getStyles());\n          this.changeId++;\n          this.changes.change(item, index, index);\n        }\n      }\n    }\n  };\n\n  Cache.prototype.values = function () {\n    var _this = this;\n\n    return this._keys.map(function (key) {\n      return _this._children[key];\n    });\n  };\n\n  Cache.prototype.merge = function (cache) {\n    for (var _i = 0, _a = cache.values(); _i < _a.length; _i++) {\n      var item = _a[_i];\n      this.add(item);\n    }\n\n    return this;\n  };\n\n  Cache.prototype.unmerge = function (cache) {\n    for (var _i = 0, _a = cache.values(); _i < _a.length; _i++) {\n      var item = _a[_i];\n      this.remove(item);\n    }\n\n    return this;\n  };\n\n  Cache.prototype.clone = function () {\n    return new Cache().merge(this);\n  };\n\n  return Cache;\n}();\n\nexports.Cache = Cache;\n/**\n * Selector is a dumb class made to represent nested CSS selectors.\n */\n\nvar Selector =\n/** @class */\nfunction () {\n  function Selector(selector, id) {\n    this.selector = selector;\n    this.id = id;\n  }\n\n  Selector.prototype.getStyles = function () {\n    return this.selector;\n  };\n\n  Selector.prototype.clone = function () {\n    return new Selector(this.selector, this.id);\n  };\n\n  return Selector;\n}();\n\nexports.Selector = Selector;\n/**\n * The style container registers a style string with selectors.\n */\n\nvar Style =\n/** @class */\nfunction (_super) {\n  __extends(Style, _super);\n\n  function Style(style, id) {\n    var _this = _super.call(this) || this;\n\n    _this.style = style;\n    _this.id = id;\n    return _this;\n  }\n\n  Style.prototype.getStyles = function () {\n    return this.sheet.join(',') + \"{\" + this.style + \"}\";\n  };\n\n  Style.prototype.clone = function () {\n    return new Style(this.style, this.id).merge(this);\n  };\n\n  return Style;\n}(Cache);\n\nexports.Style = Style;\n/**\n * Implement rule logic for style output.\n */\n\nvar Rule =\n/** @class */\nfunction (_super) {\n  __extends(Rule, _super);\n\n  function Rule(rule, style, id) {\n    var _this = _super.call(this) || this;\n\n    _this.rule = rule;\n    _this.style = style;\n    _this.id = id;\n    return _this;\n  }\n\n  Rule.prototype.getStyles = function () {\n    return this.rule + \"{\" + this.style + join(this.sheet) + \"}\";\n  };\n\n  Rule.prototype.clone = function () {\n    return new Rule(this.rule, this.style, this.id).merge(this);\n  };\n\n  return Rule;\n}(Cache);\n\nexports.Rule = Rule;\n/**\n * The FreeStyle class implements the API for everything else.\n */\n\nvar FreeStyle =\n/** @class */\nfunction (_super) {\n  __extends(FreeStyle, _super);\n\n  function FreeStyle(hash, debug, id, changes) {\n    var _this = _super.call(this, changes) || this;\n\n    _this.hash = hash;\n    _this.debug = debug;\n    _this.id = id;\n    return _this;\n  }\n\n  FreeStyle.prototype.registerStyle = function (styles, displayName) {\n    var rulesList = [];\n    var stylesList = [];\n    var pid = stylize('&', styles, rulesList, stylesList);\n    var hash = \"f\" + this.hash(pid);\n    var id = this.debug && displayName ? displayName + \"_\" + hash : hash;\n    composeStylize(this, pid, rulesList, stylesList, \".\" + exports.escape(id), true);\n    return id;\n  };\n\n  FreeStyle.prototype.registerKeyframes = function (keyframes, displayName) {\n    return this.registerHashRule('@keyframes', keyframes, displayName);\n  };\n\n  FreeStyle.prototype.registerHashRule = function (prefix, styles, displayName) {\n    var rulesList = [];\n    var stylesList = [];\n    var pid = stylize('', styles, rulesList, stylesList);\n    var hash = \"f\" + this.hash(pid);\n    var id = this.debug && displayName ? displayName + \"_\" + hash : hash;\n    var rule = new Rule(prefix + \" \" + exports.escape(id), '', \"h\\0\" + pid + \"\\0\" + prefix);\n    composeStylize(rule, pid, rulesList, stylesList, '', false);\n    this.add(rule);\n    return id;\n  };\n\n  FreeStyle.prototype.registerRule = function (rule, styles) {\n    var rulesList = [];\n    var stylesList = [];\n    var pid = stylize(rule, styles, rulesList, stylesList);\n    composeStylize(this, pid, rulesList, stylesList, '', false);\n  };\n\n  FreeStyle.prototype.registerCss = function (styles) {\n    return this.registerRule('', styles);\n  };\n\n  FreeStyle.prototype.getStyles = function () {\n    return join(this.sheet);\n  };\n\n  FreeStyle.prototype.clone = function () {\n    return new FreeStyle(this.hash, this.debug, this.id, this.changes).merge(this);\n  };\n\n  return FreeStyle;\n}(Cache);\n\nexports.FreeStyle = FreeStyle;\n/**\n * Exports a simple function to create a new instance.\n */\n\nfunction create(hash, debug, changes) {\n  if (hash === void 0) {\n    hash = stringHash;\n  }\n\n  if (debug === void 0) {\n    debug = typeof process !== 'undefined' && process.env.NODE_ENV !== 'production';\n  }\n\n  if (changes === void 0) {\n    changes = noopChanges;\n  }\n\n  return new FreeStyle(hash, debug, \"f\" + (++uniqueId).toString(36), changes);\n}\n\nexports.create = create;","map":{"version":3,"sources":["../src/free-style.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * The unique id is used for unique hashes.\n */\nlet uniqueId = 0\n\n/**\n * Valid CSS property values.\n */\nexport type PropertyValue = number | boolean | string\n\n/**\n * Input styles object.\n */\nexport interface Styles {\n  [selector: string]: null | undefined | PropertyValue | PropertyValue[] | Styles\n}\n\n/**\n * Hash algorithm interface.\n */\nexport type HashFunction = (str: string) => string\n\n/**\n * Tag styles with this string to get unique hashes.\n */\nexport const IS_UNIQUE = '__DO_NOT_DEDUPE_STYLE__'\n\nconst upperCasePattern = /[A-Z]/g\nconst msPattern = /^ms-/\nconst interpolatePattern = /&/g\nconst escapePattern = /[ !#$%&()*+,./;<=>?@[\\]^`{|}~\"'\\\\]/g\nconst propLower = (m: string) => `-${m.toLowerCase()}`\n\n/**\n * CSS properties that are valid unit-less numbers.\n *\n * Ref: https://github.com/facebook/react/blob/master/packages/react-dom/src/shared/CSSProperty.js\n */\nconst CSS_NUMBER: Record<string, true> = {\n  'animation-iteration-count': true,\n  'border-image-outset': true,\n  'border-image-slice': true,\n  'border-image-width': true,\n  'box-flex': true,\n  'box-flex-group': true,\n  'box-ordinal-group': true,\n  'column-count': true,\n  'columns': true,\n  'counter-increment': true,\n  'counter-reset': true,\n  'flex': true,\n  'flex-grow': true,\n  'flex-positive': true,\n  'flex-shrink': true,\n  'flex-negative': true,\n  'flex-order': true,\n  'font-weight': true,\n  'grid-area': true,\n  'grid-column': true,\n  'grid-column-end': true,\n  'grid-column-span': true,\n  'grid-column-start': true,\n  'grid-row': true,\n  'grid-row-end': true,\n  'grid-row-span': true,\n  'grid-row-start': true,\n  'line-clamp': true,\n  'line-height': true,\n  'opacity': true,\n  'order': true,\n  'orphans': true,\n  'tab-size': true,\n  'widows': true,\n  'z-index': true,\n  'zoom': true,\n  // SVG properties.\n  'fill-opacity': true,\n  'flood-opacity': true,\n  'stop-opacity': true,\n  'stroke-dasharray': true,\n  'stroke-dashoffset': true,\n  'stroke-miterlimit': true,\n  'stroke-opacity': true,\n  'stroke-width': true\n}\n\n// Add vendor prefixes to all unit-less properties.\nfor (const property of Object.keys(CSS_NUMBER)) {\n  for (const prefix of ['-webkit-', '-ms-', '-moz-', '-o-', '']) {\n    CSS_NUMBER[prefix + property] = true\n  }\n}\n\n/**\n * Escape a CSS class name.\n */\nexport const escape = (str: string) => str.replace(escapePattern, '\\\\$&')\n\n/**\n * Transform a JavaScript property into a CSS property.\n */\nexport function hyphenate (propertyName: string): string {\n  return propertyName\n    .replace(upperCasePattern, propLower)\n    .replace(msPattern, '-ms-') // Internet Explorer vendor prefix.\n}\n\n/**\n * Generate a hash value from a string.\n */\nexport function stringHash (str: string): string {\n  let value = 5381\n  let len = str.length\n  while (len--) value = (value * 33) ^ str.charCodeAt(len)\n  return (value >>> 0).toString(36)\n}\n\n/**\n * Transform a style string to a CSS string.\n */\nfunction styleToString (key: string, value: PropertyValue) {\n  if (typeof value === 'number' && value !== 0 && !CSS_NUMBER.hasOwnProperty(key)) {\n    return `${key}:${value}px`\n  }\n\n  return `${key}:${value}`\n}\n\n/**\n * Sort an array of tuples by first value.\n */\nfunction sortTuples <T extends any[]> (value: T[]): T[] {\n  return value.sort((a, b) => a[0] > b[0] ? 1 : -1)\n}\n\n/**\n * Categorize user styles.\n */\nfunction parseStyles (styles: Styles, hasNestedStyles: boolean) {\n  const properties: Array<[string, PropertyValue | PropertyValue[]]> = []\n  const nestedStyles: Array<[string, Styles]> = []\n  let isUnique = false\n\n  // Sort keys before adding to styles.\n  for (const key of Object.keys(styles)) {\n    const value = styles[key]\n\n    if (value !== null && value !== undefined) {\n      if (key === IS_UNIQUE) {\n        isUnique = true\n      } else if (typeof value === 'object' && !Array.isArray(value)) {\n        nestedStyles.push([key.trim(), value])\n      } else {\n        properties.push([hyphenate(key.trim()), value])\n      }\n    }\n  }\n\n  return {\n    style: stringifyProperties(sortTuples(properties)),\n    nested: hasNestedStyles ? nestedStyles : sortTuples(nestedStyles),\n    isUnique\n  }\n}\n\n/**\n * Stringify an array of property tuples.\n */\nfunction stringifyProperties (properties: Array<[string, PropertyValue | PropertyValue[]]>) {\n  return properties.map(([name, value]) => {\n    if (!Array.isArray(value)) return styleToString(name, value)\n\n    return value.map(x => styleToString(name, x)).join(';')\n  }).join(';')\n}\n\n/**\n * Interpolate CSS selectors.\n */\nfunction interpolate (selector: string, parent: string) {\n  if (selector.indexOf('&') === -1) return `${parent} ${selector}`\n  return selector.replace(interpolatePattern, parent)\n}\n\ntype StylizeStyle = { selector: string, style: string, isUnique: boolean }\ntype StylizeRule = { selector: string, style: string, rules: StylizeRule[], styles: StylizeStyle[] }\n\n/**\n * Recursive loop building styles with deferred selectors.\n */\nfunction stylize (\n  selector: string,\n  styles: Styles,\n  rulesList: StylizeRule[],\n  stylesList: StylizeStyle[],\n  parent?: string\n) {\n  const { style, nested, isUnique } = parseStyles(styles, selector !== '')\n  let pid = style\n\n  if (selector.charCodeAt(0) === 64 /* @ */) {\n    const child: StylizeRule = { selector, styles: [], rules: [], style: parent ? '' : style }\n    rulesList.push(child)\n\n    // Nested styles support (e.g. `.foo > @media > .bar`).\n    if (style && parent) child.styles.push({ selector: parent, style, isUnique })\n\n    for (const [name, value] of nested) {\n      pid += name + stylize(name, value, child.rules, child.styles, parent)\n    }\n  } else {\n    const key = parent ? interpolate(selector, parent) : selector\n\n    if (style) stylesList.push({ selector: key, style, isUnique })\n\n    for (const [name, value] of nested) {\n      pid += name + stylize(name, value, rulesList, stylesList, key)\n    }\n  }\n\n  return pid\n}\n\n/**\n * Transform `stylize` tree into style objects.\n */\nfunction composeStylize (\n  cache: Cache<Rule | Style>,\n  pid: string,\n  rulesList: StylizeRule[],\n  stylesList: StylizeStyle[],\n  className: string,\n  isStyle: boolean\n) {\n  for (const { selector, style, isUnique } of stylesList) {\n    const key = isStyle ? interpolate(selector, className) : selector\n    const id = isUnique ? `u\\0${(++uniqueId).toString(36)}` : `s\\0${pid}\\0${style}`\n    const item = new Style(style, id)\n    item.add(new Selector(key, `k\\0${pid}\\0${key}`))\n    cache.add(item)\n  }\n\n  for (const { selector, style, rules, styles } of rulesList) {\n    const item = new Rule(selector, style, `r\\0${pid}\\0${selector}\\0${style}`)\n    composeStylize(item, pid, rules, styles, className, isStyle)\n    cache.add(item)\n  }\n}\n\n/**\n * Cache to list to styles.\n */\nfunction join (arr: string[]): string {\n  let res = ''\n  for (let i = 0; i < arr.length; i++) res += arr[i]\n  return res\n}\n\n/**\n * Propagate change events.\n */\nexport interface Changes {\n  add (style: Container<any>, index: number): void\n  change (style: Container<any>, oldIndex: number, newIndex: number): void\n  remove (style: Container<any>, index: number): void\n}\n\n/**\n * Noop changes.\n */\nconst noopChanges: Changes = {\n  add: () => undefined,\n  change: () => undefined,\n  remove: () => undefined\n}\n\n/**\n * Cacheable interface.\n */\nexport interface Container <T> {\n  id: string\n  clone (): T\n  getStyles (): string\n}\n\n/**\n * Implement a cache/event emitter.\n */\nexport class Cache <T extends Container<any>> {\n  sheet: string[] = []\n  changeId = 0\n\n  private _keys: string[] = []\n  private _children: Record<string, T | undefined> = Object.create(null)\n  private _counters: Record<string, number | undefined> = Object.create(null)\n\n  constructor (public changes: Changes = noopChanges) {}\n\n  add <U extends T> (style: U): U {\n    const count = this._counters[style.id] || 0\n    const item: U = this._children[style.id] || style.clone()\n\n    this._counters[style.id] = count + 1\n\n    if (count === 0) {\n      this._children[item.id] = item\n      this._keys.push(item.id)\n      this.sheet.push(item.getStyles())\n      this.changeId++\n      this.changes.add(item, this._keys.length - 1)\n    } else if (item instanceof Cache && style instanceof Cache) {\n      const curIndex = this._keys.indexOf(style.id)\n      const prevItemChangeId = item.changeId\n\n      item.merge(style)\n\n      if (item.changeId !== prevItemChangeId) {\n        this.sheet.splice(curIndex, 1, item.getStyles())\n        this.changeId++\n        this.changes.change(item, curIndex, curIndex)\n      }\n    }\n\n    return item\n  }\n\n  remove (style: T): void {\n    const count = this._counters[style.id]\n\n    if (count !== undefined && count > 0) {\n      this._counters[style.id] = count - 1\n\n      const item = this._children[style.id]!\n      const index = this._keys.indexOf(item.id)\n\n      if (count === 1) {\n        delete this._counters[style.id]\n        delete this._children[style.id]\n\n        this._keys.splice(index, 1)\n        this.sheet.splice(index, 1)\n        this.changeId++\n        this.changes.remove(item, index)\n      } else if (item instanceof Cache && style instanceof Cache) {\n        const prevChangeId = item.changeId\n\n        item.unmerge(style)\n\n        if (item.changeId !== prevChangeId) {\n          this.sheet.splice(index, 1, item.getStyles())\n          this.changeId++\n          this.changes.change(item, index, index)\n        }\n      }\n    }\n  }\n\n  values (): T[] {\n    return this._keys.map(key => this._children[key]!)\n  }\n\n  merge (cache: Cache<any>) {\n    for (const item of cache.values()) this.add(item)\n    return this\n  }\n\n  unmerge (cache: Cache<any>) {\n    for (const item of cache.values()) this.remove(item)\n    return this\n  }\n\n  clone (): Cache<T> {\n    return new Cache<T>().merge(this)\n  }\n}\n\n/**\n * Selector is a dumb class made to represent nested CSS selectors.\n */\nexport class Selector implements Container<Selector> {\n  constructor (public selector: string, public id: string) {}\n\n  getStyles () {\n    return this.selector\n  }\n\n  clone (): Selector {\n    return new Selector(this.selector, this.id)\n  }\n}\n\n/**\n * The style container registers a style string with selectors.\n */\nexport class Style extends Cache<Selector> implements Container<Style> {\n  constructor (public style: string, public id: string) {\n    super()\n  }\n\n  getStyles (): string {\n    return `${this.sheet.join(',')}{${this.style}}`\n  }\n\n  clone (): Style {\n    return new Style(this.style, this.id).merge(this)\n  }\n}\n\n/**\n * Implement rule logic for style output.\n */\nexport class Rule extends Cache<Rule | Style> implements Container<Rule> {\n  constructor (\n    public rule: string,\n    public style: string,\n    public id: string\n  ) {\n    super()\n  }\n\n  getStyles (): string {\n    return `${this.rule}{${this.style}${join(this.sheet)}}`\n  }\n\n  clone (): Rule {\n    return new Rule(this.rule, this.style, this.id).merge(this)\n  }\n}\n\n/**\n * The FreeStyle class implements the API for everything else.\n */\nexport class FreeStyle extends Cache<Rule | Style> implements Container<FreeStyle> {\n  constructor (\n    public hash: HashFunction,\n    public debug: boolean,\n    public id: string,\n    changes?: Changes\n  ) {\n    super(changes)\n  }\n\n  registerStyle (styles: Styles, displayName?: string) {\n    const rulesList: StylizeRule[] = []\n    const stylesList: StylizeStyle[] = []\n    const pid = stylize('&', styles, rulesList, stylesList)\n    const hash = `f${this.hash(pid)}`\n    const id = this.debug && displayName ? `${displayName}_${hash}` : hash\n    composeStylize(this, pid, rulesList, stylesList, `.${escape(id)}`, true)\n    return id\n  }\n\n  registerKeyframes (keyframes: Styles, displayName?: string) {\n    return this.registerHashRule('@keyframes', keyframes, displayName)\n  }\n\n  registerHashRule (prefix: string, styles: Styles, displayName?: string) {\n    const rulesList: StylizeRule[] = []\n    const stylesList: StylizeStyle[] = []\n    const pid = stylize('', styles, rulesList, stylesList)\n    const hash = `f${this.hash(pid)}`\n    const id = this.debug && displayName ? `${displayName}_${hash}` : hash\n    const rule = new Rule(`${prefix} ${escape(id)}`, '', `h\\0${pid}\\0${prefix}`)\n    composeStylize(rule, pid, rulesList, stylesList, '', false)\n    this.add(rule)\n    return id\n  }\n\n  registerRule (rule: string, styles: Styles) {\n    const rulesList: StylizeRule[] = []\n    const stylesList: StylizeStyle[] = []\n    const pid = stylize(rule, styles, rulesList, stylesList)\n    composeStylize(this, pid, rulesList, stylesList, '', false)\n  }\n\n  registerCss (styles: Styles) {\n    return this.registerRule('', styles)\n  }\n\n  getStyles (): string {\n    return join(this.sheet)\n  }\n\n  clone (): FreeStyle {\n    return new FreeStyle(this.hash, this.debug, this.id, this.changes).merge(this)\n  }\n}\n\n/**\n * Exports a simple function to create a new instance.\n */\nexport function create (\n  hash: HashFunction = stringHash,\n  debug: boolean = typeof (process as any) !== 'undefined' && (process.env as any).NODE_ENV !== 'production',\n  changes: Changes = noopChanges\n) {\n  return new FreeStyle(hash, debug, `f${(++uniqueId).toString(36)}`, changes)\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}