{"ast":null,"code":"import _objectSpread from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/pages/Graph/SummaryPanelNode.tsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { getBadge, getLink, renderBadgedHost, renderBadgedLink, renderDestServicesLinks, renderHealth } from './SummaryLink';\nimport { NodeType } from '../../types/Graph';\nimport { summaryHeader, summaryPanel, summaryBodyTabs, summaryFont } from './SummaryPanelCommon';\nimport { decoratedNodeData } from '../../components/CytoscapeGraph/CytoscapeGraphUtils';\nimport { KialiIcon } from 'config/KialiIcon';\nimport { getOptions, clickHandler } from 'components/CytoscapeGraph/ContextMenu/NodeContextMenu';\nimport { Dropdown, DropdownGroup, DropdownItem, DropdownPosition, Expandable, KebabToggle, Tab } from '@patternfly/react-core';\nimport { SummaryPanelNodeTraffic } from './SummaryPanelNodeTraffic';\nimport SummaryPanelNodeTraces from './SummaryPanelNodeTraces';\nimport SimpleTabs from 'components/Tab/SimpleTabs';\nimport { classes, style } from 'typestyle';\nvar defaultState = {\n  isActionOpen: false\n};\nvar expandableSectionStyle = style({\n  fontSize: 'var(--graph-side-panel--font-size)',\n  $nest: {\n    '& > div': {\n      marginLeft: '2em',\n      marginTop: '0 !important',\n      $nest: {\n        '& div': {\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap'\n        }\n      }\n    }\n  }\n});\nvar workloadExpandableSectionStyle = classes(expandableSectionStyle, style({\n  display: 'inline'\n}));\nexport var SummaryPanelNode = /*#__PURE__*/function (_React$Component) {\n  _inherits(SummaryPanelNode, _React$Component);\n\n  var _super = _createSuper(SummaryPanelNode);\n\n  function SummaryPanelNode(props) {\n    var _this;\n\n    _classCallCheck(this, SummaryPanelNode);\n\n    _this = _super.call(this, props);\n    _this.mainDivRef = void 0;\n\n    _this.renderWorkloadSection = function (nodeData) {\n      if (!nodeData.hasWorkloadEntry) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 14\n          }\n        }, renderBadgedLink(nodeData, NodeType.WORKLOAD));\n      }\n\n      var workloadEntryLinks = nodeData.hasWorkloadEntry.map(function (we) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 7\n          }\n        }, getLink(nodeData, NodeType.WORKLOAD, function () {\n          return {\n            link: \"/namespaces/\".concat(encodeURIComponent(nodeData.namespace), \"/istio/workloadentries/\").concat(encodeURIComponent(we.name)),\n            displayName: we.name,\n            key: \"\".concat(nodeData.namespace, \".wle.\").concat(we.name)\n          };\n        }));\n      });\n      return /*#__PURE__*/React.createElement(React.Fragment, null, getBadge(nodeData, NodeType.WORKLOAD), /*#__PURE__*/React.createElement(Expandable, {\n        toggleText: nodeData.hasWorkloadEntry.length === 1 ? '1 workload entry' : \"\".concat(nodeData.hasWorkloadEntry.length, \" workload entries\"),\n        className: workloadExpandableSectionStyle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginLeft: '3.5em'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }\n      }, workloadEntryLinks)));\n    };\n\n    _this.renderGatewayHostnames = function (nodeData) {\n      var _nodeData$isGateway, _nodeData$isGateway$i;\n\n      return _this.renderHostnamesSection((_nodeData$isGateway = nodeData.isGateway) === null || _nodeData$isGateway === void 0 ? void 0 : (_nodeData$isGateway$i = _nodeData$isGateway.ingressInfo) === null || _nodeData$isGateway$i === void 0 ? void 0 : _nodeData$isGateway$i.hostnames);\n    };\n\n    _this.renderVsHostnames = function (nodeData) {\n      var _nodeData$hasVS;\n\n      return _this.renderHostnamesSection((_nodeData$hasVS = nodeData.hasVS) === null || _nodeData$hasVS === void 0 ? void 0 : _nodeData$hasVS.hostnames);\n    };\n\n    _this.renderHostnamesSection = function (hostnames) {\n      var numberOfHostnames = hostnames.length;\n      var toggleText = \"\".concat(numberOfHostnames, \" hosts\");\n\n      if (numberOfHostnames === 1) {\n        toggleText = '1 host';\n      }\n\n      return /*#__PURE__*/React.createElement(Expandable, {\n        toggleText: toggleText,\n        className: expandableSectionStyle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 7\n        }\n      }, hostnames.map(function (hostname) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: hostname,\n          title: hostname,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 11\n          }\n        }, hostname === '*' ? '* (all hosts)' : hostname);\n      }));\n    };\n\n    _this.onToggleActions = function (isOpen) {\n      _this.setState({\n        isActionOpen: isOpen\n      });\n    };\n\n    _this.renderBadgeSummary = function (nodeData) {\n      var _nodeData$isGateway2, _nodeData$isGateway2$, _nodeData$hasVS2, _nodeData$hasVS3;\n\n      var hasCB = nodeData.hasCB,\n          hasFaultInjection = nodeData.hasFaultInjection,\n          hasMissingSC = nodeData.hasMissingSC,\n          hasRequestRouting = nodeData.hasRequestRouting,\n          hasRequestTimeout = nodeData.hasRequestTimeout,\n          hasTCPTrafficShifting = nodeData.hasTCPTrafficShifting,\n          hasTrafficShifting = nodeData.hasTrafficShifting,\n          hasVS = nodeData.hasVS,\n          isDead = nodeData.isDead,\n          isGateway = nodeData.isGateway;\n      var hasTrafficScenario = hasRequestRouting || hasFaultInjection || hasTrafficShifting || hasTCPTrafficShifting || hasRequestTimeout;\n      var shouldRenderGatewayHostnames = ((_nodeData$isGateway2 = nodeData.isGateway) === null || _nodeData$isGateway2 === void 0 ? void 0 : (_nodeData$isGateway2$ = _nodeData$isGateway2.ingressInfo) === null || _nodeData$isGateway2$ === void 0 ? void 0 : _nodeData$isGateway2$.hostnames) !== undefined && nodeData.isGateway.ingressInfo.hostnames.length !== 0;\n      var shouldRenderVsHostnames = ((_nodeData$hasVS2 = nodeData.hasVS) === null || _nodeData$hasVS2 === void 0 ? void 0 : _nodeData$hasVS2.hostnames) !== undefined && ((_nodeData$hasVS3 = nodeData.hasVS) === null || _nodeData$hasVS3 === void 0 ? void 0 : _nodeData$hasVS3.hostnames.length) !== 0;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginTop: '10px',\n          marginBottom: '10px'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 7\n        }\n      }, hasCB && /*#__PURE__*/React.createElement(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KialiIcon.CircuitBreaker, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingLeft: '4px'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }\n      }, \"Has Circuit Breaker\")), hasVS && !hasTrafficScenario && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(KialiIcon.VirtualService, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingLeft: '4px'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }\n      }, \"Has Virtual Service\")), shouldRenderVsHostnames && _this.renderVsHostnames(nodeData)), hasMissingSC && /*#__PURE__*/React.createElement(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KialiIcon.MissingSidecar, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingLeft: '4px'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }\n      }, \"Has Missing Sidecar\")), isDead && /*#__PURE__*/React.createElement(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          marginRight: '5px'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(KialiIcon.Info, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingLeft: '4px'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }\n      }, \"Has No Running Pods\")), hasRequestRouting && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(KialiIcon.RequestRouting, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingLeft: '4px'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }\n      }, \"Has Request Routing\")), shouldRenderVsHostnames && _this.renderVsHostnames(nodeData)), hasFaultInjection && /*#__PURE__*/React.createElement(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KialiIcon.FaultInjection, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingLeft: '4px'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }\n      }, \"Has Fault Injection\")), hasTrafficShifting && /*#__PURE__*/React.createElement(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KialiIcon.TrafficShifting, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingLeft: '4px'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }\n      }, \"Has Traffic Shifting\")), hasTCPTrafficShifting && /*#__PURE__*/React.createElement(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KialiIcon.TrafficShifting, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingLeft: '4px'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }\n      }, \"Has TCP Traffic Shifting\")), hasRequestTimeout && /*#__PURE__*/React.createElement(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KialiIcon.RequestTimeout, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingLeft: '4px'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }\n      }, \"Has Request Timeout\")), isGateway && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(KialiIcon.Gateway, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingLeft: '4px'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }\n      }, \"Is Gateway\")), shouldRenderGatewayHostnames && _this.renderGatewayHostnames(nodeData)));\n    };\n\n    _this.renderDestServices = function (data) {\n      var destServices = data.destServices;\n      var entries = [];\n\n      if (!destServices) {\n        return entries;\n      }\n\n      destServices.forEach(function (ds) {\n        entries.push(renderBadgedHost(ds.name));\n      });\n      return entries;\n    };\n\n    _this.state = _objectSpread({}, defaultState);\n    _this.mainDivRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(SummaryPanelNode, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.data.summaryTarget !== this.props.data.summaryTarget) {\n        if (this.mainDivRef.current) {\n          this.mainDivRef.current.scrollTop = 0;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var node = this.props.data.summaryTarget;\n      var nodeData = decoratedNodeData(node);\n      var nodeType = nodeData.nodeType,\n          app = nodeData.app,\n          service = nodeData.service,\n          workload = nodeData.workload,\n          isServiceEntry = nodeData.isServiceEntry;\n      var servicesList = nodeType !== NodeType.SERVICE && renderDestServicesLinks(node);\n      var destsList = nodeType === NodeType.SERVICE && isServiceEntry && this.renderDestServices(nodeData);\n      var shouldRenderDestsList = destsList && destsList.length > 0;\n      var shouldRenderSvcList = servicesList && servicesList.length > 0;\n      var shouldRenderService = service && ![NodeType.SERVICE, NodeType.UNKNOWN].includes(nodeType);\n      var shouldRenderApp = app && ![NodeType.APP, NodeType.UNKNOWN].includes(nodeType);\n      var shouldRenderWorkload = workload && ![NodeType.WORKLOAD, NodeType.UNKNOWN].includes(nodeType);\n      var shouldRenderTraces = !isServiceEntry && !nodeData.isInaccessible && this.props.jaegerState.info && this.props.jaegerState.info.enabled && this.props.jaegerState.info.integration;\n      var options = getOptions(nodeData, this.props.jaegerState.info).map(function (o) {\n        return /*#__PURE__*/React.createElement(DropdownItem, {\n          key: o.text,\n          onClick: function onClick() {\n            return clickHandler(o);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 9\n          }\n        }, o.text, \" \", o.target === '_blank' && /*#__PURE__*/React.createElement(ExternalLinkAltIcon, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 46\n          }\n        }));\n      });\n      var actions = options.length > 0 ? [/*#__PURE__*/React.createElement(DropdownGroup, {\n        label: \"Show\",\n        className: \"kiali-group-menu\",\n        children: options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }\n      })] : undefined;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.mainDivRef,\n        className: \"panel panel-default \".concat(summaryPanel),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"panel-heading\",\n        style: summaryHeader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }, renderBadgedLink(nodeData), actions && /*#__PURE__*/React.createElement(Dropdown, {\n        id: \"summary-node-actions\",\n        style: {\n          float: 'right'\n        },\n        isPlain: true,\n        dropdownItems: actions,\n        isOpen: this.state.isActionOpen,\n        position: DropdownPosition.right,\n        toggle: /*#__PURE__*/React.createElement(KebabToggle, {\n          id: \"summary-node-kebab\",\n          onToggle: this.onToggleActions,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, renderHealth(nodeData.health)), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      }, this.renderBadgeSummary(nodeData), shouldRenderDestsList && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 39\n        }\n      }, destsList), shouldRenderSvcList && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 37\n        }\n      }, servicesList), shouldRenderService && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 37\n        }\n      }, renderBadgedLink(nodeData, NodeType.SERVICE)), shouldRenderApp && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 33\n        }\n      }, renderBadgedLink(nodeData, NodeType.APP)), shouldRenderWorkload && this.renderWorkloadSection(nodeData))), shouldRenderTraces ? this.renderWithTabs(nodeData) : this.renderTrafficOnly());\n    }\n  }, {\n    key: \"renderTrafficOnly\",\n    value: function renderTrafficOnly() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"panel-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(SummaryPanelNodeTraffic, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }\n      })));\n    }\n  }, {\n    key: \"renderWithTabs\",\n    value: function renderWithTabs(nodeData) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: summaryBodyTabs,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(SimpleTabs, {\n        id: \"graph_summary_tabs\",\n        defaultTab: 0,\n        style: {\n          paddingBottom: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Tab, {\n        style: summaryFont,\n        title: \"Traffic\",\n        eventKey: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: summaryFont,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SummaryPanelNodeTraffic, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(Tab, {\n        style: summaryFont,\n        title: \"Traces\",\n        eventKey: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(SummaryPanelNodeTraces, {\n        nodeData: nodeData,\n        queryTime: this.props.queryTime - this.props.duration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return SummaryPanelNode;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    jaegerState: state.jaegerState\n  };\n};\n\nvar SummaryPanelNodeContainer = connect(mapStateToProps)(SummaryPanelNode);\nexport default SummaryPanelNodeContainer;","map":{"version":3,"sources":["/root/kiali-ui/src/pages/Graph/SummaryPanelNode.tsx"],"names":["React","connect","ExternalLinkAltIcon","getBadge","getLink","renderBadgedHost","renderBadgedLink","renderDestServicesLinks","renderHealth","NodeType","summaryHeader","summaryPanel","summaryBodyTabs","summaryFont","decoratedNodeData","KialiIcon","getOptions","clickHandler","Dropdown","DropdownGroup","DropdownItem","DropdownPosition","Expandable","KebabToggle","Tab","SummaryPanelNodeTraffic","SummaryPanelNodeTraces","SimpleTabs","classes","style","defaultState","isActionOpen","expandableSectionStyle","fontSize","$nest","marginLeft","marginTop","overflow","textOverflow","whiteSpace","workloadExpandableSectionStyle","display","SummaryPanelNode","props","mainDivRef","renderWorkloadSection","nodeData","hasWorkloadEntry","WORKLOAD","workloadEntryLinks","map","we","link","encodeURIComponent","namespace","name","displayName","key","length","renderGatewayHostnames","renderHostnamesSection","isGateway","ingressInfo","hostnames","renderVsHostnames","hasVS","numberOfHostnames","toggleText","hostname","onToggleActions","isOpen","setState","renderBadgeSummary","hasCB","hasFaultInjection","hasMissingSC","hasRequestRouting","hasRequestTimeout","hasTCPTrafficShifting","hasTrafficShifting","isDead","hasTrafficScenario","shouldRenderGatewayHostnames","undefined","shouldRenderVsHostnames","marginBottom","paddingLeft","marginRight","renderDestServices","data","destServices","entries","forEach","ds","push","state","createRef","prevProps","summaryTarget","current","scrollTop","node","nodeType","app","service","workload","isServiceEntry","servicesList","SERVICE","destsList","shouldRenderDestsList","shouldRenderSvcList","shouldRenderService","UNKNOWN","includes","shouldRenderApp","APP","shouldRenderWorkload","shouldRenderTraces","isInaccessible","jaegerState","info","enabled","integration","options","o","text","target","actions","float","right","health","renderWithTabs","renderTrafficOnly","paddingBottom","queryTime","duration","Component","mapStateToProps","SummaryPanelNodeContainer"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport {\n  getBadge,\n  getLink,\n  renderBadgedHost,\n  renderBadgedLink,\n  renderDestServicesLinks,\n  renderHealth\n} from './SummaryLink';\nimport { NodeType, SummaryPanelPropType, DecoratedGraphNodeData, DestService } from '../../types/Graph';\nimport { summaryHeader, summaryPanel, summaryBodyTabs, summaryFont } from './SummaryPanelCommon';\nimport { decoratedNodeData } from '../../components/CytoscapeGraph/CytoscapeGraphUtils';\nimport { KialiIcon } from 'config/KialiIcon';\nimport { getOptions, clickHandler } from 'components/CytoscapeGraph/ContextMenu/NodeContextMenu';\nimport {\n  Dropdown,\n  DropdownGroup,\n  DropdownItem,\n  DropdownPosition,\n  Expandable,\n  KebabToggle,\n  Tab\n} from '@patternfly/react-core';\nimport { KialiAppState } from 'store/Store';\nimport { SummaryPanelNodeTraffic } from './SummaryPanelNodeTraffic';\nimport SummaryPanelNodeTraces from './SummaryPanelNodeTraces';\nimport SimpleTabs from 'components/Tab/SimpleTabs';\nimport { JaegerState } from 'reducers/JaegerState';\nimport { classes, style } from 'typestyle';\n\ntype SummaryPanelNodeState = {\n  isActionOpen: boolean;\n};\n\nconst defaultState: SummaryPanelNodeState = {\n  isActionOpen: false\n};\n\ntype ReduxProps = {\n  jaegerState: JaegerState;\n};\n\nexport type SummaryPanelNodeProps = ReduxProps & SummaryPanelPropType;\n\nconst expandableSectionStyle = style({\n  fontSize: 'var(--graph-side-panel--font-size)',\n  $nest: {\n    '& > div': {\n      marginLeft: '2em',\n      marginTop: '0 !important',\n      $nest: {\n        '& div': {\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap'\n        }\n      }\n    }\n  }\n});\n\nconst workloadExpandableSectionStyle = classes(expandableSectionStyle, style({ display: 'inline' }));\n\nexport class SummaryPanelNode extends React.Component<SummaryPanelNodeProps, SummaryPanelNodeState> {\n  private readonly mainDivRef: React.RefObject<HTMLDivElement>;\n\n  constructor(props: SummaryPanelNodeProps) {\n    super(props);\n\n    this.state = { ...defaultState };\n    this.mainDivRef = React.createRef<HTMLDivElement>();\n  }\n\n  componentDidUpdate(prevProps: SummaryPanelNodeProps) {\n    if (prevProps.data.summaryTarget !== this.props.data.summaryTarget) {\n      if (this.mainDivRef.current) {\n        this.mainDivRef.current.scrollTop = 0;\n      }\n    }\n  }\n\n  render() {\n    const node = this.props.data.summaryTarget;\n    const nodeData = decoratedNodeData(node);\n    const { nodeType, app, service, workload, isServiceEntry } = nodeData;\n    const servicesList = nodeType !== NodeType.SERVICE && renderDestServicesLinks(node);\n    const destsList = nodeType === NodeType.SERVICE && isServiceEntry && this.renderDestServices(nodeData);\n\n    const shouldRenderDestsList = destsList && destsList.length > 0;\n    const shouldRenderSvcList = servicesList && servicesList.length > 0;\n    const shouldRenderService = service && ![NodeType.SERVICE, NodeType.UNKNOWN].includes(nodeType);\n    const shouldRenderApp = app && ![NodeType.APP, NodeType.UNKNOWN].includes(nodeType);\n    const shouldRenderWorkload = workload && ![NodeType.WORKLOAD, NodeType.UNKNOWN].includes(nodeType);\n    const shouldRenderTraces =\n      !isServiceEntry &&\n      !nodeData.isInaccessible &&\n      this.props.jaegerState.info &&\n      this.props.jaegerState.info.enabled &&\n      this.props.jaegerState.info.integration;\n\n    const options = getOptions(nodeData, this.props.jaegerState.info).map(o => {\n      return (\n        <DropdownItem key={o.text} onClick={() => clickHandler(o)}>\n          {o.text} {o.target === '_blank' && <ExternalLinkAltIcon />}\n        </DropdownItem>\n      );\n    });\n    const actions =\n      options.length > 0 ? [<DropdownGroup label=\"Show\" className=\"kiali-group-menu\" children={options} />] : undefined;\n\n    return (\n      <div ref={this.mainDivRef} className={`panel panel-default ${summaryPanel}`}>\n        <div className=\"panel-heading\" style={summaryHeader}>\n          <div>\n            {renderBadgedLink(nodeData)}\n            {actions && (\n              <Dropdown\n                id=\"summary-node-actions\"\n                style={{ float: 'right' }}\n                isPlain={true}\n                dropdownItems={actions}\n                isOpen={this.state.isActionOpen}\n                position={DropdownPosition.right}\n                toggle={<KebabToggle id=\"summary-node-kebab\" onToggle={this.onToggleActions} />}\n              />\n            )}\n          </div>\n          <div>{renderHealth(nodeData.health)}</div>\n          <div>\n            {this.renderBadgeSummary(nodeData)}\n            {shouldRenderDestsList && <div>{destsList}</div>}\n            {shouldRenderSvcList && <div>{servicesList}</div>}\n            {shouldRenderService && <div>{renderBadgedLink(nodeData, NodeType.SERVICE)}</div>}\n            {shouldRenderApp && <div>{renderBadgedLink(nodeData, NodeType.APP)}</div>}\n            {shouldRenderWorkload && this.renderWorkloadSection(nodeData)}\n          </div>\n        </div>\n        {shouldRenderTraces ? this.renderWithTabs(nodeData) : this.renderTrafficOnly()}\n      </div>\n    );\n  }\n\n  private renderWorkloadSection = (nodeData: DecoratedGraphNodeData) => {\n    if (!nodeData.hasWorkloadEntry) {\n      return <div>{renderBadgedLink(nodeData, NodeType.WORKLOAD)}</div>;\n    }\n\n    const workloadEntryLinks = nodeData.hasWorkloadEntry.map(we => (\n      <div>\n        {getLink(nodeData, NodeType.WORKLOAD, () => ({\n          link: `/namespaces/${encodeURIComponent(nodeData.namespace)}/istio/workloadentries/${encodeURIComponent(\n            we.name\n          )}`,\n          displayName: we.name,\n          key: `${nodeData.namespace}.wle.${we.name}`\n        }))}\n      </div>\n    ));\n\n    return (\n      <>\n        {getBadge(nodeData, NodeType.WORKLOAD)}\n        <Expandable\n          toggleText={\n            nodeData.hasWorkloadEntry.length === 1\n              ? '1 workload entry'\n              : `${nodeData.hasWorkloadEntry.length} workload entries`\n          }\n          className={workloadExpandableSectionStyle}\n        >\n          <div style={{ marginLeft: '3.5em' }}>{workloadEntryLinks}</div>\n        </Expandable>\n      </>\n    );\n  };\n\n  private renderGatewayHostnames = (nodeData: DecoratedGraphNodeData) => {\n    return this.renderHostnamesSection(nodeData.isGateway?.ingressInfo?.hostnames!);\n  };\n\n  private renderVsHostnames = (nodeData: DecoratedGraphNodeData) => {\n    return this.renderHostnamesSection(nodeData.hasVS?.hostnames!);\n  };\n\n  private renderHostnamesSection = (hostnames: string[]) => {\n    const numberOfHostnames = hostnames.length;\n    let toggleText = `${numberOfHostnames} hosts`;\n\n    if (numberOfHostnames === 1) {\n      toggleText = '1 host';\n    }\n\n    return (\n      <Expandable toggleText={toggleText} className={expandableSectionStyle}>\n        {hostnames.map(hostname => (\n          <div key={hostname} title={hostname}>\n            {hostname === '*' ? '* (all hosts)' : hostname}\n          </div>\n        ))}\n      </Expandable>\n    );\n  };\n\n  private renderTrafficOnly() {\n    return (\n      <div className=\"panel-body\">\n        <SummaryPanelNodeTraffic {...this.props} />\n      </div>\n    );\n  }\n\n  private renderWithTabs(nodeData: DecoratedGraphNodeData) {\n    return (\n      <div className={summaryBodyTabs}>\n        <SimpleTabs id=\"graph_summary_tabs\" defaultTab={0} style={{ paddingBottom: '10px' }}>\n          <Tab style={summaryFont} title=\"Traffic\" eventKey={0}>\n            <div style={summaryFont}>\n              <SummaryPanelNodeTraffic {...this.props} />\n            </div>\n          </Tab>\n          <Tab style={summaryFont} title=\"Traces\" eventKey={1}>\n            <SummaryPanelNodeTraces nodeData={nodeData} queryTime={this.props.queryTime - this.props.duration} />\n          </Tab>\n        </SimpleTabs>\n      </div>\n    );\n  }\n\n  private onToggleActions = isOpen => {\n    this.setState({ isActionOpen: isOpen });\n  };\n\n  // TODO:(see https://github.com/kiali/kiali-design/issues/63) If we want to show an icon for SE uncomment below\n  private renderBadgeSummary = (nodeData: DecoratedGraphNodeData) => {\n    const {\n      hasCB,\n      hasFaultInjection,\n      hasMissingSC,\n      hasRequestRouting,\n      hasRequestTimeout,\n      hasTCPTrafficShifting,\n      hasTrafficShifting,\n      hasVS,\n      isDead,\n      isGateway\n    } = nodeData;\n    const hasTrafficScenario =\n      hasRequestRouting || hasFaultInjection || hasTrafficShifting || hasTCPTrafficShifting || hasRequestTimeout;\n    const shouldRenderGatewayHostnames =\n      nodeData.isGateway?.ingressInfo?.hostnames !== undefined && nodeData.isGateway.ingressInfo.hostnames.length !== 0;\n    const shouldRenderVsHostnames = nodeData.hasVS?.hostnames !== undefined && nodeData.hasVS?.hostnames.length !== 0;\n    return (\n      <div style={{ marginTop: '10px', marginBottom: '10px' }}>\n        {hasCB && (\n          <div>\n            <KialiIcon.CircuitBreaker />\n            <span style={{ paddingLeft: '4px' }}>Has Circuit Breaker</span>\n          </div>\n        )}\n        {hasVS && !hasTrafficScenario && (\n          <>\n            <div>\n              <KialiIcon.VirtualService />\n              <span style={{ paddingLeft: '4px' }}>Has Virtual Service</span>\n            </div>\n            {shouldRenderVsHostnames && this.renderVsHostnames(nodeData)}\n          </>\n        )}\n        {hasMissingSC && (\n          <div>\n            <KialiIcon.MissingSidecar />\n            <span style={{ paddingLeft: '4px' }}>Has Missing Sidecar</span>\n          </div>\n        )}\n        {isDead && (\n          <div>\n            <span style={{ marginRight: '5px' }}>\n              <KialiIcon.Info />\n            </span>\n            <span style={{ paddingLeft: '4px' }}>Has No Running Pods</span>\n          </div>\n        )}\n        {hasRequestRouting && (\n          <>\n            <div>\n              <KialiIcon.RequestRouting />\n              <span style={{ paddingLeft: '4px' }}>Has Request Routing</span>\n            </div>\n            {shouldRenderVsHostnames && this.renderVsHostnames(nodeData)}\n          </>\n        )}\n        {hasFaultInjection && (\n          <div>\n            <KialiIcon.FaultInjection />\n            <span style={{ paddingLeft: '4px' }}>Has Fault Injection</span>\n          </div>\n        )}\n        {hasTrafficShifting && (\n          <div>\n            <KialiIcon.TrafficShifting />\n            <span style={{ paddingLeft: '4px' }}>Has Traffic Shifting</span>\n          </div>\n        )}\n        {hasTCPTrafficShifting && (\n          <div>\n            <KialiIcon.TrafficShifting />\n            <span style={{ paddingLeft: '4px' }}>Has TCP Traffic Shifting</span>\n          </div>\n        )}\n        {hasRequestTimeout && (\n          <div>\n            <KialiIcon.RequestTimeout />\n            <span style={{ paddingLeft: '4px' }}>Has Request Timeout</span>\n          </div>\n        )}\n        {isGateway && (\n          <>\n            <div>\n              <KialiIcon.Gateway />\n              <span style={{ paddingLeft: '4px' }}>Is Gateway</span>\n            </div>\n            {shouldRenderGatewayHostnames && this.renderGatewayHostnames(nodeData)}\n          </>\n        )}\n      </div>\n    );\n  };\n\n  private renderDestServices = (data: DecoratedGraphNodeData) => {\n    const destServices: DestService[] | undefined = data.destServices;\n\n    const entries: any[] = [];\n    if (!destServices) {\n      return entries;\n    }\n\n    destServices.forEach(ds => {\n      entries.push(renderBadgedHost(ds.name));\n    });\n\n    return entries;\n  };\n}\n\nconst mapStateToProps = (state: KialiAppState) => ({\n  jaegerState: state.jaegerState\n});\n\nconst SummaryPanelNodeContainer = connect(mapStateToProps)(SummaryPanelNode);\nexport default SummaryPanelNodeContainer;\n"]},"metadata":{},"sourceType":"module"}