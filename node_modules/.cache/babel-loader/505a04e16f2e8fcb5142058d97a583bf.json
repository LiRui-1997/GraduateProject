{"ast":null,"code":"import * as FreeStyle from 'free-style';\n/**\n * We need to do the following to *our* objects before passing to freestyle:\n * - For any `$nest` directive move up to FreeStyle style nesting\n * - For any `$unique` directive map to FreeStyle Unique\n * - For any `$debugName` directive return the debug name\n */\n\nexport function ensureStringObj(object) {\n  /** The final result we will return */\n  var result = {};\n  var debugName = '';\n\n  for (var key in object) {\n    /** Grab the value upfront */\n    var val = object[key];\n    /** TypeStyle configuration options */\n\n    if (key === '$unique') {\n      result[FreeStyle.IS_UNIQUE] = val;\n    } else if (key === '$nest') {\n      var nested = val;\n\n      for (var selector in nested) {\n        var subproperties = nested[selector];\n        result[selector] = ensureStringObj(subproperties).result;\n      }\n    } else if (key === '$debugName') {\n      debugName = val;\n    } else {\n      result[key] = val;\n    }\n  }\n\n  return {\n    result: result,\n    debugName: debugName\n  };\n} // todo: better name here\n\nexport function explodeKeyframes(frames) {\n  var result = {\n    $debugName: undefined,\n    keyframes: {}\n  };\n\n  for (var offset in frames) {\n    var val = frames[offset];\n\n    if (offset === '$debugName') {\n      result.$debugName = val;\n    } else {\n      result.keyframes[offset] = val;\n    }\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/root/kiali-ui/node_modules/typestyle/lib.es2015/internal/formatting.js"],"names":["FreeStyle","ensureStringObj","object","result","debugName","key","val","IS_UNIQUE","nested","selector","subproperties","explodeKeyframes","frames","$debugName","undefined","keyframes","offset"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,YAA3B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;AACpC;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,SAAS,GAAG,EAAhB;;AACA,OAAK,IAAIC,GAAT,IAAgBH,MAAhB,EAAwB;AACpB;AACA,QAAII,GAAG,GAAGJ,MAAM,CAACG,GAAD,CAAhB;AACA;;AACA,QAAIA,GAAG,KAAK,SAAZ,EAAuB;AACnBF,MAAAA,MAAM,CAACH,SAAS,CAACO,SAAX,CAAN,GAA8BD,GAA9B;AACH,KAFD,MAGK,IAAID,GAAG,KAAK,OAAZ,EAAqB;AACtB,UAAIG,MAAM,GAAGF,GAAb;;AACA,WAAK,IAAIG,QAAT,IAAqBD,MAArB,EAA6B;AACzB,YAAIE,aAAa,GAAGF,MAAM,CAACC,QAAD,CAA1B;AACAN,QAAAA,MAAM,CAACM,QAAD,CAAN,GAAmBR,eAAe,CAACS,aAAD,CAAf,CAA+BP,MAAlD;AACH;AACJ,KANI,MAOA,IAAIE,GAAG,KAAK,YAAZ,EAA0B;AAC3BD,MAAAA,SAAS,GAAGE,GAAZ;AACH,KAFI,MAGA;AACDH,MAAAA,MAAM,CAACE,GAAD,CAAN,GAAcC,GAAd;AACH;AACJ;;AACD,SAAO;AAAEH,IAAAA,MAAM,EAAEA,MAAV;AAAkBC,IAAAA,SAAS,EAAEA;AAA7B,GAAP;AACH,C,CACD;;AACA,OAAO,SAASO,gBAAT,CAA0BC,MAA1B,EAAkC;AACrC,MAAIT,MAAM,GAAG;AAAEU,IAAAA,UAAU,EAAEC,SAAd;AAAyBC,IAAAA,SAAS,EAAE;AAApC,GAAb;;AACA,OAAK,IAAIC,MAAT,IAAmBJ,MAAnB,EAA2B;AACvB,QAAIN,GAAG,GAAGM,MAAM,CAACI,MAAD,CAAhB;;AACA,QAAIA,MAAM,KAAK,YAAf,EAA6B;AACzBb,MAAAA,MAAM,CAACU,UAAP,GAAoBP,GAApB;AACH,KAFD,MAGK;AACDH,MAAAA,MAAM,CAACY,SAAP,CAAiBC,MAAjB,IAA2BV,GAA3B;AACH;AACJ;;AACD,SAAOH,MAAP;AACH","sourcesContent":["import * as FreeStyle from 'free-style';\n/**\n * We need to do the following to *our* objects before passing to freestyle:\n * - For any `$nest` directive move up to FreeStyle style nesting\n * - For any `$unique` directive map to FreeStyle Unique\n * - For any `$debugName` directive return the debug name\n */\nexport function ensureStringObj(object) {\n    /** The final result we will return */\n    var result = {};\n    var debugName = '';\n    for (var key in object) {\n        /** Grab the value upfront */\n        var val = object[key];\n        /** TypeStyle configuration options */\n        if (key === '$unique') {\n            result[FreeStyle.IS_UNIQUE] = val;\n        }\n        else if (key === '$nest') {\n            var nested = val;\n            for (var selector in nested) {\n                var subproperties = nested[selector];\n                result[selector] = ensureStringObj(subproperties).result;\n            }\n        }\n        else if (key === '$debugName') {\n            debugName = val;\n        }\n        else {\n            result[key] = val;\n        }\n    }\n    return { result: result, debugName: debugName };\n}\n// todo: better name here\nexport function explodeKeyframes(frames) {\n    var result = { $debugName: undefined, keyframes: {} };\n    for (var offset in frames) {\n        var val = frames[offset];\n        if (offset === '$debugName') {\n            result.$debugName = val;\n        }\n        else {\n            result.keyframes[offset] = val;\n        }\n    }\n    return result;\n}\n"]},"metadata":{},"sourceType":"module"}