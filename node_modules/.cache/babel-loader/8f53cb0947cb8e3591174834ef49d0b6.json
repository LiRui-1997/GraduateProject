{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/pages/AppList/AppListPage.tsx\";\nimport * as React from 'react';\nimport * as FilterHelper from '../../components/FilterList/FilterHelper';\nimport { RenderContent } from '../../components/Nav/Page';\nimport * as AppListFilters from './FiltersAndSorts';\nimport DefaultSecondaryMasthead from '../../components/DefaultSecondaryMasthead/DefaultSecondaryMasthead';\nimport * as FilterComponent from '../../components/FilterList/FilterComponent';\nimport { PromisesRegistry } from '../../utils/CancelablePromises';\nimport { activeNamespacesSelector, durationSelector } from '../../store/Selectors';\nimport { connect } from 'react-redux';\nimport { namespaceEquals } from '../../utils/Common';\nimport { FilterSelected, StatefulFilters } from '../../components/Filters/StatefulFilters';\nimport * as API from '../../services/Api';\nimport * as AppListClass from './AppListClass';\nimport VirtualList from '../../components/VirtualList/VirtualList';\nimport TimeDurationContainer from '../../components/Time/TimeDurationComponent';\n\nvar AppListPageComponent = /*#__PURE__*/function (_FilterComponent$Comp) {\n  _inherits(AppListPageComponent, _FilterComponent$Comp);\n\n  var _super = _createSuper(AppListPageComponent);\n\n  function AppListPageComponent(props) {\n    var _this;\n\n    _classCallCheck(this, AppListPageComponent);\n\n    _this = _super.call(this, props);\n    _this.promises = new PromisesRegistry();\n    var prevCurrentSortField = FilterHelper.currentSortField(AppListFilters.sortFields);\n    var prevIsSortAscending = FilterHelper.isCurrentSortAscending();\n    _this.state = {\n      listItems: [],\n      currentSortField: prevCurrentSortField,\n      isSortAscending: prevIsSortAscending\n    };\n    return _this;\n  }\n\n  _createClass(AppListPageComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateListItems();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var prevCurrentSortField = FilterHelper.currentSortField(AppListFilters.sortFields);\n      var prevIsSortAscending = FilterHelper.isCurrentSortAscending();\n\n      if (!namespaceEquals(this.props.activeNamespaces, prevProps.activeNamespaces) || this.props.duration !== prevProps.duration || this.state.currentSortField !== prevCurrentSortField || this.state.isSortAscending !== prevIsSortAscending) {\n        this.setState({\n          currentSortField: prevCurrentSortField,\n          isSortAscending: prevIsSortAscending\n        });\n        this.updateListItems();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.promises.cancelAll();\n    }\n  }, {\n    key: \"sortItemList\",\n    value: function sortItemList(items, sortField, isAscending) {\n      // Chain promises, as there may be an ongoing fetch/refresh and sort can be called after UI interaction\n      // This ensures that the list will display the new data with the right sorting\n      return this.promises.registerChained('sort', items, function (unsorted) {\n        return AppListFilters.sortAppsItems(unsorted, sortField, isAscending);\n      });\n    }\n  }, {\n    key: \"updateListItems\",\n    value: function updateListItems() {\n      this.promises.cancelAll();\n      var activeFilters = FilterSelected.getSelected();\n      var namespacesSelected = this.props.activeNamespaces.map(function (item) {\n        return item.name;\n      });\n\n      if (namespacesSelected.length !== 0) {\n        this.fetchApps(namespacesSelected, activeFilters, this.props.duration);\n      } else {\n        this.setState({\n          listItems: []\n        });\n      }\n    }\n  }, {\n    key: \"fetchApps\",\n    value: function fetchApps(namespaces, filters, rateInterval) {\n      var _this2 = this;\n\n      var appsPromises = namespaces.map(function (namespace) {\n        return API.getApps(namespace);\n      });\n      this.promises.registerAll('apps', appsPromises).then(function (responses) {\n        var appListItems = [];\n        responses.forEach(function (response) {\n          appListItems = appListItems.concat(AppListClass.getAppItems(response.data, rateInterval));\n        });\n        return AppListFilters.filterBy(appListItems, filters);\n      }).then(function (appListItems) {\n        _this2.promises.cancel('sort');\n\n        _this2.sortItemList(appListItems, _this2.state.currentSortField, _this2.state.isSortAscending).then(function (sorted) {\n          _this2.setState({\n            listItems: sorted\n          });\n        }).catch(function (err) {\n          if (!err.isCanceled) {\n            console.debug(err);\n          }\n        });\n      }).catch(function (err) {\n        if (!err.isCanceled) {\n          _this2.handleAxiosError('Could not fetch apps list', err);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DefaultSecondaryMasthead, {\n        rightToolbar: /*#__PURE__*/React.createElement(TimeDurationContainer, {\n          key: 'DurationDropdown',\n          id: \"app-list-duration-dropdown\",\n          handleRefresh: this.updateListItems,\n          disabled: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(RenderContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(VirtualList, {\n        rows: this.state.listItems,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(StatefulFilters, {\n        initialFilters: AppListFilters.availableFilters,\n        onFilterChange: this.onFilterChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return AppListPageComponent;\n}(FilterComponent.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    activeNamespaces: activeNamespacesSelector(state),\n    duration: durationSelector(state)\n  };\n};\n\nvar AppListPage = connect(mapStateToProps)(AppListPageComponent);\nexport default AppListPage;","map":{"version":3,"sources":["/root/kiali-ui/src/pages/AppList/AppListPage.tsx"],"names":["React","FilterHelper","RenderContent","AppListFilters","DefaultSecondaryMasthead","FilterComponent","PromisesRegistry","activeNamespacesSelector","durationSelector","connect","namespaceEquals","FilterSelected","StatefulFilters","API","AppListClass","VirtualList","TimeDurationContainer","AppListPageComponent","props","promises","prevCurrentSortField","currentSortField","sortFields","prevIsSortAscending","isCurrentSortAscending","state","listItems","isSortAscending","updateListItems","prevProps","activeNamespaces","duration","setState","cancelAll","items","sortField","isAscending","registerChained","unsorted","sortAppsItems","activeFilters","getSelected","namespacesSelected","map","item","name","length","fetchApps","namespaces","filters","rateInterval","appsPromises","namespace","getApps","registerAll","then","responses","appListItems","forEach","response","concat","getAppItems","data","filterBy","cancel","sortItemList","sorted","catch","err","isCanceled","console","debug","handleAxiosError","backgroundColor","availableFilters","onFilterChange","Component","mapStateToProps","AppListPage"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as FilterHelper from '../../components/FilterList/FilterHelper';\nimport { RenderContent } from '../../components/Nav/Page';\nimport * as AppListFilters from './FiltersAndSorts';\nimport DefaultSecondaryMasthead from '../../components/DefaultSecondaryMasthead/DefaultSecondaryMasthead';\nimport * as FilterComponent from '../../components/FilterList/FilterComponent';\nimport { AppListItem } from '../../types/AppList';\nimport { DurationInSeconds } from '../../types/Common';\nimport Namespace from '../../types/Namespace';\nimport { PromisesRegistry } from '../../utils/CancelablePromises';\nimport { KialiAppState } from '../../store/Store';\nimport { activeNamespacesSelector, durationSelector } from '../../store/Selectors';\nimport { connect } from 'react-redux';\nimport { namespaceEquals } from '../../utils/Common';\nimport { SortField } from '../../types/SortFilters';\nimport { ActiveFiltersInfo } from '../../types/Filters';\nimport { FilterSelected, StatefulFilters } from '../../components/Filters/StatefulFilters';\nimport * as API from '../../services/Api';\nimport * as AppListClass from './AppListClass';\nimport VirtualList from '../../components/VirtualList/VirtualList';\nimport TimeDurationContainer from '../../components/Time/TimeDurationComponent';\n\ntype AppListPageState = FilterComponent.State<AppListItem>;\n\ntype ReduxProps = {\n  duration: DurationInSeconds;\n  activeNamespaces: Namespace[];\n};\n\ntype AppListPageProps = ReduxProps & FilterComponent.Props<AppListItem>;\n\nclass AppListPageComponent extends FilterComponent.Component<AppListPageProps, AppListPageState, AppListItem> {\n  private promises = new PromisesRegistry();\n\n  constructor(props: AppListPageProps) {\n    super(props);\n    const prevCurrentSortField = FilterHelper.currentSortField(AppListFilters.sortFields);\n    const prevIsSortAscending = FilterHelper.isCurrentSortAscending();\n    this.state = {\n      listItems: [],\n      currentSortField: prevCurrentSortField,\n      isSortAscending: prevIsSortAscending\n    };\n  }\n\n  componentDidMount() {\n    this.updateListItems();\n  }\n\n  componentDidUpdate(prevProps: AppListPageProps) {\n    const prevCurrentSortField = FilterHelper.currentSortField(AppListFilters.sortFields);\n    const prevIsSortAscending = FilterHelper.isCurrentSortAscending();\n    if (\n      !namespaceEquals(this.props.activeNamespaces, prevProps.activeNamespaces) ||\n      this.props.duration !== prevProps.duration ||\n      this.state.currentSortField !== prevCurrentSortField ||\n      this.state.isSortAscending !== prevIsSortAscending\n    ) {\n      this.setState({\n        currentSortField: prevCurrentSortField,\n        isSortAscending: prevIsSortAscending\n      });\n      this.updateListItems();\n    }\n  }\n\n  componentWillUnmount() {\n    this.promises.cancelAll();\n  }\n\n  sortItemList(items: AppListItem[], sortField: SortField<AppListItem>, isAscending: boolean): Promise<AppListItem[]> {\n    // Chain promises, as there may be an ongoing fetch/refresh and sort can be called after UI interaction\n    // This ensures that the list will display the new data with the right sorting\n    return this.promises.registerChained('sort', items, unsorted =>\n      AppListFilters.sortAppsItems(unsorted, sortField, isAscending)\n    );\n  }\n\n  updateListItems() {\n    this.promises.cancelAll();\n    const activeFilters: ActiveFiltersInfo = FilterSelected.getSelected();\n    const namespacesSelected = this.props.activeNamespaces.map(item => item.name);\n    if (namespacesSelected.length !== 0) {\n      this.fetchApps(namespacesSelected, activeFilters, this.props.duration);\n    } else {\n      this.setState({ listItems: [] });\n    }\n  }\n\n  fetchApps(namespaces: string[], filters: ActiveFiltersInfo, rateInterval: number) {\n    const appsPromises = namespaces.map(namespace => API.getApps(namespace));\n    this.promises\n      .registerAll('apps', appsPromises)\n      .then(responses => {\n        let appListItems: AppListItem[] = [];\n        responses.forEach(response => {\n          appListItems = appListItems.concat(AppListClass.getAppItems(response.data, rateInterval));\n        });\n        return AppListFilters.filterBy(appListItems, filters);\n      })\n      .then(appListItems => {\n        this.promises.cancel('sort');\n        this.sortItemList(appListItems, this.state.currentSortField, this.state.isSortAscending)\n          .then(sorted => {\n            this.setState({\n              listItems: sorted\n            });\n          })\n          .catch(err => {\n            if (!err.isCanceled) {\n              console.debug(err);\n            }\n          });\n      })\n      .catch(err => {\n        if (!err.isCanceled) {\n          this.handleAxiosError('Could not fetch apps list', err);\n        }\n      });\n  }\n\n  render() {\n    return (\n      <>\n        <div style={{ backgroundColor: '#fff' }}>\n          <DefaultSecondaryMasthead\n            rightToolbar={\n              <TimeDurationContainer\n                key={'DurationDropdown'}\n                id=\"app-list-duration-dropdown\"\n                handleRefresh={this.updateListItems}\n                disabled={false}\n              />\n            }\n          />\n        </div>\n        <RenderContent>\n          <VirtualList rows={this.state.listItems}>\n            <StatefulFilters initialFilters={AppListFilters.availableFilters} onFilterChange={this.onFilterChange} />\n          </VirtualList>\n        </RenderContent>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: KialiAppState) => ({\n  activeNamespaces: activeNamespacesSelector(state),\n  duration: durationSelector(state)\n});\n\nconst AppListPage = connect(mapStateToProps)(AppListPageComponent);\n\nexport default AppListPage;\n"]},"metadata":{},"sourceType":"module"}