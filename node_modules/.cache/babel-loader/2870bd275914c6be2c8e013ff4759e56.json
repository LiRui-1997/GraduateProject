{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/pages/extensions/iter8/Iter8ExperimentDetails/Iter8Dropdown.tsx\";\nimport * as React from 'react';\nimport { Button, Dropdown, DropdownItem, DropdownPosition, DropdownToggle, Form, Modal, Text, TextVariants, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport TrafficShifting from '../../../../components/IstioWizards/TrafficShifting';\nvar ITER8_ACTIONS = ['暂停', '恢复', '终止'];\n\nvar Iter8Dropdown = /*#__PURE__*/function (_React$Component) {\n  _inherits(Iter8Dropdown, _React$Component);\n\n  var _super = _createSuper(Iter8Dropdown);\n\n  function Iter8Dropdown(props) {\n    var _this;\n\n    _classCallCheck(this, Iter8Dropdown);\n\n    _this = _super.call(this, props);\n\n    _this.onSelect = function (_) {\n      _this.setState({\n        dropdownOpen: !_this.state.dropdownOpen\n      });\n    };\n\n    _this.onToggle = function (dropdownState) {\n      _this.setState({\n        dropdownOpen: dropdownState\n      });\n    };\n\n    _this.actionConfirmModal = function (thisType, action, reset) {\n      switch (thisType) {\n        case 'Delete':\n          _this.setState({\n            showDeleteConfirmModal: action\n          });\n\n          break;\n\n        case 'Pause':\n          _this.setState({\n            showPauseConfirmModal: action\n          });\n\n          break;\n\n        case 'Resume':\n          _this.setState({\n            showResumeConfirmModal: action\n          });\n\n          break;\n\n        case 'Terminate':\n          if (reset) {\n            _this.setState({\n              warning: '',\n              workloadWeights: _this.props.manualOverride\n            });\n          }\n\n          _this.setState({\n            showTerminateConfirmModal: action\n          });\n\n          break;\n      }\n    };\n\n    _this.onAction = function (action) {\n      _this.actionConfirmModal(action, false, false);\n\n      switch (action) {\n        case 'Delete':\n          _this.props.onDelete();\n\n          break;\n\n        case 'Pause':\n          _this.props.onPause();\n\n          break;\n\n        case 'Resume':\n          _this.props.onResume();\n\n          break;\n\n        case 'Terminate':\n          _this.setState({\n            warning: ''\n          });\n\n          _this.props.doTrafficSplit(_this.state.workloadWeights);\n\n          _this.props.onTerminate();\n\n          break;\n      }\n    };\n\n    _this.onSelectWeights = function (_valid, workloads) {\n      _this.setState({\n        workloadWeights: workloads\n      });\n    };\n\n    _this.checkTotalWeight = function () {\n      if (_this.state.showTerminateConfirmModal) {\n        return _this.state.workloadWeights.map(function (w) {\n          return w.weight;\n        }).reduce(function (a, b) {\n          return a + b;\n        }, 0) === 100;\n      }\n\n      return true;\n    };\n\n    _this.trafficSplitRules = function () {\n      var thisWorkloads = [];\n\n      _this.props.manualOverride.forEach(function (w) {\n        thisWorkloads.push({\n          name: w.name,\n          type: 'Workload',\n          istioSidecar: false,\n          labels: {},\n          resourceVersion: 'v',\n          createdAt: ''\n        });\n      });\n\n      return /*#__PURE__*/React.createElement(Form, {\n        isHorizontal: true,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(TrafficShifting, {\n        workloads: thisWorkloads,\n        initWeights: _this.props.manualOverride,\n        onChange: _this.onSelectWeights,\n        showMirror: false,\n        showValid: true,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    _this.GenConfirmModal = function (action, extraMsg, isThisOpen) {\n      var thisTitle = 'Confirm ' + action;\n      return /*#__PURE__*/React.createElement(Modal, {\n        title: thisTitle,\n        isSmall: true,\n        isOpen: isThisOpen,\n        onClose: function onClose() {\n          return _this.actionConfirmModal(action, false, true);\n        },\n        actions: [/*#__PURE__*/React.createElement(Button, {\n          key: \"cancel\",\n          variant: \"secondary\",\n          onClick: function onClick() {\n            return _this.actionConfirmModal(action, false, true);\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 11\n          }\n        }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n          key: \"confirm\",\n          variant: \"danger\",\n          isDisabled: !_this.checkTotalWeight(),\n          onClick: function onClick() {\n            return _this.onAction(action);\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 11\n          }\n        }, action)],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        component: TextVariants.p,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }\n      }, \"Are you sure you want to \", action.toLowerCase().split(' ', 3)[0], \" the Iter8 experiment \\\"\", _this.props.experimentName, \"\\\"\", extraMsg), action === 'Terminate' ? /*#__PURE__*/React.createElement(React.Fragment, null, _this.trafficSplitRules()) : '');\n    };\n\n    _this.canAction = function (action, phase) {\n      switch (action) {\n        case 'Terminate':\n          return _this.props.startTime !== '' && _this.props.endTime === '';\n      }\n\n      return _this.props.startTime !== '' && _this.props.phase === phase;\n    };\n\n    _this.renderTooltip = function (key, position, msg, child) {\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        key: key,\n        position: position,\n        content: /*#__PURE__*/React.createElement(React.Fragment, null, msg),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          cursor: 'not-allowed'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 9\n        }\n      }, child));\n    };\n\n    _this.renderDropdownItem = function (actionString) {\n      var actions = actionString.split(' ');\n      var eventKey = actions[0] + 'Experiment';\n      var checkPhase = actionString === 'Pause' ? 'Progressing' : 'Pause';\n      var msgString = _this.props.startTime === '' ? '. Action \"' + actionString + '\" can only be done once experiment is started. ' : _this.props.endTime !== '' ? '. Action \"' + actionString + '\" can only be done while experiment is running. ' : '';\n      var item = /*#__PURE__*/React.createElement(DropdownItem, {\n        key: eventKey,\n        onClick: function onClick() {\n          return _this.actionConfirmModal(actionString, true, true);\n        },\n        isDisabled: !_this.canAction(actions[0], checkPhase),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 7\n        }\n      }, actionString);\n      return !_this.canAction(actions[0], checkPhase) ? _this.renderTooltip(eventKey, TooltipPosition.left, 'Experiment is in state ' + _this.props.phase + msgString, item) : item;\n    };\n\n    _this.renderDropdownItems = function () {\n      var items = [];\n\n      if (_this.props.canDelete) {\n        items = items.concat( /*#__PURE__*/React.createElement(DropdownItem, {\n          key: \"deleteExperiment\",\n          onClick: function onClick() {\n            return _this.actionConfirmModal('Delete', true, false);\n          },\n          isDisabled: !_this.props.canDelete,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 9\n          }\n        }, \"\\u5220\\u9664\"));\n      }\n\n      items = items.concat(ITER8_ACTIONS.map(function (action) {\n        return _this.renderDropdownItem(action);\n      }));\n      return items;\n    };\n\n    _this.state = {\n      dropdownOpen: false,\n      showDeleteConfirmModal: false,\n      showPauseConfirmModal: false,\n      showResumeConfirmModal: false,\n      showTerminateConfirmModal: false,\n      workloadWeights: [],\n      warning: ''\n    };\n    return _this;\n  }\n\n  _createClass(Iter8Dropdown, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dropdown, {\n        id: \"actions\",\n        title: \"Actions\",\n        toggle: /*#__PURE__*/React.createElement(DropdownToggle, {\n          onToggle: this.onToggle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 19\n          }\n        }, \"\\u64CD\\u4F5C\\u9009\\u9879\"),\n        onSelect: this.onSelect,\n        position: DropdownPosition.right,\n        isOpen: this.state.dropdownOpen,\n        dropdownItems: this.renderDropdownItems(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 9\n        }\n      }), this.GenConfirmModal('Delete', '? It cannot be undone. Make sure this is something you really want to do!', this.state.showDeleteConfirmModal), this.GenConfirmModal('Resume', '? ', this.state.showResumeConfirmModal), this.GenConfirmModal('Pause', '? Once it is paused, please select \"resume\" to resume the experiment. Or use terminate to stop the experiment. ', this.state.showPauseConfirmModal), this.GenConfirmModal('Terminate', '? Please specify traffic split rule ', this.state.showTerminateConfirmModal));\n    }\n  }]);\n\n  return Iter8Dropdown;\n}(React.Component);\n\nexport default Iter8Dropdown;","map":{"version":3,"sources":["/root/GraduateProject/src/pages/extensions/iter8/Iter8ExperimentDetails/Iter8Dropdown.tsx"],"names":["React","Button","Dropdown","DropdownItem","DropdownPosition","DropdownToggle","Form","Modal","Text","TextVariants","Tooltip","TooltipPosition","TrafficShifting","ITER8_ACTIONS","Iter8Dropdown","props","onSelect","_","setState","dropdownOpen","state","onToggle","dropdownState","actionConfirmModal","thisType","action","reset","showDeleteConfirmModal","showPauseConfirmModal","showResumeConfirmModal","warning","workloadWeights","manualOverride","showTerminateConfirmModal","onAction","onDelete","onPause","onResume","doTrafficSplit","onTerminate","onSelectWeights","_valid","workloads","checkTotalWeight","map","w","weight","reduce","a","b","trafficSplitRules","thisWorkloads","forEach","push","name","type","istioSidecar","labels","resourceVersion","createdAt","GenConfirmModal","extraMsg","isThisOpen","thisTitle","p","toLowerCase","split","experimentName","canAction","phase","startTime","endTime","renderTooltip","key","position","msg","child","cursor","renderDropdownItem","actionString","actions","eventKey","checkPhase","msgString","item","left","renderDropdownItems","items","canDelete","concat","right","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Button,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  DropdownToggle,\n  Form,\n  Modal,\n  Text,\n  TextVariants,\n  Tooltip,\n  TooltipPosition\n} from '@patternfly/react-core';\nimport { WorkloadOverview } from '../../../../types/ServiceInfo';\nimport TrafficShifting, { WorkloadWeight } from '../../../../components/IstioWizards/TrafficShifting';\n\nexport type ManualOverride = {\n  TrafficSplit: Map<string, number>;\n  totalTrafficSplitPercentage: number;\n};\n\ntype Props = {\n  experimentName: string;\n  manualOverride: WorkloadWeight[];\n  canDelete: boolean;\n  startTime: string;\n  endTime: string;\n  phase: string;\n  onDelete: () => void;\n  onPause: () => void;\n  onResume: () => void;\n  onTerminate: () => void;\n  doTrafficSplit: (manualOverride: WorkloadWeight[]) => void;\n};\n\ntype State = {\n  showDeleteConfirmModal: boolean;\n  showPauseConfirmModal: boolean;\n  showResumeConfirmModal: boolean;\n  showTerminateConfirmModal: boolean;\n  dropdownOpen: boolean;\n  workloadWeights: WorkloadWeight[];\n  warning: string;\n};\n\nconst ITER8_ACTIONS = ['暂停', '恢复', '终止'];\n\nclass Iter8Dropdown extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      dropdownOpen: false,\n      showDeleteConfirmModal: false,\n      showPauseConfirmModal: false,\n      showResumeConfirmModal: false,\n      showTerminateConfirmModal: false,\n      workloadWeights: [],\n      warning: ''\n    };\n  }\n\n  onSelect = _ => {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  };\n\n  onToggle = (dropdownState: boolean) => {\n    this.setState({\n      dropdownOpen: dropdownState\n    });\n  };\n\n  actionConfirmModal = (thisType: string, action: boolean, reset: boolean) => {\n    switch (thisType) {\n      case 'Delete':\n        this.setState({ showDeleteConfirmModal: action });\n        break;\n      case 'Pause':\n        this.setState({ showPauseConfirmModal: action });\n        break;\n      case 'Resume':\n        this.setState({ showResumeConfirmModal: action });\n        break;\n      case 'Terminate':\n        if (reset) {\n          this.setState({ warning: '', workloadWeights: this.props.manualOverride });\n        }\n        this.setState({ showTerminateConfirmModal: action });\n        break;\n    }\n  };\n\n  onAction = (action: string) => {\n    this.actionConfirmModal(action, false, false);\n    switch (action) {\n      case 'Delete':\n        this.props.onDelete();\n        break;\n      case 'Pause':\n        this.props.onPause();\n        break;\n      case 'Resume':\n        this.props.onResume();\n        break;\n      case 'Terminate':\n        this.setState({ warning: '' });\n        this.props.doTrafficSplit(this.state.workloadWeights);\n        this.props.onTerminate();\n        break;\n    }\n  };\n\n  onSelectWeights = (_valid: boolean, workloads: WorkloadWeight[]) => {\n    this.setState({\n      workloadWeights: workloads\n    });\n  };\n\n  checkTotalWeight = (): boolean => {\n    if (this.state.showTerminateConfirmModal) {\n      return this.state.workloadWeights.map(w => w.weight).reduce((a, b) => a + b, 0) === 100;\n    }\n    return true;\n  };\n\n  trafficSplitRules = () => {\n    const thisWorkloads: WorkloadOverview[] = [];\n    this.props.manualOverride.forEach(w => {\n      thisWorkloads.push({\n        name: w.name,\n        type: 'Workload',\n        istioSidecar: false,\n        labels: {},\n        resourceVersion: 'v',\n        createdAt: ''\n      });\n    });\n\n    return (\n      <Form isHorizontal={true}>\n        <TrafficShifting\n          workloads={thisWorkloads}\n          initWeights={this.props.manualOverride}\n          onChange={this.onSelectWeights}\n          showMirror={false}\n          showValid={true}\n        />\n      </Form>\n    );\n  };\n\n  GenConfirmModal = (action: string, extraMsg: string, isThisOpen: boolean) => {\n    let thisTitle = 'Confirm ' + action;\n    return (\n      <Modal\n        title={thisTitle}\n        isSmall={true}\n        isOpen={isThisOpen}\n        onClose={() => this.actionConfirmModal(action, false, true)}\n        actions={[\n          <Button key=\"cancel\" variant=\"secondary\" onClick={() => this.actionConfirmModal(action, false, true)}>\n            Cancel\n          </Button>,\n          <Button\n            key=\"confirm\"\n            variant=\"danger\"\n            isDisabled={!this.checkTotalWeight()}\n            onClick={() => this.onAction(action)}\n          >\n            {action}\n          </Button>\n        ]}\n      >\n        <Text component={TextVariants.p}>\n          Are you sure you want to {action.toLowerCase().split(' ', 3)[0]} the Iter8 experiment \"\n          {this.props.experimentName}\"{extraMsg}\n        </Text>\n\n        {action === 'Terminate' ? <>{this.trafficSplitRules()}</> : ''}\n      </Modal>\n    );\n  };\n\n  canAction = (action: string, phase: string): boolean => {\n    switch (action) {\n      case 'Terminate':\n        return this.props.startTime !== '' && this.props.endTime === '';\n    }\n    return this.props.startTime !== '' && this.props.phase === phase;\n  };\n\n  renderTooltip = (key, position, msg, child): JSX.Element => {\n    return (\n      <Tooltip key={key} position={position} content={<>{msg}</>}>\n        <div style={{ cursor: 'not-allowed' }}>{child}</div>\n      </Tooltip>\n    );\n  };\n\n  renderDropdownItem = (actionString: string): any => {\n    const actions = actionString.split(' ');\n    let eventKey = actions[0] + 'Experiment';\n    let checkPhase = actionString === 'Pause' ? 'Progressing' : 'Pause';\n\n    let msgString =\n      this.props.startTime === ''\n        ? '. Action \"' + actionString + '\" can only be done once experiment is started. '\n        : this.props.endTime !== ''\n        ? '. Action \"' + actionString + '\" can only be done while experiment is running. '\n        : '';\n\n    let item = (\n      <DropdownItem\n        key={eventKey}\n        onClick={() => this.actionConfirmModal(actionString, true, true)}\n        isDisabled={!this.canAction(actions[0], checkPhase)}\n      >\n        {actionString}\n      </DropdownItem>\n    );\n    return !this.canAction(actions[0], checkPhase)\n      ? this.renderTooltip(\n          eventKey,\n          TooltipPosition.left,\n          'Experiment is in state ' + this.props.phase + msgString,\n          item\n        )\n      : item;\n  };\n\n  renderDropdownItems = (): any => {\n    let items: any[] = [];\n    if (this.props.canDelete) {\n      items = items.concat(\n        <DropdownItem\n          key=\"deleteExperiment\"\n          onClick={() => this.actionConfirmModal('Delete', true, false)}\n          isDisabled={!this.props.canDelete}\n        >\n          删除\n        </DropdownItem>\n      );\n    }\n    items = items.concat(ITER8_ACTIONS.map(action => this.renderDropdownItem(action)));\n    return items;\n  };\n\n  render() {\n    return (\n      <>\n        <Dropdown\n          id=\"actions\"\n          title=\"Actions\"\n          toggle={<DropdownToggle onToggle={this.onToggle}>操作选项</DropdownToggle>}\n          onSelect={this.onSelect}\n          position={DropdownPosition.right}\n          isOpen={this.state.dropdownOpen}\n          dropdownItems={this.renderDropdownItems()}\n        />\n        {this.GenConfirmModal(\n          'Delete',\n          '? It cannot be undone. Make sure this is something you really want to do!',\n          this.state.showDeleteConfirmModal\n        )}\n        {this.GenConfirmModal('Resume', '? ', this.state.showResumeConfirmModal)}\n        {this.GenConfirmModal(\n          'Pause',\n          '? Once it is paused, please select \"resume\" to resume the experiment. Or use terminate to stop the experiment. ',\n          this.state.showPauseConfirmModal\n        )}\n        {this.GenConfirmModal(\n          'Terminate',\n          '? Please specify traffic split rule ',\n          this.state.showTerminateConfirmModal\n        )}\n      </>\n    );\n  }\n}\n\nexport default Iter8Dropdown;\n"]},"metadata":{},"sourceType":"module"}