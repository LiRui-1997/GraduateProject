{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPieLegendY = exports.getPieLegendX = exports.getChartLegendY = exports.getChartLegendX = exports.getBulletLegendY = exports.getLegendY = exports.getLegendX = exports.getLegendItemsPerRow = exports.doesLegendFit = exports.getLegendDimensions = exports.getComputedLegend = void 0;\n\nvar _lodash = require(\"lodash\");\n\nvar _victory = require(\"victory\");\n\nvar _victoryCore = require(\"victory-core\");\n\nvar _ChartTheme = require(\"../ChartTheme\");\n\nvar _chartLabel = require(\"./chart-label\");\n\nvar _chartOrigin = require(\"./chart-origin\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n\n  if (obj != null) {\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // Returns a legend which has been positioned per the given chart properties\n\n\nvar getComputedLegend = function getComputedLegend(_ref) {\n  var _ref$allowWrap = _ref.allowWrap,\n      allowWrap = _ref$allowWrap === void 0 ? true : _ref$allowWrap,\n      _ref$chartType = _ref.chartType,\n      chartType = _ref$chartType === void 0 ? 'chart' : _ref$chartType,\n      _ref$dx = _ref.dx,\n      dx = _ref$dx === void 0 ? 0 : _ref$dx,\n      _ref$dy = _ref.dy,\n      dy = _ref$dy === void 0 ? 0 : _ref$dy,\n      height = _ref.height,\n      legendComponent = _ref.legendComponent,\n      padding = _ref.padding,\n      _ref$position = _ref.position,\n      position = _ref$position === void 0 ? _ChartTheme.ChartCommonStyles.legend.position : _ref$position,\n      theme = _ref.theme,\n      width = _ref.width,\n      _ref$orientation = _ref.orientation,\n      orientation = _ref$orientation === void 0 ? theme.legend.orientation : _ref$orientation; // Get the number of legend items per row\n\n  var legendItemsProps = legendComponent.props ? legendComponent.props : {};\n  var legendItemsPerRow = allowWrap ? getLegendItemsPerRow({\n    chartType: chartType,\n    dx: dx,\n    height: height,\n    legendData: legendItemsProps.data,\n    legendOrientation: legendItemsProps.legendOrientation ? legendItemsProps.legendOrientation : orientation,\n    legendPosition: position,\n    legendProps: legendItemsProps,\n    padding: padding,\n    theme: theme,\n    width: width\n  }) : undefined; // Include new itemsPerRow prop when determining x and y position\n\n  var legendPositionProps = (0, _lodash.defaults)({}, legendComponent.props, {\n    itemsPerRow: legendItemsPerRow\n  });\n  var legendX = getLegendX({\n    chartType: chartType,\n    dx: dx,\n    height: height,\n    legendData: legendPositionProps.data,\n    legendOrientation: legendPositionProps.legendOrientation ? legendPositionProps.legendOrientation : orientation,\n    legendPosition: position,\n    legendProps: legendPositionProps,\n    padding: padding,\n    theme: theme,\n    width: width\n  });\n  var legendY = getLegendY({\n    chartType: chartType,\n    dy: dy,\n    height: height,\n    legendData: legendPositionProps.data,\n    legendOrientation: legendPositionProps.legendOrientation ? legendPositionProps.legendOrientation : orientation,\n    legendProps: legendPositionProps,\n    legendPosition: position,\n    padding: padding,\n    theme: theme,\n    width: width\n  }); // Clone legend with updated props\n\n  var legendProps = (0, _lodash.defaults)({}, legendComponent.props, {\n    itemsPerRow: legendItemsPerRow,\n    orientation: orientation,\n    standalone: false,\n    theme: theme,\n    x: legendX > 0 ? legendX : 0,\n    y: legendY > 0 ? legendY : 0\n  });\n  return React.cloneElement(legendComponent, legendProps);\n}; // Returns legend dimensions\n\n\nexports.getComputedLegend = getComputedLegend;\n\nvar getLegendDimensions = function getLegendDimensions(_ref2) {\n  var legendData = _ref2.legendData,\n      legendOrientation = _ref2.legendOrientation,\n      legendProps = _ref2.legendProps,\n      theme = _ref2.theme;\n\n  if (legendData || legendProps.data) {\n    return _victory.VictoryLegend.getDimensions(_objectSpread({\n      data: legendData,\n      orientation: legendOrientation,\n      theme: theme\n    }, legendProps));\n  }\n\n  return {};\n}; // Returns true if the legend is smaller than its container\n\n\nexports.getLegendDimensions = getLegendDimensions;\n\nvar doesLegendFit = function doesLegendFit(_ref3) {\n  var _ref3$dx = _ref3.dx,\n      dx = _ref3$dx === void 0 ? 0 : _ref3$dx,\n      height = _ref3.height,\n      legendPosition = _ref3.legendPosition,\n      legendData = _ref3.legendData,\n      legendOrientation = _ref3.legendOrientation,\n      legendProps = _ref3.legendProps,\n      padding = _ref3.padding,\n      theme = _ref3.theme,\n      width = _ref3.width;\n\n  var _Helpers$getPadding = _victoryCore.Helpers.getPadding({\n    padding: padding\n  }),\n      left = _Helpers$getPadding.left,\n      right = _Helpers$getPadding.right;\n\n  var chartSize = {\n    height: height,\n    // Fixed size\n    width: width - left - right\n  };\n  var legendDimensions = getLegendDimensions({\n    legendData: legendData,\n    legendOrientation: legendOrientation,\n    legendProps: legendProps,\n    theme: theme\n  });\n  var occupiedWidth = 0;\n\n  switch (legendPosition) {\n    case 'bottom-left':\n      occupiedWidth = left + dx;\n      break;\n\n    case 'right':\n      occupiedWidth = chartSize.width + _ChartTheme.ChartCommonStyles.legend.margin + left + dx;\n      break;\n\n    default:\n      occupiedWidth = dx;\n      break;\n  }\n\n  return width - occupiedWidth > legendDimensions.width;\n}; // Returns the number of legend items per row\n\n\nexports.doesLegendFit = doesLegendFit;\n\nvar getLegendItemsPerRow = function getLegendItemsPerRow(_ref4) {\n  var dx = _ref4.dx,\n      height = _ref4.height,\n      legendPosition = _ref4.legendPosition,\n      legendData = _ref4.legendData,\n      legendOrientation = _ref4.legendOrientation,\n      legendProps = _ref4.legendProps,\n      padding = _ref4.padding,\n      theme = _ref4.theme,\n      width = _ref4.width;\n  var itemsPerRow = legendData ? legendData.length : 0;\n\n  for (var i = itemsPerRow; i > 0; i--) {\n    var fits = doesLegendFit({\n      dx: dx,\n      height: height,\n      legendPosition: legendPosition,\n      legendData: legendData,\n      legendOrientation: legendOrientation,\n      legendProps: _objectSpread({}, legendProps, {\n        itemsPerRow: i\n      }),\n      padding: padding,\n      theme: theme,\n      width: width\n    });\n\n    if (fits) {\n      itemsPerRow = i;\n      break;\n    }\n  }\n\n  return itemsPerRow;\n}; // Returns x coordinate for legend\n\n\nexports.getLegendItemsPerRow = getLegendItemsPerRow;\n\nvar getLegendX = function getLegendX(_ref5) {\n  var chartType = _ref5.chartType,\n      rest = _objectWithoutProperties(_ref5, [\"chartType\"]);\n\n  return chartType === 'pie' ? getPieLegendX(rest) : getChartLegendX(rest);\n}; // Returns y coordinate for legend\n\n\nexports.getLegendX = getLegendX;\n\nvar getLegendY = function getLegendY(_ref6) {\n  var chartType = _ref6.chartType,\n      rest = _objectWithoutProperties(_ref6, [\"chartType\"]);\n\n  switch (chartType) {\n    case 'pie':\n      return getPieLegendY(rest);\n\n    case 'bullet':\n      return getBulletLegendY(rest);\n\n    default:\n      return getChartLegendY(rest);\n  }\n}; // Returns y coordinate for bullet legends\n\n\nexports.getLegendY = getLegendY;\n\nvar getBulletLegendY = function getBulletLegendY(_ref7) {\n  var _ref7$dy = _ref7.dy,\n      dy = _ref7$dy === void 0 ? 0 : _ref7$dy,\n      height = _ref7.height,\n      legendPosition = _ref7.legendPosition,\n      legendData = _ref7.legendData,\n      legendOrientation = _ref7.legendOrientation,\n      legendProps = _ref7.legendProps,\n      padding = _ref7.padding,\n      theme = _ref7.theme,\n      width = _ref7.width;\n\n  var _Helpers$getPadding2 = _victoryCore.Helpers.getPadding({\n    padding: padding\n  }),\n      left = _Helpers$getPadding2.left,\n      right = _Helpers$getPadding2.right;\n\n  var chartSize = {\n    height: height,\n    // Fixed size\n    width: width - left - right\n  };\n\n  switch (legendPosition) {\n    case 'bottom':\n    case 'bottom-left':\n      return chartSize.height + _ChartTheme.ChartCommonStyles.legend.margin + dy;\n\n    case 'right':\n      {\n        // Legend height with padding\n        var legendDimensions = getLegendDimensions({\n          legendData: legendData,\n          legendOrientation: legendOrientation,\n          legendProps: legendProps,\n          theme: theme\n        });\n\n        var legendPadding = function legendPadding(legendDataArr) {\n          return legendDataArr && legendDataArr.length > 0 ? 17 : 0;\n        };\n\n        return (chartSize.height - legendDimensions.height) / 2 + legendPadding(legendData);\n      }\n\n    default:\n      return dy;\n  }\n}; // Returns x coordinate for chart legends\n\n\nexports.getBulletLegendY = getBulletLegendY;\n\nvar getChartLegendX = function getChartLegendX(_ref8) {\n  var _ref8$dx = _ref8.dx,\n      dx = _ref8$dx === void 0 ? 0 : _ref8$dx,\n      height = _ref8.height,\n      legendData = _ref8.legendData,\n      legendOrientation = _ref8.legendOrientation,\n      legendPosition = _ref8.legendPosition,\n      legendProps = _ref8.legendProps,\n      padding = _ref8.padding,\n      theme = _ref8.theme,\n      width = _ref8.width;\n\n  var _Helpers$getPadding3 = _victoryCore.Helpers.getPadding({\n    padding: padding\n  }),\n      top = _Helpers$getPadding3.top,\n      bottom = _Helpers$getPadding3.bottom,\n      left = _Helpers$getPadding3.left,\n      right = _Helpers$getPadding3.right;\n\n  var chartSize = {\n    height: Math.abs(height - (bottom + top)),\n    width: Math.abs(width - (left + right))\n  };\n  var legendDimensions = getLegendDimensions({\n    legendData: legendData,\n    legendOrientation: legendOrientation,\n    legendProps: legendProps,\n    theme: theme\n  });\n  var textSizeWorkAround = getTextSizeWorkAround({\n    legendData: legendData,\n    legendOrientation: legendOrientation,\n    theme: theme\n  });\n\n  switch (legendPosition) {\n    case 'bottom':\n      return width > legendDimensions.width - textSizeWorkAround ? Math.round((width - (legendDimensions.width - textSizeWorkAround)) / 2) + dx : dx;\n\n    case 'bottom-left':\n      return left + dx;\n\n    case 'right':\n      return chartSize.width + _ChartTheme.ChartCommonStyles.legend.margin + left + dx;\n\n    default:\n      return dx;\n  }\n}; // Returns y coordinate for chart legends\n\n\nexports.getChartLegendX = getChartLegendX;\n\nvar getChartLegendY = function getChartLegendY(_ref9) {\n  var _ref9$dy = _ref9.dy,\n      dy = _ref9$dy === void 0 ? 0 : _ref9$dy,\n      height = _ref9.height,\n      legendPosition = _ref9.legendPosition,\n      legendData = _ref9.legendData,\n      legendOrientation = _ref9.legendOrientation,\n      legendProps = _ref9.legendProps,\n      padding = _ref9.padding,\n      theme = _ref9.theme,\n      width = _ref9.width;\n\n  var _Helpers$getPadding4 = _victoryCore.Helpers.getPadding({\n    padding: padding\n  }),\n      top = _Helpers$getPadding4.top,\n      bottom = _Helpers$getPadding4.bottom,\n      left = _Helpers$getPadding4.left,\n      right = _Helpers$getPadding4.right;\n\n  var chartSize = {\n    height: Math.abs(height - (bottom + top)),\n    width: Math.abs(width - (left + right))\n  };\n\n  switch (legendPosition) {\n    case 'bottom':\n    case 'bottom-left':\n      return chartSize.height + _ChartTheme.ChartCommonStyles.legend.margin * 2 + top + dy;\n\n    case 'right':\n      {\n        // Legend height with padding\n        var legendDimensions = getLegendDimensions({\n          legendData: legendData,\n          legendOrientation: legendOrientation,\n          legendProps: legendProps,\n          theme: theme\n        });\n        var originX = chartSize.height / 2 + top;\n\n        var legendPadding = function legendPadding(legendDataArr) {\n          return legendDataArr && legendDataArr.length > 0 ? 2 : 0;\n        };\n\n        return originX - legendDimensions.height / 2 + legendPadding(legendData);\n      }\n\n    default:\n      return dy;\n  }\n}; // Returns x coordinate for pie legends\n\n\nexports.getChartLegendY = getChartLegendY;\n\nvar getPieLegendX = function getPieLegendX(_ref10) {\n  var _ref10$dx = _ref10.dx,\n      dx = _ref10$dx === void 0 ? 0 : _ref10$dx,\n      height = _ref10.height,\n      legendData = _ref10.legendData,\n      legendOrientation = _ref10.legendOrientation,\n      legendPosition = _ref10.legendPosition,\n      legendProps = _ref10.legendProps,\n      padding = _ref10.padding,\n      theme = _ref10.theme,\n      width = _ref10.width;\n  var origin = (0, _chartOrigin.getPieOrigin)({\n    height: height,\n    padding: padding,\n    width: width\n  });\n\n  var radius = _victoryCore.Helpers.getRadius({\n    height: height,\n    width: width,\n    padding: padding\n  });\n\n  var legendDimensions = getLegendDimensions({\n    legendData: legendData,\n    legendOrientation: legendOrientation,\n    legendProps: legendProps,\n    theme: theme\n  });\n  var textSizeWorkAround = getTextSizeWorkAround({\n    legendData: legendData,\n    legendOrientation: legendOrientation,\n    theme: theme\n  });\n\n  switch (legendPosition) {\n    case 'bottom':\n      return width > legendDimensions.width - textSizeWorkAround ? Math.round((width - (legendDimensions.width - textSizeWorkAround)) / 2) + dx : dx;\n\n    case 'right':\n      return origin.x + _ChartTheme.ChartCommonStyles.label.margin + dx + radius;\n\n    default:\n      return dx;\n  }\n}; // Returns y coordinate for pie legends\n\n\nexports.getPieLegendX = getPieLegendX;\n\nvar getPieLegendY = function getPieLegendY(_ref11) {\n  var _ref11$dy = _ref11.dy,\n      dy = _ref11$dy === void 0 ? 0 : _ref11$dy,\n      height = _ref11.height,\n      legendPosition = _ref11.legendPosition,\n      legendData = _ref11.legendData,\n      legendOrientation = _ref11.legendOrientation,\n      legendProps = _ref11.legendProps,\n      padding = _ref11.padding,\n      theme = _ref11.theme,\n      width = _ref11.width;\n  var origin = (0, _chartOrigin.getPieOrigin)({\n    height: height,\n    padding: padding,\n    width: width\n  });\n\n  var radius = _victoryCore.Helpers.getRadius({\n    height: height,\n    width: width,\n    padding: padding\n  });\n\n  switch (legendPosition) {\n    case 'bottom':\n      return origin.y + _ChartTheme.ChartCommonStyles.legend.margin + radius + dy;\n\n    case 'right':\n      {\n        // Legend height with padding\n        var legendDimensions = getLegendDimensions({\n          legendData: legendData,\n          legendOrientation: legendOrientation,\n          legendProps: legendProps,\n          theme: theme\n        });\n\n        var legendPadding = function legendPadding(legendDataArr) {\n          return legendDataArr && legendDataArr.length > 0 ? 2 : 0;\n        };\n\n        return origin.y - legendDimensions.height / 2 + legendPadding(legendData);\n      }\n\n    default:\n      return dy;\n  }\n}; // Returns an approximation of over-sized text width due to growing character count\n//\n// See https://github.com/FormidableLabs/victory/issues/864\n\n\nexports.getPieLegendY = getPieLegendY;\n\nvar getTextSizeWorkAround = function getTextSizeWorkAround(_ref12) {\n  var legendData = _ref12.legendData,\n      legendOrientation = _ref12.legendOrientation,\n      theme = _ref12.theme;\n  var style = theme.legend.style.labels;\n\n  if (!(legendData && legendData.length)) {\n    return 0;\n  } // For horizontal legends, account for the growing char count of the last legend item\n\n\n  var result = legendData[legendData.length - 1].name; // For vertical legends, account for the growing char count of the longest legend item\n\n  if (legendOrientation === 'vertical') {\n    legendData.forEach(function (data) {\n      if (data.name && data.name.length > result.length) {\n        result = data.name;\n      }\n    });\n  }\n\n  var textSize = _victoryCore.TextSize.approximateTextSize(result, style);\n\n  var adjustedTextSize = _victoryCore.TextSize.approximateTextSize(result, _objectSpread({}, style, {\n    characterConstant: _chartLabel.overpassFontCharacterConstant\n  }));\n\n  return Math.abs(textSize.width - adjustedTextSize.width);\n};","map":{"version":3,"sources":["/root/GraduateProject/node_modules/@patternfly/react-charts/dist/js/components/ChartUtils/chart-legend.js"],"names":["Object","defineProperty","exports","value","getPieLegendY","getPieLegendX","getChartLegendY","getChartLegendX","getBulletLegendY","getLegendY","getLegendX","getLegendItemsPerRow","doesLegendFit","getLegendDimensions","getComputedLegend","_lodash","require","_victory","_victoryCore","_ChartTheme","_chartLabel","_chartOrigin","React","_interopRequireWildcard","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","i","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","propertyIsEnumerable","sourceKeys","keys","ownKeys","object","enumerableOnly","symbols","filter","sym","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","_ref","_ref$allowWrap","allowWrap","_ref$chartType","chartType","_ref$dx","dx","_ref$dy","dy","height","legendComponent","padding","_ref$position","position","ChartCommonStyles","legend","theme","width","_ref$orientation","orientation","legendItemsProps","props","legendItemsPerRow","legendData","data","legendOrientation","legendPosition","legendProps","undefined","legendPositionProps","defaults","itemsPerRow","legendX","legendY","standalone","x","y","cloneElement","_ref2","VictoryLegend","getDimensions","_ref3","_ref3$dx","_Helpers$getPadding","Helpers","getPadding","left","right","chartSize","legendDimensions","occupiedWidth","margin","_ref4","fits","_ref5","rest","_ref6","_ref7","_ref7$dy","_Helpers$getPadding2","legendPadding","legendDataArr","_ref8","_ref8$dx","_Helpers$getPadding3","top","bottom","Math","abs","textSizeWorkAround","getTextSizeWorkAround","round","_ref9","_ref9$dy","_Helpers$getPadding4","originX","_ref10","_ref10$dx","origin","getPieOrigin","radius","getRadius","label","_ref11","_ref11$dy","_ref12","style","labels","result","name","textSize","TextSize","approximateTextSize","adjustedTextSize","characterConstant","overpassFontCharacterConstant"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPieLegendY = exports.getPieLegendX = exports.getChartLegendY = exports.getChartLegendX = exports.getBulletLegendY = exports.getLegendY = exports.getLegendX = exports.getLegendItemsPerRow = exports.doesLegendFit = exports.getLegendDimensions = exports.getComputedLegend = void 0;\n\nvar _lodash = require(\"lodash\");\n\nvar _victory = require(\"victory\");\n\nvar _victoryCore = require(\"victory-core\");\n\nvar _ChartTheme = require(\"../ChartTheme\");\n\nvar _chartLabel = require(\"./chart-label\");\n\nvar _chartOrigin = require(\"./chart-origin\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Returns a legend which has been positioned per the given chart properties\nvar getComputedLegend = function getComputedLegend(_ref) {\n  var _ref$allowWrap = _ref.allowWrap,\n      allowWrap = _ref$allowWrap === void 0 ? true : _ref$allowWrap,\n      _ref$chartType = _ref.chartType,\n      chartType = _ref$chartType === void 0 ? 'chart' : _ref$chartType,\n      _ref$dx = _ref.dx,\n      dx = _ref$dx === void 0 ? 0 : _ref$dx,\n      _ref$dy = _ref.dy,\n      dy = _ref$dy === void 0 ? 0 : _ref$dy,\n      height = _ref.height,\n      legendComponent = _ref.legendComponent,\n      padding = _ref.padding,\n      _ref$position = _ref.position,\n      position = _ref$position === void 0 ? _ChartTheme.ChartCommonStyles.legend.position : _ref$position,\n      theme = _ref.theme,\n      width = _ref.width,\n      _ref$orientation = _ref.orientation,\n      orientation = _ref$orientation === void 0 ? theme.legend.orientation : _ref$orientation;\n  // Get the number of legend items per row\n  var legendItemsProps = legendComponent.props ? legendComponent.props : {};\n  var legendItemsPerRow = allowWrap ? getLegendItemsPerRow({\n    chartType: chartType,\n    dx: dx,\n    height: height,\n    legendData: legendItemsProps.data,\n    legendOrientation: legendItemsProps.legendOrientation ? legendItemsProps.legendOrientation : orientation,\n    legendPosition: position,\n    legendProps: legendItemsProps,\n    padding: padding,\n    theme: theme,\n    width: width\n  }) : undefined; // Include new itemsPerRow prop when determining x and y position\n\n  var legendPositionProps = (0, _lodash.defaults)({}, legendComponent.props, {\n    itemsPerRow: legendItemsPerRow\n  });\n  var legendX = getLegendX({\n    chartType: chartType,\n    dx: dx,\n    height: height,\n    legendData: legendPositionProps.data,\n    legendOrientation: legendPositionProps.legendOrientation ? legendPositionProps.legendOrientation : orientation,\n    legendPosition: position,\n    legendProps: legendPositionProps,\n    padding: padding,\n    theme: theme,\n    width: width\n  });\n  var legendY = getLegendY({\n    chartType: chartType,\n    dy: dy,\n    height: height,\n    legendData: legendPositionProps.data,\n    legendOrientation: legendPositionProps.legendOrientation ? legendPositionProps.legendOrientation : orientation,\n    legendProps: legendPositionProps,\n    legendPosition: position,\n    padding: padding,\n    theme: theme,\n    width: width\n  }); // Clone legend with updated props\n\n  var legendProps = (0, _lodash.defaults)({}, legendComponent.props, {\n    itemsPerRow: legendItemsPerRow,\n    orientation: orientation,\n    standalone: false,\n    theme: theme,\n    x: legendX > 0 ? legendX : 0,\n    y: legendY > 0 ? legendY : 0\n  });\n  return React.cloneElement(legendComponent, legendProps);\n}; // Returns legend dimensions\n\n\nexports.getComputedLegend = getComputedLegend;\n\nvar getLegendDimensions = function getLegendDimensions(_ref2) {\n  var legendData = _ref2.legendData,\n      legendOrientation = _ref2.legendOrientation,\n      legendProps = _ref2.legendProps,\n      theme = _ref2.theme;\n\n  if (legendData || legendProps.data) {\n    return _victory.VictoryLegend.getDimensions(_objectSpread({\n      data: legendData,\n      orientation: legendOrientation,\n      theme: theme\n    }, legendProps));\n  }\n\n  return {};\n}; // Returns true if the legend is smaller than its container\n\n\nexports.getLegendDimensions = getLegendDimensions;\n\nvar doesLegendFit = function doesLegendFit(_ref3) {\n  var _ref3$dx = _ref3.dx,\n      dx = _ref3$dx === void 0 ? 0 : _ref3$dx,\n      height = _ref3.height,\n      legendPosition = _ref3.legendPosition,\n      legendData = _ref3.legendData,\n      legendOrientation = _ref3.legendOrientation,\n      legendProps = _ref3.legendProps,\n      padding = _ref3.padding,\n      theme = _ref3.theme,\n      width = _ref3.width;\n\n  var _Helpers$getPadding = _victoryCore.Helpers.getPadding({\n    padding: padding\n  }),\n      left = _Helpers$getPadding.left,\n      right = _Helpers$getPadding.right;\n\n  var chartSize = {\n    height: height,\n    // Fixed size\n    width: width - left - right\n  };\n  var legendDimensions = getLegendDimensions({\n    legendData: legendData,\n    legendOrientation: legendOrientation,\n    legendProps: legendProps,\n    theme: theme\n  });\n  var occupiedWidth = 0;\n\n  switch (legendPosition) {\n    case 'bottom-left':\n      occupiedWidth = left + dx;\n      break;\n\n    case 'right':\n      occupiedWidth = chartSize.width + _ChartTheme.ChartCommonStyles.legend.margin + left + dx;\n      break;\n\n    default:\n      occupiedWidth = dx;\n      break;\n  }\n\n  return width - occupiedWidth > legendDimensions.width;\n}; // Returns the number of legend items per row\n\n\nexports.doesLegendFit = doesLegendFit;\n\nvar getLegendItemsPerRow = function getLegendItemsPerRow(_ref4) {\n  var dx = _ref4.dx,\n      height = _ref4.height,\n      legendPosition = _ref4.legendPosition,\n      legendData = _ref4.legendData,\n      legendOrientation = _ref4.legendOrientation,\n      legendProps = _ref4.legendProps,\n      padding = _ref4.padding,\n      theme = _ref4.theme,\n      width = _ref4.width;\n  var itemsPerRow = legendData ? legendData.length : 0;\n\n  for (var i = itemsPerRow; i > 0; i--) {\n    var fits = doesLegendFit({\n      dx: dx,\n      height: height,\n      legendPosition: legendPosition,\n      legendData: legendData,\n      legendOrientation: legendOrientation,\n      legendProps: _objectSpread({}, legendProps, {\n        itemsPerRow: i\n      }),\n      padding: padding,\n      theme: theme,\n      width: width\n    });\n\n    if (fits) {\n      itemsPerRow = i;\n      break;\n    }\n  }\n\n  return itemsPerRow;\n}; // Returns x coordinate for legend\n\n\nexports.getLegendItemsPerRow = getLegendItemsPerRow;\n\nvar getLegendX = function getLegendX(_ref5) {\n  var chartType = _ref5.chartType,\n      rest = _objectWithoutProperties(_ref5, [\"chartType\"]);\n\n  return chartType === 'pie' ? getPieLegendX(rest) : getChartLegendX(rest);\n}; // Returns y coordinate for legend\n\n\nexports.getLegendX = getLegendX;\n\nvar getLegendY = function getLegendY(_ref6) {\n  var chartType = _ref6.chartType,\n      rest = _objectWithoutProperties(_ref6, [\"chartType\"]);\n\n  switch (chartType) {\n    case 'pie':\n      return getPieLegendY(rest);\n\n    case 'bullet':\n      return getBulletLegendY(rest);\n\n    default:\n      return getChartLegendY(rest);\n  }\n}; // Returns y coordinate for bullet legends\n\n\nexports.getLegendY = getLegendY;\n\nvar getBulletLegendY = function getBulletLegendY(_ref7) {\n  var _ref7$dy = _ref7.dy,\n      dy = _ref7$dy === void 0 ? 0 : _ref7$dy,\n      height = _ref7.height,\n      legendPosition = _ref7.legendPosition,\n      legendData = _ref7.legendData,\n      legendOrientation = _ref7.legendOrientation,\n      legendProps = _ref7.legendProps,\n      padding = _ref7.padding,\n      theme = _ref7.theme,\n      width = _ref7.width;\n\n  var _Helpers$getPadding2 = _victoryCore.Helpers.getPadding({\n    padding: padding\n  }),\n      left = _Helpers$getPadding2.left,\n      right = _Helpers$getPadding2.right;\n\n  var chartSize = {\n    height: height,\n    // Fixed size\n    width: width - left - right\n  };\n\n  switch (legendPosition) {\n    case 'bottom':\n    case 'bottom-left':\n      return chartSize.height + _ChartTheme.ChartCommonStyles.legend.margin + dy;\n\n    case 'right':\n      {\n        // Legend height with padding\n        var legendDimensions = getLegendDimensions({\n          legendData: legendData,\n          legendOrientation: legendOrientation,\n          legendProps: legendProps,\n          theme: theme\n        });\n\n        var legendPadding = function legendPadding(legendDataArr) {\n          return legendDataArr && legendDataArr.length > 0 ? 17 : 0;\n        };\n\n        return (chartSize.height - legendDimensions.height) / 2 + legendPadding(legendData);\n      }\n\n    default:\n      return dy;\n  }\n}; // Returns x coordinate for chart legends\n\n\nexports.getBulletLegendY = getBulletLegendY;\n\nvar getChartLegendX = function getChartLegendX(_ref8) {\n  var _ref8$dx = _ref8.dx,\n      dx = _ref8$dx === void 0 ? 0 : _ref8$dx,\n      height = _ref8.height,\n      legendData = _ref8.legendData,\n      legendOrientation = _ref8.legendOrientation,\n      legendPosition = _ref8.legendPosition,\n      legendProps = _ref8.legendProps,\n      padding = _ref8.padding,\n      theme = _ref8.theme,\n      width = _ref8.width;\n\n  var _Helpers$getPadding3 = _victoryCore.Helpers.getPadding({\n    padding: padding\n  }),\n      top = _Helpers$getPadding3.top,\n      bottom = _Helpers$getPadding3.bottom,\n      left = _Helpers$getPadding3.left,\n      right = _Helpers$getPadding3.right;\n\n  var chartSize = {\n    height: Math.abs(height - (bottom + top)),\n    width: Math.abs(width - (left + right))\n  };\n  var legendDimensions = getLegendDimensions({\n    legendData: legendData,\n    legendOrientation: legendOrientation,\n    legendProps: legendProps,\n    theme: theme\n  });\n  var textSizeWorkAround = getTextSizeWorkAround({\n    legendData: legendData,\n    legendOrientation: legendOrientation,\n    theme: theme\n  });\n\n  switch (legendPosition) {\n    case 'bottom':\n      return width > legendDimensions.width - textSizeWorkAround ? Math.round((width - (legendDimensions.width - textSizeWorkAround)) / 2) + dx : dx;\n\n    case 'bottom-left':\n      return left + dx;\n\n    case 'right':\n      return chartSize.width + _ChartTheme.ChartCommonStyles.legend.margin + left + dx;\n\n    default:\n      return dx;\n  }\n}; // Returns y coordinate for chart legends\n\n\nexports.getChartLegendX = getChartLegendX;\n\nvar getChartLegendY = function getChartLegendY(_ref9) {\n  var _ref9$dy = _ref9.dy,\n      dy = _ref9$dy === void 0 ? 0 : _ref9$dy,\n      height = _ref9.height,\n      legendPosition = _ref9.legendPosition,\n      legendData = _ref9.legendData,\n      legendOrientation = _ref9.legendOrientation,\n      legendProps = _ref9.legendProps,\n      padding = _ref9.padding,\n      theme = _ref9.theme,\n      width = _ref9.width;\n\n  var _Helpers$getPadding4 = _victoryCore.Helpers.getPadding({\n    padding: padding\n  }),\n      top = _Helpers$getPadding4.top,\n      bottom = _Helpers$getPadding4.bottom,\n      left = _Helpers$getPadding4.left,\n      right = _Helpers$getPadding4.right;\n\n  var chartSize = {\n    height: Math.abs(height - (bottom + top)),\n    width: Math.abs(width - (left + right))\n  };\n\n  switch (legendPosition) {\n    case 'bottom':\n    case 'bottom-left':\n      return chartSize.height + _ChartTheme.ChartCommonStyles.legend.margin * 2 + top + dy;\n\n    case 'right':\n      {\n        // Legend height with padding\n        var legendDimensions = getLegendDimensions({\n          legendData: legendData,\n          legendOrientation: legendOrientation,\n          legendProps: legendProps,\n          theme: theme\n        });\n        var originX = chartSize.height / 2 + top;\n\n        var legendPadding = function legendPadding(legendDataArr) {\n          return legendDataArr && legendDataArr.length > 0 ? 2 : 0;\n        };\n\n        return originX - legendDimensions.height / 2 + legendPadding(legendData);\n      }\n\n    default:\n      return dy;\n  }\n}; // Returns x coordinate for pie legends\n\n\nexports.getChartLegendY = getChartLegendY;\n\nvar getPieLegendX = function getPieLegendX(_ref10) {\n  var _ref10$dx = _ref10.dx,\n      dx = _ref10$dx === void 0 ? 0 : _ref10$dx,\n      height = _ref10.height,\n      legendData = _ref10.legendData,\n      legendOrientation = _ref10.legendOrientation,\n      legendPosition = _ref10.legendPosition,\n      legendProps = _ref10.legendProps,\n      padding = _ref10.padding,\n      theme = _ref10.theme,\n      width = _ref10.width;\n  var origin = (0, _chartOrigin.getPieOrigin)({\n    height: height,\n    padding: padding,\n    width: width\n  });\n\n  var radius = _victoryCore.Helpers.getRadius({\n    height: height,\n    width: width,\n    padding: padding\n  });\n\n  var legendDimensions = getLegendDimensions({\n    legendData: legendData,\n    legendOrientation: legendOrientation,\n    legendProps: legendProps,\n    theme: theme\n  });\n  var textSizeWorkAround = getTextSizeWorkAround({\n    legendData: legendData,\n    legendOrientation: legendOrientation,\n    theme: theme\n  });\n\n  switch (legendPosition) {\n    case 'bottom':\n      return width > legendDimensions.width - textSizeWorkAround ? Math.round((width - (legendDimensions.width - textSizeWorkAround)) / 2) + dx : dx;\n\n    case 'right':\n      return origin.x + _ChartTheme.ChartCommonStyles.label.margin + dx + radius;\n\n    default:\n      return dx;\n  }\n}; // Returns y coordinate for pie legends\n\n\nexports.getPieLegendX = getPieLegendX;\n\nvar getPieLegendY = function getPieLegendY(_ref11) {\n  var _ref11$dy = _ref11.dy,\n      dy = _ref11$dy === void 0 ? 0 : _ref11$dy,\n      height = _ref11.height,\n      legendPosition = _ref11.legendPosition,\n      legendData = _ref11.legendData,\n      legendOrientation = _ref11.legendOrientation,\n      legendProps = _ref11.legendProps,\n      padding = _ref11.padding,\n      theme = _ref11.theme,\n      width = _ref11.width;\n  var origin = (0, _chartOrigin.getPieOrigin)({\n    height: height,\n    padding: padding,\n    width: width\n  });\n\n  var radius = _victoryCore.Helpers.getRadius({\n    height: height,\n    width: width,\n    padding: padding\n  });\n\n  switch (legendPosition) {\n    case 'bottom':\n      return origin.y + _ChartTheme.ChartCommonStyles.legend.margin + radius + dy;\n\n    case 'right':\n      {\n        // Legend height with padding\n        var legendDimensions = getLegendDimensions({\n          legendData: legendData,\n          legendOrientation: legendOrientation,\n          legendProps: legendProps,\n          theme: theme\n        });\n\n        var legendPadding = function legendPadding(legendDataArr) {\n          return legendDataArr && legendDataArr.length > 0 ? 2 : 0;\n        };\n\n        return origin.y - legendDimensions.height / 2 + legendPadding(legendData);\n      }\n\n    default:\n      return dy;\n  }\n}; // Returns an approximation of over-sized text width due to growing character count\n//\n// See https://github.com/FormidableLabs/victory/issues/864\n\n\nexports.getPieLegendY = getPieLegendY;\n\nvar getTextSizeWorkAround = function getTextSizeWorkAround(_ref12) {\n  var legendData = _ref12.legendData,\n      legendOrientation = _ref12.legendOrientation,\n      theme = _ref12.theme;\n  var style = theme.legend.style.labels;\n\n  if (!(legendData && legendData.length)) {\n    return 0;\n  } // For horizontal legends, account for the growing char count of the last legend item\n\n\n  var result = legendData[legendData.length - 1].name; // For vertical legends, account for the growing char count of the longest legend item\n\n  if (legendOrientation === 'vertical') {\n    legendData.forEach(function (data) {\n      if (data.name && data.name.length > result.length) {\n        result = data.name;\n      }\n    });\n  }\n\n  var textSize = _victoryCore.TextSize.approximateTextSize(result, style);\n\n  var adjustedTextSize = _victoryCore.TextSize.approximateTextSize(result, _objectSpread({}, style, {\n    characterConstant: _chartLabel.overpassFontCharacterConstant\n  }));\n\n  return Math.abs(textSize.width - adjustedTextSize.width);\n};\n//# sourceMappingURL=chart-legend.js.map"]},"metadata":{},"sourceType":"script"}