{"ast":null,"code":"import { createAction } from 'typesafe-actions';\nimport { MessageType } from '../types/MessageCenter';\nimport { ActionKeys } from './ActionKeys';\nvar DEFAULT_GROUP_ID = 'default';\nvar DEFAULT_MESSAGE_TYPE = MessageType.ERROR;\n\nvar toNumberArray = function toNumberArray(n) {\n  return Array.isArray(n) ? n : [n];\n};\n\nexport var MessageCenterActions = {\n  addMessage: createAction(ActionKeys.MC_ADD_MESSAGE, function (resolve) {\n    return function (content, detail) {\n      var groupId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_GROUP_ID;\n      var messageType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_MESSAGE_TYPE;\n      var showNotification = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n      return resolve({\n        content: content,\n        detail: detail,\n        groupId: groupId,\n        messageType: messageType,\n        showNotification: showNotification\n      });\n    };\n  }),\n  removeMessage: createAction(ActionKeys.MC_REMOVE_MESSAGE, function (resolve) {\n    return function (messageId) {\n      return resolve({\n        messageId: toNumberArray(messageId)\n      });\n    };\n  }),\n  toggleMessageDetail: createAction(ActionKeys.MC_TOGGLE_MESSAGE_DETAIL, function (resolve) {\n    return function (messageId) {\n      return resolve({\n        messageId: toNumberArray(messageId)\n      });\n    };\n  }),\n  markAsRead: createAction(ActionKeys.MC_MARK_MESSAGE_AS_READ, function (resolve) {\n    return function (messageId) {\n      return resolve({\n        messageId: toNumberArray(messageId)\n      });\n    };\n  }),\n  toggleGroup: createAction(ActionKeys.MC_TOGGLE_GROUP, function (resolve) {\n    return function (groupId) {\n      return resolve({\n        groupId: groupId\n      });\n    };\n  }),\n  expandGroup: createAction(ActionKeys.MC_EXPAND_GROUP, function (resolve) {\n    return function (groupId) {\n      return resolve({\n        groupId: groupId\n      });\n    };\n  }),\n  hideNotification: createAction(ActionKeys.MC_HIDE_NOTIFICATION, function (resolve) {\n    return function (messageId) {\n      return resolve({\n        messageId: toNumberArray(messageId)\n      });\n    };\n  }),\n  showMessageCenter: createAction(ActionKeys.MC_SHOW),\n  hideMessageCenter: createAction(ActionKeys.MC_HIDE),\n  toggleExpandedMessageCenter: createAction(ActionKeys.MC_TOGGLE_EXPAND)\n};","map":{"version":3,"sources":["/root/GraduateProject/src/actions/MessageCenterActions.ts"],"names":["createAction","MessageType","ActionKeys","DEFAULT_GROUP_ID","DEFAULT_MESSAGE_TYPE","ERROR","toNumberArray","n","Array","isArray","MessageCenterActions","addMessage","MC_ADD_MESSAGE","resolve","content","detail","groupId","messageType","showNotification","removeMessage","MC_REMOVE_MESSAGE","messageId","toggleMessageDetail","MC_TOGGLE_MESSAGE_DETAIL","markAsRead","MC_MARK_MESSAGE_AS_READ","toggleGroup","MC_TOGGLE_GROUP","expandGroup","MC_EXPAND_GROUP","hideNotification","MC_HIDE_NOTIFICATION","showMessageCenter","MC_SHOW","hideMessageCenter","MC_HIDE","toggleExpandedMessageCenter","MC_TOGGLE_EXPAND"],"mappings":"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","sourcesContent":["import { ActionType, createAction } from 'typesafe-actions';\nimport { MessageType } from '../types/MessageCenter';\nimport { ActionKeys } from './ActionKeys';\n\nconst DEFAULT_GROUP_ID = 'default';\nconst DEFAULT_MESSAGE_TYPE = MessageType.ERROR;\n\ntype numberOrNumberArray = number | number[];\n\nconst toNumberArray = (n: numberOrNumberArray) => (Array.isArray(n) ? n : [n]);\n\nexport const MessageCenterActions = {\n  addMessage: createAction(\n    ActionKeys.MC_ADD_MESSAGE,\n    resolve => (\n      content: string,\n      detail: string,\n      groupId: string = DEFAULT_GROUP_ID,\n      messageType: MessageType = DEFAULT_MESSAGE_TYPE,\n      showNotification: boolean = true\n    ) => resolve({ content, detail, groupId, messageType, showNotification })\n  ),\n  removeMessage: createAction(ActionKeys.MC_REMOVE_MESSAGE, resolve => (messageId: numberOrNumberArray) =>\n    resolve({ messageId: toNumberArray(messageId) })\n  ),\n  toggleMessageDetail: createAction(ActionKeys.MC_TOGGLE_MESSAGE_DETAIL, resolve => (messageId: numberOrNumberArray) =>\n    resolve({ messageId: toNumberArray(messageId) })\n  ),\n  markAsRead: createAction(ActionKeys.MC_MARK_MESSAGE_AS_READ, resolve => (messageId: numberOrNumberArray) =>\n    resolve({ messageId: toNumberArray(messageId) })\n  ),\n  toggleGroup: createAction(ActionKeys.MC_TOGGLE_GROUP, resolve => (groupId: string) => resolve({ groupId })),\n  expandGroup: createAction(ActionKeys.MC_EXPAND_GROUP, resolve => (groupId: string) => resolve({ groupId })),\n  hideNotification: createAction(ActionKeys.MC_HIDE_NOTIFICATION, resolve => (messageId: numberOrNumberArray) =>\n    resolve({ messageId: toNumberArray(messageId) })\n  ),\n  showMessageCenter: createAction(ActionKeys.MC_SHOW),\n  hideMessageCenter: createAction(ActionKeys.MC_HIDE),\n  toggleExpandedMessageCenter: createAction(ActionKeys.MC_TOGGLE_EXPAND)\n};\n\nexport type MessageCenterAction = ActionType<typeof MessageCenterActions>;\n"]},"metadata":{},"sourceType":"module"}