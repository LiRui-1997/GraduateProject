{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/pages/Overview/OverviewStatus.tsx\";\nimport * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport { DEFAULT_LABEL_OPERATION } from '../../types/Filters';\nimport { healthFilter } from '../../components/Filters/CommonFilters';\nimport { FilterSelected } from '../../components/Filters/StatefulFilters';\nimport { createIcon } from '../../components/Health/Helper';\nimport '../../components/Health/Health.css';\n\nvar OverviewStatus = /*#__PURE__*/function (_React$Component) {\n  _inherits(OverviewStatus, _React$Component);\n\n  var _super = _createSuper(OverviewStatus);\n\n  function OverviewStatus() {\n    var _this;\n\n    _classCallCheck(this, OverviewStatus);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.setFilters = function () {\n      var filters = [{\n        id: healthFilter.id,\n        title: healthFilter.title,\n        value: _this.props.status.name\n      }];\n      FilterSelected.setSelected({\n        filters: filters,\n        op: DEFAULT_LABEL_OPERATION\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(OverviewStatus, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var length = this.props.items.length;\n      var items = this.props.items;\n\n      if (items.length > 6) {\n        items = items.slice(0, 5);\n        items.push('and ' + (length - items.length) + ' more...');\n      }\n\n      var tooltipContent = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, this.props.status.name), items.map(function (app, idx) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: _this2.props.id + '-' + idx,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            marginRight: '10px'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }\n        }, createIcon(_this2.props.status, 'sm')), \" \", app);\n      }));\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        \"aria-label\": 'Overview status',\n        position: TooltipPosition.auto,\n        content: tooltipContent,\n        className: 'health_indicator',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'inline-block',\n          marginRight: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\".concat(this.props.targetPage, \"?namespaces=\").concat(this.props.namespace),\n        onClick: function onClick() {\n          return _this2.setFilters();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, createIcon(this.props.status), ' ' + length), ' '));\n    }\n  }]);\n\n  return OverviewStatus;\n}(React.Component);\n\nexport default OverviewStatus;","map":{"version":3,"sources":["/root/kiali-ui/src/pages/Overview/OverviewStatus.tsx"],"names":["React","Tooltip","TooltipPosition","Link","DEFAULT_LABEL_OPERATION","healthFilter","FilterSelected","createIcon","OverviewStatus","setFilters","filters","id","title","value","props","status","name","setSelected","op","length","items","slice","push","tooltipContent","map","app","idx","marginRight","auto","display","targetPage","namespace","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport { Status } from '../../types/Health';\nimport { Paths } from '../../config';\nimport { ActiveFilter, DEFAULT_LABEL_OPERATION } from '../../types/Filters';\nimport { healthFilter } from '../../components/Filters/CommonFilters';\nimport { FilterSelected } from '../../components/Filters/StatefulFilters';\nimport { createIcon } from '../../components/Health/Helper';\n\nimport '../../components/Health/Health.css';\n\ntype Props = {\n  id: string;\n  namespace: string;\n  status: Status;\n  items: string[];\n  targetPage: Paths;\n};\n\nclass OverviewStatus extends React.Component<Props, {}> {\n  setFilters = () => {\n    const filters: ActiveFilter[] = [\n      {\n        id: healthFilter.id,\n        title: healthFilter.title,\n        value: this.props.status.name\n      }\n    ];\n    FilterSelected.setSelected({ filters: filters, op: DEFAULT_LABEL_OPERATION });\n  };\n\n  render() {\n    const length = this.props.items.length;\n    let items = this.props.items;\n    if (items.length > 6) {\n      items = items.slice(0, 5);\n      items.push('and ' + (length - items.length) + ' more...');\n    }\n    const tooltipContent = (\n      <div>\n        <strong>{this.props.status.name}</strong>\n        {items.map((app, idx) => {\n          return (\n            <div key={this.props.id + '-' + idx}>\n              <span style={{ marginRight: '10px' }}>{createIcon(this.props.status, 'sm')}</span> {app}\n            </div>\n          );\n        })}\n      </div>\n    );\n    return (\n      <Tooltip\n        aria-label={'Overview status'}\n        position={TooltipPosition.auto}\n        content={tooltipContent}\n        className={'health_indicator'}\n      >\n        <div style={{ display: 'inline-block', marginRight: '5px' }}>\n          <Link to={`/${this.props.targetPage}?namespaces=${this.props.namespace}`} onClick={() => this.setFilters()}>\n            {createIcon(this.props.status)}\n            {' ' + length}\n          </Link>{' '}\n        </div>\n      </Tooltip>\n    );\n  }\n}\n\nexport default OverviewStatus;\n"]},"metadata":{},"sourceType":"module"}