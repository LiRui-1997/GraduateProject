{"ast":null,"code":"import deepFreeze from 'deep-freeze';\nimport { UNIT_TIME, MILLISECONDS } from '../types/Common'; // We assume this is always defined in the .env file\n\nvar documentationUrl = process.env.REACT_APP_KIALI_DOC_URL;\nvar conf = {\n  /** Configuration related with session */\n  session: {\n    /** TimeOut Session remain for warning user default 1 minute */\n    timeOutforWarningUser: 1 * UNIT_TIME.MINUTE * MILLISECONDS\n  },\n\n  /** Toolbar Configuration */\n  toolbar: {\n    /** Duration default in 1 minute */\n    defaultDuration: 1 * UNIT_TIME.MINUTE,\n\n    /** By default refresh is 15 seconds */\n    defaultRefreshInterval: 15 * MILLISECONDS,\n\n    /** Time Range default in 10 minutes **/\n    defaultTimeRange: {\n      rangeDuration: 10 * UNIT_TIME.MINUTE\n    },\n\n    /** Options in refresh */\n    refreshInterval: {\n      0: '暂停刷新',\n      10000: '10s 刷新一次',\n      15000: '15s 刷新一次',\n      30000: '30s 刷新一次',\n      60000: '1m 刷新一次',\n      300000: '5m 刷新一次',\n      900000: '15m 刷新一次'\n    },\n\n    /** Graphs layouts types */\n    graphLayouts: {\n      cola: 'Cola',\n      'cose-bilkent': 'Cose',\n      dagre: 'Dagre'\n    }\n  },\n\n  /** About Tracing Configuration*/\n  tracing: {\n    configuration: {\n      limitResults: {\n        20: 20,\n        50: 50,\n        100: 100,\n        200: 200,\n        300: 300,\n        400: 400,\n        500: 500\n      },\n      statusCode: {\n        none: 'none',\n        200: '200',\n        400: '400',\n        401: '401',\n        403: '403',\n        404: '404',\n        405: '405',\n        408: '408',\n        500: '500',\n        502: '502',\n        503: '503',\n        504: '504'\n      }\n    }\n  },\n\n  /** About dialog configuration */\n  about: {\n    project: {\n      url: 'https://github.com/kiali',\n      icon: 'RepositoryIcon',\n      linkText: 'Find us on GitHub'\n    },\n    website: {\n      url: 'https://www.kiali.io',\n      // Without www, we get an SSL error\n      icon: 'HomeIcon',\n      linkText: 'Visit our web page'\n    }\n  },\n\n  /** */\n  documentation: {\n    url: documentationUrl\n  },\n\n  /**  Login configuration */\n  login: {\n    headers: {\n      'X-Auth-Type-Kiali-UI': '1'\n    }\n  },\n\n  /** API configuration */\n  api: {\n    urls: {\n      aggregateGraphElements: function aggregateGraphElements(namespace, aggregate, aggregateValue) {\n        return \"api/namespaces/\".concat(namespace, \"/aggregates/\").concat(aggregate, \"/\").concat(aggregateValue, \"/graph\");\n      },\n      aggregateByServiceGraphElements: function aggregateByServiceGraphElements(namespace, aggregate, aggregateValue, service) {\n        return \"api/namespaces/\".concat(namespace, \"/aggregates/\").concat(aggregate, \"/\").concat(aggregateValue, \"/\").concat(service, \"/graph\");\n      },\n      aggregateMetrics: function aggregateMetrics(namespace, aggregate, aggregateValue) {\n        return \"api/namespaces/\".concat(namespace, \"/aggregates/\").concat(aggregate, \"/\").concat(aggregateValue, \"/metrics\");\n      },\n      authenticate: 'api/authenticate',\n      authInfo: 'api/auth/info',\n      apps: function apps(namespace) {\n        return \"api/namespaces/\".concat(namespace, \"/apps\");\n      },\n      app: function app(namespace, _app) {\n        return \"api/namespaces/\".concat(namespace, \"/apps/\").concat(_app);\n      },\n      appGraphElements: function appGraphElements(namespace, app, version) {\n        var baseUrl = \"api/namespaces/\".concat(namespace, \"/applications/\").concat(app);\n        var hasVersion = version && version !== 'unknown';\n        var versionSuffixed = hasVersion ? \"\".concat(baseUrl, \"/versions/\").concat(version) : baseUrl;\n        return \"\".concat(versionSuffixed, \"/graph\");\n      },\n      appHealth: function appHealth(namespace, app) {\n        return \"api/namespaces/\".concat(namespace, \"/apps/\").concat(app, \"/health\");\n      },\n      appMetrics: function appMetrics(namespace, app) {\n        return \"api/namespaces/\".concat(namespace, \"/apps/\").concat(app, \"/metrics\");\n      },\n      appDashboard: function appDashboard(namespace, app) {\n        return \"api/namespaces/\".concat(namespace, \"/apps/\").concat(app, \"/dashboard\");\n      },\n      appSpans: function appSpans(namespace, app) {\n        return \"api/namespaces/\".concat(namespace, \"/apps/\").concat(app, \"/spans\");\n      },\n      clusters: 'api/clusters',\n      serviceSpans: function serviceSpans(namespace, service) {\n        return \"api/namespaces/\".concat(namespace, \"/services/\").concat(service, \"/spans\");\n      },\n      workloadSpans: function workloadSpans(namespace, workload) {\n        return \"api/namespaces/\".concat(namespace, \"/workloads/\").concat(workload, \"/spans\");\n      },\n      customDashboard: function customDashboard(namespace, template) {\n        return \"api/namespaces/\".concat(namespace, \"/customdashboard/\").concat(template);\n      },\n      grafana: 'api/grafana',\n      istioConfig: function istioConfig(namespace) {\n        return \"api/namespaces/\".concat(namespace, \"/istio\");\n      },\n      istioConfigCreate: function istioConfigCreate(namespace, objectType) {\n        return \"api/namespaces/\".concat(namespace, \"/istio/\").concat(objectType);\n      },\n      istioConfigDetail: function istioConfigDetail(namespace, objectType, object) {\n        return \"api/namespaces/\".concat(namespace, \"/istio/\").concat(objectType, \"/\").concat(object);\n      },\n      iter8: \"api/iter8\",\n      iter8Metrics: 'api/iter8/metrics',\n      iter8Experiments: \"api/iter8/experiments\",\n      iter8ExperimentsByNamespace: function iter8ExperimentsByNamespace(namespace) {\n        return \"api/iter8/namespaces/\".concat(namespace, \"/experiments\");\n      },\n      iter8Experiment: function iter8Experiment(namespace, name) {\n        return \"api/iter8/namespaces/\".concat(namespace, \"/experiments/\").concat(name);\n      },\n      iter8ExperimentYAML: function iter8ExperimentYAML(namespace, name) {\n        return \"api/iter8/namespaces/\".concat(namespace, \"/experiments/\").concat(name, \"/yaml\");\n      },\n      iter8ExperimentUpdate: function iter8ExperimentUpdate(namespace, name) {\n        return \"api/iter8/namespaces/\".concat(namespace, \"/experiments/\").concat(name);\n      },\n      istioPermissions: 'api/istio/permissions',\n      jaeger: 'api/jaeger',\n      appTraces: function appTraces(namespace, app) {\n        return \"api/namespaces/\".concat(namespace, \"/apps/\").concat(app, \"/traces\");\n      },\n      serviceTraces: function serviceTraces(namespace, svc) {\n        return \"api/namespaces/\".concat(namespace, \"/services/\").concat(svc, \"/traces\");\n      },\n      workloadTraces: function workloadTraces(namespace, wkd) {\n        return \"api/namespaces/\".concat(namespace, \"/workloads/\").concat(wkd, \"/traces\");\n      },\n      jaegerErrorTraces: function jaegerErrorTraces(namespace, app) {\n        return \"api/namespaces/\".concat(namespace, \"/apps/\").concat(app, \"/errortraces\");\n      },\n      jaegerTrace: function jaegerTrace(idTrace) {\n        return \"api/traces/\".concat(idTrace);\n      },\n      logout: 'api/logout',\n      metricsStats: 'api/stats/metrics',\n      namespaces: 'api/namespaces',\n      namespace: function namespace(_namespace) {\n        return \"api/namespaces/\".concat(_namespace);\n      },\n      namespacesGraphElements: \"api/namespaces/graph\",\n      namespaceHealth: function namespaceHealth(namespace) {\n        return \"api/namespaces/\".concat(namespace, \"/health\");\n      },\n      namespaceMetrics: function namespaceMetrics(namespace) {\n        return \"api/namespaces/\".concat(namespace, \"/metrics\");\n      },\n      namespaceTls: function namespaceTls(namespace) {\n        return \"api/namespaces/\".concat(namespace, \"/tls\");\n      },\n      namespaceValidations: function namespaceValidations(namespace) {\n        return \"api/namespaces/\".concat(namespace, \"/validations\");\n      },\n      meshTls: function meshTls() {\n        return 'api/mesh/tls';\n      },\n      istioStatus: function istioStatus() {\n        return 'api/istio/status';\n      },\n      istioCertsInfo: function istioCertsInfo() {\n        return 'api/istio/certs';\n      },\n      pod: function pod(namespace, _pod) {\n        return \"api/namespaces/\".concat(namespace, \"/pods/\").concat(_pod);\n      },\n      podLogs: function podLogs(namespace, pod) {\n        return \"api/namespaces/\".concat(namespace, \"/pods/\").concat(pod, \"/logs\");\n      },\n      podEnvoyProxy: function podEnvoyProxy(namespace, pod) {\n        return \"api/namespaces/\".concat(namespace, \"/pods/\").concat(pod, \"/config_dump\");\n      },\n      podEnvoyProxyLogging: function podEnvoyProxyLogging(namespace, pod) {\n        return \"api/namespaces/\".concat(namespace, \"/pods/\").concat(pod, \"/logging\");\n      },\n      podEnvoyProxyResourceEntries: function podEnvoyProxyResourceEntries(namespace, pod, resource) {\n        return \"api/namespaces/\".concat(namespace, \"/pods/\").concat(pod, \"/config_dump/\").concat(resource);\n      },\n      serverConfig: \"api/config\",\n      services: function services(namespace) {\n        return \"api/namespaces/\".concat(namespace, \"/services\");\n      },\n      service: function service(namespace, _service) {\n        return \"api/namespaces/\".concat(namespace, \"/services/\").concat(_service);\n      },\n      serviceGraphElements: function serviceGraphElements(namespace, service) {\n        return \"api/namespaces/\".concat(namespace, \"/services/\").concat(service, \"/graph\");\n      },\n      serviceHealth: function serviceHealth(namespace, service) {\n        return \"api/namespaces/\".concat(namespace, \"/services/\").concat(service, \"/health\");\n      },\n      serviceMetrics: function serviceMetrics(namespace, service) {\n        return \"api/namespaces/\".concat(namespace, \"/services/\").concat(service, \"/metrics\");\n      },\n      serviceDashboard: function serviceDashboard(namespace, service) {\n        return \"api/namespaces/\".concat(namespace, \"/services/\").concat(service, \"/dashboard\");\n      },\n      status: 'api/status',\n      workloads: function workloads(namespace) {\n        return \"api/namespaces/\".concat(namespace, \"/workloads\");\n      },\n      workload: function workload(namespace, _workload) {\n        return \"api/namespaces/\".concat(namespace, \"/workloads/\").concat(_workload);\n      },\n      workloadGraphElements: function workloadGraphElements(namespace, workload) {\n        return \"api/namespaces/\".concat(namespace, \"/workloads/\").concat(workload, \"/graph\");\n      },\n      workloadHealth: function workloadHealth(namespace, workload) {\n        return \"api/namespaces/\".concat(namespace, \"/workloads/\").concat(workload, \"/health\");\n      },\n      workloadMetrics: function workloadMetrics(namespace, workload) {\n        return \"api/namespaces/\".concat(namespace, \"/workloads/\").concat(workload, \"/metrics\");\n      },\n      workloadDashboard: function workloadDashboard(namespace, workload) {\n        return \"api/namespaces/\".concat(namespace, \"/workloads/\").concat(workload, \"/dashboard\");\n      }\n    }\n  },\n\n  /** Graph configurations */\n  graph: {\n    // maxHosts is the maximum number of hosts to show in the graph for\n    // nodes representing Gateways, VirtualServices and ServiceEntries.\n    maxHosts: 5\n  }\n};\nexport var config = deepFreeze(conf);","map":{"version":3,"sources":["/root/kiali-ui/src/config/Config.ts"],"names":["deepFreeze","UNIT_TIME","MILLISECONDS","documentationUrl","process","env","REACT_APP_KIALI_DOC_URL","conf","session","timeOutforWarningUser","MINUTE","toolbar","defaultDuration","defaultRefreshInterval","defaultTimeRange","rangeDuration","refreshInterval","graphLayouts","cola","dagre","tracing","configuration","limitResults","statusCode","none","about","project","url","icon","linkText","website","documentation","login","headers","api","urls","aggregateGraphElements","namespace","aggregate","aggregateValue","aggregateByServiceGraphElements","service","aggregateMetrics","authenticate","authInfo","apps","app","appGraphElements","version","baseUrl","hasVersion","versionSuffixed","appHealth","appMetrics","appDashboard","appSpans","clusters","serviceSpans","workloadSpans","workload","customDashboard","template","grafana","istioConfig","istioConfigCreate","objectType","istioConfigDetail","object","iter8","iter8Metrics","iter8Experiments","iter8ExperimentsByNamespace","iter8Experiment","name","iter8ExperimentYAML","iter8ExperimentUpdate","istioPermissions","jaeger","appTraces","serviceTraces","svc","workloadTraces","wkd","jaegerErrorTraces","jaegerTrace","idTrace","logout","metricsStats","namespaces","namespacesGraphElements","namespaceHealth","namespaceMetrics","namespaceTls","namespaceValidations","meshTls","istioStatus","istioCertsInfo","pod","podLogs","podEnvoyProxy","podEnvoyProxyLogging","podEnvoyProxyResourceEntries","resource","serverConfig","services","serviceGraphElements","serviceHealth","serviceMetrics","serviceDashboard","status","workloads","workloadGraphElements","workloadHealth","workloadMetrics","workloadDashboard","graph","maxHosts","config"],"mappings":"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","sourcesContent":["import deepFreeze from 'deep-freeze';\nimport { UNIT_TIME, MILLISECONDS } from '../types/Common';\n\n// We assume this is always defined in the .env file\nconst documentationUrl = process.env.REACT_APP_KIALI_DOC_URL!;\n\nconst conf = {\n  /** Configuration related with session */\n  session: {\n    /** TimeOut Session remain for warning user default 1 minute */\n    timeOutforWarningUser: 1 * UNIT_TIME.MINUTE * MILLISECONDS\n  },\n  /** Toolbar Configuration */\n  toolbar: {\n    /** Duration default in 1 minute */\n    defaultDuration: 1 * UNIT_TIME.MINUTE,\n    /** By default refresh is 15 seconds */\n    defaultRefreshInterval: 15 * MILLISECONDS,\n    /** Time Range default in 10 minutes **/\n    defaultTimeRange: {\n      rangeDuration: 10 * UNIT_TIME.MINUTE\n    },\n    /** Options in refresh */\n    refreshInterval: {\n      0: '暂停刷新',\n      10000: '10s 刷新一次',\n      15000: '15s 刷新一次',\n      30000: '30s 刷新一次',\n      60000: '1m 刷新一次',\n      300000: '5m 刷新一次',\n      900000: '15m 刷新一次'\n    },\n    /** Graphs layouts types */\n    graphLayouts: {\n      cola: 'Cola',\n      'cose-bilkent': 'Cose',\n      dagre: 'Dagre'\n    }\n  },\n  /** About Tracing Configuration*/\n  tracing: {\n    configuration: {\n      limitResults: {\n        20: 20,\n        50: 50,\n        100: 100,\n        200: 200,\n        300: 300,\n        400: 400,\n        500: 500\n      },\n      statusCode: {\n        none: 'none',\n        200: '200',\n        400: '400',\n        401: '401',\n        403: '403',\n        404: '404',\n        405: '405',\n        408: '408',\n        500: '500',\n        502: '502',\n        503: '503',\n        504: '504'\n      }\n    }\n  },\n  /** About dialog configuration */\n  about: {\n    project: {\n      url: 'https://github.com/kiali',\n      icon: 'RepositoryIcon',\n      linkText: 'Find us on GitHub'\n    },\n    website: {\n      url: 'https://www.kiali.io', // Without www, we get an SSL error\n      icon: 'HomeIcon',\n      linkText: 'Visit our web page'\n    }\n  },\n  /** */\n  documentation: {\n    url: documentationUrl\n  },\n  /**  Login configuration */\n  login: {\n    headers: {\n      'X-Auth-Type-Kiali-UI': '1'\n    }\n  },\n  /** API configuration */\n  api: {\n    urls: {\n      aggregateGraphElements: (namespace: string, aggregate: string, aggregateValue: string) =>\n        `api/namespaces/${namespace}/aggregates/${aggregate}/${aggregateValue}/graph`,\n      aggregateByServiceGraphElements: (\n        namespace: string,\n        aggregate: string,\n        aggregateValue: string,\n        service: string\n      ) => `api/namespaces/${namespace}/aggregates/${aggregate}/${aggregateValue}/${service}/graph`,\n      aggregateMetrics: (namespace: string, aggregate: string, aggregateValue: string) =>\n        `api/namespaces/${namespace}/aggregates/${aggregate}/${aggregateValue}/metrics`,\n      authenticate: 'api/authenticate',\n      authInfo: 'api/auth/info',\n      apps: (namespace: string) => `api/namespaces/${namespace}/apps`,\n      app: (namespace: string, app: string) => `api/namespaces/${namespace}/apps/${app}`,\n      appGraphElements: (namespace: string, app: string, version?: string) => {\n        const baseUrl = `api/namespaces/${namespace}/applications/${app}`;\n        const hasVersion = version && version !== 'unknown';\n        const versionSuffixed = hasVersion ? `${baseUrl}/versions/${version}` : baseUrl;\n        return `${versionSuffixed}/graph`;\n      },\n      appHealth: (namespace: string, app: string) => `api/namespaces/${namespace}/apps/${app}/health`,\n      appMetrics: (namespace: string, app: string) => `api/namespaces/${namespace}/apps/${app}/metrics`,\n      appDashboard: (namespace: string, app: string) => `api/namespaces/${namespace}/apps/${app}/dashboard`,\n      appSpans: (namespace: string, app: string) => `api/namespaces/${namespace}/apps/${app}/spans`,\n      clusters: 'api/clusters',\n      serviceSpans: (namespace: string, service: string) => `api/namespaces/${namespace}/services/${service}/spans`,\n      workloadSpans: (namespace: string, workload: string) => `api/namespaces/${namespace}/workloads/${workload}/spans`,\n      customDashboard: (namespace: string, template: string) =>\n        `api/namespaces/${namespace}/customdashboard/${template}`,\n      grafana: 'api/grafana',\n      istioConfig: (namespace: string) => `api/namespaces/${namespace}/istio`,\n      istioConfigCreate: (namespace: string, objectType: string) => `api/namespaces/${namespace}/istio/${objectType}`,\n      istioConfigDetail: (namespace: string, objectType: string, object: string) =>\n        `api/namespaces/${namespace}/istio/${objectType}/${object}`,\n      iter8: `api/iter8`,\n      iter8Metrics: 'api/iter8/metrics',\n      iter8Experiments: `api/iter8/experiments`,\n      iter8ExperimentsByNamespace: (namespace: string) => `api/iter8/namespaces/${namespace}/experiments`,\n      iter8Experiment: (namespace: string, name: string) => `api/iter8/namespaces/${namespace}/experiments/${name}`,\n      iter8ExperimentYAML: (namespace: string, name: string) =>\n        `api/iter8/namespaces/${namespace}/experiments/${name}/yaml`,\n      iter8ExperimentUpdate: (namespace: string, name: string) =>\n        `api/iter8/namespaces/${namespace}/experiments/${name}`,\n      istioPermissions: 'api/istio/permissions',\n      jaeger: 'api/jaeger',\n      appTraces: (namespace: string, app: string) => `api/namespaces/${namespace}/apps/${app}/traces`,\n      serviceTraces: (namespace: string, svc: string) => `api/namespaces/${namespace}/services/${svc}/traces`,\n      workloadTraces: (namespace: string, wkd: string) => `api/namespaces/${namespace}/workloads/${wkd}/traces`,\n      jaegerErrorTraces: (namespace: string, app: string) => `api/namespaces/${namespace}/apps/${app}/errortraces`,\n      jaegerTrace: (idTrace: string) => `api/traces/${idTrace}`,\n      logout: 'api/logout',\n      metricsStats: 'api/stats/metrics',\n      namespaces: 'api/namespaces',\n      namespace: (namespace: string) => `api/namespaces/${namespace}`,\n      namespacesGraphElements: `api/namespaces/graph`,\n      namespaceHealth: (namespace: string) => `api/namespaces/${namespace}/health`,\n      namespaceMetrics: (namespace: string) => `api/namespaces/${namespace}/metrics`,\n      namespaceTls: (namespace: string) => `api/namespaces/${namespace}/tls`,\n      namespaceValidations: (namespace: string) => `api/namespaces/${namespace}/validations`,\n      meshTls: () => 'api/mesh/tls',\n      istioStatus: () => 'api/istio/status',\n      istioCertsInfo: () => 'api/istio/certs',\n      pod: (namespace: string, pod: string) => `api/namespaces/${namespace}/pods/${pod}`,\n      podLogs: (namespace: string, pod: string) => `api/namespaces/${namespace}/pods/${pod}/logs`,\n      podEnvoyProxy: (namespace: string, pod: string) => `api/namespaces/${namespace}/pods/${pod}/config_dump`,\n      podEnvoyProxyLogging: (namespace: string, pod: string) => `api/namespaces/${namespace}/pods/${pod}/logging`,\n      podEnvoyProxyResourceEntries: (namespace: string, pod: string, resource: string) =>\n        `api/namespaces/${namespace}/pods/${pod}/config_dump/${resource}`,\n      serverConfig: `api/config`,\n      services: (namespace: string) => `api/namespaces/${namespace}/services`,\n      service: (namespace: string, service: string) => `api/namespaces/${namespace}/services/${service}`,\n      serviceGraphElements: (namespace: string, service: string) =>\n        `api/namespaces/${namespace}/services/${service}/graph`,\n      serviceHealth: (namespace: string, service: string) => `api/namespaces/${namespace}/services/${service}/health`,\n      serviceMetrics: (namespace: string, service: string) => `api/namespaces/${namespace}/services/${service}/metrics`,\n      serviceDashboard: (namespace: string, service: string) =>\n        `api/namespaces/${namespace}/services/${service}/dashboard`,\n      status: 'api/status',\n      workloads: (namespace: string) => `api/namespaces/${namespace}/workloads`,\n      workload: (namespace: string, workload: string) => `api/namespaces/${namespace}/workloads/${workload}`,\n      workloadGraphElements: (namespace: string, workload: string) =>\n        `api/namespaces/${namespace}/workloads/${workload}/graph`,\n      workloadHealth: (namespace: string, workload: string) =>\n        `api/namespaces/${namespace}/workloads/${workload}/health`,\n      workloadMetrics: (namespace: string, workload: string) =>\n        `api/namespaces/${namespace}/workloads/${workload}/metrics`,\n      workloadDashboard: (namespace: string, workload: string) =>\n        `api/namespaces/${namespace}/workloads/${workload}/dashboard`\n    }\n  },\n  /** Graph configurations */\n  graph: {\n    // maxHosts is the maximum number of hosts to show in the graph for\n    // nodes representing Gateways, VirtualServices and ServiceEntries.\n    maxHosts: 5\n  }\n};\n\nexport const config = deepFreeze(conf) as typeof conf;\n"]},"metadata":{},"sourceType":"module"}