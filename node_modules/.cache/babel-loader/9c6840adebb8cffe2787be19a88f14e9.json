{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/app/App.tsx\";\nimport axios from 'axios';\nimport * as React from 'react';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { Provider } from 'react-redux';\nimport { Router, withRouter } from 'react-router-dom';\nimport * as Visibility from 'visibilityjs';\nimport { GlobalActions } from '../actions/GlobalActions';\nimport NavigationContainer from '../components/Nav/Navigation';\nimport { store, persistor } from '../store/ConfigStore';\nimport AuthenticationControllerContainer from './AuthenticationController';\nimport history from './History'; // import InitializingScreen from './InitializingScreen';\n\nimport StartupInitializer from './StartupInitializer';\nimport LoginPageContainer from '../pages/Login/LoginPage';\nimport { LoginActions } from '../actions/LoginActions';\nimport 'tippy.js/dist/tippy.css';\nimport 'tippy.js/dist/themes/light-border.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nVisibility.change(function (_e, state) {\n  // There are 3 states, visible, hidden and prerender, consider prerender as hidden.\n  // https://developer.mozilla.org/en-US/docs/Web/API/Document/visibilityState\n  if (state === 'visible') {\n    store.dispatch(GlobalActions.setPageVisibilityVisible());\n  } else {\n    store.dispatch(GlobalActions.setPageVisibilityHidden());\n  }\n});\n\nif (Visibility.hidden()) {\n  store.dispatch(GlobalActions.setPageVisibilityHidden());\n} else {\n  store.dispatch(GlobalActions.setPageVisibilityVisible());\n}\n\nvar getIsLoadingState = function getIsLoadingState() {\n  var state = store.getState();\n  return state && state.globalState.loadingCounter > 0;\n};\n\nvar decrementLoadingCounter = function decrementLoadingCounter() {\n  if (getIsLoadingState()) {\n    store.dispatch(GlobalActions.decrementLoadingCounter());\n  }\n}; // intercept all Axios requests and dispatch the INCREMENT_LOADING_COUNTER Action\n\n\naxios.interceptors.request.use(function (request) {\n  // dispatch an action to turn spinner on\n  store.dispatch(GlobalActions.incrementLoadingCounter());\n  return request;\n}, function (error) {\n  console.log(error);\n  return Promise.reject(error);\n}); // intercept all Axios responses and dispatch the DECREMENT_LOADING_COUNTER Action\n\naxios.interceptors.response.use(function (response) {\n  decrementLoadingCounter();\n  return response;\n}, function (error) {\n  // The response was rejected, turn off the spinning\n  decrementLoadingCounter();\n\n  if (error.response.status === 401) {\n    store.dispatch(LoginActions.sessionExpired());\n  }\n\n  return Promise.reject(error);\n});\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.protectedArea = void 0;\n\n    _this.initializationFinishedHandler = function () {\n      _this.setState({\n        isInitialized: true\n      });\n    };\n\n    _this.state = {\n      isInitialized: false\n    };\n    var Navigator = withRouter(NavigationContainer);\n    _this.protectedArea = /*#__PURE__*/React.createElement(Router, {\n      history: history,\n      __self: _assertThisInitialized(_this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navigator, {\n      __self: _assertThisInitialized(_this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(PersistGate, {\n        persistor: persistor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, this.state.isInitialized ? /*#__PURE__*/React.createElement(AuthenticationControllerContainer, {\n        publicAreaComponent: function publicAreaComponent(isPostLoginPerforming, errorMsg) {\n          return /*#__PURE__*/React.createElement(LoginPageContainer, {\n            isPostLoginPerforming: isPostLoginPerforming,\n            postLoginErrorMsg: errorMsg,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }\n          });\n        },\n        protectedAreaComponent: this.protectedArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }) : /*#__PURE__*/React.createElement(StartupInitializer, {\n        onInitializationFinished: this.initializationFinishedHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/root/GraduateProject/src/app/App.tsx"],"names":["axios","React","PersistGate","Provider","Router","withRouter","Visibility","GlobalActions","NavigationContainer","store","persistor","AuthenticationControllerContainer","history","StartupInitializer","LoginPageContainer","LoginActions","change","_e","state","dispatch","setPageVisibilityVisible","setPageVisibilityHidden","hidden","getIsLoadingState","getState","globalState","loadingCounter","decrementLoadingCounter","interceptors","request","use","incrementLoadingCounter","error","console","log","Promise","reject","response","status","sessionExpired","App","props","protectedArea","initializationFinishedHandler","setState","isInitialized","Navigator","isPostLoginPerforming","errorMsg","Component"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport * as React from 'react';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { Provider } from 'react-redux';\nimport { Router, withRouter } from 'react-router-dom';\nimport * as Visibility from 'visibilityjs';\nimport { GlobalActions } from '../actions/GlobalActions';\nimport NavigationContainer from '../components/Nav/Navigation';\nimport { store, persistor } from '../store/ConfigStore';\nimport AuthenticationControllerContainer from './AuthenticationController';\nimport history from './History';\n// import InitializingScreen from './InitializingScreen';\nimport StartupInitializer from './StartupInitializer';\nimport LoginPageContainer from '../pages/Login/LoginPage';\nimport { LoginActions } from '../actions/LoginActions';\nimport 'tippy.js/dist/tippy.css';\nimport 'tippy.js/dist/themes/light-border.css';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nVisibility.change((_e, state) => {\n  // There are 3 states, visible, hidden and prerender, consider prerender as hidden.\n  // https://developer.mozilla.org/en-US/docs/Web/API/Document/visibilityState\n  if (state === 'visible') {\n    store.dispatch(GlobalActions.setPageVisibilityVisible());\n  } else {\n    store.dispatch(GlobalActions.setPageVisibilityHidden());\n  }\n});\nif (Visibility.hidden()) {\n  store.dispatch(GlobalActions.setPageVisibilityHidden());\n} else {\n  store.dispatch(GlobalActions.setPageVisibilityVisible());\n}\n\nconst getIsLoadingState = () => {\n  const state = store.getState();\n  return state && state.globalState.loadingCounter > 0;\n};\n\nconst decrementLoadingCounter = () => {\n  if (getIsLoadingState()) {\n    store.dispatch(GlobalActions.decrementLoadingCounter());\n  }\n};\n\n// intercept all Axios requests and dispatch the INCREMENT_LOADING_COUNTER Action\naxios.interceptors.request.use(\n  request => {\n    // dispatch an action to turn spinner on\n    store.dispatch(GlobalActions.incrementLoadingCounter());\n    return request;\n  },\n  error => {\n    console.log(error);\n    return Promise.reject(error);\n  }\n);\n\n// intercept all Axios responses and dispatch the DECREMENT_LOADING_COUNTER Action\naxios.interceptors.response.use(\n  response => {\n    decrementLoadingCounter();\n    return response;\n  },\n  error => {\n    // The response was rejected, turn off the spinning\n    decrementLoadingCounter();\n\n    if (error.response.status === 401) {\n      store.dispatch(LoginActions.sessionExpired());\n    }\n\n    return Promise.reject(error);\n  }\n);\n\ntype AppState = {\n  isInitialized: boolean;\n};\n\nclass App extends React.Component<{}, AppState> {\n  private protectedArea: React.ReactNode;\n\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      isInitialized: false\n    };\n\n    const Navigator = withRouter(NavigationContainer);\n    this.protectedArea = (\n      <Router history={history}>\n        <Navigator />\n      </Router>\n    );\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <PersistGate  persistor={persistor}>\n          {this.state.isInitialized ? (\n            <AuthenticationControllerContainer\n              publicAreaComponent={(isPostLoginPerforming: boolean, errorMsg?: string) => (\n                <LoginPageContainer isPostLoginPerforming={isPostLoginPerforming} postLoginErrorMsg={errorMsg} />\n              )}\n              protectedAreaComponent={this.protectedArea}\n            />\n          ) : (\n            <StartupInitializer onInitializationFinished={this.initializationFinishedHandler} />\n          )}\n        </PersistGate>\n      </Provider>\n    );\n  }\n\n  private initializationFinishedHandler = () => {\n    this.setState({ isInitialized: true });\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}