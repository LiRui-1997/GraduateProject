{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/pages/WorkloadDetails/WorkloadDetailsPage.tsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { EmptyState, EmptyStateBody, EmptyStateVariant, Tab, Title } from '@patternfly/react-core';\nimport * as API from '../../services/Api';\nimport WorkloadInfo from './WorkloadInfo';\nimport * as AlertUtils from '../../utils/AlertUtils';\nimport IstioMetricsContainer from '../../components/Metrics/IstioMetrics';\nimport { MetricsObjectTypes } from '../../types/Metrics';\nimport CustomMetricsContainer from '../../components/Metrics/CustomMetrics';\nimport { RenderHeader } from '../../components/Nav/Page';\nimport { serverConfig } from '../../config/ServerConfig';\nimport WorkloadPodLogs from './WorkloadPodLogs';\nimport ParameterizedTabs, { activeTab } from '../../components/Tab/Tabs';\nimport TracesComponent from 'components/JaegerIntegration/TracesComponent';\nimport TrafficDetails from 'components/TrafficList/TrafficDetails';\nimport WorkloadWizardDropdown from '../../components/IstioWizards/WorkloadWizardDropdown';\nimport TimeControl from '../../components/Time/TimeControl';\nimport EnvoyDetailsContainer from 'components/Envoy/EnvoyDetails';\nvar tabName = 'tab';\nvar defaultTab = 'info';\nvar paramToTab = {\n  info: 0,\n  traffic: 1,\n  logs: 2,\n  in_metrics: 3,\n  out_metrics: 4,\n  traces: 5\n};\nvar nextTabIndex = 6;\n\nvar WorkloadDetails = /*#__PURE__*/function (_React$Component) {\n  _inherits(WorkloadDetails, _React$Component);\n\n  var _super = _createSuper(WorkloadDetails);\n\n  function WorkloadDetails(props) {\n    var _this;\n\n    _classCallCheck(this, WorkloadDetails);\n\n    _this = _super.call(this, props);\n\n    _this.fetchWorkload = function () {\n      API.getWorkload(_this.props.match.params.namespace, _this.props.match.params.workload).then(function (details) {\n        _this.setState({\n          workload: details.data\n        });\n      }).catch(function (error) {\n        return AlertUtils.addError('Could not fetch Workload.', error);\n      });\n    };\n\n    _this.state = {\n      currentTab: activeTab(tabName, defaultTab)\n    };\n    return _this;\n  }\n\n  _createClass(WorkloadDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchWorkload();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var currentTab = activeTab(tabName, defaultTab);\n\n      if (this.props.match.params.namespace !== prevProps.match.params.namespace || this.props.match.params.workload !== prevProps.match.params.workload || this.props.lastRefreshAt !== prevProps.lastRefreshAt || currentTab !== this.state.currentTab) {\n        if (currentTab === 'info' || currentTab === 'logs' || currentTab === 'envoy') {\n          this.fetchWorkload();\n        }\n\n        if (currentTab !== this.state.currentTab) {\n          this.setState({\n            currentTab: currentTab\n          });\n        }\n      }\n    }\n  }, {\n    key: \"staticTabs\",\n    value: function staticTabs() {\n      var _this$state$workload;\n\n      var hasPods = (_this$state$workload = this.state.workload) === null || _this$state$workload === void 0 ? void 0 : _this$state$workload.pods.length;\n      var tabsArray = [];\n      var overTab = /*#__PURE__*/React.createElement(Tab, {\n        title: \"Overview\",\n        eventKey: 0,\n        key: 'Overview',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(WorkloadInfo, {\n        workload: this.state.workload,\n        namespace: this.props.match.params.namespace,\n        refreshWorkload: this.fetchWorkload,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }));\n      tabsArray.push(overTab);\n      var trafficTab = /*#__PURE__*/React.createElement(Tab, {\n        title: \"Traffic\",\n        eventKey: 1,\n        key: 'Traffic',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(TrafficDetails, {\n        itemName: this.props.match.params.workload,\n        itemType: MetricsObjectTypes.WORKLOAD,\n        namespace: this.props.match.params.namespace,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }));\n      tabsArray.push(trafficTab);\n      var logTab = /*#__PURE__*/React.createElement(Tab, {\n        title: \"Logs\",\n        eventKey: 2,\n        key: 'Logs',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }\n      }, hasPods ? /*#__PURE__*/React.createElement(WorkloadPodLogs, {\n        namespace: this.props.match.params.namespace,\n        workload: this.props.match.params.workload,\n        pods: this.state.workload.pods,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }) : /*#__PURE__*/React.createElement(EmptyState, {\n        variant: EmptyStateVariant.full,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Title, {\n        headingLevel: \"h5\",\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, \"No logs for Workload \", this.props.match.params.workload), /*#__PURE__*/React.createElement(EmptyStateBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, \"There are no logs to display because the workload has no pods.\")));\n      tabsArray.push(logTab);\n      var inTab = /*#__PURE__*/React.createElement(Tab, {\n        title: \"Inbound Metrics\",\n        eventKey: 3,\n        key: 'Inbound Metrics',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(IstioMetricsContainer, {\n        namespace: this.props.match.params.namespace,\n        object: this.props.match.params.workload,\n        objectType: MetricsObjectTypes.WORKLOAD,\n        direction: 'inbound',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }\n      }));\n      tabsArray.push(inTab);\n      var outTab = /*#__PURE__*/React.createElement(Tab, {\n        title: \"Outbound Metrics\",\n        eventKey: 4,\n        key: 'Outbound Metrics',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(IstioMetricsContainer, {\n        namespace: this.props.match.params.namespace,\n        object: this.props.match.params.workload,\n        objectType: MetricsObjectTypes.WORKLOAD,\n        direction: 'outbound',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }));\n      tabsArray.push(outTab);\n\n      if (this.props.jaegerInfo && this.props.jaegerInfo.enabled && this.props.jaegerInfo.integration) {\n        tabsArray.push( /*#__PURE__*/React.createElement(Tab, {\n          eventKey: 5,\n          title: \"Traces\",\n          key: \"Traces\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(TracesComponent, {\n          namespace: this.props.match.params.namespace,\n          target: this.props.match.params.workload,\n          targetKind: 'workload',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 11\n          }\n        })));\n      }\n\n      if (this.state.workload && this.hasIstioSidecars(this.state.workload)) {\n        var envoyTab = /*#__PURE__*/React.createElement(Tab, {\n          title: \"Envoy\",\n          eventKey: 10,\n          key: 'Envoy',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 9\n          }\n        }, this.state.workload && /*#__PURE__*/React.createElement(EnvoyDetailsContainer, {\n          namespace: this.props.match.params.namespace,\n          workload: this.state.workload,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }\n        }));\n        tabsArray.push(envoyTab);\n        paramToTab['envoy'] = 10;\n      } // Used by the runtimes tabs\n\n\n      nextTabIndex = tabsArray.length + 1;\n      return tabsArray;\n    }\n  }, {\n    key: \"hasIstioSidecars\",\n    value: function hasIstioSidecars(workload) {\n      var hasIstioSidecars = false;\n\n      if (workload.pods.length > 0) {\n        workload.pods.forEach(function (pod) {\n          if (pod.istioContainers && pod.istioContainers.length > 0) {\n            hasIstioSidecars = true;\n          } else {\n            hasIstioSidecars = hasIstioSidecars || !!pod.containers && pod.containers.some(function (cont) {\n              return cont.name === 'istio-proxy';\n            });\n          }\n        });\n      }\n\n      return hasIstioSidecars;\n    }\n  }, {\n    key: \"runtimeTabs\",\n    value: function runtimeTabs() {\n      var _this2 = this;\n\n      var tabs = [];\n\n      if (this.state.workload) {\n        var app = this.state.workload.labels[serverConfig.istioLabels.appLabelName];\n        var version = this.state.workload.labels[serverConfig.istioLabels.versionLabelName];\n        var isLabeled = app && version;\n\n        if (isLabeled) {\n          var tabOffset = 0;\n          this.state.workload.runtimes.forEach(function (runtime) {\n            runtime.dashboardRefs.forEach(function (dashboard) {\n              if (dashboard.template !== 'envoy') {\n                var tabKey = tabOffset + nextTabIndex;\n                paramToTab[dashboard.template] = tabKey;\n                var tab = /*#__PURE__*/React.createElement(Tab, {\n                  key: dashboard.template,\n                  title: dashboard.title,\n                  eventKey: tabKey,\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 17\n                  }\n                }, /*#__PURE__*/React.createElement(CustomMetricsContainer, {\n                  namespace: _this2.props.match.params.namespace,\n                  app: app,\n                  version: version,\n                  workload: _this2.state.workload.name,\n                  workloadType: _this2.state.workload.type,\n                  template: dashboard.template,\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 19\n                  }\n                }));\n                tabs.push(tab);\n                tabOffset++;\n              }\n            });\n          });\n        }\n      }\n\n      return tabs;\n    }\n  }, {\n    key: \"renderTabs\",\n    value: function renderTabs() {\n      // PF4 Tabs doesn't support static tabs followed of an array of tabs created dynamically.\n      return this.staticTabs().concat(this.runtimeTabs());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      // set default to true: all dynamic tabs (unlisted below) are for runtimes dashboards, which uses custom time\n      var useCustomTime = true;\n\n      switch (this.state.currentTab) {\n        case 'info':\n        case 'traffic':\n          useCustomTime = false;\n          break;\n\n        case 'in_metrics':\n        case 'out_metrics':\n        case 'logs':\n        case 'traces':\n          useCustomTime = true;\n          break;\n      }\n\n      var actionsToolbar = this.state.currentTab === 'info' && this.state.workload ? /*#__PURE__*/React.createElement(WorkloadWizardDropdown, {\n        namespace: this.props.match.params.namespace,\n        workload: this.state.workload,\n        onChange: this.fetchWorkload,\n        statusState: this.props.statusState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 9\n        }\n      }) : undefined;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RenderHeader, {\n        location: this.props.location,\n        rightToolbar: /*#__PURE__*/React.createElement(TimeControl, {\n          customDuration: useCustomTime,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }\n        }),\n        actionsToolbar: actionsToolbar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 9\n        }\n      }), this.state.workload && /*#__PURE__*/React.createElement(ParameterizedTabs, {\n        id: \"basic-tabs\",\n        onSelect: function onSelect(tabValue) {\n          _this3.setState({\n            currentTab: tabValue\n          });\n        },\n        tabMap: paramToTab,\n        tabName: tabName,\n        defaultTab: defaultTab,\n        activeTab: this.state.currentTab,\n        mountOnEnter: true,\n        unmountOnExit: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }\n      }, this.renderTabs()));\n    }\n  }]);\n\n  return WorkloadDetails;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    jaegerInfo: state.jaegerState.info,\n    lastRefreshAt: state.globalState.lastRefreshAt,\n    statusState: state.statusState\n  };\n};\n\nvar WorkloadDetailsContainer = connect(mapStateToProps)(WorkloadDetails);\nexport default WorkloadDetailsContainer;","map":{"version":3,"sources":["/root/kiali-ui/src/pages/WorkloadDetails/WorkloadDetailsPage.tsx"],"names":["React","connect","EmptyState","EmptyStateBody","EmptyStateVariant","Tab","Title","API","WorkloadInfo","AlertUtils","IstioMetricsContainer","MetricsObjectTypes","CustomMetricsContainer","RenderHeader","serverConfig","WorkloadPodLogs","ParameterizedTabs","activeTab","TracesComponent","TrafficDetails","WorkloadWizardDropdown","TimeControl","EnvoyDetailsContainer","tabName","defaultTab","paramToTab","info","traffic","logs","in_metrics","out_metrics","traces","nextTabIndex","WorkloadDetails","props","fetchWorkload","getWorkload","match","params","namespace","workload","then","details","setState","data","catch","error","addError","state","currentTab","prevProps","lastRefreshAt","hasPods","pods","length","tabsArray","overTab","push","trafficTab","WORKLOAD","logTab","full","inTab","outTab","jaegerInfo","enabled","integration","hasIstioSidecars","envoyTab","forEach","pod","istioContainers","containers","some","cont","name","tabs","app","labels","istioLabels","appLabelName","version","versionLabelName","isLabeled","tabOffset","runtimes","runtime","dashboardRefs","dashboard","template","tabKey","tab","title","type","staticTabs","concat","runtimeTabs","useCustomTime","actionsToolbar","statusState","undefined","location","tabValue","renderTabs","Component","mapStateToProps","jaegerState","globalState","WorkloadDetailsContainer"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { EmptyState, EmptyStateBody, EmptyStateVariant, Tab, Title } from '@patternfly/react-core';\nimport * as API from '../../services/Api';\nimport { Workload, WorkloadId } from '../../types/Workload';\nimport WorkloadInfo from './WorkloadInfo';\nimport * as AlertUtils from '../../utils/AlertUtils';\nimport IstioMetricsContainer from '../../components/Metrics/IstioMetrics';\nimport { MetricsObjectTypes } from '../../types/Metrics';\nimport CustomMetricsContainer from '../../components/Metrics/CustomMetrics';\nimport { RenderHeader } from '../../components/Nav/Page';\nimport { serverConfig } from '../../config/ServerConfig';\nimport WorkloadPodLogs from './WorkloadPodLogs';\nimport { TimeInMilliseconds } from '../../types/Common';\nimport { KialiAppState } from '../../store/Store';\nimport ParameterizedTabs, { activeTab } from '../../components/Tab/Tabs';\nimport TracesComponent from 'components/JaegerIntegration/TracesComponent';\nimport { JaegerInfo } from 'types/JaegerInfo';\nimport TrafficDetails from 'components/TrafficList/TrafficDetails';\nimport WorkloadWizardDropdown from '../../components/IstioWizards/WorkloadWizardDropdown';\nimport TimeControl from '../../components/Time/TimeControl';\nimport EnvoyDetailsContainer from 'components/Envoy/EnvoyDetails';\nimport { StatusState } from '../../types/StatusState';\n\ntype WorkloadDetailsState = {\n  workload?: Workload;\n  currentTab: string;\n};\n\ntype ReduxProps = {\n  jaegerInfo?: JaegerInfo;\n  lastRefreshAt: TimeInMilliseconds;\n  statusState: StatusState;\n};\n\ntype WorkloadDetailsPageProps = ReduxProps & RouteComponentProps<WorkloadId>;\n\nconst tabName = 'tab';\nconst defaultTab = 'info';\n\nconst paramToTab: { [key: string]: number } = {\n  info: 0,\n  traffic: 1,\n  logs: 2,\n  in_metrics: 3,\n  out_metrics: 4,\n  traces: 5\n};\nvar nextTabIndex = 6;\n\nclass WorkloadDetails extends React.Component<WorkloadDetailsPageProps, WorkloadDetailsState> {\n  constructor(props: WorkloadDetailsPageProps) {\n    super(props);\n    this.state = { currentTab: activeTab(tabName, defaultTab) };\n  }\n\n  componentDidMount(): void {\n    this.fetchWorkload();\n  }\n\n  componentDidUpdate(prevProps: WorkloadDetailsPageProps) {\n    const currentTab = activeTab(tabName, defaultTab);\n    if (\n      this.props.match.params.namespace !== prevProps.match.params.namespace ||\n      this.props.match.params.workload !== prevProps.match.params.workload ||\n      this.props.lastRefreshAt !== prevProps.lastRefreshAt ||\n      currentTab !== this.state.currentTab\n    ) {\n      if (currentTab === 'info' || currentTab === 'logs' || currentTab === 'envoy') {\n        this.fetchWorkload();\n      }\n      if (currentTab !== this.state.currentTab) {\n        this.setState({ currentTab: currentTab });\n      }\n    }\n  }\n\n  private fetchWorkload = () => {\n    API.getWorkload(this.props.match.params.namespace, this.props.match.params.workload)\n      .then(details => {\n        this.setState({\n          workload: details.data\n        });\n      })\n      .catch(error => AlertUtils.addError('Could not fetch Workload.', error));\n  };\n\n  private staticTabs() {\n    const hasPods = this.state.workload?.pods.length;\n    const tabsArray: JSX.Element[] = [];\n\n    const overTab = (\n      <Tab title=\"Overview\" eventKey={0} key={'Overview'}>\n        <WorkloadInfo\n          workload={this.state.workload}\n          namespace={this.props.match.params.namespace}\n          refreshWorkload={this.fetchWorkload}\n        />\n      </Tab>\n    );\n    tabsArray.push(overTab);\n\n    const trafficTab = (\n      <Tab title=\"Traffic\" eventKey={1} key={'Traffic'}>\n        <TrafficDetails\n          itemName={this.props.match.params.workload}\n          itemType={MetricsObjectTypes.WORKLOAD}\n          namespace={this.props.match.params.namespace}\n        />\n      </Tab>\n    );\n    tabsArray.push(trafficTab);\n\n    const logTab = (\n      <Tab title=\"Logs\" eventKey={2} key={'Logs'}>\n        {hasPods ? (\n          <WorkloadPodLogs\n            namespace={this.props.match.params.namespace}\n            workload={this.props.match.params.workload}\n            pods={this.state.workload!.pods}\n          />\n        ) : (\n          <EmptyState variant={EmptyStateVariant.full}>\n            <Title headingLevel=\"h5\" size=\"lg\">\n              No logs for Workload {this.props.match.params.workload}\n            </Title>\n            <EmptyStateBody>There are no logs to display because the workload has no pods.</EmptyStateBody>\n          </EmptyState>\n        )}\n      </Tab>\n    );\n    tabsArray.push(logTab);\n\n    const inTab = (\n      <Tab title=\"Inbound Metrics\" eventKey={3} key={'Inbound Metrics'}>\n        <IstioMetricsContainer\n          namespace={this.props.match.params.namespace}\n          object={this.props.match.params.workload}\n          objectType={MetricsObjectTypes.WORKLOAD}\n          direction={'inbound'}\n        />\n      </Tab>\n    );\n    tabsArray.push(inTab);\n\n    const outTab = (\n      <Tab title=\"Outbound Metrics\" eventKey={4} key={'Outbound Metrics'}>\n        <IstioMetricsContainer\n          namespace={this.props.match.params.namespace}\n          object={this.props.match.params.workload}\n          objectType={MetricsObjectTypes.WORKLOAD}\n          direction={'outbound'}\n        />\n      </Tab>\n    );\n    tabsArray.push(outTab);\n\n    if (this.props.jaegerInfo && this.props.jaegerInfo.enabled && this.props.jaegerInfo.integration) {\n      tabsArray.push(\n        <Tab eventKey={5} title=\"Traces\" key=\"Traces\">\n          <TracesComponent\n            namespace={this.props.match.params.namespace}\n            target={this.props.match.params.workload}\n            targetKind={'workload'}\n          />\n        </Tab>\n      );\n    }\n    if (this.state.workload && this.hasIstioSidecars(this.state.workload)) {\n      const envoyTab = (\n        <Tab title=\"Envoy\" eventKey={10} key={'Envoy'}>\n          {this.state.workload && (\n            <EnvoyDetailsContainer namespace={this.props.match.params.namespace} workload={this.state.workload} />\n          )}\n        </Tab>\n      );\n      tabsArray.push(envoyTab);\n      paramToTab['envoy'] = 10;\n    }\n\n    // Used by the runtimes tabs\n    nextTabIndex = tabsArray.length + 1;\n\n    return tabsArray;\n  }\n\n  private hasIstioSidecars(workload: Workload): boolean {\n    var hasIstioSidecars: boolean = false;\n\n    if (workload.pods.length > 0) {\n      workload.pods.forEach(pod => {\n        if (pod.istioContainers && pod.istioContainers.length > 0) {\n          hasIstioSidecars = true;\n        } else {\n          hasIstioSidecars =\n            hasIstioSidecars || (!!pod.containers && pod.containers.some(cont => cont.name === 'istio-proxy'));\n        }\n      });\n    }\n    return hasIstioSidecars;\n  }\n\n  private runtimeTabs() {\n    const tabs: JSX.Element[] = [];\n\n    if (this.state.workload) {\n      const app = this.state.workload.labels[serverConfig.istioLabels.appLabelName];\n      const version = this.state.workload.labels[serverConfig.istioLabels.versionLabelName];\n      const isLabeled = app && version;\n      if (isLabeled) {\n        let tabOffset = 0;\n        this.state.workload.runtimes.forEach(runtime => {\n          runtime.dashboardRefs.forEach(dashboard => {\n            if (dashboard.template !== 'envoy') {\n              const tabKey = tabOffset + nextTabIndex;\n              paramToTab[dashboard.template] = tabKey;\n              const tab = (\n                <Tab key={dashboard.template} title={dashboard.title} eventKey={tabKey}>\n                  <CustomMetricsContainer\n                    namespace={this.props.match.params.namespace}\n                    app={app}\n                    version={version}\n                    workload={this.state.workload!.name}\n                    workloadType={this.state.workload!.type}\n                    template={dashboard.template}\n                  />\n                </Tab>\n              );\n              tabs.push(tab);\n              tabOffset++;\n            }\n          });\n        });\n      }\n    }\n\n    return tabs;\n  }\n\n  private renderTabs() {\n    // PF4 Tabs doesn't support static tabs followed of an array of tabs created dynamically.\n    return this.staticTabs().concat(this.runtimeTabs());\n  }\n\n  render() {\n    // set default to true: all dynamic tabs (unlisted below) are for runtimes dashboards, which uses custom time\n    let useCustomTime = true;\n    switch (this.state.currentTab) {\n      case 'info':\n      case 'traffic':\n        useCustomTime = false;\n        break;\n      case 'in_metrics':\n      case 'out_metrics':\n      case 'logs':\n      case 'traces':\n        useCustomTime = true;\n        break;\n    }\n    const actionsToolbar =\n      this.state.currentTab === 'info' && this.state.workload ? (\n        <WorkloadWizardDropdown\n          namespace={this.props.match.params.namespace}\n          workload={this.state.workload}\n          onChange={this.fetchWorkload}\n          statusState={this.props.statusState}\n        />\n      ) : undefined;\n    return (\n      <>\n        <RenderHeader\n          location={this.props.location}\n          rightToolbar={<TimeControl customDuration={useCustomTime} />}\n          actionsToolbar={actionsToolbar}\n        />\n        {this.state.workload && (\n          <ParameterizedTabs\n            id=\"basic-tabs\"\n            onSelect={tabValue => {\n              this.setState({ currentTab: tabValue });\n            }}\n            tabMap={paramToTab}\n            tabName={tabName}\n            defaultTab={defaultTab}\n            activeTab={this.state.currentTab}\n            mountOnEnter={true}\n            unmountOnExit={true}\n          >\n            {this.renderTabs()}\n          </ParameterizedTabs>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: KialiAppState) => ({\n  jaegerInfo: state.jaegerState.info,\n  lastRefreshAt: state.globalState.lastRefreshAt,\n  statusState: state.statusState\n});\n\nconst WorkloadDetailsContainer = connect(mapStateToProps)(WorkloadDetails);\n\nexport default WorkloadDetailsContainer;\n"]},"metadata":{},"sourceType":"module"}