{"ast":null,"code":"import _objectSpread from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/components/IstioWizards/Slider/BootstrapSlider.tsx\";\n// Clone of Slider component to workaround issue https://github.com/patternfly/patternfly-react/issues/1221\nimport React from 'react';\nimport Slider from 'bootstrap-slider-without-jquery';\nimport _ from 'lodash';\nvar orientation = {\n  horizontal: 'horizontal',\n  vertical: 'vertical'\n};\n\nvar BootstrapSlider = /*#__PURE__*/function (_React$Component) {\n  _inherits(BootstrapSlider, _React$Component);\n\n  var _super = _createSuper(BootstrapSlider);\n\n  function BootstrapSlider() {\n    var _this;\n\n    _classCallCheck(this, BootstrapSlider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.slider = void 0;\n    _this.sliderDiv = void 0;\n    return _this;\n  }\n\n  _createClass(BootstrapSlider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.slider = new Slider(this.sliderDiv, _objectSpread({}, this.props));\n\n      var onSlide = function onSlide(value) {\n        value = value >= _this2.props.max ? _this2.props.max : value;\n\n        _this2.props.onSlide(value);\n\n        _this2.slider.setValue(value);\n      };\n\n      var onSlideStop = function onSlideStop(value) {\n        value = _.min([value, _this2.props.max]);\n\n        _this2.props.onSlideStop(value);\n\n        _this2.slider.setValue(value);\n      };\n\n      this.slider.on('slide', onSlide);\n      this.slider.on('slideStop', onSlideStop);\n      this.slider.setAttribute('min', this.props.min);\n      this.slider.setAttribute('max', this.props.maxLimit);\n\n      if (this.props.locked) {\n        this.slider.disable();\n      } else {\n        this.slider.enable();\n      }\n    } // Instead of rendering the slider element again and again,\n    // we took advantage of the bootstrap-slider library\n    // and only update the new value or format when new props arrive.\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this3 = this;\n\n      if (this.props.min !== prevProps.min || this.props.max !== prevProps.max || this.props.maxLimit !== prevProps.maxLimit || this.props.locked !== prevProps.locked) {\n        this.slider.setAttribute('min', this.props.min);\n        this.slider.setAttribute('max', this.props.maxLimit);\n        this.slider.refresh();\n\n        var onSlide = function onSlide(value) {\n          value = value >= _this3.props.max ? _this3.props.max : value;\n\n          _this3.props.onSlide(value);\n\n          _this3.slider.setValue(value);\n        };\n\n        var onSlideStop = function onSlideStop(value) {\n          value = _.min([value, _this3.props.max]);\n\n          _this3.props.onSlideStop(value);\n\n          _this3.slider.setValue(value);\n        };\n\n        this.slider.on('slide', onSlide);\n        this.slider.on('slideStop', onSlideStop);\n        this.slider.setAttribute('formatter', this.props.formatter);\n\n        if (this.props.locked) {\n          this.slider.disable();\n        } else {\n          this.slider.enable();\n        }\n      }\n\n      this.slider.setValue(this.props.value); // Adjust the tooltip to \"sit\" ontop of the slider's handle. #LibraryBug\n\n      if (this.props && this.props.orientation === orientation.horizontal) {\n        this.slider.tooltip.style.marginLeft = \"-\".concat(this.slider.tooltip.offsetWidth / 2, \"px\");\n\n        if (this.props.ticks_labels && this.slider.tickLabelContainer) {\n          this.slider.tickLabelContainer.style.marginTop = '0px';\n        }\n      } else {\n        this.slider.tooltip.style.marginTop = \"-\".concat(this.slider.tooltip.offsetHeight / 2, \"px\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return /*#__PURE__*/React.createElement(\"input\", {\n        className: \"slider-pf\",\n        type: \"range\",\n        ref: function ref(input) {\n          _this4.sliderDiv = input;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return BootstrapSlider;\n}(React.Component);\n\nBootstrapSlider.defaultProps = {\n  formatter: function formatter(value) {\n    return value;\n  },\n  onSlide: function onSlide(event) {\n    return event;\n  },\n  orientation: 'horizontal',\n  ticks: [],\n  ticks_labels: [],\n  locked: false\n};\nexport default BootstrapSlider;","map":{"version":3,"sources":["/root/kiali-ui/src/components/IstioWizards/Slider/BootstrapSlider.tsx"],"names":["React","Slider","_","orientation","horizontal","vertical","BootstrapSlider","slider","sliderDiv","props","onSlide","value","max","setValue","onSlideStop","min","on","setAttribute","maxLimit","locked","disable","enable","prevProps","refresh","formatter","tooltip","style","marginLeft","offsetWidth","ticks_labels","tickLabelContainer","marginTop","offsetHeight","input","Component","defaultProps","event","ticks"],"mappings":"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","sourcesContent":["// Clone of Slider component to workaround issue https://github.com/patternfly/patternfly-react/issues/1221\n\nimport React from 'react';\nimport Slider from 'bootstrap-slider-without-jquery';\nimport _ from 'lodash';\n\nconst orientation = {\n  horizontal: 'horizontal',\n  vertical: 'vertical'\n};\n\ntype Props = {\n  value: number;\n  formatter: (value: any) => any;\n  onSlide: (event: any) => any;\n  onSlideStop: (event: any) => any;\n  orientation: string;\n  ticks: number[];\n  ticks_labels: string[];\n  locked: boolean;\n  min: number;\n  // Note that Slider will use max and maxLimit properties to:\n  // maxLimit: the max value Slider can show\n  // max: the max value Slider can enter\n  // max < maxLimit when using Slider groups, so max can be relative\n  max: number;\n  maxLimit: number;\n};\n\nclass BootstrapSlider extends React.Component<Props> {\n  static defaultProps = {\n    formatter: value => value,\n    onSlide: event => event,\n    orientation: 'horizontal',\n    ticks: [],\n    ticks_labels: [],\n    locked: false\n  };\n  slider: Slider;\n  sliderDiv: any;\n\n  componentDidMount() {\n    this.slider = new Slider(this.sliderDiv, {\n      ...this.props\n    });\n\n    const onSlide = value => {\n      value = value >= this.props.max ? this.props.max : value;\n      this.props.onSlide(value);\n      this.slider.setValue(value);\n    };\n    const onSlideStop = value => {\n      value = _.min([value, this.props.max]);\n      this.props.onSlideStop(value);\n      this.slider.setValue(value);\n    };\n    this.slider.on('slide', onSlide);\n    this.slider.on('slideStop', onSlideStop);\n    this.slider.setAttribute('min', this.props.min);\n    this.slider.setAttribute('max', this.props.maxLimit);\n    if (this.props.locked) {\n      this.slider.disable();\n    } else {\n      this.slider.enable();\n    }\n  }\n\n  // Instead of rendering the slider element again and again,\n  // we took advantage of the bootstrap-slider library\n  // and only update the new value or format when new props arrive.\n  componentDidUpdate(prevProps: Props) {\n    if (\n      this.props.min !== prevProps.min ||\n      this.props.max !== prevProps.max ||\n      this.props.maxLimit !== prevProps.maxLimit ||\n      this.props.locked !== prevProps.locked\n    ) {\n      this.slider.setAttribute('min', this.props.min);\n      this.slider.setAttribute('max', this.props.maxLimit);\n      this.slider.refresh();\n      const onSlide = value => {\n        value = value >= this.props.max ? this.props.max : value;\n        this.props.onSlide(value);\n        this.slider.setValue(value);\n      };\n      const onSlideStop = value => {\n        value = _.min([value, this.props.max]);\n        this.props.onSlideStop(value);\n        this.slider.setValue(value);\n      };\n      this.slider.on('slide', onSlide);\n      this.slider.on('slideStop', onSlideStop);\n      this.slider.setAttribute('formatter', this.props.formatter);\n      if (this.props.locked) {\n        this.slider.disable();\n      } else {\n        this.slider.enable();\n      }\n    }\n\n    this.slider.setValue(this.props.value);\n    // Adjust the tooltip to \"sit\" ontop of the slider's handle. #LibraryBug\n    if (this.props && this.props.orientation === orientation.horizontal) {\n      this.slider.tooltip.style.marginLeft = `-${this.slider.tooltip.offsetWidth / 2}px`;\n      if (this.props.ticks_labels && this.slider.tickLabelContainer) {\n        this.slider.tickLabelContainer.style.marginTop = '0px';\n      }\n    } else {\n      this.slider.tooltip.style.marginTop = `-${this.slider.tooltip.offsetHeight / 2}px`;\n    }\n  }\n\n  render() {\n    return (\n      <input\n        className=\"slider-pf\"\n        type=\"range\"\n        ref={input => {\n          this.sliderDiv = input;\n        }}\n      />\n    );\n  }\n}\n\nexport default BootstrapSlider;\n"]},"metadata":{},"sourceType":"module"}