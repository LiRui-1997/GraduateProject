{"ast":null,"code":"/**\n * columns-are-equal.ts\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport { isFunction, isEqualWith } from 'lodash';\n/**\n * @param {ColumnsType} oldColumns - previous columns\n * @param {ColumnsType} newColumns - new columns\n */\n\nexport function columnsAreEqual(oldColumns, newColumns) {\n  return isEqualWith(oldColumns, newColumns, function (a, b) {\n    if (isFunction(a) && isFunction(b)) {\n      return a === b;\n    }\n\n    return undefined;\n  });\n}","map":{"version":3,"sources":["/root/kiali-ui/node_modules/@patternfly/react-table/dist/esm/components/Table/base/columns-are-equal.js"],"names":["isFunction","isEqualWith","columnsAreEqual","oldColumns","newColumns","a","b","undefined"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,QAAxC;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,eAAT,CAAyBC,UAAzB,EAAqCC,UAArC,EAAiD;AACtD,SAAOH,WAAW,CAACE,UAAD,EAAaC,UAAb,EAAyB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACnD,QAAIN,UAAU,CAACK,CAAD,CAAV,IAAiBL,UAAU,CAACM,CAAD,CAA/B,EAAoC;AAClC,aAAOD,CAAC,KAAKC,CAAb;AACD;;AAED,WAAOC,SAAP;AACD,GANiB,CAAlB;AAOD","sourcesContent":["/**\n * columns-are-equal.ts\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport { isFunction, isEqualWith } from 'lodash';\n\n/**\n * @param {ColumnsType} oldColumns - previous columns\n * @param {ColumnsType} newColumns - new columns\n */\nexport function columnsAreEqual(oldColumns, newColumns) {\n  return isEqualWith(oldColumns, newColumns, (a, b) => {\n    if (isFunction(a) && isFunction(b)) {\n      return a === b;\n    }\n\n    return undefined;\n  });\n}\n//# sourceMappingURL=columns-are-equal.js.map"]},"metadata":{},"sourceType":"module"}