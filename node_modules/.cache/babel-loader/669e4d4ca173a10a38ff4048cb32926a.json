{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/components/ToolbarDropdown/ToolbarDropdown.tsx\";\nimport * as React from 'react';\nimport { Select, SelectOption, Text, TextVariants, Tooltip } from '@patternfly/react-core';\nimport { style } from 'typestyle';\nvar widthAuto = style({\n  width: 'auto'\n});\nvar spacingRight = style({\n  marginRight: '10px',\n  marginTop: '10px',\n  display: 'inline'\n});\nexport var ToolbarDropdown = /*#__PURE__*/function (_React$Component) {\n  _inherits(ToolbarDropdown, _React$Component);\n\n  var _super = _createSuper(ToolbarDropdown);\n\n  function ToolbarDropdown(props) {\n    var _this;\n\n    _classCallCheck(this, ToolbarDropdown);\n\n    _this = _super.call(this, props);\n\n    _this.onKeyChanged = function (_, selection, isPlaceholder) {\n      if (!isPlaceholder) {\n        _this.setState({\n          currentValue: selection,\n          currentName: _this.props.options[selection]\n        });\n\n        var nameOrKey = _this.props.useName ? _this.props.options[selection] : selection;\n\n        _this.props.handleSelect(nameOrKey);\n      }\n\n      _this.setState({\n        isExpanded: false\n      });\n    };\n\n    _this.onToggle = function (isExpanded) {\n      _this.setState({\n        isExpanded: isExpanded\n      });\n\n      _this.props.onToggle && _this.props.onToggle(isExpanded);\n    };\n\n    _this.state = {\n      currentValue: props.value || props.initialValue,\n      currentName: props.label || props.initialLabel,\n      isExpanded: false\n    };\n    return _this;\n  }\n\n  _createClass(ToolbarDropdown, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          isExpanded = _this$state.isExpanded,\n          currentName = _this$state.currentName,\n          currentValue = _this$state.currentValue;\n      var dropdownButton = /*#__PURE__*/React.createElement(Select, {\n        onSelect: this.onKeyChanged,\n        \"aria-label\": this.props.id,\n        selections: this.props.value || currentValue,\n        placeholderText: this.props.label || currentName,\n        id: this.props.id,\n        onToggle: this.onToggle,\n        isExpanded: isExpanded,\n        ariaLabelledBy: this.props.id,\n        isDisabled: this.props.disabled,\n        className: this.props.classNameSelect ? \"\".concat(this.props.classNameSelect, \" \").concat(widthAuto) : widthAuto,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }, Object.keys(this.props.options).map(function (key) {\n        return /*#__PURE__*/React.createElement(SelectOption, {\n          key: key,\n          isSelected: key === String(_this2.props.value || _this2.state.currentValue),\n          value: \"\".concat(key),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }\n        }, _this2.props.options[key]);\n      }));\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.nameDropdown && /*#__PURE__*/React.createElement(Text, {\n        component: TextVariants.h5,\n        className: spacingRight,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }, this.props.nameDropdown), this.props.tooltip ? /*#__PURE__*/React.createElement(Tooltip, {\n        key: 'ot-' + this.props.id,\n        entryDelay: 1000,\n        position: this.props.tooltipBottom ? 'bottom' : 'top',\n        content: /*#__PURE__*/React.createElement(React.Fragment, null, this.props.tooltip),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, dropdownButton) : dropdownButton);\n    }\n  }]);\n\n  return ToolbarDropdown;\n}(React.Component);\nexport default ToolbarDropdown;","map":{"version":3,"sources":["/root/GraduateProject/src/components/ToolbarDropdown/ToolbarDropdown.tsx"],"names":["React","Select","SelectOption","Text","TextVariants","Tooltip","style","widthAuto","width","spacingRight","marginRight","marginTop","display","ToolbarDropdown","props","onKeyChanged","_","selection","isPlaceholder","setState","currentValue","currentName","options","nameOrKey","useName","handleSelect","isExpanded","onToggle","state","value","initialValue","label","initialLabel","dropdownButton","id","disabled","classNameSelect","Object","keys","map","key","String","nameDropdown","h5","tooltip","tooltipBottom","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Select, SelectOption, Text, TextVariants, Tooltip } from '@patternfly/react-core';\nimport { style } from 'typestyle';\n\nconst widthAuto = style({\n  width: 'auto'\n});\n\nconst spacingRight = style({\n  marginRight: '10px',\n  marginTop: '10px',\n  display: 'inline'\n});\n\ntype ToolbarDropdownProps = {\n  disabled?: boolean;\n  id?: string;\n  initialLabel?: string;\n  initialValue?: number | string;\n  label?: string;\n  nameDropdown?: string;\n  options: object;\n  tooltip?: string;\n  tooltipBottom?: boolean;\n  value?: number | string;\n  useName?: boolean;\n  classNameSelect?: string;\n  classNameToolbar?: string;\n\n  handleSelect: (value: string) => void;\n  onToggle?: (isOpen: boolean) => void;\n};\n\ntype ToolbarDropdownState = {\n  currentValue?: number | string;\n  currentName?: string;\n  isExpanded: boolean;\n};\n\nexport class ToolbarDropdown extends React.Component<ToolbarDropdownProps, ToolbarDropdownState> {\n  constructor(props: ToolbarDropdownProps) {\n    super(props);\n    this.state = {\n      currentValue: props.value || props.initialValue,\n      currentName: props.label || props.initialLabel,\n      isExpanded: false\n    };\n  }\n\n  onKeyChanged = (_, selection, isPlaceholder) => {\n    if (!isPlaceholder) {\n      this.setState({ currentValue: selection, currentName: this.props.options[selection] });\n      const nameOrKey = this.props.useName ? this.props.options[selection] : selection;\n      this.props.handleSelect(nameOrKey);\n    }\n    this.setState({ isExpanded: false });\n  };\n\n  onToggle = (isExpanded: boolean) => {\n    this.setState({ isExpanded });\n    this.props.onToggle && this.props.onToggle(isExpanded);\n  };\n\n  render() {\n    const { isExpanded, currentName, currentValue } = this.state;\n    const dropdownButton = (\n      <Select\n        onSelect={this.onKeyChanged}\n        aria-label={this.props.id}\n        selections={this.props.value || currentValue}\n        placeholderText={this.props.label || currentName}\n        id={this.props.id}\n        onToggle={this.onToggle}\n        isExpanded={isExpanded}\n        ariaLabelledBy={this.props.id}\n        isDisabled={this.props.disabled}\n        className={this.props.classNameSelect ? `${this.props.classNameSelect} ${widthAuto}` : widthAuto}\n      >\n        {Object.keys(this.props.options).map(key => {\n          return (\n            <SelectOption\n              key={key}\n              isSelected={key === String(this.props.value || this.state.currentValue)}\n              value={`${key}`}\n            >\n              {this.props.options[key]}\n            </SelectOption>\n          );\n        })}\n      </Select>\n    );\n    return (\n      <>\n        {this.props.nameDropdown && (\n          <Text component={TextVariants.h5} className={spacingRight}>\n            {this.props.nameDropdown}\n          </Text>\n        )}\n        {this.props.tooltip ? (\n          <Tooltip\n            key={'ot-' + this.props.id}\n            entryDelay={1000}\n            position={this.props.tooltipBottom ? 'bottom' : 'top'}\n            content={<>{this.props.tooltip}</>}\n          >\n            {dropdownButton}\n          </Tooltip>\n        ) : (\n          dropdownButton\n        )}\n      </>\n    );\n  }\n}\n\nexport default ToolbarDropdown;\n"]},"metadata":{},"sourceType":"module"}