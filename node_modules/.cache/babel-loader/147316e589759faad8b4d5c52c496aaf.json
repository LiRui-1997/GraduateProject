{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/components/IstioWizards/CircuitBreaker.tsx\";\nimport * as React from 'react';\nimport { isValidConnectionPool, isValidOutlierDetection } from '../../utils/IstioConfigUtils';\nimport { Form } from '@patternfly/react-core';\nimport ConnectionPool from './CircuitBreaker/ConnectionPool';\nimport OutlierDetection from './CircuitBreaker/OutlierDetection';\n\nvar CircuitBreaker = /*#__PURE__*/function (_React$Component) {\n  _inherits(CircuitBreaker, _React$Component);\n\n  var _super = _createSuper(CircuitBreaker);\n\n  function CircuitBreaker(props) {\n    var _this;\n\n    _classCallCheck(this, CircuitBreaker);\n\n    _this = _super.call(this, props);\n\n    _this.resetState = function () {\n      _this.setState({\n        addConnectionPool: _this.props.hasConnectionPool,\n        connectionPool: _this.props.connectionPool,\n        isValidConnectionPool: _this.props.hasConnectionPool ? isValidConnectionPool(_this.props.connectionPool) : true,\n        addOutlierDetection: _this.props.hasOutlierDetection,\n        outlierDetection: _this.props.outlierDetection,\n        isValidOutlierDetection: _this.props.hasOutlierDetection ? isValidOutlierDetection(_this.props.outlierDetection) : true\n      });\n    };\n\n    _this.state = {\n      addConnectionPool: _this.props.hasConnectionPool,\n      connectionPool: _this.props.connectionPool,\n      isValidConnectionPool: _this.props.hasConnectionPool ? isValidConnectionPool(_this.props.connectionPool) : true,\n      addOutlierDetection: _this.props.hasOutlierDetection,\n      outlierDetection: _this.props.outlierDetection,\n      isValidOutlierDetection: _this.props.hasOutlierDetection ? isValidOutlierDetection(_this.props.outlierDetection) : true\n    };\n    return _this;\n  }\n\n  _createClass(CircuitBreaker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.resetState();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Form, {\n        isHorizontal: true,\n        style: {\n          paddingTop: 10,\n          paddingBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ConnectionPool, {\n        isConnectionPool: this.state.addConnectionPool,\n        connectionPool: this.state.connectionPool,\n        onConnectionPool: function onConnectionPool(isConnectionPool, connectionPool) {\n          _this2.setState(function (prevState) {\n            if (connectionPool.tcp) {\n              prevState.connectionPool.tcp = connectionPool.tcp;\n            }\n\n            if (connectionPool.http) {\n              prevState.connectionPool.http = connectionPool.http;\n            }\n\n            return {\n              addConnectionPool: isConnectionPool,\n              connectionPool: prevState.connectionPool,\n              isValidConnectionPool: isConnectionPool ? isValidConnectionPool(prevState.connectionPool) : true\n            };\n          }, function () {\n            return _this2.props.onCircuitBreakerChange(_this2.state);\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(OutlierDetection, {\n        isOutlierDetection: this.state.addOutlierDetection,\n        outlierDetection: this.state.outlierDetection,\n        onOutlierDetection: function onOutlierDetection(isOutlierDetection, outlierDetection) {\n          _this2.setState(function (prevState) {\n            if (outlierDetection.consecutiveErrors) {\n              prevState.outlierDetection.consecutiveErrors = outlierDetection.consecutiveErrors;\n            }\n\n            return {\n              addOutlierDetection: isOutlierDetection,\n              isValidOutlierDetection: isOutlierDetection ? isValidOutlierDetection(prevState.outlierDetection) : true\n            };\n          }, function () {\n            return _this2.props.onCircuitBreakerChange(_this2.state);\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return CircuitBreaker;\n}(React.Component);\n\nexport default CircuitBreaker;","map":{"version":3,"sources":["/root/GraduateProject/src/components/IstioWizards/CircuitBreaker.tsx"],"names":["React","isValidConnectionPool","isValidOutlierDetection","Form","ConnectionPool","OutlierDetection","CircuitBreaker","props","resetState","setState","addConnectionPool","hasConnectionPool","connectionPool","addOutlierDetection","hasOutlierDetection","outlierDetection","state","paddingTop","paddingBottom","isConnectionPool","prevState","tcp","http","onCircuitBreakerChange","isOutlierDetection","consecutiveErrors","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ConnectionPoolSettings, OutlierDetection as OutlierDetectionProps } from '../../types/IstioObjects';\nimport { isValidConnectionPool, isValidOutlierDetection } from '../../utils/IstioConfigUtils';\nimport { Form } from '@patternfly/react-core';\nimport ConnectionPool from './CircuitBreaker/ConnectionPool';\nimport OutlierDetection from './CircuitBreaker/OutlierDetection';\n\ntype Props = {\n  hasConnectionPool: boolean;\n  connectionPool: ConnectionPoolSettings;\n  hasOutlierDetection: boolean;\n  outlierDetection: OutlierDetectionProps;\n  onCircuitBreakerChange: (circuitBreaker: CircuitBreakerState) => void;\n};\nexport type CircuitBreakerState = {\n  addConnectionPool: boolean;\n  connectionPool: ConnectionPoolSettings;\n  isValidConnectionPool: boolean;\n  addOutlierDetection: boolean;\n  outlierDetection: OutlierDetectionProps;\n  isValidOutlierDetection: boolean;\n};\n\nclass CircuitBreaker extends React.Component<Props, CircuitBreakerState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      addConnectionPool: this.props.hasConnectionPool,\n      connectionPool: this.props.connectionPool,\n      isValidConnectionPool: this.props.hasConnectionPool ? isValidConnectionPool(this.props.connectionPool) : true,\n      addOutlierDetection: this.props.hasOutlierDetection,\n      outlierDetection: this.props.outlierDetection,\n      isValidOutlierDetection: this.props.hasOutlierDetection\n        ? isValidOutlierDetection(this.props.outlierDetection)\n        : true\n    };\n  }\n\n  resetState = () => {\n    this.setState({\n      addConnectionPool: this.props.hasConnectionPool,\n      connectionPool: this.props.connectionPool,\n      isValidConnectionPool: this.props.hasConnectionPool ? isValidConnectionPool(this.props.connectionPool) : true,\n      addOutlierDetection: this.props.hasOutlierDetection,\n      outlierDetection: this.props.outlierDetection,\n      isValidOutlierDetection: this.props.hasOutlierDetection\n        ? isValidOutlierDetection(this.props.outlierDetection)\n        : true\n    });\n  };\n\n  componentDidMount(): void {\n    this.resetState();\n  }\n\n  render() {\n    return (\n      <Form\n        isHorizontal={true}\n        style={{\n          paddingTop: 10,\n          paddingBottom: 10\n        }}\n      >\n        <ConnectionPool\n          isConnectionPool={this.state.addConnectionPool}\n          connectionPool={this.state.connectionPool}\n          onConnectionPool={(isConnectionPool, connectionPool) => {\n            this.setState(\n              prevState => {\n                if (connectionPool.tcp) {\n                  prevState.connectionPool.tcp = connectionPool.tcp;\n                }\n                if (connectionPool.http) {\n                  prevState.connectionPool.http = connectionPool.http;\n                }\n                return {\n                  addConnectionPool: isConnectionPool,\n                  connectionPool: prevState.connectionPool,\n                  isValidConnectionPool: isConnectionPool ? isValidConnectionPool(prevState.connectionPool) : true\n                };\n              },\n              () => this.props.onCircuitBreakerChange(this.state)\n            );\n          }}\n        />\n        <OutlierDetection\n          isOutlierDetection={this.state.addOutlierDetection}\n          outlierDetection={this.state.outlierDetection}\n          onOutlierDetection={(isOutlierDetection, outlierDetection) => {\n            this.setState(\n              prevState => {\n                if (outlierDetection.consecutiveErrors) {\n                  prevState.outlierDetection.consecutiveErrors = outlierDetection.consecutiveErrors;\n                }\n                return {\n                  addOutlierDetection: isOutlierDetection,\n                  isValidOutlierDetection: isOutlierDetection\n                    ? isValidOutlierDetection(prevState.outlierDetection)\n                    : true\n                };\n              },\n              () => this.props.onCircuitBreakerChange(this.state)\n            );\n          }}\n        />\n      </Form>\n    );\n  }\n}\n\nexport default CircuitBreaker;\n"]},"metadata":{},"sourceType":"module"}