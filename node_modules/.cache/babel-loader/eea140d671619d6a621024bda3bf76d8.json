{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/pages/IstioConfigNew/AuthorizationPolicyForm/To/OperationBuilder.tsx\";\nimport * as React from 'react';\nimport { cellWidth, Table, TableBody, TableHeader } from '@patternfly/react-table'; // Use TextInputBase like workaround while PF4 team work in https://github.com/patternfly/patternfly-react/issues/4072\n\nimport { Button, FormSelect, FormSelectOption, TextInputBase as TextInput } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nvar INIT_OPERATION_FIELDS = ['hosts', 'notHosts', 'ports', 'notPorts', 'methods', 'notMethods', 'paths', 'notPaths'].sort();\nvar headerCells = [{\n  title: 'Operation Field',\n  transforms: [cellWidth(20)],\n  props: {}\n}, {\n  title: 'Values',\n  transforms: [cellWidth(80)],\n  props: {}\n}, {\n  title: '',\n  props: {}\n}];\n\nvar OperationBuilder = /*#__PURE__*/function (_React$Component) {\n  _inherits(OperationBuilder, _React$Component);\n\n  var _super = _createSuper(OperationBuilder);\n\n  function OperationBuilder(props) {\n    var _this;\n\n    _classCallCheck(this, OperationBuilder);\n\n    _this = _super.call(this, props);\n\n    _this.onAddNewOperationField = function (value, _) {\n      _this.setState({\n        newOperationField: value\n      });\n    };\n\n    _this.onAddNewValues = function (value, _) {\n      _this.setState({\n        newValues: value\n      });\n    };\n\n    _this.onAddOperation = function () {\n      _this.setState(function (prevState) {\n        var i = prevState.operationFields.indexOf(prevState.newOperationField);\n\n        if (i > -1) {\n          prevState.operationFields.splice(i, 1);\n        }\n\n        prevState.operation[prevState.newOperationField] = prevState.newValues.split(',');\n        return {\n          operationFields: prevState.operationFields,\n          operation: prevState.operation,\n          newOperationField: prevState.operationFields[0],\n          newValues: ''\n        };\n      });\n    };\n\n    _this.onAddOperationToList = function () {\n      var toItem = _this.state.operation;\n\n      _this.setState({\n        operationFields: Object.assign([], INIT_OPERATION_FIELDS),\n        operation: {},\n        newOperationField: INIT_OPERATION_FIELDS[0],\n        newValues: ''\n      }, function () {\n        _this.props.onAddTo(toItem);\n      });\n    };\n\n    _this.actionResolver = function (rowData, _ref) {\n      var rowIndex = _ref.rowIndex;\n      var removeAction = {\n        title: 'Remove Field',\n        // @ts-ignore\n        onClick: function onClick(event, rowIndex, rowData, extraData) {\n          // Fetch sourceField from rowData, it's a fixed string on children\n          var removeOperationField = rowData.cells[0].props.children.toString();\n\n          _this.setState(function (prevState) {\n            prevState.operationFields.push(removeOperationField);\n            delete prevState.operation[removeOperationField];\n            var newOperationFields = prevState.operationFields.sort();\n            return {\n              operationFields: newOperationFields,\n              operation: prevState.operation,\n              newOperationField: newOperationFields[0],\n              newValues: ''\n            };\n          });\n        }\n      };\n\n      if (rowIndex < Object.keys(_this.state.operation).length) {\n        return [removeAction];\n      }\n\n      return [];\n    };\n\n    _this.rows = function () {\n      var operatorRows = Object.keys(_this.state.operation).map(function (operationField, i) {\n        return {\n          key: 'operationKey' + i,\n          cells: [/*#__PURE__*/React.createElement(React.Fragment, null, operationField), /*#__PURE__*/React.createElement(React.Fragment, null, _this.state.operation[operationField].join(',')), /*#__PURE__*/React.createElement(React.Fragment, null)]\n        };\n      });\n\n      if (_this.state.operationFields.length > 0) {\n        return operatorRows.concat([{\n          key: 'operationKeyNew',\n          cells: [/*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormSelect, {\n            value: _this.state.newOperationField,\n            id: \"addNewOperationField\",\n            name: \"addNewOperationField\",\n            onChange: _this.onAddNewOperationField,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }\n          }, _this.state.operationFields.map(function (option, index) {\n            return /*#__PURE__*/React.createElement(FormSelectOption, {\n              isDisabled: false,\n              key: 'operation' + index,\n              value: option,\n              label: option,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }\n            });\n          }))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextInput, {\n            value: _this.state.newValues,\n            type: \"text\",\n            id: \"addNewValues\",\n            key: \"addNewValues\",\n            \"aria-describedby\": \"add new operation values\",\n            name: \"addNewValues\",\n            onChange: _this.onAddNewValues,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }\n          })), /*#__PURE__*/React.createElement(React.Fragment, null, _this.state.operationFields.length > 0 && /*#__PURE__*/React.createElement(Button, {\n            variant: \"link\",\n            icon: /*#__PURE__*/React.createElement(PlusCircleIcon, {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 46\n              }\n            }),\n            onClick: _this.onAddOperation,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }\n          }))]\n        }]);\n      }\n\n      return operatorRows;\n    };\n\n    _this.state = {\n      operationFields: Object.assign([], INIT_OPERATION_FIELDS),\n      operation: {},\n      newOperationField: INIT_OPERATION_FIELDS[0],\n      newValues: ''\n    };\n    return _this;\n  }\n\n  _createClass(OperationBuilder, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n        \"aria-label\": \"Operation Builder\",\n        cells: headerCells,\n        rows: this.rows() // @ts-ignore\n        ,\n        actionResolver: this.actionResolver,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        variant: \"link\",\n        icon: /*#__PURE__*/React.createElement(PlusCircleIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }\n        }),\n        isDisabled: Object.keys(this.state.operation).length === 0,\n        onClick: this.onAddOperationToList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }\n      }, \"Add Operation to To List\"));\n    }\n  }]);\n\n  return OperationBuilder;\n}(React.Component);\n\nexport default OperationBuilder;","map":{"version":3,"sources":["/root/kiali-ui/src/pages/IstioConfigNew/AuthorizationPolicyForm/To/OperationBuilder.tsx"],"names":["React","cellWidth","Table","TableBody","TableHeader","Button","FormSelect","FormSelectOption","TextInputBase","TextInput","PlusCircleIcon","INIT_OPERATION_FIELDS","sort","headerCells","title","transforms","props","OperationBuilder","onAddNewOperationField","value","_","setState","newOperationField","onAddNewValues","newValues","onAddOperation","prevState","i","operationFields","indexOf","splice","operation","split","onAddOperationToList","toItem","state","Object","assign","onAddTo","actionResolver","rowData","rowIndex","removeAction","onClick","event","extraData","removeOperationField","cells","children","toString","push","newOperationFields","keys","length","rows","operatorRows","map","operationField","key","join","concat","option","index","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { cellWidth, ICell, Table, TableBody, TableHeader } from '@patternfly/react-table';\n// Use TextInputBase like workaround while PF4 team work in https://github.com/patternfly/patternfly-react/issues/4072\nimport { Button, FormSelect, FormSelectOption, TextInputBase as TextInput } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\n\ntype Props = {\n  onAddTo: (operation: { [key: string]: string[] }) => void;\n};\n\ntype State = {\n  operationFields: string[];\n  operation: {\n    [key: string]: string[];\n  };\n  newOperationField: string;\n  newValues: string;\n};\n\nconst INIT_OPERATION_FIELDS = [\n  'hosts',\n  'notHosts',\n  'ports',\n  'notPorts',\n  'methods',\n  'notMethods',\n  'paths',\n  'notPaths'\n].sort();\n\nconst headerCells: ICell[] = [\n  {\n    title: 'Operation Field',\n    transforms: [cellWidth(20) as any],\n    props: {}\n  },\n  {\n    title: 'Values',\n    transforms: [cellWidth(80) as any],\n    props: {}\n  },\n  {\n    title: '',\n    props: {}\n  }\n];\n\nclass OperationBuilder extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      operationFields: Object.assign([], INIT_OPERATION_FIELDS),\n      operation: {},\n      newOperationField: INIT_OPERATION_FIELDS[0],\n      newValues: ''\n    };\n  }\n\n  onAddNewOperationField = (value: string, _) => {\n    this.setState({\n      newOperationField: value\n    });\n  };\n\n  onAddNewValues = (value: string, _) => {\n    this.setState({\n      newValues: value\n    });\n  };\n\n  onAddOperation = () => {\n    this.setState(prevState => {\n      const i = prevState.operationFields.indexOf(prevState.newOperationField);\n      if (i > -1) {\n        prevState.operationFields.splice(i, 1);\n      }\n      prevState.operation[prevState.newOperationField] = prevState.newValues.split(',');\n      return {\n        operationFields: prevState.operationFields,\n        operation: prevState.operation,\n        newOperationField: prevState.operationFields[0],\n        newValues: ''\n      };\n    });\n  };\n\n  onAddOperationToList = () => {\n    const toItem = this.state.operation;\n    this.setState(\n      {\n        operationFields: Object.assign([], INIT_OPERATION_FIELDS),\n        operation: {},\n        newOperationField: INIT_OPERATION_FIELDS[0],\n        newValues: ''\n      },\n      () => {\n        this.props.onAddTo(toItem);\n      }\n    );\n  };\n\n  // @ts-ignore\n  actionResolver = (rowData, { rowIndex }) => {\n    const removeAction = {\n      title: 'Remove Field',\n      // @ts-ignore\n      onClick: (event, rowIndex, rowData, extraData) => {\n        // Fetch sourceField from rowData, it's a fixed string on children\n        const removeOperationField = rowData.cells[0].props.children.toString();\n        this.setState(prevState => {\n          prevState.operationFields.push(removeOperationField);\n          delete prevState.operation[removeOperationField];\n          const newOperationFields = prevState.operationFields.sort();\n          return {\n            operationFields: newOperationFields,\n            operation: prevState.operation,\n            newOperationField: newOperationFields[0],\n            newValues: ''\n          };\n        });\n      }\n    };\n    if (rowIndex < Object.keys(this.state.operation).length) {\n      return [removeAction];\n    }\n    return [];\n  };\n\n  rows = () => {\n    const operatorRows = Object.keys(this.state.operation).map((operationField, i) => {\n      return {\n        key: 'operationKey' + i,\n        cells: [<>{operationField}</>, <>{this.state.operation[operationField].join(',')}</>, <></>]\n      };\n    });\n    if (this.state.operationFields.length > 0) {\n      return operatorRows.concat([\n        {\n          key: 'operationKeyNew',\n          cells: [\n            <>\n              <FormSelect\n                value={this.state.newOperationField}\n                id=\"addNewOperationField\"\n                name=\"addNewOperationField\"\n                onChange={this.onAddNewOperationField}\n              >\n                {this.state.operationFields.map((option, index) => (\n                  <FormSelectOption isDisabled={false} key={'operation' + index} value={option} label={option} />\n                ))}\n              </FormSelect>\n            </>,\n            <>\n              <TextInput\n                value={this.state.newValues}\n                type=\"text\"\n                id=\"addNewValues\"\n                key=\"addNewValues\"\n                aria-describedby=\"add new operation values\"\n                name=\"addNewValues\"\n                onChange={this.onAddNewValues}\n              />\n            </>,\n            <>\n              {this.state.operationFields.length > 0 && (\n                <Button variant=\"link\" icon={<PlusCircleIcon />} onClick={this.onAddOperation} />\n              )}\n            </>\n          ]\n        }\n      ]);\n    }\n    return operatorRows;\n  };\n\n  render() {\n    return (\n      <>\n        <Table\n          aria-label=\"Operation Builder\"\n          cells={headerCells}\n          rows={this.rows()}\n          // @ts-ignore\n          actionResolver={this.actionResolver}\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n        <Button\n          variant=\"link\"\n          icon={<PlusCircleIcon />}\n          isDisabled={Object.keys(this.state.operation).length === 0}\n          onClick={this.onAddOperationToList}\n        >\n          Add Operation to To List\n        </Button>\n      </>\n    );\n  }\n}\n\nexport default OperationBuilder;\n"]},"metadata":{},"sourceType":"module"}