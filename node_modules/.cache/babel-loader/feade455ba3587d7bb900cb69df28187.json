{"ast":null,"code":"import { updateState } from '../utils/Reducer';\nimport { GlobalActions } from '../actions/GlobalActions';\nimport { getType } from 'typesafe-actions';\nexport var INITIAL_GLOBAL_STATE = {\n  loadingCounter: 0,\n  isPageVisible: true,\n  lastRefreshAt: 0\n}; // This Reducer allows changes to the 'globalState' portion of Redux Store\n\nvar globalState = function globalState() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_GLOBAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case getType(GlobalActions.incrementLoadingCounter):\n      return updateState(state, {\n        loadingCounter: state.loadingCounter + 1\n      });\n\n    case getType(GlobalActions.decrementLoadingCounter):\n      return updateState(state, {\n        loadingCounter: Math.max(0, state.loadingCounter - 1)\n      });\n\n    case getType(GlobalActions.setPageVisibilityHidden):\n      return updateState(state, {\n        isPageVisible: false\n      });\n\n    case getType(GlobalActions.setPageVisibilityVisible):\n      return updateState(state, {\n        isPageVisible: true\n      });\n\n    case getType(GlobalActions.setLastRefreshAt):\n      return updateState(state, {\n        lastRefreshAt: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default globalState;","map":{"version":3,"sources":["/root/GraduateProject/src/reducers/GlobalState.ts"],"names":["updateState","GlobalActions","getType","INITIAL_GLOBAL_STATE","loadingCounter","isPageVisible","lastRefreshAt","globalState","state","action","type","incrementLoadingCounter","decrementLoadingCounter","Math","max","setPageVisibilityHidden","setPageVisibilityVisible","setLastRefreshAt","payload"],"mappings":"AACA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAO,IAAMC,oBAAiC,GAAG;AAC/CC,EAAAA,cAAc,EAAE,CAD+B;AAE/CC,EAAAA,aAAa,EAAE,IAFgC;AAG/CC,EAAAA,aAAa,EAAE;AAHgC,CAA1C,C,CAMP;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAoF;AAAA,MAAnFC,KAAmF,uEAA9DL,oBAA8D;AAAA,MAAxCM,MAAwC;;AACtG,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,OAAO,CAACD,aAAa,CAACU,uBAAf,CAAZ;AACE,aAAOX,WAAW,CAACQ,KAAD,EAAQ;AAAEJ,QAAAA,cAAc,EAAEI,KAAK,CAACJ,cAAN,GAAuB;AAAzC,OAAR,CAAlB;;AACF,SAAKF,OAAO,CAACD,aAAa,CAACW,uBAAf,CAAZ;AACE,aAAOZ,WAAW,CAACQ,KAAD,EAAQ;AAAEJ,QAAAA,cAAc,EAAES,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYN,KAAK,CAACJ,cAAN,GAAuB,CAAnC;AAAlB,OAAR,CAAlB;;AACF,SAAKF,OAAO,CAACD,aAAa,CAACc,uBAAf,CAAZ;AACE,aAAOf,WAAW,CAACQ,KAAD,EAAQ;AAAEH,QAAAA,aAAa,EAAE;AAAjB,OAAR,CAAlB;;AACF,SAAKH,OAAO,CAACD,aAAa,CAACe,wBAAf,CAAZ;AACE,aAAOhB,WAAW,CAACQ,KAAD,EAAQ;AAAEH,QAAAA,aAAa,EAAE;AAAjB,OAAR,CAAlB;;AACF,SAAKH,OAAO,CAACD,aAAa,CAACgB,gBAAf,CAAZ;AACE,aAAOjB,WAAW,CAACQ,KAAD,EAAQ;AAAEF,QAAAA,aAAa,EAAEG,MAAM,CAACS;AAAxB,OAAR,CAAlB;;AACF;AACE,aAAOV,KAAP;AAZJ;AAcD,CAfD;;AAiBA,eAAeD,WAAf","sourcesContent":["import { GlobalState } from '../store/Store';\nimport { updateState } from '../utils/Reducer';\nimport { GlobalActions } from '../actions/GlobalActions';\nimport { KialiAppAction } from '../actions/KialiAppAction';\nimport { getType } from 'typesafe-actions';\n\nexport const INITIAL_GLOBAL_STATE: GlobalState = {\n  loadingCounter: 0,\n  isPageVisible: true,\n  lastRefreshAt: 0\n};\n\n// This Reducer allows changes to the 'globalState' portion of Redux Store\nconst globalState = (state: GlobalState = INITIAL_GLOBAL_STATE, action: KialiAppAction): GlobalState => {\n  switch (action.type) {\n    case getType(GlobalActions.incrementLoadingCounter):\n      return updateState(state, { loadingCounter: state.loadingCounter + 1 });\n    case getType(GlobalActions.decrementLoadingCounter):\n      return updateState(state, { loadingCounter: Math.max(0, state.loadingCounter - 1) });\n    case getType(GlobalActions.setPageVisibilityHidden):\n      return updateState(state, { isPageVisible: false });\n    case getType(GlobalActions.setPageVisibilityVisible):\n      return updateState(state, { isPageVisible: true });\n    case getType(GlobalActions.setLastRefreshAt):\n      return updateState(state, { lastRefreshAt: action.payload });\n    default:\n      return state;\n  }\n};\n\nexport default globalState;\n"]},"metadata":{},"sourceType":"module"}