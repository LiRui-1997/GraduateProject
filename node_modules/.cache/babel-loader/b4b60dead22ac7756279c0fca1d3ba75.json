{"ast":null,"code":"import { createAction, createStandardAction } from 'typesafe-actions';\nimport { ActionKeys } from './ActionKeys';\nexport var NamespaceActions = {\n  toggleActiveNamespace: createStandardAction(ActionKeys.TOGGLE_ACTIVE_NAMESPACE)(),\n  setActiveNamespaces: createStandardAction(ActionKeys.SET_ACTIVE_NAMESPACES)(),\n  setFilter: createStandardAction(ActionKeys.NAMESPACE_SET_FILTER)(),\n  requestStarted: createAction(ActionKeys.NAMESPACE_REQUEST_STARTED),\n  requestFailed: createAction(ActionKeys.NAMESPACE_FAILED),\n  receiveList: createAction(ActionKeys.NAMESPACE_SUCCESS, function (resolve) {\n    return function (newList, receivedAt) {\n      return resolve({\n        list: newList,\n        receivedAt: receivedAt\n      });\n    };\n  })\n};","map":{"version":3,"sources":["/root/GraduateProject/src/actions/NamespaceAction.ts"],"names":["createAction","createStandardAction","ActionKeys","NamespaceActions","toggleActiveNamespace","TOGGLE_ACTIVE_NAMESPACE","setActiveNamespaces","SET_ACTIVE_NAMESPACES","setFilter","NAMESPACE_SET_FILTER","requestStarted","NAMESPACE_REQUEST_STARTED","requestFailed","NAMESPACE_FAILED","receiveList","NAMESPACE_SUCCESS","resolve","newList","receivedAt","list"],"mappings":"AAAA,SAAqBA,YAArB,EAAmCC,oBAAnC,QAA+D,kBAA/D;AAEA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAO,IAAMC,gBAAgB,GAAG;AAC9BC,EAAAA,qBAAqB,EAAEH,oBAAoB,CAACC,UAAU,CAACG,uBAAZ,CAApB,EADO;AAE9BC,EAAAA,mBAAmB,EAAEL,oBAAoB,CAACC,UAAU,CAACK,qBAAZ,CAApB,EAFS;AAG9BC,EAAAA,SAAS,EAAEP,oBAAoB,CAACC,UAAU,CAACO,oBAAZ,CAApB,EAHmB;AAI9BC,EAAAA,cAAc,EAAEV,YAAY,CAACE,UAAU,CAACS,yBAAZ,CAJE;AAK9BC,EAAAA,aAAa,EAAEZ,YAAY,CAACE,UAAU,CAACW,gBAAZ,CALG;AAM9BC,EAAAA,WAAW,EAAEd,YAAY,CAACE,UAAU,CAACa,iBAAZ,EAA+B,UAAAC,OAAO;AAAA,WAAI,UAACC,OAAD,EAAuBC,UAAvB;AAAA,aACjEF,OAAO,CAAC;AACNG,QAAAA,IAAI,EAAEF,OADA;AAENC,QAAAA,UAAU,EAAEA;AAFN,OAAD,CAD0D;AAAA,KAAJ;AAAA,GAAtC;AANK,CAAzB","sourcesContent":["import { ActionType, createAction, createStandardAction } from 'typesafe-actions';\nimport Namespace from '../types/Namespace';\nimport { ActionKeys } from './ActionKeys';\n\nexport const NamespaceActions = {\n  toggleActiveNamespace: createStandardAction(ActionKeys.TOGGLE_ACTIVE_NAMESPACE)<Namespace>(),\n  setActiveNamespaces: createStandardAction(ActionKeys.SET_ACTIVE_NAMESPACES)<Namespace[]>(),\n  setFilter: createStandardAction(ActionKeys.NAMESPACE_SET_FILTER)<string>(),\n  requestStarted: createAction(ActionKeys.NAMESPACE_REQUEST_STARTED),\n  requestFailed: createAction(ActionKeys.NAMESPACE_FAILED),\n  receiveList: createAction(ActionKeys.NAMESPACE_SUCCESS, resolve => (newList: Namespace[], receivedAt: Date) =>\n    resolve({\n      list: newList,\n      receivedAt: receivedAt\n    })\n  )\n};\n\nexport type NamespaceAction = ActionType<typeof NamespaceActions>;\n"]},"metadata":{},"sourceType":"module"}