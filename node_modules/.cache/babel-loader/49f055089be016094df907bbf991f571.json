{"ast":null,"code":"import _toConsumableArray from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/components/MessageCenter/AlertDrawerGroup.tsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Button, CardBody, CardFooter } from '@patternfly/react-core';\nimport { InfoIcon } from '@patternfly/react-icons';\nimport { style } from 'typestyle';\nimport MessageCenterThunkActions from 'actions/MessageCenterThunkActions';\nimport AlertDrawerMessageContainer from './AlertDrawerMessage';\nvar noNotificationsMessage = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InfoIcon, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}), \"No Messages Available\");\n\nvar AlertDrawerGroup = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(AlertDrawerGroup, _React$PureComponent);\n\n  var _super = _createSuper(AlertDrawerGroup);\n\n  function AlertDrawerGroup() {\n    var _this;\n\n    _classCallCheck(this, AlertDrawerGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.getMessages = function () {\n      return _this.props.reverseMessageOrder ? _toConsumableArray(_this.props.group.messages).reverse() : _this.props.group.messages;\n    };\n\n    return _this;\n  }\n\n  _createClass(AlertDrawerGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var group = this.props.group;\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        className: AlertDrawerGroup.body,\n        style: {\n          paddingTop: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, group.messages.length === 0 && noNotificationsMessage, this.getMessages().map(function (message) {\n        return /*#__PURE__*/React.createElement(AlertDrawerMessageContainer, {\n          key: message.id,\n          message: message,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }\n        });\n      })), group.showActions && group.messages.length > 0 && /*#__PURE__*/React.createElement(CardFooter, {\n        className: AlertDrawerGroup.footer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: AlertDrawerGroup.left,\n        variant: \"link\",\n        onClick: function onClick() {\n          return _this2.props.markGroupAsRead(group);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, \"Mark All Read\"), /*#__PURE__*/React.createElement(Button, {\n        className: AlertDrawerGroup.right,\n        variant: \"link\",\n        onClick: function onClick() {\n          return _this2.props.clearGroup(group);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, \"Clear All\")));\n    }\n  }]);\n\n  return AlertDrawerGroup;\n}(React.PureComponent);\n\nAlertDrawerGroup.body = style({\n  padding: 0 // note: I don't know why but paddingTop with the additional explicit style prop used below\n\n});\nAlertDrawerGroup.footer = style({\n  paddingBottom: 5,\n  paddingTop: 5\n});\nAlertDrawerGroup.left = style({\n  float: 'left'\n});\nAlertDrawerGroup.right = style({\n  float: 'right'\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    clearGroup: function clearGroup(group) {\n      return dispatch(MessageCenterThunkActions.clearGroup(group.id));\n    },\n    markGroupAsRead: function markGroupAsRead(group) {\n      return dispatch(MessageCenterThunkActions.markGroupAsRead(group.id));\n    }\n  };\n};\n\nvar AlertDrawerGroupContainer = connect(null, mapDispatchToProps)(AlertDrawerGroup);\nexport default AlertDrawerGroupContainer;","map":{"version":3,"sources":["/root/GraduateProject/src/components/MessageCenter/AlertDrawerGroup.tsx"],"names":["React","connect","Card","Button","CardBody","CardFooter","InfoIcon","style","MessageCenterThunkActions","AlertDrawerMessageContainer","noNotificationsMessage","AlertDrawerGroup","getMessages","props","reverseMessageOrder","group","messages","reverse","body","paddingTop","length","map","message","id","showActions","footer","left","markGroupAsRead","right","clearGroup","PureComponent","padding","paddingBottom","float","mapDispatchToProps","dispatch","AlertDrawerGroupContainer"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { KialiAppState } from 'store/Store';\nimport { Card, Button, CardBody, CardFooter } from '@patternfly/react-core';\nimport { InfoIcon } from '@patternfly/react-icons';\nimport { style } from 'typestyle';\nimport { NotificationGroup } from '../../types/MessageCenter';\nimport MessageCenterThunkActions from 'actions/MessageCenterThunkActions';\nimport { KialiAppAction } from 'actions/KialiAppAction';\nimport AlertDrawerMessageContainer from './AlertDrawerMessage';\n\ntype ReduxProps = {\n  clearGroup: (group) => void;\n  markGroupAsRead: (group) => void;\n};\n\ntype AlertDrawerGroupProps = ReduxProps & {\n  group: NotificationGroup;\n  reverseMessageOrder?: boolean;\n};\n\nconst noNotificationsMessage = (\n  <>\n    <InfoIcon />\n    No Messages Available\n  </>\n);\n\nclass AlertDrawerGroup extends React.PureComponent<AlertDrawerGroupProps> {\n  static readonly body = style({\n    padding: 0 // note: I don't know why but paddingTop with the additional explicit style prop used below\n  });\n  static readonly footer = style({\n    paddingBottom: 5,\n    paddingTop: 5\n  });\n  static readonly left = style({\n    float: 'left'\n  });\n  static readonly right = style({\n    float: 'right'\n  });\n\n  render() {\n    const group: NotificationGroup = this.props.group;\n\n    return (\n      <Card>\n        <CardBody className={AlertDrawerGroup.body} style={{ paddingTop: 0 }}>\n          {group.messages.length === 0 && noNotificationsMessage}\n          {this.getMessages().map(message => (\n            <AlertDrawerMessageContainer key={message.id} message={message} />\n          ))}\n        </CardBody>\n        {group.showActions && group.messages.length > 0 && (\n          <CardFooter className={AlertDrawerGroup.footer}>\n            <Button className={AlertDrawerGroup.left} variant=\"link\" onClick={() => this.props.markGroupAsRead(group)}>\n              Mark All Read\n            </Button>\n            <Button className={AlertDrawerGroup.right} variant=\"link\" onClick={() => this.props.clearGroup(group)}>\n              Clear All\n            </Button>\n          </CardFooter>\n        )}\n      </Card>\n    );\n  }\n\n  private getMessages = () => {\n    return this.props.reverseMessageOrder ? [...this.props.group.messages].reverse() : this.props.group.messages;\n  };\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<KialiAppState, void, KialiAppAction>) => {\n  return {\n    clearGroup: group => dispatch(MessageCenterThunkActions.clearGroup(group.id)),\n    markGroupAsRead: group => dispatch(MessageCenterThunkActions.markGroupAsRead(group.id))\n  };\n};\n\nconst AlertDrawerGroupContainer = connect(null, mapDispatchToProps)(AlertDrawerGroup);\nexport default AlertDrawerGroupContainer;\n"]},"metadata":{},"sourceType":"module"}