{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/pages/IstioConfigDetails/IstioObjectDetails/VirtualServiceOverview.tsx\";\nimport * as React from 'react';\nimport { checkForPath, highestSeverity } from '../../../types/ServiceInfo';\nimport VirtualServiceRoute from './VirtualServiceRoute';\nimport { Stack, StackItem, Text, TextVariants, Title, TitleLevel, TitleSize, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport GlobalValidation from '../../../components/Validations/GlobalValidation';\nimport IstioObjectLink from '../../../components/Link/IstioObjectLink';\nimport ServiceLink from './ServiceLink';\nimport { KialiIcon } from 'config/KialiIcon';\nimport { style } from 'typestyle';\nvar infoStyle = style({\n  margin: '0px 0px 2px 10px',\n  verticalAlign: '-5px !important'\n});\n\nvar VirtualServiceOverview = /*#__PURE__*/function (_React$Component) {\n  _inherits(VirtualServiceOverview, _React$Component);\n\n  var _super = _createSuper(VirtualServiceOverview);\n\n  function VirtualServiceOverview() {\n    _classCallCheck(this, VirtualServiceOverview);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(VirtualServiceOverview, [{\n    key: \"validation\",\n    value: function validation() {\n      return this.props.validation;\n    }\n  }, {\n    key: \"globalStatus\",\n    value: function globalStatus() {\n      var validation = this.props.validation;\n\n      if (validation && !validation.valid) {\n        return /*#__PURE__*/React.createElement(GlobalValidation, {\n          validation: validation,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 14\n          }\n        });\n      } else {\n        return undefined;\n      }\n    }\n  }, {\n    key: \"hostStatusMessage\",\n    value: function hostStatusMessage() {\n      var checks = checkForPath(this.validation(), 'spec/hosts');\n      var severity = highestSeverity(checks);\n      return {\n        message: checks.map(function (check) {\n          return (check.code ? check.code + ' ' : '') + check.message;\n        }).join(','),\n        severity: severity\n      };\n    }\n  }, {\n    key: \"parseHost\",\n    value: function parseHost(host) {\n      if (host.includes('/')) {\n        var gatewayParts = host.split('/');\n        return {\n          service: gatewayParts[1],\n          namespace: gatewayParts[0]\n        };\n      }\n\n      var hostParts = host.split('.');\n      var h = {\n        service: hostParts[0],\n        namespace: this.props.namespace\n      };\n\n      if (hostParts.length > 1) {\n        h.namespace = hostParts[1];\n      }\n\n      return h;\n    }\n  }, {\n    key: \"generateGatewaysList\",\n    value: function generateGatewaysList(gateways, isValid) {\n      var _this = this;\n\n      var childrenList = [];\n      Object.keys(gateways).forEach(function (key, j) {\n        var host = _this.parseHost(gateways[key]);\n\n        childrenList.push( /*#__PURE__*/React.createElement(\"li\", {\n          key: 'gateway_' + host.service + '_' + j,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }\n        }, !isValid ? host.service : host.service === 'mesh' ? /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }\n        }, host.service, /*#__PURE__*/React.createElement(Tooltip, {\n          position: TooltipPosition.right,\n          content: /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              textAlign: 'left'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }\n          }, \"The reserved word, \\\"mesh\\\", implies all of the sidecars in the mesh\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(KialiIcon.Info, {\n          className: infoStyle,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }\n        }))) : /*#__PURE__*/React.createElement(IstioObjectLink, {\n          name: host.service,\n          namespace: host.namespace,\n          type: 'gateway',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }\n        }, gateways[key])));\n      });\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n        component: TextVariants.h3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, \"Gateways\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: 'details',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }, childrenList));\n    }\n  }, {\n    key: \"generateEmptyGateways\",\n    value: function generateEmptyGateways() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n        component: TextVariants.h3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }\n      }, \"Gateways\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: 'details',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        key: 'gateway_mesh',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }, \"mesh\", /*#__PURE__*/React.createElement(Tooltip, {\n        position: TooltipPosition.right,\n        content: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: 'left'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 19\n          }\n        }, \"When the gateways field is omitted, the default gateway (mesh) will be used, which would apply the rule to all sidecars in the mesh\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(KialiIcon.Info, {\n        className: infoStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }))))));\n    }\n  }, {\n    key: \"generateServiceList\",\n    value: function generateServiceList(routes, isValid) {\n      var _this2 = this;\n\n      var hosts = [];\n      routes.forEach(function (route) {\n        var _route$route;\n\n        (_route$route = route.route) === null || _route$route === void 0 ? void 0 : _route$route.forEach(function (dest) {\n          if (!hosts.includes(dest.destination.host)) {\n            hosts.push(dest.destination.host);\n          }\n        });\n      });\n      return hosts.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n        component: TextVariants.h3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }\n      }, \"Hosts\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: 'details',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      }, hosts.map(function (host, i) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: 'host_' + i,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(ServiceLink, {\n          namespace: _this2.props.namespace,\n          host: host,\n          isValid: isValid,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }\n        }));\n      }))) : undefined;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var virtualService = this.props.virtualService;\n      var globalStatus = this.globalStatus();\n      var isValid = !globalStatus;\n      var protocols = [{\n        name: 'HTTP',\n        object: virtualService.spec.http\n      }, {\n        name: 'TCP',\n        object: virtualService.spec.tcp\n      }, {\n        name: 'TLS',\n        object: virtualService.spec.tls\n      }];\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Title, {\n        headingLevel: TitleLevel.h3,\n        size: TitleSize.xl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }\n      }, \"Virtual Service Overview\"), /*#__PURE__*/React.createElement(Stack, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }, virtualService.spec.gateways && virtualService.spec.gateways.length > 0 && /*#__PURE__*/React.createElement(StackItem, {\n        id: 'gateways',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }, this.generateGatewaysList(virtualService.spec.gateways, isValid)), (!virtualService.spec.gateways || virtualService.spec.gateways.length === 0) && /*#__PURE__*/React.createElement(StackItem, {\n        id: 'gateways',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }\n      }, this.generateEmptyGateways()), protocols.map(function (protocol, i) {\n        var name = protocol.name,\n            object = protocol.object;\n\n        if (object && object.length > 0) {\n          return /*#__PURE__*/React.createElement(StackItem, {\n            id: protocol.name + '-routes-' + i,\n            key: protocol.name + '-routes-' + i,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }\n          }, protocol.name + ' Routes', /*#__PURE__*/React.createElement(VirtualServiceRoute, {\n            name: virtualService.metadata.name,\n            namespace: virtualService.metadata.namespace || '',\n            kind: name,\n            routes: object,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              marginTop: 30\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }\n          }, _this3.generateServiceList(object, isValid)));\n        }\n\n        return undefined;\n      })));\n    }\n  }]);\n\n  return VirtualServiceOverview;\n}(React.Component);\n\nexport default VirtualServiceOverview;","map":{"version":3,"sources":["/root/GraduateProject/src/pages/IstioConfigDetails/IstioObjectDetails/VirtualServiceOverview.tsx"],"names":["React","checkForPath","highestSeverity","VirtualServiceRoute","Stack","StackItem","Text","TextVariants","Title","TitleLevel","TitleSize","Tooltip","TooltipPosition","GlobalValidation","IstioObjectLink","ServiceLink","KialiIcon","style","infoStyle","margin","verticalAlign","VirtualServiceOverview","props","validation","valid","undefined","checks","severity","message","map","check","code","join","host","includes","gatewayParts","split","service","namespace","hostParts","h","length","gateways","isValid","childrenList","Object","keys","forEach","key","j","parseHost","push","right","textAlign","h3","routes","hosts","route","dest","destination","i","virtualService","globalStatus","protocols","name","object","spec","http","tcp","tls","xl","generateGatewaysList","generateEmptyGateways","protocol","metadata","marginTop","generateServiceList","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { checkForPath, highestSeverity } from '../../../types/ServiceInfo';\nimport { Host, HTTPRoute, ObjectValidation, TCPRoute, TLSRoute, VirtualService } from '../../../types/IstioObjects';\nimport VirtualServiceRoute from './VirtualServiceRoute';\nimport {\n  Stack,\n  StackItem,\n  Text,\n  TextVariants,\n  Title,\n  TitleLevel,\n  TitleSize,\n  Tooltip,\n  TooltipPosition\n} from '@patternfly/react-core';\nimport GlobalValidation from '../../../components/Validations/GlobalValidation';\nimport IstioObjectLink from '../../../components/Link/IstioObjectLink';\nimport ServiceLink from './ServiceLink';\nimport { KialiIcon } from 'config/KialiIcon';\nimport { style } from 'typestyle';\n\ninterface VirtualServiceProps {\n  namespace: string;\n  virtualService: VirtualService;\n  validation?: ObjectValidation;\n}\n\nconst infoStyle = style({\n  margin: '0px 0px 2px 10px',\n  verticalAlign: '-5px !important'\n});\n\nclass VirtualServiceOverview extends React.Component<VirtualServiceProps> {\n  validation(): ObjectValidation | undefined {\n    return this.props.validation;\n  }\n\n  globalStatus() {\n    const validation = this.props.validation;\n    if (validation && !validation.valid) {\n      return <GlobalValidation validation={validation} />;\n    } else {\n      return undefined;\n    }\n  }\n\n  hostStatusMessage() {\n    const checks = checkForPath(this.validation(), 'spec/hosts');\n    const severity = highestSeverity(checks);\n\n    return {\n      message: checks.map(check => (check.code ? check.code + ' ' : '') + check.message).join(','),\n      severity\n    };\n  }\n\n  parseHost(host: string): Host {\n    if (host.includes('/')) {\n      const gatewayParts = host.split('/');\n      return {\n        service: gatewayParts[1],\n        namespace: gatewayParts[0]\n      };\n    }\n\n    const hostParts = host.split('.');\n    const h = {\n      service: hostParts[0],\n      namespace: this.props.namespace\n    };\n\n    if (hostParts.length > 1) {\n      h.namespace = hostParts[1];\n    }\n\n    return h;\n  }\n\n  generateGatewaysList(gateways: string[], isValid: boolean) {\n    const childrenList: any = [];\n    Object.keys(gateways).forEach((key, j) => {\n      const host = this.parseHost(gateways[key]);\n      childrenList.push(\n        <li key={'gateway_' + host.service + '_' + j}>\n          {!isValid ? (\n            host.service\n          ) : host.service === 'mesh' ? (\n            <div>\n              {host.service}\n              <Tooltip\n                position={TooltipPosition.right}\n                content={\n                  <div style={{ textAlign: 'left' }}>\n                    The reserved word, \"mesh\", implies all of the sidecars in the mesh\n                  </div>\n                }\n              >\n                <KialiIcon.Info className={infoStyle} />\n              </Tooltip>\n            </div>\n          ) : (\n            <IstioObjectLink name={host.service} namespace={host.namespace} type={'gateway'}>\n              {gateways[key]}\n            </IstioObjectLink>\n          )}\n        </li>\n      );\n    });\n\n    return (\n      <>\n        <Text component={TextVariants.h3}>Gateways</Text>\n        <ul className={'details'}>{childrenList}</ul>\n      </>\n    );\n  }\n\n  generateEmptyGateways() {\n    return (\n      <>\n        <Text component={TextVariants.h3}>Gateways</Text>\n        <ul className={'details'}>\n          <li key={'gateway_mesh'}>\n            <div>\n              mesh\n              <Tooltip\n                position={TooltipPosition.right}\n                content={\n                  <div style={{ textAlign: 'left' }}>\n                    When the gateways field is omitted, the default gateway (mesh) will be used, which would apply the\n                    rule to all sidecars in the mesh\n                  </div>\n                }\n              >\n                <KialiIcon.Info className={infoStyle} />\n              </Tooltip>\n            </div>\n          </li>\n        </ul>\n      </>\n    );\n  }\n\n  generateServiceList(routes: HTTPRoute[] | TLSRoute[] | TCPRoute[], isValid: boolean) {\n    const hosts: string[] = [];\n    routes.forEach(route => {\n      route.route?.forEach(dest => {\n        if (!hosts.includes(dest.destination.host)) {\n          hosts.push(dest.destination.host);\n        }\n      });\n    });\n    return hosts.length > 0 ? (\n      <>\n        <Text component={TextVariants.h3}>Hosts</Text>\n        <ul className={'details'}>\n          {hosts.map((host, i) => (\n            <li key={'host_' + i}>\n              <ServiceLink namespace={this.props.namespace} host={host} isValid={isValid} />\n            </li>\n          ))}\n        </ul>\n      </>\n    ) : undefined;\n  }\n\n  render() {\n    const virtualService: VirtualService = this.props.virtualService;\n    const globalStatus = this.globalStatus();\n    const isValid = !globalStatus;\n    const protocols = [\n      { name: 'HTTP', object: virtualService.spec.http },\n      { name: 'TCP', object: virtualService.spec.tcp },\n      { name: 'TLS', object: virtualService.spec.tls }\n    ];\n    return (\n      <>\n        <Title headingLevel={TitleLevel.h3} size={TitleSize.xl}>\n          Virtual Service Overview\n        </Title>\n        <Stack>\n          {virtualService.spec.gateways && virtualService.spec.gateways.length > 0 && (\n            <StackItem id={'gateways'}>{this.generateGatewaysList(virtualService.spec.gateways, isValid)}</StackItem>\n          )}\n          {(!virtualService.spec.gateways || virtualService.spec.gateways.length === 0) && (\n            <StackItem id={'gateways'}>{this.generateEmptyGateways()}</StackItem>\n          )}\n          {protocols.map((protocol, i) => {\n            const { name, object } = protocol;\n            if (object && object.length > 0) {\n              return (\n                <StackItem id={protocol.name + '-routes-' + i} key={protocol.name + '-routes-' + i}>\n                  {protocol.name + ' Routes'}\n                  <VirtualServiceRoute\n                    name={virtualService.metadata.name}\n                    namespace={virtualService.metadata.namespace || ''}\n                    kind={name}\n                    routes={object}\n                  />\n                  <div style={{ marginTop: 30 }}>{this.generateServiceList(object, isValid)}</div>\n                </StackItem>\n              );\n            }\n            return undefined;\n          })}\n        </Stack>\n      </>\n    );\n  }\n}\n\nexport default VirtualServiceOverview;\n"]},"metadata":{},"sourceType":"module"}