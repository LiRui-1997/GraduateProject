{"ast":null,"code":"import _objectWithoutProperties from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/components/MissingSidecar/MissingSidecar.tsx\";\nvar _excluded = [\"text\", \"textTooltip\", \"icon\", \"namespace\", \"color\", \"tooltip\", \"style\"];\nimport * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { isIstioNamespace } from 'config/ServerConfig';\nimport { icons } from 'config';\nimport { KialiIcon } from '../../config/KialiIcon';\nimport { style } from 'typestyle';\nvar infoStyle = style({\n  margin: '0px 5px 2px 4px',\n  verticalAlign: '-5px !important'\n});\n\nvar MissingSidecar = /*#__PURE__*/function (_React$Component) {\n  _inherits(MissingSidecar, _React$Component);\n\n  var _super = _createSuper(MissingSidecar);\n\n  function MissingSidecar() {\n    _classCallCheck(this, MissingSidecar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MissingSidecar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          text = _this$props.text,\n          textTooltip = _this$props.textTooltip,\n          icon = _this$props.icon,\n          namespace = _this$props.namespace,\n          color = _this$props.color,\n          tooltip = _this$props.tooltip,\n          style = _this$props.style,\n          otherProps = _objectWithoutProperties(_this$props, _excluded);\n\n      var iconComponent = /*#__PURE__*/React.createElement(\"span\", Object.assign({\n        style: style\n      }, otherProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }), React.createElement(icon, {\n        style: {\n          color: color,\n          verticalAlign: '-2px'\n        }\n      }), !tooltip && /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          marginLeft: '8px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, text, /*#__PURE__*/React.createElement(Tooltip, {\n        key: \"tooltip_missing_sidecar\",\n        position: TooltipPosition.top,\n        content: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: 'left'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 24\n          }\n        }, textTooltip),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(KialiIcon.Info, {\n        className: infoStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }))));\n\n      if (isIstioNamespace(namespace)) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null);\n      }\n\n      return tooltip ? /*#__PURE__*/React.createElement(Tooltip, {\n        content: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: 'left'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }\n        }, textTooltip),\n        position: TooltipPosition.right,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, iconComponent) : iconComponent;\n    }\n  }]);\n\n  return MissingSidecar;\n}(React.Component);\n\nMissingSidecar.defaultProps = {\n  text: 'Missing Sidecar',\n  textTooltip: 'Istio sidecar container not found in Pod(s). Check if the istio-injection label/annotation is correctly set on the namespace/workload.',\n  tooltip: false,\n  icon: icons.istio.missingSidecar.icon,\n  color: icons.istio.missingSidecar.color\n};\nexport default MissingSidecar;","map":{"version":3,"sources":["/root/GraduateProject/src/components/MissingSidecar/MissingSidecar.tsx"],"names":["React","Tooltip","TooltipPosition","isIstioNamespace","icons","KialiIcon","style","infoStyle","margin","verticalAlign","MissingSidecar","props","text","textTooltip","icon","namespace","color","tooltip","otherProps","iconComponent","createElement","marginLeft","top","textAlign","right","Component","defaultProps","istio","missingSidecar"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,EAAkBC,eAAlB,QAAyC,wBAAzC;AAEA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,KAAT,QAAsB,WAAtB;AAYA,IAAMC,SAAS,GAAGD,KAAK,CAAC;AACtBE,EAAAA,MAAM,EAAE,iBADc;AAEtBC,EAAAA,aAAa,EAAE;AAFO,CAAD,CAAvB;;IAKMC,c;;;;;;;;;;;;;WAUJ,kBAAS;AACP,wBAAqF,KAAKC,KAA1F;AAAA,UAAQC,IAAR,eAAQA,IAAR;AAAA,UAAcC,WAAd,eAAcA,WAAd;AAAA,UAA2BC,IAA3B,eAA2BA,IAA3B;AAAA,UAAiCC,SAAjC,eAAiCA,SAAjC;AAAA,UAA4CC,KAA5C,eAA4CA,KAA5C;AAAA,UAAmDC,OAAnD,eAAmDA,OAAnD;AAAA,UAA4DX,KAA5D,eAA4DA,KAA5D;AAAA,UAAsEY,UAAtE;;AAEA,UAAMC,aAAa,gBACjB;AAAM,QAAA,KAAK,EAAEb;AAAb,SAAwBY,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGlB,KAAK,CAACoB,aAAN,CAAoBN,IAApB,EAA0B;AAAER,QAAAA,KAAK,EAAE;AAAEU,UAAAA,KAAK,EAAEA,KAAT;AAAgBP,UAAAA,aAAa,EAAE;AAA/B;AAAT,OAA1B,CADH,EAEG,CAACQ,OAAD,iBACC;AAAM,QAAA,KAAK,EAAE;AAAEI,UAAAA,UAAU,EAAE;AAAd,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGT,IADH,eAEE,oBAAC,OAAD;AACE,QAAA,GAAG,2BADL;AAEE,QAAA,QAAQ,EAAEV,eAAe,CAACoB,GAF5B;AAGE,QAAA,OAAO,eAAE;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoCV,WAApC,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,SAAS,EAAEN,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CAFF,CAHJ,CADF;;AAkBA,UAAIJ,gBAAgB,CAACY,SAAD,CAApB,EAAiC;AAC/B,4BAAO,yCAAP;AACD;;AAED,aAAOE,OAAO,gBACZ,oBAAC,OAAD;AAAS,QAAA,OAAO,eAAE;AAAK,UAAA,KAAK,EAAE;AAAEM,YAAAA,SAAS,EAAE;AAAb,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoCV,WAApC,CAAlB;AAA0E,QAAA,QAAQ,EAAEX,eAAe,CAACsB,KAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,aADH,CADY,GAKZA,aALF;AAOD;;;;EA1C0BnB,KAAK,CAACyB,S;;AAA7Bf,c,CACGgB,Y,GAAe;AACpBd,EAAAA,IAAI,EAAE,iBADc;AAEpBC,EAAAA,WAAW,EACT,wIAHkB;AAIpBI,EAAAA,OAAO,EAAE,KAJW;AAKpBH,EAAAA,IAAI,EAAEV,KAAK,CAACuB,KAAN,CAAYC,cAAZ,CAA2Bd,IALb;AAMpBE,EAAAA,KAAK,EAAEZ,KAAK,CAACuB,KAAN,CAAYC,cAAZ,CAA2BZ;AANd,C;AA4CxB,eAAeN,cAAf","sourcesContent":["import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { IconType } from '@patternfly/react-icons/dist/js/createIcon';\nimport { isIstioNamespace } from 'config/ServerConfig';\nimport { icons } from 'config';\nimport { KialiIcon } from '../../config/KialiIcon';\nimport { style } from 'typestyle';\n\ntype MissingSidecarProps = {\n  text: string;\n  textTooltip: string;\n  tooltip: boolean;\n  icon: IconType;\n  color: string;\n  namespace: string;\n  style?: React.CSSProperties;\n};\n\nconst infoStyle = style({\n  margin: '0px 5px 2px 4px',\n  verticalAlign: '-5px !important'\n});\n\nclass MissingSidecar extends React.Component<MissingSidecarProps, {}> {\n  static defaultProps = {\n    text: 'Missing Sidecar',\n    textTooltip:\n      'Istio sidecar container not found in Pod(s). Check if the istio-injection label/annotation is correctly set on the namespace/workload.',\n    tooltip: false,\n    icon: icons.istio.missingSidecar.icon,\n    color: icons.istio.missingSidecar.color\n  };\n\n  render() {\n    const { text, textTooltip, icon, namespace, color, tooltip, style, ...otherProps } = this.props;\n\n    const iconComponent = (\n      <span style={style} {...otherProps}>\n        {React.createElement(icon, { style: { color: color, verticalAlign: '-2px' } })}\n        {!tooltip && (\n          <span style={{ marginLeft: '8px' }}>\n            {text}\n            <Tooltip\n              key={`tooltip_missing_sidecar`}\n              position={TooltipPosition.top}\n              content={<div style={{ textAlign: 'left' }}>{textTooltip}</div>}\n            >\n              <KialiIcon.Info className={infoStyle} />\n            </Tooltip>\n          </span>\n        )}\n      </span>\n    );\n\n    if (isIstioNamespace(namespace)) {\n      return <></>;\n    }\n\n    return tooltip ? (\n      <Tooltip content={<div style={{ textAlign: 'left' }}>{textTooltip}</div>} position={TooltipPosition.right}>\n        {iconComponent}\n      </Tooltip>\n    ) : (\n      iconComponent\n    );\n  }\n}\n\nexport default MissingSidecar;\n"]},"metadata":{},"sourceType":"module"}