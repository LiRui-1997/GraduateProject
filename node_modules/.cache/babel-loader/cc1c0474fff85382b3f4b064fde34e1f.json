{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getInteractiveLegendItemStyles = exports.getInteractiveLegendEvents = void 0;\n\nvar _chart_area_Opacity = _interopRequireDefault(require(\"@patternfly/react-tokens/dist/js/chart_area_Opacity\"));\n\nvar _chart_color_black_ = _interopRequireDefault(require(\"@patternfly/react-tokens/dist/js/chart_color_black_500\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n} // Returns child names for each series, except given ID index\n\n\nvar getChildNames = function getChildNames(_ref) {\n  var chartNames = _ref.chartNames,\n      omitIndex = _ref.omitIndex;\n  var result = [];\n  chartNames.map(function (chartName, index) {\n    if (index !== omitIndex) {\n      if (Array.isArray(chartName)) {\n        chartName.forEach(function (name) {\n          return result.push(name);\n        });\n      } else {\n        result.push(chartName);\n      }\n    }\n  });\n  return result;\n}; // Returns events for an interactive legend\n\n\nvar getInteractiveLegendEvents = function getInteractiveLegendEvents(props) {\n  return [].concat(_toConsumableArray(getInteractiveLegendTargetEvents(_objectSpread({}, props, {\n    target: 'data'\n  }))), _toConsumableArray(getInteractiveLegendTargetEvents(_objectSpread({}, props, {\n    target: 'labels'\n  }))));\n}; // Returns legend items, except given ID index\n\n\nexports.getInteractiveLegendEvents = getInteractiveLegendEvents;\n\nvar getInteractiveLegendItems = function getInteractiveLegendItems(_ref2) {\n  var chartNames = _ref2.chartNames,\n      omitIndex = _ref2.omitIndex;\n  var result = [];\n  chartNames.map(function (_, index) {\n    if (index !== omitIndex) {\n      result.push(index);\n    }\n  });\n  return result;\n}; // Returns styles for interactive legend items\n\n\nvar getInteractiveLegendItemStyles = function getInteractiveLegendItemStyles() {\n  var hidden = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return !hidden ? {} : {\n    labels: {\n      fill: _chart_color_black_[\"default\"].value\n    },\n    symbol: {\n      fill: _chart_color_black_[\"default\"].value,\n      type: 'eyeSlash'\n    }\n  };\n}; // Returns targeted events for legend 'data' or 'labels'\n\n\nexports.getInteractiveLegendItemStyles = getInteractiveLegendItemStyles;\n\nvar getInteractiveLegendTargetEvents = function getInteractiveLegendTargetEvents(_ref3) {\n  var chartNames = _ref3.chartNames,\n      _ref3$isHidden = _ref3.isHidden,\n      isHidden = _ref3$isHidden === void 0 ? function () {\n    return false;\n  } : _ref3$isHidden,\n      legendName = _ref3.legendName,\n      _ref3$onLegendClick = _ref3.onLegendClick,\n      onLegendClick = _ref3$onLegendClick === void 0 ? function () {\n    return null;\n  } : _ref3$onLegendClick,\n      target = _ref3.target;\n\n  if (chartNames === undefined || legendName === undefined) {\n    // eslint-disable-next-line no-console\n    console.error('getInteractiveLegendTargetEvents:', 'requires chartNames and legendName to be specified');\n    return [];\n  }\n\n  return chartNames.map(function (_, index) {\n    // Get IDs to attach events to, except the IDs associated with this event.\n    //\n    // For example, if the current event key is 0, we need IDs associated with events 1 and 2. If the current event\n    // key is 1, we need IDs associated with events 0 and 2. And so on...\n    var childNames = getChildNames({\n      chartNames: chartNames,\n      legendName: legendName,\n      omitIndex: index\n    });\n    var legendItems = getInteractiveLegendItems({\n      chartNames: chartNames,\n      legendName: legendName,\n      omitIndex: index\n    });\n    return {\n      childName: legendName,\n      target: target,\n      eventKey: index,\n      eventHandlers: {\n        onClick: function onClick() {\n          return [{\n            // Hide each data series individually\n            target: 'data',\n            mutation: function mutation(props) {\n              onLegendClick(props);\n              return null;\n            }\n          }];\n        },\n        onMouseOver: function onMouseOver() {\n          return isHidden(index) ? null : [{\n            // Mute all data series, except the data associated with this event\n            childName: childNames,\n            target: 'data',\n            eventKey: 'all',\n            mutation: function mutation(props) {\n              return {\n                style: _objectSpread({}, props.style, {\n                  opacity: _chart_area_Opacity[\"default\"].value\n                })\n              };\n            }\n          }, {\n            // Mute all legend item symbols, except the symbol associated with this event\n            childName: 'legend',\n            target: 'data',\n            eventKey: legendItems,\n            mutation: function mutation(props) {\n              return isHidden(props.index) ? null : {\n                // Skip if hidden\n                style: _objectSpread({}, props.style, {\n                  opacity: _chart_area_Opacity[\"default\"].value\n                })\n              };\n            }\n          }, {\n            // Mute all legend item labels, except the label associated with this event\n            childName: 'legend',\n            target: 'labels',\n            eventKey: legendItems,\n            mutation: function mutation(props) {\n              var column = props.datum && props.datum.column ? props.datum.column : 0;\n              return isHidden(column) ? null : {\n                // Skip if hidden\n                style: _objectSpread({}, props.style, {\n                  opacity: _chart_area_Opacity[\"default\"].value\n                })\n              };\n            }\n          }];\n        },\n        onMouseOut: function onMouseOut() {\n          return [{\n            // Restore all data series associated with this event\n            childName: childNames,\n            target: 'data',\n            eventKey: 'all',\n            mutation: function mutation() {\n              return null;\n            }\n          }, {\n            // Restore all legend item symbols associated with this event\n            childName: 'legend',\n            target: 'data',\n            eventKey: legendItems,\n            mutation: function mutation() {\n              return null;\n            }\n          }, {\n            // Restore all legend item labels associated with this event\n            childName: 'legend',\n            target: 'labels',\n            eventKey: legendItems,\n            mutation: function mutation() {\n              return null;\n            }\n          }];\n        }\n      }\n    };\n  });\n};","map":{"version":3,"sources":["/root/kiali-ui/node_modules/@patternfly/react-charts/dist/js/components/ChartUtils/chart-interactive-legend.js"],"names":["Object","defineProperty","exports","value","getInteractiveLegendItemStyles","getInteractiveLegendEvents","_chart_area_Opacity","_interopRequireDefault","require","_chart_color_black_","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","prototype","toString","call","Array","from","isArray","arr2","getChildNames","_ref","chartNames","omitIndex","result","map","chartName","index","name","props","concat","getInteractiveLegendTargetEvents","getInteractiveLegendItems","_ref2","_","hidden","undefined","labels","fill","symbol","type","_ref3","_ref3$isHidden","isHidden","legendName","_ref3$onLegendClick","onLegendClick","console","error","childNames","legendItems","childName","eventKey","eventHandlers","onClick","mutation","onMouseOver","style","opacity","column","datum","onMouseOut"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getInteractiveLegendItemStyles = exports.getInteractiveLegendEvents = void 0;\n\nvar _chart_area_Opacity = _interopRequireDefault(require(\"@patternfly/react-tokens/dist/js/chart_area_Opacity\"));\n\nvar _chart_color_black_ = _interopRequireDefault(require(\"@patternfly/react-tokens/dist/js/chart_color_black_500\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n// Returns child names for each series, except given ID index\nvar getChildNames = function getChildNames(_ref) {\n  var chartNames = _ref.chartNames,\n      omitIndex = _ref.omitIndex;\n  var result = [];\n  chartNames.map(function (chartName, index) {\n    if (index !== omitIndex) {\n      if (Array.isArray(chartName)) {\n        chartName.forEach(function (name) {\n          return result.push(name);\n        });\n      } else {\n        result.push(chartName);\n      }\n    }\n  });\n  return result;\n}; // Returns events for an interactive legend\n\n\nvar getInteractiveLegendEvents = function getInteractiveLegendEvents(props) {\n  return [].concat(_toConsumableArray(getInteractiveLegendTargetEvents(_objectSpread({}, props, {\n    target: 'data'\n  }))), _toConsumableArray(getInteractiveLegendTargetEvents(_objectSpread({}, props, {\n    target: 'labels'\n  }))));\n}; // Returns legend items, except given ID index\n\n\nexports.getInteractiveLegendEvents = getInteractiveLegendEvents;\n\nvar getInteractiveLegendItems = function getInteractiveLegendItems(_ref2) {\n  var chartNames = _ref2.chartNames,\n      omitIndex = _ref2.omitIndex;\n  var result = [];\n  chartNames.map(function (_, index) {\n    if (index !== omitIndex) {\n      result.push(index);\n    }\n  });\n  return result;\n}; // Returns styles for interactive legend items\n\n\nvar getInteractiveLegendItemStyles = function getInteractiveLegendItemStyles() {\n  var hidden = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return !hidden ? {} : {\n    labels: {\n      fill: _chart_color_black_[\"default\"].value\n    },\n    symbol: {\n      fill: _chart_color_black_[\"default\"].value,\n      type: 'eyeSlash'\n    }\n  };\n}; // Returns targeted events for legend 'data' or 'labels'\n\n\nexports.getInteractiveLegendItemStyles = getInteractiveLegendItemStyles;\n\nvar getInteractiveLegendTargetEvents = function getInteractiveLegendTargetEvents(_ref3) {\n  var chartNames = _ref3.chartNames,\n      _ref3$isHidden = _ref3.isHidden,\n      isHidden = _ref3$isHidden === void 0 ? function () {\n    return false;\n  } : _ref3$isHidden,\n      legendName = _ref3.legendName,\n      _ref3$onLegendClick = _ref3.onLegendClick,\n      onLegendClick = _ref3$onLegendClick === void 0 ? function () {\n    return null;\n  } : _ref3$onLegendClick,\n      target = _ref3.target;\n\n  if (chartNames === undefined || legendName === undefined) {\n    // eslint-disable-next-line no-console\n    console.error('getInteractiveLegendTargetEvents:', 'requires chartNames and legendName to be specified');\n    return [];\n  }\n\n  return chartNames.map(function (_, index) {\n    // Get IDs to attach events to, except the IDs associated with this event.\n    //\n    // For example, if the current event key is 0, we need IDs associated with events 1 and 2. If the current event\n    // key is 1, we need IDs associated with events 0 and 2. And so on...\n    var childNames = getChildNames({\n      chartNames: chartNames,\n      legendName: legendName,\n      omitIndex: index\n    });\n    var legendItems = getInteractiveLegendItems({\n      chartNames: chartNames,\n      legendName: legendName,\n      omitIndex: index\n    });\n    return {\n      childName: legendName,\n      target: target,\n      eventKey: index,\n      eventHandlers: {\n        onClick: function onClick() {\n          return [{\n            // Hide each data series individually\n            target: 'data',\n            mutation: function mutation(props) {\n              onLegendClick(props);\n              return null;\n            }\n          }];\n        },\n        onMouseOver: function onMouseOver() {\n          return isHidden(index) ? null : [{\n            // Mute all data series, except the data associated with this event\n            childName: childNames,\n            target: 'data',\n            eventKey: 'all',\n            mutation: function mutation(props) {\n              return {\n                style: _objectSpread({}, props.style, {\n                  opacity: _chart_area_Opacity[\"default\"].value\n                })\n              };\n            }\n          }, {\n            // Mute all legend item symbols, except the symbol associated with this event\n            childName: 'legend',\n            target: 'data',\n            eventKey: legendItems,\n            mutation: function mutation(props) {\n              return isHidden(props.index) ? null : {\n                // Skip if hidden\n                style: _objectSpread({}, props.style, {\n                  opacity: _chart_area_Opacity[\"default\"].value\n                })\n              };\n            }\n          }, {\n            // Mute all legend item labels, except the label associated with this event\n            childName: 'legend',\n            target: 'labels',\n            eventKey: legendItems,\n            mutation: function mutation(props) {\n              var column = props.datum && props.datum.column ? props.datum.column : 0;\n              return isHidden(column) ? null : {\n                // Skip if hidden\n                style: _objectSpread({}, props.style, {\n                  opacity: _chart_area_Opacity[\"default\"].value\n                })\n              };\n            }\n          }];\n        },\n        onMouseOut: function onMouseOut() {\n          return [{\n            // Restore all data series associated with this event\n            childName: childNames,\n            target: 'data',\n            eventKey: 'all',\n            mutation: function mutation() {\n              return null;\n            }\n          }, {\n            // Restore all legend item symbols associated with this event\n            childName: 'legend',\n            target: 'data',\n            eventKey: legendItems,\n            mutation: function mutation() {\n              return null;\n            }\n          }, {\n            // Restore all legend item labels associated with this event\n            childName: 'legend',\n            target: 'labels',\n            eventKey: legendItems,\n            mutation: function mutation() {\n              return null;\n            }\n          }];\n        }\n      }\n    };\n  });\n};\n//# sourceMappingURL=chart-interactive-legend.js.map"]},"metadata":{},"sourceType":"script"}