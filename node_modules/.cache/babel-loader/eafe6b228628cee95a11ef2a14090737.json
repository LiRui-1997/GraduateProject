{"ast":null,"code":"import { FILTER_ACTION_APPEND, FilterTypes } from '../../../../types/Filters';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { getFilterSelectedValues } from '../../../../components/Filters/CommonFilters';\nexport var sortFields = [{\n  id: 'namespace',\n  title: 'Namespace',\n  isNumeric: false,\n  param: 'ns',\n  compare: function compare(a, b) {\n    var sortValue = a.namespace.localeCompare(b.namespace);\n\n    if (sortValue === 0) {\n      sortValue = a.name.localeCompare(b.name);\n    }\n\n    return sortValue;\n  }\n}, {\n  id: 'name',\n  title: '名称',\n  isNumeric: false,\n  param: 'wn',\n  compare: function compare(a, b) {\n    return a.name.localeCompare(b.name);\n  }\n}, {\n  id: 'phase',\n  title: '阶段',\n  isNumeric: false,\n  param: 'is',\n  compare: function compare(a, b) {\n    return a.name.localeCompare(b.name);\n  }\n}, {\n  id: 'baseline',\n  title: '基准服务',\n  isNumeric: false,\n  param: 'is',\n  compare: function compare(a, b) {\n    return a.name.localeCompare(b.name);\n  }\n}, {\n  id: 'candidate',\n  title: '候选服务',\n  isNumeric: false,\n  param: 'is',\n  compare: function compare(a, b) {\n    return a.name.localeCompare(b.name);\n  }\n}];\n\nvar filterByTargetService = function filterByTargetService(items, names) {\n  return items.filter(function (item) {\n    var targetServiceFiltered = true;\n\n    if (names.length > 0) {\n      targetServiceFiltered = false;\n\n      for (var i = 0; i < names.length; i++) {\n        if (item.targetService.includes(names[i])) {\n          targetServiceFiltered = true;\n          break;\n        }\n      }\n    }\n\n    return targetServiceFiltered;\n  });\n};\n\nvar filterByBaseline = function filterByBaseline(items, names) {\n  return items.filter(function (item) {\n    var baselineFiltered = true;\n\n    if (names.length > 0) {\n      baselineFiltered = false;\n\n      for (var i = 0; i < names.length; i++) {\n        if (item.baseline.name.includes(names[i])) {\n          baselineFiltered = true;\n          break;\n        }\n      }\n    }\n\n    return baselineFiltered;\n  });\n};\n\nvar filterByPhase = function filterByPhase(items, names) {\n  return items.filter(function (item) {\n    var phaseFiltered = true;\n\n    if (names.length > 0) {\n      phaseFiltered = false;\n\n      for (var i = 0; i < names.length; i++) {\n        if (item.phase.includes(names[i])) {\n          phaseFiltered = true;\n          break;\n        }\n      }\n    }\n\n    return phaseFiltered;\n  });\n};\n\nexport var filterBy = function filterBy(iter8Experiment, filters) {\n  var ret = iter8Experiment;\n  var targetServiceSelected = getFilterSelectedValues(targetServiceFilter, filters);\n\n  if (targetServiceSelected.length > 0) {\n    ret = filterByTargetService(ret, targetServiceSelected);\n  }\n\n  var baselineSelected = getFilterSelectedValues(baselineFilter, filters);\n\n  if (baselineSelected.length > 0) {\n    ret = filterByBaseline(ret, baselineSelected);\n  }\n\n  var phaseSelected = getFilterSelectedValues(phaseFilter, filters);\n\n  if (phaseSelected.length > 0) {\n    return filterByPhase(ret, phaseSelected);\n  }\n\n  return ret;\n};\nvar targetServiceFilter = {\n  id: 'targetService',\n  title: '目标服务',\n  placeholder: 'Filter by Service Name',\n  filterType: TextInputTypes.text,\n  action: FILTER_ACTION_APPEND,\n  filterValues: []\n};\nvar baselineFilter = {\n  id: 'baselin',\n  title: '基准服务',\n  placeholder: 'Filter by Baseline Name',\n  filterType: TextInputTypes.text,\n  action: FILTER_ACTION_APPEND,\n  filterValues: []\n};\nvar candidateFilter = {\n  id: 'candidate',\n  title: '候选服务',\n  placeholder: 'Filter by Candidate Name',\n  filterType: TextInputTypes.text,\n  action: FILTER_ACTION_APPEND,\n  filterValues: []\n};\nexport var phaseFilter = {\n  id: 'phase',\n  title: '阶段',\n  placeholder: 'Filter by Phase',\n  filterType: FilterTypes.select,\n  action: FILTER_ACTION_APPEND,\n  filterValues: [{\n    id: 'Initializing',\n    title: '初始化'\n  }, {\n    id: 'Progressing',\n    title: '进行中'\n  }, {\n    id: 'Pause',\n    title: '暂停'\n  }, {\n    id: 'Completed',\n    title: '完成'\n  }]\n};\nexport var availableFilters = [targetServiceFilter, baselineFilter, candidateFilter, phaseFilter];\n/** Sort Method */\n\nexport var sortAppsItems = function sortAppsItems(unsorted, sortField, isAscending) {\n  var sorted = unsorted.sort(isAscending ? sortField.compare : function (a, b) {\n    return sortField.compare(b, a);\n  });\n  return Promise.resolve(sorted);\n};","map":{"version":3,"sources":["/root/kiali-ui/src/pages/extensions/iter8/Iter8ExperimentList/FiltersAndSorts.ts"],"names":["FILTER_ACTION_APPEND","FilterTypes","TextInputTypes","getFilterSelectedValues","sortFields","id","title","isNumeric","param","compare","a","b","sortValue","namespace","localeCompare","name","filterByTargetService","items","names","filter","item","targetServiceFiltered","length","i","targetService","includes","filterByBaseline","baselineFiltered","baseline","filterByPhase","phaseFiltered","phase","filterBy","iter8Experiment","filters","ret","targetServiceSelected","targetServiceFilter","baselineSelected","baselineFilter","phaseSelected","phaseFilter","placeholder","filterType","text","action","filterValues","candidateFilter","select","availableFilters","sortAppsItems","unsorted","sortField","isAscending","sorted","sort","Promise","resolve"],"mappings":"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","sourcesContent":["import { ActiveFiltersInfo, FILTER_ACTION_APPEND, FilterType, FilterTypes } from '../../../../types/Filters';\nimport { SortField } from '../../../../types/SortFilters';\nimport { Iter8Experiment } from '../../../../types/Iter8';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { getFilterSelectedValues } from '../../../../components/Filters/CommonFilters';\n\nexport const sortFields: SortField<Iter8Experiment>[] = [\n  {\n    id: 'namespace',\n    title: 'Namespace',\n    isNumeric: false,\n    param: 'ns',\n    compare: (a, b) => {\n      let sortValue = a.namespace.localeCompare(b.namespace);\n      if (sortValue === 0) {\n        sortValue = a.name.localeCompare(b.name);\n      }\n      return sortValue;\n    }\n  },\n  {\n    id: 'name',\n    title: '名称',\n    isNumeric: false,\n    param: 'wn',\n    compare: (a, b) => a.name.localeCompare(b.name)\n  },\n  {\n    id: 'phase',\n    title: '阶段',\n    isNumeric: false,\n    param: 'is',\n    compare: (a, b) => a.name.localeCompare(b.name)\n  },\n  {\n    id: 'baseline',\n    title: '基准服务',\n    isNumeric: false,\n    param: 'is',\n    compare: (a, b) => a.name.localeCompare(b.name)\n  },\n  {\n    id: 'candidate',\n    title: '候选服务',\n    isNumeric: false,\n    param: 'is',\n    compare: (a, b) => a.name.localeCompare(b.name)\n  }\n];\n\nconst filterByTargetService = (items: Iter8Experiment[], names: string[]): Iter8Experiment[] => {\n  return items.filter(item => {\n    let targetServiceFiltered = true;\n    if (names.length > 0) {\n      targetServiceFiltered = false;\n      for (let i = 0; i < names.length; i++) {\n        if (item.targetService.includes(names[i])) {\n          targetServiceFiltered = true;\n          break;\n        }\n      }\n    }\n    return targetServiceFiltered;\n  });\n};\n\nconst filterByBaseline = (items: Iter8Experiment[], names: string[]): Iter8Experiment[] => {\n  return items.filter(item => {\n    let baselineFiltered = true;\n    if (names.length > 0) {\n      baselineFiltered = false;\n      for (let i = 0; i < names.length; i++) {\n        if (item.baseline.name.includes(names[i])) {\n          baselineFiltered = true;\n          break;\n        }\n      }\n    }\n    return baselineFiltered;\n  });\n};\n\nconst filterByPhase = (items: Iter8Experiment[], names: string[]): Iter8Experiment[] => {\n  return items.filter(item => {\n    let phaseFiltered = true;\n    if (names.length > 0) {\n      phaseFiltered = false;\n      for (let i = 0; i < names.length; i++) {\n        if (item.phase.includes(names[i])) {\n          phaseFiltered = true;\n          break;\n        }\n      }\n    }\n    return phaseFiltered;\n  });\n};\n\nexport const filterBy = (iter8Experiment: Iter8Experiment[], filters: ActiveFiltersInfo): Iter8Experiment[] => {\n  let ret = iter8Experiment;\n\n  const targetServiceSelected = getFilterSelectedValues(targetServiceFilter, filters);\n  if (targetServiceSelected.length > 0) {\n    ret = filterByTargetService(ret, targetServiceSelected);\n  }\n\n  const baselineSelected = getFilterSelectedValues(baselineFilter, filters);\n  if (baselineSelected.length > 0) {\n    ret = filterByBaseline(ret, baselineSelected);\n  }\n\n  const phaseSelected = getFilterSelectedValues(phaseFilter, filters);\n  if (phaseSelected.length > 0) {\n    return filterByPhase(ret, phaseSelected);\n  }\n  return ret;\n};\n\nconst targetServiceFilter: FilterType = {\n  id: 'targetService',\n  title: '目标服务',\n  placeholder: 'Filter by Service Name',\n  filterType: TextInputTypes.text,\n  action: FILTER_ACTION_APPEND,\n  filterValues: []\n};\n\nconst baselineFilter: FilterType = {\n  id: 'baselin',\n  title: '基准服务',\n  placeholder: 'Filter by Baseline Name',\n  filterType: TextInputTypes.text,\n  action: FILTER_ACTION_APPEND,\n  filterValues: []\n};\nconst candidateFilter: FilterType = {\n  id: 'candidate',\n  title: '候选服务',\n  placeholder: 'Filter by Candidate Name',\n  filterType: TextInputTypes.text,\n  action: FILTER_ACTION_APPEND,\n  filterValues: []\n};\n\nexport const phaseFilter: FilterType = {\n  id: 'phase',\n  title: '阶段',\n  placeholder: 'Filter by Phase',\n  filterType: FilterTypes.select,\n  action: FILTER_ACTION_APPEND,\n  filterValues: [\n    {\n      id: 'Initializing',\n      title: '初始化'\n    },\n    {\n      id: 'Progressing',\n      title: '进行中'\n    },\n    {\n      id: 'Pause',\n      title: '暂停'\n    },\n    {\n      id: 'Completed',\n      title: '完成'\n    }\n  ]\n};\nexport const availableFilters: FilterType[] = [targetServiceFilter, baselineFilter, candidateFilter, phaseFilter];\n\n/** Sort Method */\n\nexport const sortAppsItems = (\n  unsorted: Iter8Experiment[],\n  sortField: SortField<Iter8Experiment>,\n  isAscending: boolean\n): Promise<Iter8Experiment[]> => {\n  const sorted = unsorted.sort(isAscending ? sortField.compare : (a, b) => sortField.compare(b, a));\n  return Promise.resolve(sorted);\n};\n"]},"metadata":{},"sourceType":"module"}