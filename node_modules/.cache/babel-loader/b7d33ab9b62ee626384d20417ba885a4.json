{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.capitalize = capitalize;\nexports.getUniqueId = getUniqueId;\nexports.debounce = debounce;\nexports.isElementInView = isElementInView;\nexports.sideElementIsOutOfView = sideElementIsOutOfView;\nexports.fillTemplate = fillTemplate;\nexports.keyHandler = keyHandler;\nexports.getNextIndex = getNextIndex;\nexports.pluralize = pluralize;\nexports.canUseDOM = exports.formatBreakpointMods = void 0;\n\nvar ReactDOM = _interopRequireWildcard(require(\"react-dom\"));\n\nvar _constants = require(\"./constants\");\n\nvar _reactStyles = require(\"@patternfly/react-styles\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n\n  if (obj != null) {\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n/**\n * @param {string} input - String to capitalize\n */\n\n\nfunction capitalize(input) {\n  return input[0].toUpperCase() + input.substring(1);\n}\n/**\n * @param {string} prefix - String to prefix ID with\n */\n\n\nfunction getUniqueId() {\n  var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'pf';\n  var uid = new Date().getTime() + Math.random().toString(36).slice(2);\n  return \"\".concat(prefix, \"-\").concat(uid);\n}\n/**\n * @param { any } this - \"This\" reference\n * @param { Function } func - Function to debounce\n * @param { number } wait - Debounce amount\n */\n\n\nfunction debounce(func, wait) {\n  var _this = this;\n\n  var timeout;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      return func.apply(_this, args);\n    }, wait);\n  };\n}\n/** This function returns whether or not an element is within the viewable area of a container. If partial is true,\n * then this function will return true even if only part of the element is in view.\n *\n * @param {HTMLElement} container  The container to check if the element is in view of.\n * @param {HTMLElement} element    The element to check if it is view\n * @param {boolean} partial   true if partial view is allowed\n *\n * @returns { boolean } True if the component is in View.\n */\n\n\nfunction isElementInView(container, element, partial) {\n  var containerBounds = container.getBoundingClientRect();\n  var elementBounds = element.getBoundingClientRect();\n  var containerBoundsLeft = Math.floor(containerBounds.left);\n  var containerBoundsRight = Math.floor(containerBounds.right);\n  var elementBoundsLeft = Math.floor(elementBounds.left);\n  var elementBoundsRight = Math.floor(elementBounds.right); // Check if in view\n\n  var isTotallyInView = elementBoundsLeft >= containerBoundsLeft && elementBoundsRight <= containerBoundsRight;\n  var isPartiallyInView = partial && (elementBoundsLeft < containerBoundsLeft && elementBoundsRight > containerBoundsLeft || elementBoundsRight > containerBoundsRight && elementBoundsLeft < containerBoundsRight); // Return outcome\n\n  return isTotallyInView || isPartiallyInView;\n}\n/** This function returns the side the element is out of view on (right, left or both)\n *\n * @param {HTMLElement} container    The container to check if the element is in view of.\n * @param {HTMLElement} element      The element to check if it is view\n *\n * @returns {string} right if the element is of the right, left if element is off the left or both if it is off on both sides.\n */\n\n\nfunction sideElementIsOutOfView(container, element) {\n  var containerBounds = container.getBoundingClientRect();\n  var elementBounds = element.getBoundingClientRect();\n  var containerBoundsLeft = Math.floor(containerBounds.left);\n  var containerBoundsRight = Math.floor(containerBounds.right);\n  var elementBoundsLeft = Math.floor(elementBounds.left);\n  var elementBoundsRight = Math.floor(elementBounds.right); // Check if in view\n\n  var isOffLeft = elementBoundsLeft < containerBoundsLeft;\n  var isOffRight = elementBoundsRight > containerBoundsRight;\n  var side = _constants.SIDE.NONE;\n\n  if (isOffRight && isOffLeft) {\n    side = _constants.SIDE.BOTH;\n  } else if (isOffRight) {\n    side = _constants.SIDE.RIGHT;\n  } else if (isOffLeft) {\n    side = _constants.SIDE.LEFT;\n  } // Return outcome\n\n\n  return side;\n}\n/** Interpolates a parameterized templateString using values from a templateVars object.\n * The templateVars object should have keys and values which match the templateString's parameters.\n * Example:\n *    const templateString: 'My name is ${firstName} ${lastName}';\n *    const templateVars: {\n *      firstName: 'Jon'\n *      lastName: 'Dough'\n *    };\n *    const result = fillTemplate(templateString, templateVars);\n *    // \"My name is Jon Dough\"\n *\n * @param {string} templateString  The string passed by the consumer\n * @param {object} templateVars The variables passed to the string\n *\n * @returns {string} The template string literal result\n */\n\n\nfunction fillTemplate(templateString, templateVars) {\n  return templateString.replace(/\\${(.*?)}/g, function (_, match) {\n    return templateVars[match] || '';\n  });\n}\n/**\n * This function allows for keyboard navigation through dropdowns. The custom argument is optional.\n *\n * @param {number} index The index of the element you're on\n * @param {number} innerIndex Inner index number\n * @param {string} position The orientation of the dropdown\n * @param {string[]} refsCollection Array of refs to the items in the dropdown\n * @param {object[]} kids Array of items in the dropdown\n * @param {boolean} [custom] Allows for handling of flexible content\n */\n\n\nfunction keyHandler(index, innerIndex, position, refsCollection, kids) {\n  var custom = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n\n  if (!Array.isArray(kids)) {\n    return;\n  }\n\n  var isMultiDimensional = refsCollection.filter(function (ref) {\n    return ref;\n  })[0].constructor === Array;\n  var nextIndex = index;\n  var nextInnerIndex = innerIndex;\n\n  if (position === 'up') {\n    if (index === 0) {\n      // loop back to end\n      nextIndex = kids.length - 1;\n    } else {\n      nextIndex = index - 1;\n    }\n  } else if (position === 'down') {\n    if (index === kids.length - 1) {\n      // loop back to beginning\n      nextIndex = 0;\n    } else {\n      nextIndex = index + 1;\n    }\n  } else if (position === 'left') {\n    if (innerIndex === 0) {\n      nextInnerIndex = refsCollection[index].length - 1;\n    } else {\n      nextInnerIndex = innerIndex - 1;\n    }\n  } else if (position === 'right') {\n    if (innerIndex === refsCollection[index].length - 1) {\n      nextInnerIndex = 0;\n    } else {\n      nextInnerIndex = innerIndex + 1;\n    }\n  }\n\n  if (refsCollection[nextIndex] === null || refsCollection[nextIndex] === undefined || isMultiDimensional && (refsCollection[nextIndex][nextInnerIndex] === null || refsCollection[nextIndex][nextInnerIndex] === undefined)) {\n    keyHandler(nextIndex, nextInnerIndex, position, refsCollection, kids, custom);\n  } else if (custom) {\n    if (refsCollection[nextIndex].focus) {\n      refsCollection[nextIndex].focus();\n    } // eslint-disable-next-line react/no-find-dom-node\n\n\n    var element = ReactDOM.findDOMNode(refsCollection[nextIndex]);\n    element.focus();\n  } else {\n    if (isMultiDimensional) {\n      refsCollection[nextIndex][nextInnerIndex].focus();\n    } else {\n      refsCollection[nextIndex].focus();\n    }\n  }\n}\n/** This function is a helper for keyboard navigation through dropdowns.\n *\n * @param {number} index The index of the element you're on\n * @param {string} position The orientation of the dropdown\n * @param {string[]} collection Array of refs to the items in the dropdown\n */\n\n\nfunction getNextIndex(index, position, collection) {\n  var nextIndex;\n\n  if (position === 'up') {\n    if (index === 0) {\n      // loop back to end\n      nextIndex = collection.length - 1;\n    } else {\n      nextIndex = index - 1;\n    }\n  } else if (index === collection.length - 1) {\n    // loop back to beginning\n    nextIndex = 0;\n  } else {\n    nextIndex = index + 1;\n  }\n\n  if (collection[nextIndex] === null) {\n    getNextIndex(nextIndex, position, collection);\n  } else {\n    return nextIndex;\n  }\n}\n/** This function is a helper for pluralizing strings.\n *\n * @param {number} i The quantity of the string you want to pluralize\n * @param {string} singular The singular version of the string\n * @param {string} plural The change to the string that should occur if the quantity is not equal to 1.\n *                 Defaults to adding an 's'.\n */\n\n\nfunction pluralize(i, singular, plural) {\n  if (!plural) {\n    plural = \"\".concat(singular, \"s\");\n  }\n\n  return \"\".concat(i || 0, \" \").concat(i === 1 ? singular : plural);\n}\n/** This function is a helper for turning arrays of breakpointMod objects for data toolbar and flex into classes\n *\n * @param {(DataToolbarBreakpointMod | FlexBreakpointMod | FlexItemBreakpointMod)[]} breakpointMods The modifiers object\n * @param {any} styles The appropriate styles object for the component\n */\n\n\nvar formatBreakpointMods = function formatBreakpointMods(breakpointMods, styles) {\n  return breakpointMods.reduce(function (acc, curr) {\n    return \"\".concat(acc).concat(acc && ' ').concat((0, _reactStyles.getModifier)(styles, \"\".concat(curr.modifier).concat(curr.breakpoint ? \"-on-\".concat(curr.breakpoint) : '')));\n  }, '');\n};\n\nexports.formatBreakpointMods = formatBreakpointMods;\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexports.canUseDOM = canUseDOM;","map":{"version":3,"sources":["/root/GraduateProject/node_modules/@patternfly/react-core/dist/js/helpers/util.js"],"names":["Object","defineProperty","exports","value","capitalize","getUniqueId","debounce","isElementInView","sideElementIsOutOfView","fillTemplate","keyHandler","getNextIndex","pluralize","canUseDOM","formatBreakpointMods","ReactDOM","_interopRequireWildcard","require","_constants","_reactStyles","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","input","toUpperCase","substring","prefix","arguments","length","undefined","uid","Date","getTime","Math","random","toString","slice","concat","func","wait","_this","timeout","_len","args","Array","_key","clearTimeout","setTimeout","apply","container","element","partial","containerBounds","getBoundingClientRect","elementBounds","containerBoundsLeft","floor","left","containerBoundsRight","right","elementBoundsLeft","elementBoundsRight","isTotallyInView","isPartiallyInView","isOffLeft","isOffRight","side","SIDE","NONE","BOTH","RIGHT","LEFT","templateString","templateVars","replace","_","match","index","innerIndex","position","refsCollection","kids","custom","isArray","isMultiDimensional","filter","ref","constructor","nextIndex","nextInnerIndex","focus","findDOMNode","collection","i","singular","plural","breakpointMods","styles","reduce","acc","curr","getModifier","modifier","breakpoint","window","document","createElement"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.capitalize = capitalize;\nexports.getUniqueId = getUniqueId;\nexports.debounce = debounce;\nexports.isElementInView = isElementInView;\nexports.sideElementIsOutOfView = sideElementIsOutOfView;\nexports.fillTemplate = fillTemplate;\nexports.keyHandler = keyHandler;\nexports.getNextIndex = getNextIndex;\nexports.pluralize = pluralize;\nexports.canUseDOM = exports.formatBreakpointMods = void 0;\n\nvar ReactDOM = _interopRequireWildcard(require(\"react-dom\"));\n\nvar _constants = require(\"./constants\");\n\nvar _reactStyles = require(\"@patternfly/react-styles\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * @param {string} input - String to capitalize\n */\nfunction capitalize(input) {\n  return input[0].toUpperCase() + input.substring(1);\n}\n/**\n * @param {string} prefix - String to prefix ID with\n */\n\n\nfunction getUniqueId() {\n  var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'pf';\n  var uid = new Date().getTime() + Math.random().toString(36).slice(2);\n  return \"\".concat(prefix, \"-\").concat(uid);\n}\n/**\n * @param { any } this - \"This\" reference\n * @param { Function } func - Function to debounce\n * @param { number } wait - Debounce amount\n */\n\n\nfunction debounce(func, wait) {\n  var _this = this;\n\n  var timeout;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      return func.apply(_this, args);\n    }, wait);\n  };\n}\n/** This function returns whether or not an element is within the viewable area of a container. If partial is true,\n * then this function will return true even if only part of the element is in view.\n *\n * @param {HTMLElement} container  The container to check if the element is in view of.\n * @param {HTMLElement} element    The element to check if it is view\n * @param {boolean} partial   true if partial view is allowed\n *\n * @returns { boolean } True if the component is in View.\n */\n\n\nfunction isElementInView(container, element, partial) {\n  var containerBounds = container.getBoundingClientRect();\n  var elementBounds = element.getBoundingClientRect();\n  var containerBoundsLeft = Math.floor(containerBounds.left);\n  var containerBoundsRight = Math.floor(containerBounds.right);\n  var elementBoundsLeft = Math.floor(elementBounds.left);\n  var elementBoundsRight = Math.floor(elementBounds.right); // Check if in view\n\n  var isTotallyInView = elementBoundsLeft >= containerBoundsLeft && elementBoundsRight <= containerBoundsRight;\n  var isPartiallyInView = partial && (elementBoundsLeft < containerBoundsLeft && elementBoundsRight > containerBoundsLeft || elementBoundsRight > containerBoundsRight && elementBoundsLeft < containerBoundsRight); // Return outcome\n\n  return isTotallyInView || isPartiallyInView;\n}\n/** This function returns the side the element is out of view on (right, left or both)\n *\n * @param {HTMLElement} container    The container to check if the element is in view of.\n * @param {HTMLElement} element      The element to check if it is view\n *\n * @returns {string} right if the element is of the right, left if element is off the left or both if it is off on both sides.\n */\n\n\nfunction sideElementIsOutOfView(container, element) {\n  var containerBounds = container.getBoundingClientRect();\n  var elementBounds = element.getBoundingClientRect();\n  var containerBoundsLeft = Math.floor(containerBounds.left);\n  var containerBoundsRight = Math.floor(containerBounds.right);\n  var elementBoundsLeft = Math.floor(elementBounds.left);\n  var elementBoundsRight = Math.floor(elementBounds.right); // Check if in view\n\n  var isOffLeft = elementBoundsLeft < containerBoundsLeft;\n  var isOffRight = elementBoundsRight > containerBoundsRight;\n  var side = _constants.SIDE.NONE;\n\n  if (isOffRight && isOffLeft) {\n    side = _constants.SIDE.BOTH;\n  } else if (isOffRight) {\n    side = _constants.SIDE.RIGHT;\n  } else if (isOffLeft) {\n    side = _constants.SIDE.LEFT;\n  } // Return outcome\n\n\n  return side;\n}\n/** Interpolates a parameterized templateString using values from a templateVars object.\n * The templateVars object should have keys and values which match the templateString's parameters.\n * Example:\n *    const templateString: 'My name is ${firstName} ${lastName}';\n *    const templateVars: {\n *      firstName: 'Jon'\n *      lastName: 'Dough'\n *    };\n *    const result = fillTemplate(templateString, templateVars);\n *    // \"My name is Jon Dough\"\n *\n * @param {string} templateString  The string passed by the consumer\n * @param {object} templateVars The variables passed to the string\n *\n * @returns {string} The template string literal result\n */\n\n\nfunction fillTemplate(templateString, templateVars) {\n  return templateString.replace(/\\${(.*?)}/g, function (_, match) {\n    return templateVars[match] || '';\n  });\n}\n/**\n * This function allows for keyboard navigation through dropdowns. The custom argument is optional.\n *\n * @param {number} index The index of the element you're on\n * @param {number} innerIndex Inner index number\n * @param {string} position The orientation of the dropdown\n * @param {string[]} refsCollection Array of refs to the items in the dropdown\n * @param {object[]} kids Array of items in the dropdown\n * @param {boolean} [custom] Allows for handling of flexible content\n */\n\n\nfunction keyHandler(index, innerIndex, position, refsCollection, kids) {\n  var custom = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n\n  if (!Array.isArray(kids)) {\n    return;\n  }\n\n  var isMultiDimensional = refsCollection.filter(function (ref) {\n    return ref;\n  })[0].constructor === Array;\n  var nextIndex = index;\n  var nextInnerIndex = innerIndex;\n\n  if (position === 'up') {\n    if (index === 0) {\n      // loop back to end\n      nextIndex = kids.length - 1;\n    } else {\n      nextIndex = index - 1;\n    }\n  } else if (position === 'down') {\n    if (index === kids.length - 1) {\n      // loop back to beginning\n      nextIndex = 0;\n    } else {\n      nextIndex = index + 1;\n    }\n  } else if (position === 'left') {\n    if (innerIndex === 0) {\n      nextInnerIndex = refsCollection[index].length - 1;\n    } else {\n      nextInnerIndex = innerIndex - 1;\n    }\n  } else if (position === 'right') {\n    if (innerIndex === refsCollection[index].length - 1) {\n      nextInnerIndex = 0;\n    } else {\n      nextInnerIndex = innerIndex + 1;\n    }\n  }\n\n  if (refsCollection[nextIndex] === null || refsCollection[nextIndex] === undefined || isMultiDimensional && (refsCollection[nextIndex][nextInnerIndex] === null || refsCollection[nextIndex][nextInnerIndex] === undefined)) {\n    keyHandler(nextIndex, nextInnerIndex, position, refsCollection, kids, custom);\n  } else if (custom) {\n    if (refsCollection[nextIndex].focus) {\n      refsCollection[nextIndex].focus();\n    } // eslint-disable-next-line react/no-find-dom-node\n\n\n    var element = ReactDOM.findDOMNode(refsCollection[nextIndex]);\n    element.focus();\n  } else {\n    if (isMultiDimensional) {\n      refsCollection[nextIndex][nextInnerIndex].focus();\n    } else {\n      refsCollection[nextIndex].focus();\n    }\n  }\n}\n/** This function is a helper for keyboard navigation through dropdowns.\n *\n * @param {number} index The index of the element you're on\n * @param {string} position The orientation of the dropdown\n * @param {string[]} collection Array of refs to the items in the dropdown\n */\n\n\nfunction getNextIndex(index, position, collection) {\n  var nextIndex;\n\n  if (position === 'up') {\n    if (index === 0) {\n      // loop back to end\n      nextIndex = collection.length - 1;\n    } else {\n      nextIndex = index - 1;\n    }\n  } else if (index === collection.length - 1) {\n    // loop back to beginning\n    nextIndex = 0;\n  } else {\n    nextIndex = index + 1;\n  }\n\n  if (collection[nextIndex] === null) {\n    getNextIndex(nextIndex, position, collection);\n  } else {\n    return nextIndex;\n  }\n}\n/** This function is a helper for pluralizing strings.\n *\n * @param {number} i The quantity of the string you want to pluralize\n * @param {string} singular The singular version of the string\n * @param {string} plural The change to the string that should occur if the quantity is not equal to 1.\n *                 Defaults to adding an 's'.\n */\n\n\nfunction pluralize(i, singular, plural) {\n  if (!plural) {\n    plural = \"\".concat(singular, \"s\");\n  }\n\n  return \"\".concat(i || 0, \" \").concat(i === 1 ? singular : plural);\n}\n/** This function is a helper for turning arrays of breakpointMod objects for data toolbar and flex into classes\n *\n * @param {(DataToolbarBreakpointMod | FlexBreakpointMod | FlexItemBreakpointMod)[]} breakpointMods The modifiers object\n * @param {any} styles The appropriate styles object for the component\n */\n\n\nvar formatBreakpointMods = function formatBreakpointMods(breakpointMods, styles) {\n  return breakpointMods.reduce(function (acc, curr) {\n    return \"\".concat(acc).concat(acc && ' ').concat((0, _reactStyles.getModifier)(styles, \"\".concat(curr.modifier).concat(curr.breakpoint ? \"-on-\".concat(curr.breakpoint) : '')));\n  }, '');\n};\n\nexports.formatBreakpointMods = formatBreakpointMods;\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexports.canUseDOM = canUseDOM;\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"script"}