{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/root/kiali-ui/src/helpers/EnvoyHelpers.tsx\";\n\nimport * as React from 'react';\nimport IstioObjectLink from '../components/Link/IstioObjectLink';\nimport { Paths } from '../config';\nimport { Link } from 'react-router-dom';\nimport { FilterSelected } from '../components/Filters/StatefulFilters';\nexport var istioConfigLink = function istioConfigLink(halfQDN, objectType) {\n  var nameParts = halfQDN.split('.');\n\n  if (nameParts.length === 2) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IstioObjectLink, {\n      name: nameParts[0],\n      namespace: nameParts[1],\n      type: objectType,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, halfQDN));\n  }\n\n  return halfQDN;\n};\nexport var routeLink = function routeLink(route, namespace, workload, handler) {\n  var re = /Route: ([a-z-.:\\d]*)/;\n\n  if (workload !== undefined) {\n    var result = route.match(re);\n\n    if (result && result[1]) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        onClick: handler,\n        to: \"/namespaces/\".concat(namespace, \"/workloads/\").concat(workload, \"?tab=envoy&name=\").concat(result[1]),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, route));\n    }\n  }\n\n  return route;\n};\nexport var serviceLink = function serviceLink(host, namespaces, podNamespace) {\n  var simpleSvc = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var to = '/namespaces/';\n  var linkText = host.service;\n  var showLink = false;\n  var hasSimpleServiceForm = host.service.split('.').length === 1 && host.service !== '*'; // Show link if simple service names are allowed,\n  // and the service is no * and has no domains,subdomains\n\n  if (host.service && !host.namespace && simpleSvc && hasSimpleServiceForm) {\n    to += podNamespace + '/' + Paths.SERVICES + '/' + host.service;\n    showLink = true;\n  } else if (host.service && host.namespace && namespaces) {\n    to += host.namespace + '/' + Paths.SERVICES + '/' + host.service;\n    linkText += '.' + host.namespace;\n\n    if (host.cluster) {\n      linkText += '.' + host.cluster;\n    } // Show link if the namespace matches to one in the list of available namespaces\n\n\n    showLink = namespaces.findIndex(function (namespace) {\n      return namespace.name === host.namespace;\n    }) >= 0;\n  }\n\n  if (showLink) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: to,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, linkText));\n  } else {\n    return linkText;\n  }\n};\nexport var defaultFilter = function defaultFilter(value, filterMethods) {\n  var activeFilters = FilterSelected.getSelected(); // If there is no active filters, show the entry\n\n  if (activeFilters.filters.length === 0) {\n    return true;\n  } // Group filters by id\n\n\n  var groupedFilters = activeFilters.filters.reduce(function (groupedFilters, filter) {\n    var filterGroup = groupedFilters[filter.id];\n\n    if (!filterGroup) {\n      filterGroup = [];\n    }\n\n    groupedFilters[filter.id] = filterGroup.concat(filter);\n    return groupedFilters;\n  }, []); // Show entities that has a match in each filter group\n\n  return Object.keys(groupedFilters).reduce(function (prevMatch, filterId) {\n    // There is at least one filter matching the item in the group\n    return prevMatch && groupedFilters[filterId].some(function (filter) {\n      return filterMethods[filter.id](value, filter);\n    });\n  }, true);\n};","map":{"version":3,"sources":["/root/kiali-ui/src/helpers/EnvoyHelpers.tsx"],"names":["React","IstioObjectLink","Paths","Link","FilterSelected","istioConfigLink","halfQDN","objectType","nameParts","split","length","routeLink","route","namespace","workload","handler","re","undefined","result","match","serviceLink","host","namespaces","podNamespace","simpleSvc","to","linkText","service","showLink","hasSimpleServiceForm","SERVICES","cluster","findIndex","name","defaultFilter","value","filterMethods","activeFilters","getSelected","filters","groupedFilters","reduce","filter","filterGroup","id","concat","Object","keys","prevMatch","filterId","some"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport IstioObjectLink from '../components/Link/IstioObjectLink';\nimport Namespace from '../types/Namespace';\nimport { Paths } from '../config';\nimport { Link } from 'react-router-dom';\nimport { EnvoySummary, Host } from '../types/IstioObjects';\nimport { ActiveFilter, ActiveFiltersInfo } from '../types/Filters';\nimport { FilterSelected } from '../components/Filters/StatefulFilters';\n\nexport type FilterMethodMap = { [id: string]: (value, filter) => boolean };\n\nexport const istioConfigLink = (halfQDN: string, objectType: string): JSX.Element | string => {\n  const nameParts: string[] = halfQDN.split('.');\n  if (nameParts.length === 2) {\n    return (\n      <React.Fragment>\n        <IstioObjectLink name={nameParts[0]} namespace={nameParts[1]} type={objectType}>\n          {halfQDN}\n        </IstioObjectLink>\n      </React.Fragment>\n    );\n  }\n  return halfQDN;\n};\n\nexport const routeLink = (\n  route: string,\n  namespace: string,\n  workload: string | undefined,\n  handler: () => void\n): JSX.Element | string => {\n  let re = /Route: ([a-z-.:\\d]*)/;\n\n  if (workload !== undefined) {\n    const result = route.match(re);\n    if (result && result[1]) {\n      return (\n        <React.Fragment>\n          <Link onClick={handler} to={`/namespaces/${namespace}/workloads/${workload}?tab=envoy&name=${result[1]}`}>\n            {route}\n          </Link>\n        </React.Fragment>\n      );\n    }\n  }\n\n  return route;\n};\n\nexport const serviceLink = (\n  host: Host,\n  namespaces: Namespace[] | undefined,\n  podNamespace: string,\n  simpleSvc: boolean = false\n): JSX.Element | string => {\n  let to: string = '/namespaces/';\n  let linkText: string = host.service;\n  let showLink: boolean = false;\n\n  const hasSimpleServiceForm = host.service.split('.').length === 1 && host.service !== '*';\n  // Show link if simple service names are allowed,\n  // and the service is no * and has no domains,subdomains\n  if (host.service && !host.namespace && simpleSvc && hasSimpleServiceForm) {\n    to += podNamespace + '/' + Paths.SERVICES + '/' + host.service;\n    showLink = true;\n  } else if (host.service && host.namespace && namespaces) {\n    to += host.namespace + '/' + Paths.SERVICES + '/' + host.service;\n    linkText += '.' + host.namespace;\n    if (host.cluster) {\n      linkText += '.' + host.cluster;\n    }\n    // Show link if the namespace matches to one in the list of available namespaces\n    showLink = namespaces.findIndex((namespace: Namespace): boolean => namespace.name === host.namespace) >= 0;\n  }\n\n  if (showLink) {\n    return (\n      <React.Fragment>\n        <Link to={to}>{linkText}</Link>\n      </React.Fragment>\n    );\n  } else {\n    return linkText;\n  }\n};\n\nexport const defaultFilter = (value: EnvoySummary, filterMethods: FilterMethodMap): boolean => {\n  const activeFilters: ActiveFiltersInfo = FilterSelected.getSelected();\n  // If there is no active filters, show the entry\n  if (activeFilters.filters.length === 0) {\n    return true;\n  }\n\n  // Group filters by id\n  const groupedFilters: ActiveFilter[][] = activeFilters.filters.reduce(\n    (groupedFilters: ActiveFilter[][], filter: ActiveFilter): ActiveFilter[][] => {\n      let filterGroup = groupedFilters[filter.id];\n      if (!filterGroup) {\n        filterGroup = [];\n      }\n      groupedFilters[filter.id] = filterGroup.concat(filter);\n      return groupedFilters;\n    },\n    []\n  );\n\n  // Show entities that has a match in each filter group\n  return Object.keys(groupedFilters).reduce((prevMatch: boolean, filterId: string): boolean => {\n    // There is at least one filter matching the item in the group\n    return (\n      prevMatch &&\n      groupedFilters[filterId].some((filter: ActiveFilter) => {\n        return filterMethods[filter.id](value, filter);\n      })\n    );\n  }, true);\n};\n"]},"metadata":{},"sourceType":"module"}