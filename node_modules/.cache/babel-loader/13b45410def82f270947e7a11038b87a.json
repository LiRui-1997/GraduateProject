{"ast":null,"code":"export var StatusKey;\n\n(function (StatusKey) {\n  StatusKey[\"KIALI_CORE_COMMIT_HASH\"] = \"Kiali core commit hash\";\n  StatusKey[\"KIALI_CORE_VERSION\"] = \"Kiali core version\";\n  StatusKey[\"KIALI_CONSOLE_VERSION\"] = \"Kiali console version\";\n  StatusKey[\"KIALI_CONTAINER_VERSION\"] = \"Kiali container version\";\n  StatusKey[\"KIALI_STATE\"] = \"Kiali state\";\n})(StatusKey || (StatusKey = {}));","map":{"version":3,"sources":["/root/kiali-ui/src/types/StatusState.ts"],"names":["StatusKey"],"mappings":"AAAA,WAAYA,SAAZ;;WAAYA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;GAAAA,S,KAAAA,S","sourcesContent":["export enum StatusKey {\n  KIALI_CORE_COMMIT_HASH = 'Kiali core commit hash',\n  KIALI_CORE_VERSION = 'Kiali core version',\n  KIALI_CONSOLE_VERSION = 'Kiali console version',\n  KIALI_CONTAINER_VERSION = 'Kiali container version',\n  KIALI_STATE = 'Kiali state'\n}\n\nexport type Status = { [K in StatusKey]?: string };\n\nexport interface ExternalServiceInfo {\n  name: string;\n  version?: string;\n  url?: string;\n}\n\nexport interface IstioEnvironment {\n  isMaistra: boolean;\n}\n\nexport interface StatusState {\n  status: Status;\n  externalServices: ExternalServiceInfo[];\n  warningMessages: string[];\n  istioEnvironment: IstioEnvironment;\n}\n"]},"metadata":{},"sourceType":"module"}