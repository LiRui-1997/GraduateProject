{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/components/Validations/Validation.tsx\";\nimport React from 'react';\nimport { CheckCircleIcon, ExclamationCircleIcon, ExclamationTriangleIcon, InfoCircleIcon } from '@patternfly/react-icons';\nimport { Text, TextVariants } from '@patternfly/react-core';\nimport './Validation.css';\nimport { PFColors } from 'components/Pf/PfColors';\nvar ErrorValidation = {\n  name: 'Not Valid',\n  color: PFColors.Danger,\n  icon: ExclamationCircleIcon\n};\nvar WarningValidation = {\n  name: 'Warning',\n  color: PFColors.Warning,\n  icon: ExclamationTriangleIcon\n};\nvar InfoValidation = {\n  name: 'Info',\n  color: PFColors.Info,\n  icon: InfoCircleIcon\n};\nvar CorrectValidation = {\n  name: 'Valid',\n  color: PFColors.Success,\n  icon: CheckCircleIcon\n};\nexport var severityToValidation = {\n  error: ErrorValidation,\n  warning: WarningValidation,\n  correct: CorrectValidation,\n  info: InfoValidation\n};\n\nvar Validation = /*#__PURE__*/function (_React$Component) {\n  _inherits(Validation, _React$Component);\n\n  var _super = _createSuper(Validation);\n\n  function Validation() {\n    _classCallCheck(this, Validation);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Validation, [{\n    key: \"validation\",\n    value: function validation() {\n      return severityToValidation[this.props.severity];\n    }\n  }, {\n    key: \"severityColor\",\n    value: function severityColor() {\n      return {\n        color: this.validation().color\n      };\n    }\n  }, {\n    key: \"textStyle\",\n    value: function textStyle() {\n      var colorMessage = this.props.messageColor || false;\n      var textStyle = this.props.textStyle || {};\n\n      if (colorMessage) {\n        Object.assign(textStyle, this.severityColor());\n      }\n\n      return textStyle;\n    }\n  }, {\n    key: \"iconStyle\",\n    value: function iconStyle() {\n      var iconStyle = this.props.iconStyle || {};\n      var defaultStyle = {\n        verticalAlign: '-0.125em'\n      };\n      Object.assign(iconStyle, this.severityColor());\n      Object.assign(iconStyle, defaultStyle);\n      return iconStyle;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var validation = this.validation();\n      var IconComponent = validation.icon;\n      var hasMessage = !!this.props.message;\n\n      if (hasMessage) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"validation\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Text, {\n          component: TextVariants.p,\n          style: this.textStyle(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(IconComponent, {\n          style: this.iconStyle(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }\n        }), \" \", this.props.message));\n      } else {\n        return /*#__PURE__*/React.createElement(IconComponent, {\n          style: this.iconStyle(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 14\n          }\n        });\n      }\n    }\n  }]);\n\n  return Validation;\n}(React.Component);\n\nexport default Validation;","map":{"version":3,"sources":["/root/GraduateProject/src/components/Validations/Validation.tsx"],"names":["React","CheckCircleIcon","ExclamationCircleIcon","ExclamationTriangleIcon","InfoCircleIcon","Text","TextVariants","PFColors","ErrorValidation","name","color","Danger","icon","WarningValidation","Warning","InfoValidation","Info","CorrectValidation","Success","severityToValidation","error","warning","correct","info","Validation","props","severity","validation","colorMessage","messageColor","textStyle","Object","assign","severityColor","iconStyle","defaultStyle","verticalAlign","IconComponent","hasMessage","message","p","Component"],"mappings":"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","sourcesContent":["import React, { CSSProperties } from 'react';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  InfoCircleIcon\n} from '@patternfly/react-icons';\nimport { IconType } from '@patternfly/react-icons/dist/js/createIcon';\nimport { ValidationTypes } from '../../types/IstioObjects';\nimport { Text, TextVariants } from '@patternfly/react-core';\nimport './Validation.css';\nimport { PFColors } from 'components/Pf/PfColors';\n\ntype Props = ValidationDescription & {\n  messageColor?: boolean;\n  size?: string;\n  textStyle?: React.CSSProperties;\n  iconStyle?: React.CSSProperties;\n};\n\nexport type ValidationDescription = {\n  severity: ValidationTypes;\n  message?: string;\n};\n\nexport type ValidationType = {\n  name: string;\n  color: string;\n  icon: IconType;\n};\n\nconst ErrorValidation: ValidationType = {\n  name: 'Not Valid',\n  color: PFColors.Danger,\n  icon: ExclamationCircleIcon\n};\n\nconst WarningValidation: ValidationType = {\n  name: 'Warning',\n  color: PFColors.Warning,\n  icon: ExclamationTriangleIcon\n};\n\nconst InfoValidation: ValidationType = {\n  name: 'Info',\n  color: PFColors.Info,\n  icon: InfoCircleIcon\n};\n\nconst CorrectValidation: ValidationType = {\n  name: 'Valid',\n  color: PFColors.Success,\n  icon: CheckCircleIcon\n};\n\nexport const severityToValidation: { [severity: string]: ValidationType } = {\n  error: ErrorValidation,\n  warning: WarningValidation,\n  correct: CorrectValidation,\n  info: InfoValidation\n};\n\nclass Validation extends React.Component<Props> {\n  validation() {\n    return severityToValidation[this.props.severity];\n  }\n\n  severityColor() {\n    return { color: this.validation().color };\n  }\n\n  textStyle() {\n    const colorMessage = this.props.messageColor || false;\n    const textStyle = this.props.textStyle || {};\n    if (colorMessage) {\n      Object.assign(textStyle, this.severityColor());\n    }\n    return textStyle;\n  }\n\n  iconStyle() {\n    const iconStyle = this.props.iconStyle || {};\n    const defaultStyle: CSSProperties = {\n      verticalAlign: '-0.125em'\n    };\n    Object.assign(iconStyle, this.severityColor());\n    Object.assign(iconStyle, defaultStyle);\n    return iconStyle;\n  }\n\n  render() {\n    const validation = this.validation();\n    const IconComponent = validation.icon;\n    const hasMessage = !!this.props.message;\n    if (hasMessage) {\n      return (\n        <div className=\"validation\">\n          <Text component={TextVariants.p} style={this.textStyle()}>\n            <IconComponent style={this.iconStyle()} /> {this.props.message}\n          </Text>\n        </div>\n      );\n    } else {\n      return <IconComponent style={this.iconStyle()} />;\n    }\n  }\n}\n\nexport default Validation;\n"]},"metadata":{},"sourceType":"module"}