{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/components/IstioWizards/RequestRouting/Rules.tsx\";\nimport * as React from 'react';\nimport { cellWidth, Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport { style } from 'typestyle';\nimport { PFColors } from '../../Pf/PfColors';\nimport { Badge, EmptyState, EmptyStateBody, EmptyStateVariant, Title, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { PFBadge, PFBadges } from 'components/Pf/PfBadges';\nimport { ROUTE_RULES_TOOLTIP, wizardTooltip } from '../WizardHelp';\nexport var MOVE_TYPE;\n\n(function (MOVE_TYPE) {\n  MOVE_TYPE[MOVE_TYPE[\"UP\"] = 0] = \"UP\";\n  MOVE_TYPE[MOVE_TYPE[\"DOWN\"] = 1] = \"DOWN\";\n})(MOVE_TYPE || (MOVE_TYPE = {}));\n\nvar validationStyle = style({\n  marginTop: 15,\n  color: PFColors.Red100\n});\nvar noRulesStyle = style({\n  marginTop: 15,\n  color: PFColors.Red100,\n  textAlign: 'center',\n  width: '100%'\n});\n\nvar Rules = /*#__PURE__*/function (_React$Component) {\n  _inherits(Rules, _React$Component);\n\n  var _super = _createSuper(Rules);\n\n  function Rules() {\n    var _this;\n\n    _classCallCheck(this, Rules);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.matchAllIndex = function (rules) {\n      var matchAll = -1;\n\n      for (var _index = 0; _index < rules.length; _index++) {\n        var rule = rules[_index];\n\n        if (rule.matches.length === 0) {\n          matchAll = _index;\n          break;\n        }\n      }\n\n      return matchAll;\n    };\n\n    _this.actionResolver = function (rowData, _ref) {\n      var rowIndex = _ref.rowIndex;\n      var removeAction = {\n        title: 'Remove Rule',\n        // @ts-ignore\n        onClick: function onClick(event, rowIndex, rowData, extraData) {\n          return _this.props.onRemoveRule(rowIndex);\n        }\n      };\n      var moveUpAction = {\n        title: 'Move Up',\n        // @ts-ignore\n        onClick: function onClick(event, rowIndex, rowData, extraData) {\n          return _this.props.onMoveRule(rowIndex, MOVE_TYPE.UP);\n        }\n      };\n      var moveDownAction = {\n        title: 'Move Down',\n        // @ts-ignore\n        onClick: function onClick(event, rowIndex, rowData, extraData) {\n          return _this.props.onMoveRule(rowIndex, MOVE_TYPE.DOWN);\n        }\n      };\n      var actions = [];\n\n      if (_this.props.rules.length > 0) {\n        actions.push(removeAction);\n      }\n\n      if (rowIndex > 0) {\n        actions.push(moveUpAction);\n      }\n\n      if (rowIndex + 1 < _this.props.rules.length) {\n        actions.push(moveDownAction);\n      }\n\n      return actions;\n    };\n\n    return _this;\n  }\n\n  _createClass(Rules, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // TODO: Casting 'as any' because @patternfly/react-table@2.22.19 has a typing bug. Remove the casting when PF fixes it.\n      // https://github.com/patternfly/patternfly-next/issues/2373\n      var headerCells = [{\n        title: 'Rule order',\n        transforms: [cellWidth(10)],\n        props: {}\n      }, {\n        title: 'Request Matching',\n        props: {}\n      }, {\n        title: 'Route To',\n        props: {}\n      }];\n      var isValid = true;\n      var matchAll = this.matchAllIndex(this.props.rules);\n      var routeRules = this.props.rules.length > 0 ? this.props.rules.map(function (rule, order) {\n        var _rule$delay$percentag, _rule$abort$percentag;\n\n        isValid = matchAll === -1 || order <= matchAll;\n        return {\n          cells: [/*#__PURE__*/React.createElement(React.Fragment, null, order + 1), /*#__PURE__*/React.createElement(React.Fragment, null, rule.matches.length === 0 ? 'Any request' : rule.matches.map(function (match, i) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              key: 'match_' + i,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 54\n              }\n            }, match);\n          }), !isValid && /*#__PURE__*/React.createElement(\"div\", {\n            className: validationStyle,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }\n          }, \"Match 'Any request' is defined in a previous rule.\", /*#__PURE__*/React.createElement(\"br\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 23\n            }\n          }), \"This rule is not accessible.\")), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n            key: 'ww_' + order,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }\n          }, rule.workloadWeights.filter(function (wk) {\n            return !wk.mirrored;\n          }).map(function (wk, i) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              key: 'wk_' + order + '_' + wk.name + '_' + i,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 27\n              }\n            }, /*#__PURE__*/React.createElement(PFBadge, {\n              badge: PFBadges.Workload,\n              position: TooltipPosition.top,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 29\n              }\n            }), wk.name, \" (\", wk.weight, \"% routed traffic)\");\n          }), rule.workloadWeights.filter(function (wk) {\n            return wk.mirrored;\n          }).map(function (wk, i) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              key: 'wk_mirrored_' + order + '_' + wk.name + '_' + i,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 27\n              }\n            }, /*#__PURE__*/React.createElement(Tooltip, {\n              key: 'mirrorred_' + wk.name,\n              position: TooltipPosition.top,\n              content: /*#__PURE__*/React.createElement(React.Fragment, null, \"Mirrored Workload\"),\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(Badge, {\n              className: 'faultinjection_badge_definition',\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 31\n              }\n            }, \"MI\")), wk.name, \" (\", wk.weight, \"% mirrored traffic)\");\n          })), rule.delay && /*#__PURE__*/React.createElement(\"div\", {\n            key: 'delay_' + order,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Tooltip, {\n            position: TooltipPosition.top,\n            content: /*#__PURE__*/React.createElement(React.Fragment, null, \"Fault Injection: Delay\"),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(Badge, {\n            className: 'faultinjection_badge_definition',\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 25\n            }\n          }, \"FI\")), (_rule$delay$percentag = rule.delay.percentage) === null || _rule$delay$percentag === void 0 ? void 0 : _rule$delay$percentag.value, \"% requests delayed (\", rule.delay.fixedDelay, \")\"), rule.abort && /*#__PURE__*/React.createElement(\"div\", {\n            key: 'abort_' + order,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Tooltip, {\n            position: TooltipPosition.top,\n            content: /*#__PURE__*/React.createElement(React.Fragment, null, \"Fault Injection: Abort\"),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(Badge, {\n            className: 'faultinjection_badge_definition',\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 25\n            }\n          }, \"FI\")), (_rule$abort$percentag = rule.abort.percentage) === null || _rule$abort$percentag === void 0 ? void 0 : _rule$abort$percentag.value, \"% requests aborted (HTTP Status \", rule.abort.httpStatus, \")\"), rule.timeout && /*#__PURE__*/React.createElement(\"div\", {\n            key: 'timeout_' + order,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Tooltip, {\n            position: TooltipPosition.top,\n            content: /*#__PURE__*/React.createElement(React.Fragment, null, \"Request Timeout\"),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(Badge, {\n            className: 'faultinjection_badge_definition',\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 25\n            }\n          }, \"RT\")), \"timeout (\", rule.timeout, \")\"), rule.retries && /*#__PURE__*/React.createElement(\"div\", {\n            key: 'retries_' + order,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Tooltip, {\n            position: TooltipPosition.top,\n            content: /*#__PURE__*/React.createElement(React.Fragment, null, \"Request Retry\"),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(Badge, {\n            className: 'faultinjection_badge_definition',\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 25\n            }\n          }, \"RR\")), rule.retries.attempts, \" attempts with timeout (\", rule.timeout, \")\"))]\n        };\n      }) : [{\n        key: 'rowEmpty',\n        cells: [{\n          title: /*#__PURE__*/React.createElement(EmptyState, {\n            variant: EmptyStateVariant.full,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Title, {\n            headingLevel: \"h5\",\n            size: \"lg\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 23\n            }\n          }, \"No Route Rules defined\"), /*#__PURE__*/React.createElement(EmptyStateBody, {\n            className: noRulesStyle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 23\n            }\n          }, \"A Request Routing scenario needs at least a Route Rule\")),\n          props: {\n            colSpan: 3\n          }\n        }]\n      }];\n      return /*#__PURE__*/React.createElement(React.Fragment, null, \"Route Rules\", wizardTooltip(ROUTE_RULES_TOOLTIP), /*#__PURE__*/React.createElement(Table, {\n        \"aria-label\": \"Rules Created\",\n        cells: headerCells,\n        rows: routeRules // @ts-ignore\n        ,\n        actionResolver: this.actionResolver,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Rules;\n}(React.Component);\n\nexport default Rules;","map":{"version":3,"sources":["/root/kiali-ui/src/components/IstioWizards/RequestRouting/Rules.tsx"],"names":["React","cellWidth","Table","TableHeader","TableBody","style","PFColors","Badge","EmptyState","EmptyStateBody","EmptyStateVariant","Title","Tooltip","TooltipPosition","PFBadge","PFBadges","ROUTE_RULES_TOOLTIP","wizardTooltip","MOVE_TYPE","validationStyle","marginTop","color","Red100","noRulesStyle","textAlign","width","Rules","matchAllIndex","rules","matchAll","index","length","rule","matches","actionResolver","rowData","rowIndex","removeAction","title","onClick","event","extraData","props","onRemoveRule","moveUpAction","onMoveRule","UP","moveDownAction","DOWN","actions","push","headerCells","transforms","isValid","routeRules","map","order","cells","match","i","workloadWeights","filter","wk","mirrored","name","Workload","top","weight","delay","percentage","value","fixedDelay","abort","httpStatus","timeout","retries","attempts","key","full","colSpan","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { cellWidth, ICell, Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport { style } from 'typestyle';\nimport { PFColors } from '../../Pf/PfColors';\nimport {\n  Badge,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  Title,\n  Tooltip,\n  TooltipPosition\n} from '@patternfly/react-core';\nimport { WorkloadWeight } from '../TrafficShifting';\nimport { Abort, Delay, HTTPRetry } from '../../../types/IstioObjects';\nimport { PFBadge, PFBadges } from 'components/Pf/PfBadges';\nimport { ROUTE_RULES_TOOLTIP, wizardTooltip } from '../WizardHelp';\n\nexport enum MOVE_TYPE {\n  UP,\n  DOWN\n}\n\nexport type Rule = {\n  matches: string[];\n  workloadWeights: WorkloadWeight[];\n  delay?: Delay;\n  abort?: Abort;\n  timeout?: string;\n  retries?: HTTPRetry;\n};\n\ntype Props = {\n  rules: Rule[];\n  onRemoveRule: (index: number) => void;\n  onMoveRule: (index: number, move: MOVE_TYPE) => void;\n};\n\nconst validationStyle = style({\n  marginTop: 15,\n  color: PFColors.Red100\n});\n\nconst noRulesStyle = style({\n  marginTop: 15,\n  color: PFColors.Red100,\n  textAlign: 'center',\n  width: '100%'\n});\n\nclass Rules extends React.Component<Props> {\n  matchAllIndex = (rules: Rule[]): number => {\n    let matchAll: number = -1;\n    for (let index = 0; index < rules.length; index++) {\n      const rule = rules[index];\n      if (rule.matches.length === 0) {\n        matchAll = index;\n        break;\n      }\n    }\n    return matchAll;\n  };\n\n  // @ts-ignore\n  actionResolver = (rowData, { rowIndex }) => {\n    const removeAction = {\n      title: 'Remove Rule',\n      // @ts-ignore\n      onClick: (event, rowIndex, rowData, extraData) => this.props.onRemoveRule(rowIndex)\n    };\n    const moveUpAction = {\n      title: 'Move Up',\n      // @ts-ignore\n      onClick: (event, rowIndex, rowData, extraData) => this.props.onMoveRule(rowIndex, MOVE_TYPE.UP)\n    };\n    const moveDownAction = {\n      title: 'Move Down',\n      // @ts-ignore\n      onClick: (event, rowIndex, rowData, extraData) => this.props.onMoveRule(rowIndex, MOVE_TYPE.DOWN)\n    };\n\n    const actions: any[] = [];\n    if (this.props.rules.length > 0) {\n      actions.push(removeAction);\n    }\n    if (rowIndex > 0) {\n      actions.push(moveUpAction);\n    }\n    if (rowIndex + 1 < this.props.rules.length) {\n      actions.push(moveDownAction);\n    }\n    return actions;\n  };\n\n  render() {\n    // TODO: Casting 'as any' because @patternfly/react-table@2.22.19 has a typing bug. Remove the casting when PF fixes it.\n    // https://github.com/patternfly/patternfly-next/issues/2373\n    const headerCells: ICell[] = [\n      {\n        title: 'Rule order',\n        transforms: [cellWidth(10) as any],\n        props: {}\n      },\n      {\n        title: 'Request Matching',\n        props: {}\n      },\n      {\n        title: 'Route To',\n        props: {}\n      }\n    ];\n\n    let isValid: boolean = true;\n    const matchAll: number = this.matchAllIndex(this.props.rules);\n    const routeRules =\n      this.props.rules.length > 0\n        ? this.props.rules.map((rule, order) => {\n            isValid = matchAll === -1 || order <= matchAll;\n            return {\n              cells: [\n                <>{order + 1}</>,\n                <>\n                  {rule.matches.length === 0\n                    ? 'Any request'\n                    : rule.matches.map((match, i) => <div key={'match_' + i}>{match}</div>)}\n                  {!isValid && (\n                    <div className={validationStyle}>\n                      Match 'Any request' is defined in a previous rule.\n                      <br />\n                      This rule is not accessible.\n                    </div>\n                  )}\n                </>,\n                <>\n                  <div key={'ww_' + order}>\n                    {rule.workloadWeights\n                      .filter(wk => !wk.mirrored)\n                      .map((wk, i) => {\n                        return (\n                          <div key={'wk_' + order + '_' + wk.name + '_' + i}>\n                            <PFBadge badge={PFBadges.Workload} position={TooltipPosition.top} />\n                            {wk.name} ({wk.weight}% routed traffic)\n                          </div>\n                        );\n                      })}\n                    {rule.workloadWeights\n                      .filter(wk => wk.mirrored)\n                      .map((wk, i) => {\n                        return (\n                          <div key={'wk_mirrored_' + order + '_' + wk.name + '_' + i}>\n                            <Tooltip\n                              key={'mirrorred_' + wk.name}\n                              position={TooltipPosition.top}\n                              content={<>Mirrored Workload</>}\n                            >\n                              <Badge className={'faultinjection_badge_definition'}>MI</Badge>\n                            </Tooltip>\n                            {wk.name} ({wk.weight}% mirrored traffic)\n                          </div>\n                        );\n                      })}\n                  </div>\n                  {rule.delay && (\n                    <div key={'delay_' + order}>\n                      <Tooltip position={TooltipPosition.top} content={<>Fault Injection: Delay</>}>\n                        <Badge className={'faultinjection_badge_definition'}>FI</Badge>\n                      </Tooltip>\n                      {rule.delay.percentage?.value}% requests delayed ({rule.delay.fixedDelay})\n                    </div>\n                  )}\n                  {rule.abort && (\n                    <div key={'abort_' + order}>\n                      <Tooltip position={TooltipPosition.top} content={<>Fault Injection: Abort</>}>\n                        <Badge className={'faultinjection_badge_definition'}>FI</Badge>\n                      </Tooltip>\n                      {rule.abort.percentage?.value}% requests aborted (HTTP Status {rule.abort.httpStatus})\n                    </div>\n                  )}\n                  {rule.timeout && (\n                    <div key={'timeout_' + order}>\n                      <Tooltip position={TooltipPosition.top} content={<>Request Timeout</>}>\n                        <Badge className={'faultinjection_badge_definition'}>RT</Badge>\n                      </Tooltip>\n                      timeout ({rule.timeout})\n                    </div>\n                  )}\n                  {rule.retries && (\n                    <div key={'retries_' + order}>\n                      <Tooltip position={TooltipPosition.top} content={<>Request Retry</>}>\n                        <Badge className={'faultinjection_badge_definition'}>RR</Badge>\n                      </Tooltip>\n                      {rule.retries.attempts} attempts with timeout ({rule.timeout})\n                    </div>\n                  )}\n                </>\n              ]\n            };\n          })\n        : [\n            {\n              key: 'rowEmpty',\n              cells: [\n                {\n                  title: (\n                    <EmptyState variant={EmptyStateVariant.full}>\n                      <Title headingLevel=\"h5\" size=\"lg\">\n                        No Route Rules defined\n                      </Title>\n                      <EmptyStateBody className={noRulesStyle}>\n                        A Request Routing scenario needs at least a Route Rule\n                      </EmptyStateBody>\n                    </EmptyState>\n                  ),\n                  props: { colSpan: 3 }\n                }\n              ]\n            }\n          ];\n\n    return (\n      <>\n        Route Rules\n        {wizardTooltip(ROUTE_RULES_TOOLTIP)}\n        <Table\n          aria-label=\"Rules Created\"\n          cells={headerCells}\n          rows={routeRules}\n          // @ts-ignore\n          actionResolver={this.actionResolver}\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      </>\n    );\n  }\n}\n\nexport default Rules;\n"]},"metadata":{},"sourceType":"module"}