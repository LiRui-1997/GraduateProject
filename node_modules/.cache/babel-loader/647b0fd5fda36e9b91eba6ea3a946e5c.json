{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/components/Tab/SimpleTabs.tsx\";\nimport * as React from 'react';\nimport { Tabs } from '@patternfly/react-core'; // SimpleTabs is just a Tabs wrapper than encapsulates the activeTab state handling such\n// that parent components of Tabs don't have to re-render on a tab change.\n\nvar SimpleTabs = /*#__PURE__*/function (_React$Component) {\n  _inherits(SimpleTabs, _React$Component);\n\n  var _super = _createSuper(SimpleTabs);\n\n  function SimpleTabs(props) {\n    var _this;\n\n    _classCallCheck(this, SimpleTabs);\n\n    _this = _super.call(this, props);\n\n    _this.handleTabSelect = function (_, index) {\n      _this.setState({\n        activeTab: index\n      });\n    };\n\n    _this.state = {\n      activeTab: props.defaultTab\n    };\n    return _this;\n  }\n\n  _createClass(SimpleTabs, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Tabs, {\n        id: this.props.id,\n        style: this.props.style ? this.props.style : {},\n        isFilled: this.props.isFilled ? this.props.isFilled : true,\n        activeKey: this.state.activeTab,\n        onSelect: this.handleTabSelect,\n        mountOnEnter: this.props.mountOnEnter === undefined ? true : this.props.mountOnEnter,\n        unmountOnExit: this.props.unmountOnExit === undefined ? true : this.props.unmountOnExit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, this.props.children);\n    }\n  }]);\n\n  return SimpleTabs;\n}(React.Component);\n\nexport { SimpleTabs as default };","map":{"version":3,"sources":["/root/GraduateProject/src/components/Tab/SimpleTabs.tsx"],"names":["React","Tabs","SimpleTabs","props","handleTabSelect","_","index","setState","activeTab","state","defaultTab","id","style","isFilled","mountOnEnter","undefined","unmountOnExit","children","Component"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,wBAArB,C,CAEA;AACA;;IAcqBC,U;;;;;AACnB,sBAAYC,KAAZ,EAAoC;AAAA;;AAAA;;AAClC,8BAAMA,KAAN;;AADkC,UAK5BC,eAL4B,GAKV,UAACC,CAAD,EAAIC,KAAJ,EAAc;AACtC,YAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEF;AAAb,OAAd;AACD,KAPmC;;AAElC,UAAKG,KAAL,GAAa;AAAED,MAAAA,SAAS,EAAEL,KAAK,CAACO;AAAnB,KAAb;AAFkC;AAGnC;;;;WAMD,kBAAS;AACP,0BACE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAE,KAAKP,KAAL,CAAWQ,EADjB;AAEE,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWS,KAAX,GAAmB,KAAKT,KAAL,CAAWS,KAA9B,GAAsC,EAF/C;AAGE,QAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWU,QAAX,GAAsB,KAAKV,KAAL,CAAWU,QAAjC,GAA4C,IAHxD;AAIE,QAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWD,SAJxB;AAKE,QAAA,QAAQ,EAAE,KAAKJ,eALjB;AAME,QAAA,YAAY,EAAE,KAAKD,KAAL,CAAWW,YAAX,KAA4BC,SAA5B,GAAwC,IAAxC,GAA+C,KAAKZ,KAAL,CAAWW,YAN1E;AAOE,QAAA,aAAa,EAAE,KAAKX,KAAL,CAAWa,aAAX,KAA6BD,SAA7B,GAAyC,IAAzC,GAAgD,KAAKZ,KAAL,CAAWa,aAP5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASG,KAAKb,KAAL,CAAWc,QATd,CADF;AAaD;;;;EAxBqCjB,KAAK,CAACkB,S;;SAAzBhB,U","sourcesContent":["import * as React from 'react';\nimport { Tabs } from '@patternfly/react-core';\n\n// SimpleTabs is just a Tabs wrapper than encapsulates the activeTab state handling such\n// that parent components of Tabs don't have to re-render on a tab change.\n\ntype SimpleTabsProps = {\n  defaultTab: number;\n  id: string;\n  isFilled?: boolean;\n  mountOnEnter?: boolean;\n  style?: React.CSSProperties;\n  unmountOnExit?: boolean;\n};\n\ninterface SimpleTabsState {\n  activeTab: number;\n}\nexport default class SimpleTabs extends React.Component<SimpleTabsProps, SimpleTabsState> {\n  constructor(props: SimpleTabsProps) {\n    super(props);\n    this.state = { activeTab: props.defaultTab };\n  }\n\n  private handleTabSelect = (_, index) => {\n    this.setState({ activeTab: index });\n  };\n\n  render() {\n    return (\n      <Tabs\n        id={this.props.id}\n        style={this.props.style ? this.props.style : {}}\n        isFilled={this.props.isFilled ? this.props.isFilled : true}\n        activeKey={this.state.activeTab}\n        onSelect={this.handleTabSelect}\n        mountOnEnter={this.props.mountOnEnter === undefined ? true : this.props.mountOnEnter}\n        unmountOnExit={this.props.unmountOnExit === undefined ? true : this.props.unmountOnExit}\n      >\n        {this.props.children}\n      </Tabs>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}