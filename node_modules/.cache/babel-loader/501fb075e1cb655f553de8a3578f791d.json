{"ast":null,"code":"import _objectSpread from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{getType}from'typesafe-actions';import{updateState}from'../utils/Reducer';import{NamespaceActions}from'../actions/NamespaceAction';export var INITIAL_NAMESPACE_STATE={activeNamespaces:[],isFetching:false,items:[],lastUpdated:undefined,filter:''};var namespaces=function namespaces(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INITIAL_NAMESPACE_STATE;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case getType(NamespaceActions.toggleActiveNamespace):var namespaceIndex=state.activeNamespaces.findIndex(function(namespace){return namespace.name===action.payload.name;});if(namespaceIndex===-1){return updateState(state,{activeNamespaces:[].concat(_toConsumableArray(state.activeNamespaces),[{name:action.payload.name}])});}else{var activeNamespaces=_toConsumableArray(state.activeNamespaces);activeNamespaces.splice(namespaceIndex,1);return updateState(state,{activeNamespaces:activeNamespaces});}case getType(NamespaceActions.setActiveNamespaces):return updateState(state,{activeNamespaces:action.payload});case getType(NamespaceActions.setFilter):return updateState(state,{filter:action.payload});case getType(NamespaceActions.requestStarted):return updateState(state,{isFetching:true});case getType(NamespaceActions.receiveList):var names=action.payload.list.map(function(ns){return ns.name;});var validActive=state.activeNamespaces.filter(function(an){return names.includes(an.name);});var updatedActive={};if(state.activeNamespaces.length!==validActive.length){updatedActive={activeNamespaces:validActive};}return updateState(state,_objectSpread({isFetching:false,items:action.payload.list,lastUpdated:action.payload.receivedAt},updatedActive));case getType(NamespaceActions.requestFailed):return updateState(state,{isFetching:false});default:return state;}};export default namespaces;","map":null,"metadata":{},"sourceType":"module"}