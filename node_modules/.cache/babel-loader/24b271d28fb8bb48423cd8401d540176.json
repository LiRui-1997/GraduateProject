{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _pt from \"prop-types\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * body-row.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\n\n\nimport { isEqual, isFunction } from 'lodash';\nimport * as React from 'react';\nimport { columnsAreEqual } from './columns-are-equal';\nimport { evaluateFormatters } from './evaluate-formatters';\nimport { evaluateTransforms } from './evaluate-transforms';\nimport { mergeProps } from './merge-props';\nexport var BodyRow = /*#__PURE__*/function (_React$Component) {\n  _inherits(BodyRow, _React$Component);\n\n  var _super = _createSuper(BodyRow);\n\n  function BodyRow() {\n    _classCallCheck(this, BodyRow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BodyRow, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _this$props = this.props,\n          columns = _this$props.columns,\n          rowData = _this$props.rowData; // Check for row based override.\n\n      var renderers = nextProps.renderers;\n\n      if (renderers && renderers.row && renderers.row.shouldComponentUpdate) {\n        if (isFunction(renderers.row.shouldComponentUpdate)) {\n          return renderers.row.shouldComponentUpdate.call(this, nextProps, {}, {});\n        }\n\n        return true;\n      }\n\n      return !(columnsAreEqual(columns, nextProps.columns) && isEqual(rowData, nextProps.rowData));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          columns = _this$props2.columns,\n          renderers = _this$props2.renderers,\n          onRow = _this$props2.onRow,\n          rowKey = _this$props2.rowKey,\n          rowIndex = _this$props2.rowIndex,\n          rowData = _this$props2.rowData;\n      return React.createElement(renderers.row, onRow(rowData, {\n        rowIndex: rowIndex,\n        rowKey: rowKey\n      }), columns.map(function (column, columnIndex) {\n        var property = column.property,\n            cell = column.cell,\n            props = column.props;\n        var evaluatedProperty = property || cell && cell.property;\n\n        var _ref = cell || {},\n            _ref$transforms = _ref.transforms,\n            transforms = _ref$transforms === void 0 ? [] : _ref$transforms,\n            _ref$formatters = _ref.formatters,\n            formatters = _ref$formatters === void 0 ? [] : _ref$formatters;\n\n        var extraParameters = {\n          columnIndex: columnIndex,\n          property: evaluatedProperty,\n          column: column,\n          rowData: rowData,\n          rowIndex: rowIndex,\n          rowKey: rowKey\n        };\n        var transformed = evaluateTransforms(transforms, rowData[evaluatedProperty], extraParameters);\n\n        if (!transformed) {\n          // eslint-disable-next-line no-console\n          console.warn('Table.Body - Failed to receive a transformed result');\n        }\n\n        return React.createElement(renderers.cell, _objectSpread({\n          key: \"col-\".concat(columnIndex, \"-row-\").concat(rowIndex)\n        }, mergeProps(props, cell && cell.props, transformed)), transformed.children || evaluateFormatters(formatters)(rowData[\"_\".concat(evaluatedProperty)] || rowData[evaluatedProperty], extraParameters));\n      }));\n    }\n  }]);\n\n  return BodyRow;\n}(React.Component);\n\n_defineProperty(BodyRow, \"propTypes\", {\n  columns: _pt.any.isRequired,\n  renderers: _pt.any.isRequired,\n  onRow: _pt.any,\n  rowIndex: _pt.number.isRequired,\n  rowData: _pt.any.isRequired,\n  rowKey: _pt.string.isRequired\n});\n\n_defineProperty(BodyRow, \"defaultProps\", {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onRow: function onRow() {\n    return Object;\n  }\n});","map":{"version":3,"sources":["/root/kiali-ui/node_modules/@patternfly/react-table/dist/esm/components/Table/base/body-row.js"],"names":["_pt","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","isEqual","isFunction","React","columnsAreEqual","evaluateFormatters","evaluateTransforms","mergeProps","BodyRow","nextProps","props","columns","rowData","renderers","row","shouldComponentUpdate","call","onRow","rowKey","rowIndex","createElement","map","column","columnIndex","property","cell","evaluatedProperty","transforms","formatters","extraParameters","transformed","console","warn","children","Component","any","isRequired","number","string"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * body-row.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport { isEqual, isFunction } from 'lodash';\nimport * as React from 'react';\nimport { columnsAreEqual } from './columns-are-equal';\nimport { evaluateFormatters } from './evaluate-formatters';\nimport { evaluateTransforms } from './evaluate-transforms';\nimport { mergeProps } from './merge-props';\nexport class BodyRow extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const {\n      columns,\n      rowData\n    } = this.props; // Check for row based override.\n\n    const {\n      renderers\n    } = nextProps;\n\n    if (renderers && renderers.row && renderers.row.shouldComponentUpdate) {\n      if (isFunction(renderers.row.shouldComponentUpdate)) {\n        return renderers.row.shouldComponentUpdate.call(this, nextProps, {}, {});\n      }\n\n      return true;\n    }\n\n    return !(columnsAreEqual(columns, nextProps.columns) && isEqual(rowData, nextProps.rowData));\n  }\n\n  render() {\n    const {\n      columns,\n      renderers,\n      onRow,\n      rowKey,\n      rowIndex,\n      rowData\n    } = this.props;\n    return React.createElement(renderers.row, onRow(rowData, {\n      rowIndex,\n      rowKey\n    }), columns.map((column, columnIndex) => {\n      const {\n        property,\n        cell,\n        props\n      } = column;\n      const evaluatedProperty = property || cell && cell.property;\n      const {\n        transforms = [],\n        formatters = []\n      } = cell || {};\n      const extraParameters = {\n        columnIndex,\n        property: evaluatedProperty,\n        column,\n        rowData,\n        rowIndex,\n        rowKey\n      };\n      const transformed = evaluateTransforms(transforms, rowData[evaluatedProperty], extraParameters);\n\n      if (!transformed) {\n        // eslint-disable-next-line no-console\n        console.warn('Table.Body - Failed to receive a transformed result');\n      }\n\n      return React.createElement(renderers.cell, _objectSpread({\n        key: `col-${columnIndex}-row-${rowIndex}`\n      }, mergeProps(props, cell && cell.props, transformed)), transformed.children || evaluateFormatters(formatters)(rowData[`_${evaluatedProperty}`] || rowData[evaluatedProperty], extraParameters));\n    }));\n  }\n\n}\n\n_defineProperty(BodyRow, \"propTypes\", {\n  columns: _pt.any.isRequired,\n  renderers: _pt.any.isRequired,\n  onRow: _pt.any,\n  rowIndex: _pt.number.isRequired,\n  rowData: _pt.any.isRequired,\n  rowKey: _pt.string.isRequired\n});\n\n_defineProperty(BodyRow, \"defaultProps\", {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onRow: (...args) => Object\n});\n//# sourceMappingURL=body-row.js.map"]},"metadata":{},"sourceType":"module"}