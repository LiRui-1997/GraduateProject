{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\nimport * as FilterHelper from './FilterHelper';\nimport * as API from '../../services/Api';\nimport { HistoryManager, URLParam } from '../../app/History';\nexport var Component = /*#__PURE__*/function (_React$Component) {\n  _inherits(Component, _React$Component);\n\n  var _super = _createSuper(Component);\n\n  function Component(props) {\n    var _this;\n\n    _classCallCheck(this, Component);\n\n    _this = _super.call(this, props);\n\n    _this.onFilterChange = function () {\n      // Resetting pagination when filters change\n      _this.updateListItems(true);\n    };\n\n    _this.handleError = function (error) {\n      FilterHelper.handleError(error);\n    };\n\n    _this.updateSort = function (sortField, isSortAscending) {\n      _this.sortItemList(_this.state.listItems, sortField, isSortAscending).then(function (sorted) {\n        _this.setState({\n          currentSortField: sortField,\n          isSortAscending: isSortAscending,\n          listItems: sorted\n        });\n\n        HistoryManager.setParam(URLParam.SORT, sortField.param);\n        HistoryManager.setParam(URLParam.DIRECTION, isSortAscending ? 'asc' : 'desc');\n      });\n    };\n\n    _this.updateListItems = _this.updateListItems.bind(_assertThisInitialized(_this));\n    _this.sortItemList = _this.sortItemList.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Component, [{\n    key: \"handleAxiosError\",\n    value: function handleAxiosError(message, error) {\n      var errMsg = \"\".concat(message, \": \").concat(API.getErrorString(error)); // TODO: Do we really need this console logging?\n\n      console.error(errMsg);\n      this.handleError(errMsg);\n    }\n  }]);\n\n  return Component;\n}(React.Component);","map":{"version":3,"sources":["/root/kiali-ui/src/components/FilterList/FilterComponent.tsx"],"names":["React","FilterHelper","API","HistoryManager","URLParam","Component","props","onFilterChange","updateListItems","handleError","error","updateSort","sortField","isSortAscending","sortItemList","state","listItems","then","sorted","setState","currentSortField","setParam","SORT","param","DIRECTION","bind","message","errMsg","getErrorString","console"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,KAAKC,YAAZ,MAA8B,gBAA9B;AAEA,OAAO,KAAKC,GAAZ,MAAqB,oBAArB;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,mBAAzC;AAaA,WAAsBC,SAAtB;AAAA;;AAAA;;AAIE,qBAAYC,KAAZ,EAAsB;AAAA;;AAAA;;AACpB,8BAAMA,KAAN;;AADoB,UAOtBC,cAPsB,GAOL,YAAM;AACrB;AACA,YAAKC,eAAL,CAAqB,IAArB;AACD,KAVqB;;AAAA,UAYtBC,WAZsB,GAYR,UAACC,KAAD,EAAmB;AAC/BT,MAAAA,YAAY,CAACQ,WAAb,CAAyBC,KAAzB;AACD,KAdqB;;AAAA,UAuBtBC,UAvBsB,GAuBT,UAACC,SAAD,EAA0BC,eAA1B,EAAuD;AAClE,YAAKC,YAAL,CAAkB,MAAKC,KAAL,CAAWC,SAA7B,EAAwCJ,SAAxC,EAAmDC,eAAnD,EAAoEI,IAApE,CAAyE,UAAAC,MAAM,EAAI;AACjF,cAAKC,QAAL,CAAc;AACZC,UAAAA,gBAAgB,EAAER,SADN;AAEZC,UAAAA,eAAe,EAAEA,eAFL;AAGZG,UAAAA,SAAS,EAAEE;AAHC,SAAd;;AAKAf,QAAAA,cAAc,CAACkB,QAAf,CAAwBjB,QAAQ,CAACkB,IAAjC,EAAuCV,SAAS,CAACW,KAAjD;AACApB,QAAAA,cAAc,CAACkB,QAAf,CAAwBjB,QAAQ,CAACoB,SAAjC,EAA4CX,eAAe,GAAG,KAAH,GAAW,MAAtE;AACD,OARD;AASD,KAjCqB;;AAGpB,UAAKL,eAAL,GAAuB,MAAKA,eAAL,CAAqBiB,IAArB,+BAAvB;AACA,UAAKX,YAAL,GAAoB,MAAKA,YAAL,CAAkBW,IAAlB,+BAApB;AAJoB;AAKrB;;AATH;AAAA;AAAA,WAoBE,0BAAiBC,OAAjB,EAAkChB,KAAlC,EAAqD;AACnD,UAAMiB,MAAM,aAAMD,OAAN,eAAkBxB,GAAG,CAAC0B,cAAJ,CAAmBlB,KAAnB,CAAlB,CAAZ,CADmD,CAEnD;;AACAmB,MAAAA,OAAO,CAACnB,KAAR,CAAciB,MAAd;AACA,WAAKlB,WAAL,CAAiBkB,MAAjB;AACD;AAzBH;;AAAA;AAAA,EAAmF3B,KAAK,CAACK,SAAzF","sourcesContent":["import * as React from 'react';\nimport { AxiosError } from 'axios';\nimport * as FilterHelper from './FilterHelper';\nimport { SortField } from '../../types/SortFilters';\nimport * as API from '../../services/Api';\nimport { HistoryManager, URLParam } from '../../app/History';\n\nexport interface Props<R> {\n  currentSortField: SortField<R>;\n  isSortAscending: boolean;\n}\n\nexport interface State<R> {\n  listItems: R[];\n  currentSortField: SortField<R>;\n  isSortAscending: boolean;\n}\n\nexport abstract class Component<P extends Props<R>, S extends State<R>, R> extends React.Component<P, S> {\n  abstract sortItemList(listItems: R[], sortField: SortField<R>, isAscending: boolean): Promise<R[]>;\n  abstract updateListItems(resetPagination?: boolean): void;\n\n  constructor(props: P) {\n    super(props);\n\n    this.updateListItems = this.updateListItems.bind(this);\n    this.sortItemList = this.sortItemList.bind(this);\n  }\n\n  onFilterChange = () => {\n    // Resetting pagination when filters change\n    this.updateListItems(true);\n  };\n\n  handleError = (error: string) => {\n    FilterHelper.handleError(error);\n  };\n\n  handleAxiosError(message: string, error: AxiosError) {\n    const errMsg = `${message}: ${API.getErrorString(error)}`;\n    // TODO: Do we really need this console logging?\n    console.error(errMsg);\n    this.handleError(errMsg);\n  }\n\n  updateSort = (sortField: SortField<R>, isSortAscending: boolean) => {\n    this.sortItemList(this.state.listItems, sortField, isSortAscending).then(sorted => {\n      this.setState({\n        currentSortField: sortField,\n        isSortAscending: isSortAscending,\n        listItems: sorted\n      });\n      HistoryManager.setParam(URLParam.SORT, sortField.param);\n      HistoryManager.setParam(URLParam.DIRECTION, isSortAscending ? 'asc' : 'desc');\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}