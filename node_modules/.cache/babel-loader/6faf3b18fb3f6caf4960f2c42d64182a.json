{"ast":null,"code":"import deepFreeze from 'deep-freeze';\nimport { cellWidth, sortable, textCenter } from '@patternfly/react-table';\nimport * as Renderers from './Renderers';\nimport { isIstioNamespace } from 'config/ServerConfig';\nimport { PFBadges } from '../../components/Pf/PfBadges';\n// Health type guard\nexport function hasHealth(r) {\n  return r.healthPromise !== undefined;\n}\nexport var hasMissingSidecar = function hasMissingSidecar(r) {\n  return !isIstioNamespace(r.namespace) && !r.istioSidecar;\n};\n// NamespaceInfo\nvar tlsStatus = {\n  name: 'TLS',\n  param: 'tls',\n  column: 'TLS',\n  transforms: [sortable, cellWidth(5)],\n  renderer: Renderers.tls\n};\nvar istioConfiguration = {\n  name: 'IstioConfiguration',\n  param: 'ic',\n  column: 'Config',\n  transforms: [sortable, cellWidth(5)],\n  renderer: Renderers.istioConfig\n};\nvar status = {\n  name: 'Status',\n  param: 'h',\n  column: 'Status',\n  transforms: [sortable, cellWidth(40)],\n  cellTransforms: [textCenter],\n  renderer: Renderers.status\n};\nvar nsItem = {\n  name: 'Namespace',\n  param: 'ns',\n  column: 'Namespace',\n  transforms: [sortable],\n  renderer: Renderers.nsItem\n}; // General\n\nvar item = {\n  name: 'Item',\n  param: 'wn',\n  column: 'Name',\n  transforms: [sortable],\n  renderer: Renderers.item\n};\nvar serviceItem = {\n  name: 'Item',\n  param: 'sn',\n  column: 'Name',\n  transforms: [sortable],\n  renderer: Renderers.item\n};\nvar istioItem = {\n  name: 'Item',\n  param: 'in',\n  column: 'Name',\n  transforms: [sortable],\n  renderer: Renderers.item\n};\nvar namespace = {\n  name: 'Namespace',\n  param: 'ns',\n  column: 'Namespace',\n  transforms: [sortable],\n  renderer: Renderers.namespace\n};\nvar labels = {\n  name: 'Labels',\n  param: 'lb',\n  column: 'Labels',\n  transforms: [cellWidth(20)],\n  renderer: Renderers.labels\n};\nvar health = {\n  name: 'Health',\n  param: 'he',\n  column: 'Health',\n  transforms: [sortable, cellWidth(10)],\n  renderer: Renderers.health\n};\nvar details = {\n  name: 'Details',\n  param: 'is',\n  column: 'Details',\n  transforms: [sortable, cellWidth(10)],\n  renderer: Renderers.details\n};\nvar serviceConfiguration = {\n  name: 'Configuration',\n  param: 'cv',\n  column: 'Configuration',\n  transforms: [sortable, cellWidth(10)],\n  renderer: Renderers.serviceConfiguration\n};\nvar istioObjectConfiguration = {\n  name: 'Configuration',\n  param: 'cv',\n  column: '状态',\n  transforms: [sortable, cellWidth(10)],\n  renderer: Renderers.istioConfiguration\n};\nvar workloadType = {\n  name: 'WorkloadType',\n  param: 'wt',\n  column: 'Type',\n  transforms: [sortable],\n  renderer: Renderers.workloadType\n};\nvar istioType = {\n  name: 'IstioType',\n  param: 'it',\n  column: '类型',\n  transforms: [sortable],\n  renderer: Renderers.istioType\n};\nexport var IstioTypes = {\n  gateway: {\n    name: 'Gateway',\n    url: 'gateways',\n    badge: PFBadges.Gateway\n  },\n  virtualservice: {\n    name: 'VirtualService',\n    url: 'virtualservices',\n    badge: PFBadges.VirtualService\n  },\n  destinationrule: {\n    name: 'DestinationRule',\n    url: 'destinationrules',\n    badge: PFBadges.DestinationRule\n  },\n  serviceentry: {\n    name: 'ServiceEntry',\n    url: 'serviceentries',\n    badge: PFBadges.ServiceEntry\n  },\n  rule: {\n    name: 'Rule',\n    url: 'rules',\n    badge: PFBadges.Rule\n  },\n  adapter: {\n    name: 'Adapter',\n    url: 'adapters',\n    badge: PFBadges.Adapter\n  },\n  template: {\n    name: 'Template',\n    url: 'templates',\n    badge: PFBadges.Template\n  },\n  instance: {\n    name: 'Instance',\n    url: 'instances',\n    badge: PFBadges.Instance\n  },\n  handler: {\n    name: 'Handler',\n    url: 'handlers',\n    badge: PFBadges.Handler\n  },\n  policy: {\n    name: 'Policy',\n    url: 'policies',\n    badge: PFBadges.Policy\n  },\n  meshpolicy: {\n    name: 'MeshPolicy',\n    url: 'meshpolicies',\n    badge: PFBadges.MeshPolicy\n  },\n  clusterrbacconfig: {\n    name: 'ClusterRbacConfig',\n    url: 'clusterrbacconfigs',\n    badge: PFBadges.ClusterRBACConfig\n  },\n  rbacconfig: {\n    name: 'RbacConfig',\n    url: 'rbacconfigs',\n    badge: PFBadges.RBACConfig\n  },\n  authorizationpolicy: {\n    name: 'AuthorizationPolicy',\n    url: 'authorizationpolicies',\n    badge: PFBadges.AuthorizationPolicy\n  },\n  sidecar: {\n    name: 'Sidecar',\n    url: 'sidecars',\n    badge: PFBadges.Sidecar\n  },\n  servicerole: {\n    name: 'ServiceRole',\n    url: 'serviceroles',\n    icon: PFBadges.ServiceRole\n  },\n  servicerolebinding: {\n    name: 'ServiceRoleBinding',\n    url: 'servicerolebindings',\n    badge: PFBadges.ServiceRoleBinding\n  },\n  peerauthentication: {\n    name: 'PeerAuthentication',\n    url: 'peerauthentications',\n    badge: PFBadges.PeerAuthentication\n  },\n  requestauthentication: {\n    name: 'RequestAuthentication',\n    url: 'requestauthentications',\n    badge: PFBadges.RequestAuthentication\n  },\n  workloadentry: {\n    name: 'WorkloadEntry',\n    url: 'workloadentries',\n    badge: PFBadges.WorkloadEntry\n  },\n  workloadgroup: {\n    name: 'WorkloadGroup',\n    url: 'workloadgroups',\n    badge: PFBadges.WorkloadGroup\n  },\n  envoyfilter: {\n    name: 'EnvoyFilter',\n    url: 'envoyfilters',\n    badge: PFBadges.EnvoyFilter\n  },\n  attributemanifest: {\n    name: 'AttributeManifest',\n    url: 'attributemanifests',\n    badge: PFBadges.AttributeManifest\n  }\n};\nvar namespaces = {\n  name: 'namespaces',\n  columns: [tlsStatus, nsItem, istioConfiguration, labels, status],\n  badge: PFBadges.Namespace\n};\nvar workloads = {\n  name: 'workloads',\n  columns: [health, item, namespace, workloadType, labels, details],\n  badge: PFBadges.Workload\n};\nvar applications = {\n  name: 'applications',\n  columns: [health, item, namespace, labels, details],\n  badge: PFBadges.App\n};\nvar services = {\n  name: 'services',\n  columns: [health, serviceItem, namespace, labels, serviceConfiguration, details],\n  badge: PFBadges.Service\n};\nvar istio = {\n  name: 'istio',\n  columns: [istioItem, namespace, istioType, istioObjectConfiguration]\n};\nvar conf = {\n  headerTable: true,\n  applications: applications,\n  workloads: workloads,\n  overview: namespaces,\n  services: services,\n  istio: istio\n};\nexport var config = deepFreeze(conf);","map":{"version":3,"sources":["/root/kiali-ui/src/components/VirtualList/Config.ts"],"names":["deepFreeze","cellWidth","sortable","textCenter","Renderers","isIstioNamespace","PFBadges","hasHealth","r","healthPromise","undefined","hasMissingSidecar","namespace","istioSidecar","tlsStatus","name","param","column","transforms","renderer","tls","istioConfiguration","istioConfig","status","cellTransforms","nsItem","item","serviceItem","istioItem","labels","health","details","serviceConfiguration","istioObjectConfiguration","workloadType","istioType","IstioTypes","gateway","url","badge","Gateway","virtualservice","VirtualService","destinationrule","DestinationRule","serviceentry","ServiceEntry","rule","Rule","adapter","Adapter","template","Template","instance","Instance","handler","Handler","policy","Policy","meshpolicy","MeshPolicy","clusterrbacconfig","ClusterRBACConfig","rbacconfig","RBACConfig","authorizationpolicy","AuthorizationPolicy","sidecar","Sidecar","servicerole","icon","ServiceRole","servicerolebinding","ServiceRoleBinding","peerauthentication","PeerAuthentication","requestauthentication","RequestAuthentication","workloadentry","WorkloadEntry","workloadgroup","WorkloadGroup","envoyfilter","EnvoyFilter","attributemanifest","AttributeManifest","namespaces","columns","Namespace","workloads","Workload","applications","App","services","Service","istio","conf","headerTable","overview","config"],"mappings":"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","sourcesContent":["import deepFreeze from 'deep-freeze';\nimport { cellWidth, sortable, textCenter } from '@patternfly/react-table';\n\nimport { AppListItem } from '../../types/AppList';\nimport { WorkloadListItem } from '../../types/Workload';\nimport { ServiceListItem } from '../../types/ServiceList';\nimport { IstioConfigItem } from '../../types/IstioConfigList';\nimport * as Renderers from './Renderers';\nimport { Health } from '../../types/Health';\nimport { isIstioNamespace } from 'config/ServerConfig';\nimport NamespaceInfo from '../../pages/Overview/NamespaceInfo';\nimport * as React from 'react';\nimport { StatefulFilters } from '../Filters/StatefulFilters';\nimport { PFBadges, PFBadgeType } from '../../components/Pf/PfBadges';\n\nexport type SortResource = AppListItem | WorkloadListItem | ServiceListItem;\nexport type TResource = SortResource | IstioConfigItem;\nexport type RenderResource = TResource | NamespaceInfo;\nexport type Renderer<R extends RenderResource> = (\n  item: R,\n  config: Resource,\n  badge: PFBadgeType,\n  health?: Health,\n  statefulFilter?: React.RefObject<StatefulFilters>\n) => JSX.Element | undefined;\n\n// Health type guard\nexport function hasHealth(r: RenderResource): r is SortResource {\n  return (r as SortResource).healthPromise !== undefined;\n}\n\nexport const hasMissingSidecar = (r: SortResource): boolean => {\n  return !isIstioNamespace(r.namespace) && !r.istioSidecar;\n};\n\ntype ResourceType<R extends RenderResource> = {\n  name: string;\n  column: string;\n  param?: string;\n  transforms?: any;\n  cellTransforms?: any;\n  renderer: Renderer<R>;\n};\n\n// NamespaceInfo\nconst tlsStatus: ResourceType<NamespaceInfo> = {\n  name: 'TLS',\n  param: 'tls',\n  column: 'TLS',\n  transforms: [sortable, cellWidth(5)],\n  renderer: Renderers.tls\n};\n\nconst istioConfiguration: ResourceType<NamespaceInfo> = {\n  name: 'IstioConfiguration',\n  param: 'ic',\n  column: 'Config',\n  transforms: [sortable, cellWidth(5)],\n  renderer: Renderers.istioConfig\n};\n\nconst status: ResourceType<NamespaceInfo> = {\n  name: 'Status',\n  param: 'h',\n  column: 'Status',\n  transforms: [sortable, cellWidth(40)],\n  cellTransforms: [textCenter],\n  renderer: Renderers.status\n};\n\nconst nsItem: ResourceType<NamespaceInfo> = {\n  name: 'Namespace',\n  param: 'ns',\n  column: 'Namespace',\n  transforms: [sortable],\n  renderer: Renderers.nsItem\n};\n// General\n\nconst item: ResourceType<TResource> = {\n  name: 'Item',\n  param: 'wn',\n  column: 'Name',\n  transforms: [sortable],\n  renderer: Renderers.item\n};\n\nconst serviceItem: ResourceType<ServiceListItem> = {\n  name: 'Item',\n  param: 'sn',\n  column: 'Name',\n  transforms: [sortable],\n  renderer: Renderers.item\n};\n\nconst istioItem: ResourceType<IstioConfigItem> = {\n  name: 'Item',\n  param: 'in',\n  column: 'Name',\n  transforms: [sortable],\n  renderer: Renderers.item\n};\n\nconst namespace: ResourceType<TResource> = {\n  name: 'Namespace',\n  param: 'ns',\n  column: 'Namespace',\n  transforms: [sortable],\n  renderer: Renderers.namespace\n};\n\nconst labels: ResourceType<RenderResource> = {\n  name: 'Labels',\n  param: 'lb',\n  column: 'Labels',\n  transforms: [cellWidth(20)],\n  renderer: Renderers.labels\n};\n\nconst health: ResourceType<TResource> = {\n  name: 'Health',\n  param: 'he',\n  column: 'Health',\n  transforms: [sortable, cellWidth(10)],\n  renderer: Renderers.health\n};\n\nconst details: ResourceType<AppListItem | WorkloadListItem | ServiceListItem> = {\n  name: 'Details',\n  param: 'is',\n  column: 'Details',\n  transforms: [sortable, cellWidth(10)],\n  renderer: Renderers.details\n};\n\nconst serviceConfiguration: ResourceType<ServiceListItem> = {\n  name: 'Configuration',\n  param: 'cv',\n  column: 'Configuration',\n  transforms: [sortable, cellWidth(10)],\n  renderer: Renderers.serviceConfiguration\n};\n\nconst istioObjectConfiguration: ResourceType<IstioConfigItem> = {\n  name: 'Configuration',\n  param: 'cv',\n  column: '状态',\n  transforms: [sortable, cellWidth(10)],\n  renderer: Renderers.istioConfiguration\n};\n\nconst workloadType: ResourceType<WorkloadListItem> = {\n  name: 'WorkloadType',\n  param: 'wt',\n  column: 'Type',\n  transforms: [sortable],\n  renderer: Renderers.workloadType\n};\n\nconst istioType: ResourceType<IstioConfigItem> = {\n  name: 'IstioType',\n  param: 'it',\n  column: '类型',\n  transforms: [sortable],\n  renderer: Renderers.istioType\n};\n\ntype istioConfigType = {\n  name: string;\n  url: string;\n  badge: PFBadgeType;\n};\n\nexport const IstioTypes = {\n  gateway: { name: 'Gateway', url: 'gateways', badge: PFBadges.Gateway } as istioConfigType,\n  virtualservice: { name: 'VirtualService', url: 'virtualservices', badge: PFBadges.VirtualService } as istioConfigType,\n  destinationrule: {\n    name: 'DestinationRule',\n    url: 'destinationrules',\n    badge: PFBadges.DestinationRule\n  } as istioConfigType,\n  serviceentry: { name: 'ServiceEntry', url: 'serviceentries', badge: PFBadges.ServiceEntry } as istioConfigType,\n  rule: { name: 'Rule', url: 'rules', badge: PFBadges.Rule } as istioConfigType,\n  adapter: { name: 'Adapter', url: 'adapters', badge: PFBadges.Adapter } as istioConfigType,\n  template: { name: 'Template', url: 'templates', badge: PFBadges.Template } as istioConfigType,\n  instance: { name: 'Instance', url: 'instances', badge: PFBadges.Instance } as istioConfigType,\n  handler: { name: 'Handler', url: 'handlers', badge: PFBadges.Handler } as istioConfigType,\n  policy: { name: 'Policy', url: 'policies', badge: PFBadges.Policy } as istioConfigType,\n  meshpolicy: { name: 'MeshPolicy', url: 'meshpolicies', badge: PFBadges.MeshPolicy } as istioConfigType,\n  clusterrbacconfig: {\n    name: 'ClusterRbacConfig',\n    url: 'clusterrbacconfigs',\n    badge: PFBadges.ClusterRBACConfig\n  } as istioConfigType,\n  rbacconfig: { name: 'RbacConfig', url: 'rbacconfigs', badge: PFBadges.RBACConfig } as istioConfigType,\n  authorizationpolicy: {\n    name: 'AuthorizationPolicy',\n    url: 'authorizationpolicies',\n    badge: PFBadges.AuthorizationPolicy\n  } as istioConfigType,\n  sidecar: { name: 'Sidecar', url: 'sidecars', badge: PFBadges.Sidecar } as istioConfigType,\n  servicerole: { name: 'ServiceRole', url: 'serviceroles', icon: PFBadges.ServiceRole },\n  servicerolebinding: {\n    name: 'ServiceRoleBinding',\n    url: 'servicerolebindings',\n    badge: PFBadges.ServiceRoleBinding\n  } as istioConfigType,\n  peerauthentication: {\n    name: 'PeerAuthentication',\n    url: 'peerauthentications',\n    badge: PFBadges.PeerAuthentication\n  } as istioConfigType,\n  requestauthentication: {\n    name: 'RequestAuthentication',\n    url: 'requestauthentications',\n    badge: PFBadges.RequestAuthentication\n  } as istioConfigType,\n  workloadentry: { name: 'WorkloadEntry', url: 'workloadentries', badge: PFBadges.WorkloadEntry } as istioConfigType,\n  workloadgroup: { name: 'WorkloadGroup', url: 'workloadgroups', badge: PFBadges.WorkloadGroup } as istioConfigType,\n  envoyfilter: { name: 'EnvoyFilter', url: 'envoyfilters', badge: PFBadges.EnvoyFilter } as istioConfigType,\n  attributemanifest: {\n    name: 'AttributeManifest',\n    url: 'attributemanifests',\n    badge: PFBadges.AttributeManifest\n  } as istioConfigType\n};\n\nexport type Resource = {\n  name: string;\n  columns: ResourceType<any>[];\n  caption?: string;\n  badge?: PFBadgeType;\n};\n\nconst namespaces: Resource = {\n  name: 'namespaces',\n  columns: [tlsStatus, nsItem, istioConfiguration, labels, status],\n  badge: PFBadges.Namespace\n};\n\nconst workloads: Resource = {\n  name: 'workloads',\n  columns: [health, item, namespace, workloadType, labels, details],\n  badge: PFBadges.Workload\n};\n\nconst applications: Resource = {\n  name: 'applications',\n  columns: [health, item, namespace, labels, details],\n  badge: PFBadges.App\n};\n\nconst services: Resource = {\n  name: 'services',\n  columns: [health, serviceItem, namespace, labels, serviceConfiguration, details],\n  badge: PFBadges.Service\n};\n\nconst istio: Resource = {\n  name: 'istio',\n  columns: [istioItem, namespace, istioType, istioObjectConfiguration]\n};\n\nconst conf = {\n  headerTable: true,\n  applications: applications,\n  workloads: workloads,\n  overview: namespaces,\n  services: services,\n  istio: istio\n};\n\nexport const config = deepFreeze(conf) as typeof conf;\n"]},"metadata":{},"sourceType":"module"}