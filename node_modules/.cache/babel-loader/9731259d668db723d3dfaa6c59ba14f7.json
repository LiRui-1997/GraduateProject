{"ast":null,"code":"import _slicedToArray from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/root/kiali-ui/src/components/SimplerSelect.tsx\";\n\nimport * as React from 'react';\nimport { Select } from '@patternfly/react-core';\n\nvar SimplerSelect = function SimplerSelect(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isExpanded = _React$useState2[0],\n      setExpanded = _React$useState2[1];\n\n  return /*#__PURE__*/React.createElement(Select, Object.assign({}, props, {\n    onToggle: function onToggle(isExpanded) {\n      if (props.onToggle) {\n        props.onToggle(isExpanded);\n      }\n\n      setExpanded(isExpanded);\n    },\n    onSelect: function onSelect(_, selection, isPlaceholder) {\n      setExpanded(false);\n\n      if (!isPlaceholder && props.onSelect) {\n        props.onSelect(selection);\n      }\n    },\n    isExpanded: isExpanded,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }), props.children);\n};\n\nexport default SimplerSelect;","map":{"version":3,"sources":["/root/kiali-ui/src/components/SimplerSelect.tsx"],"names":["React","Select","SimplerSelect","props","useState","isExpanded","setExpanded","onToggle","_","selection","isPlaceholder","onSelect","children"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAwD,wBAAxD;;AAOA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAkB;AACtC,wBAAkCH,KAAK,CAACI,QAAN,CAAe,KAAf,CAAlC;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,WAAnB;;AACA,sBACE,oBAAC,MAAD,oBACMH,KADN;AAEE,IAAA,QAAQ,EAAE,kBAAAE,UAAU,EAAI;AACtB,UAAIF,KAAK,CAACI,QAAV,EAAoB;AAClBJ,QAAAA,KAAK,CAACI,QAAN,CAAeF,UAAf;AACD;;AACDC,MAAAA,WAAW,CAACD,UAAD,CAAX;AACD,KAPH;AAQE,IAAA,QAAQ,EAAE,kBAACG,CAAD,EAAIC,SAAJ,EAAeC,aAAf,EAAiC;AACzCJ,MAAAA,WAAW,CAAC,KAAD,CAAX;;AACA,UAAI,CAACI,aAAD,IAAkBP,KAAK,CAACQ,QAA5B,EAAsC;AACpCR,QAAAA,KAAK,CAACQ,QAAN,CAAeF,SAAf;AACD;AACF,KAbH;AAcE,IAAA,UAAU,EAAEJ,UAdd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAgBGF,KAAK,CAACS,QAhBT,CADF;AAoBD,CAtBD;;AAwBA,eAAeV,aAAf","sourcesContent":["import * as React from 'react';\nimport { Select, SelectOptionObject, SelectProps } from '@patternfly/react-core';\n\ntype Props = Omit<Omit<Omit<SelectProps, 'isExpanded'>, 'onSelect'>, 'onToggle'> & {\n  onSelect?: (selection: string | SelectOptionObject) => void;\n  onToggle?: (isExpanded: boolean) => void;\n};\n\nconst SimplerSelect = (props: Props) => {\n  const [isExpanded, setExpanded] = React.useState(false);\n  return (\n    <Select\n      {...props}\n      onToggle={isExpanded => {\n        if (props.onToggle) {\n          props.onToggle(isExpanded);\n        }\n        setExpanded(isExpanded);\n      }}\n      onSelect={(_, selection, isPlaceholder) => {\n        setExpanded(false);\n        if (!isPlaceholder && props.onSelect) {\n          props.onSelect(selection);\n        }\n      }}\n      isExpanded={isExpanded}\n    >\n      {props.children}\n    </Select>\n  );\n};\n\nexport default SimplerSelect;\n"]},"metadata":{},"sourceType":"module"}