{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _pt from \"prop-types\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ChipGroup/chip-group';\nimport { css } from '@patternfly/react-styles';\nimport { Chip } from './Chip';\nimport { fillTemplate } from '../../helpers';\nexport var ChipGroupContext = React.createContext('');\nexport var ChipGroup = /*#__PURE__*/function (_React$Component) {\n  _inherits(ChipGroup, _React$Component);\n\n  var _super = _createSuper(ChipGroup);\n\n  function ChipGroup(props) {\n    var _this;\n\n    _classCallCheck(this, ChipGroup);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleCollapse\", function () {\n      _this.setState(function (prevState) {\n        return {\n          isOpen: !prevState.isOpen\n        };\n      });\n    });\n\n    _this.state = {\n      isOpen: _this.props.defaultIsOpen\n    };\n    return _this;\n  }\n\n  _createClass(ChipGroup, [{\n    key: \"renderToolbarGroup\",\n    value: function renderToolbarGroup() {\n      var isOpen = this.state.isOpen;\n      var _this$props$headingLe = this.props.headingLevel,\n          headingLevel = _this$props$headingLe === void 0 ? 'h4' : _this$props$headingLe;\n      return React.createElement(ChipGroupContext.Provider, {\n        value: headingLevel\n      }, React.createElement(InnerChipGroup, _extends({}, this.props, {\n        isOpen: isOpen,\n        onToggleCollapse: this.toggleCollapse\n      })));\n    }\n  }, {\n    key: \"renderChipGroup\",\n    value: function renderChipGroup() {\n      var className = this.props.className;\n      var isOpen = this.state.isOpen;\n      return React.createElement(\"ul\", {\n        className: css(styles.chipGroup, className)\n      }, React.createElement(InnerChipGroup, _extends({}, this.props, {\n        isOpen: isOpen,\n        onToggleCollapse: this.toggleCollapse\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          withToolbar = _this$props.withToolbar,\n          children = _this$props.children;\n\n      if (React.Children.count(children)) {\n        return withToolbar ? this.renderToolbarGroup() : this.renderChipGroup();\n      }\n\n      return null;\n    }\n  }]);\n\n  return ChipGroup;\n}(React.Component);\n\n_defineProperty(ChipGroup, \"propTypes\", {\n  children: _pt.node,\n  className: _pt.string,\n  defaultIsOpen: _pt.bool,\n  expandedText: _pt.string,\n  collapsedText: _pt.string,\n  withToolbar: _pt.bool,\n  headingLevel: _pt.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']),\n  numChips: _pt.number\n});\n\n_defineProperty(ChipGroup, \"defaultProps\", {\n  className: '',\n  expandedText: 'Show Less',\n  collapsedText: '${remaining} more',\n  withToolbar: false,\n  defaultIsOpen: false,\n  numChips: 3\n});\n\nvar InnerChipGroup = function InnerChipGroup(props) {\n  var children = props.children,\n      expandedText = props.expandedText,\n      isOpen = props.isOpen,\n      onToggleCollapse = props.onToggleCollapse,\n      collapsedText = props.collapsedText,\n      withToolbar = props.withToolbar,\n      numChips = props.numChips;\n  var collapsedTextResult = fillTemplate(collapsedText, {\n    remaining: React.Children.count(children) - numChips\n  });\n  var mappedChildren = React.Children.map(children, function (c) {\n    var child = c;\n\n    if (withToolbar) {\n      return React.cloneElement(child, {\n        children: React.Children.toArray(child.props.children).map(function (chip) {\n          return React.cloneElement(chip, {\n            component: 'li'\n          });\n        })\n      });\n    }\n\n    return React.cloneElement(child, {\n      component: 'li'\n    });\n  });\n  return React.createElement(React.Fragment, null, isOpen ? React.createElement(React.Fragment, null, mappedChildren) : React.createElement(React.Fragment, null, mappedChildren.map(function (child, i) {\n    if (i < numChips) {\n      return child;\n    }\n  })), React.Children.count(children) > numChips && React.createElement(Chip, {\n    isOverflowChip: true,\n    onClick: onToggleCollapse,\n    component: withToolbar ? 'div' : 'li'\n  }, isOpen ? expandedText : collapsedTextResult));\n};\n\nInnerChipGroup.propTypes = {\n  children: _pt.node,\n  className: _pt.string,\n  defaultIsOpen: _pt.bool,\n  expandedText: _pt.string,\n  collapsedText: _pt.string,\n  withToolbar: _pt.bool,\n  headingLevel: _pt.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']),\n  numChips: _pt.number,\n  isOpen: _pt.bool.isRequired,\n  onToggleCollapse: _pt.func.isRequired\n};","map":{"version":3,"sources":["/root/kiali-ui/node_modules/@patternfly/react-core/dist/esm/components/ChipGroup/ChipGroup.js"],"names":["_pt","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","React","styles","css","Chip","fillTemplate","ChipGroupContext","createContext","ChipGroup","props","setState","prevState","isOpen","state","defaultIsOpen","headingLevel","createElement","Provider","InnerChipGroup","onToggleCollapse","toggleCollapse","className","chipGroup","withToolbar","children","Children","count","renderToolbarGroup","renderChipGroup","Component","node","string","bool","expandedText","collapsedText","oneOf","numChips","number","collapsedTextResult","remaining","mappedChildren","map","c","child","cloneElement","toArray","chip","component","Fragment","isOverflowChip","onClick","propTypes","isRequired","func"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ChipGroup/chip-group';\nimport { css } from '@patternfly/react-styles';\nimport { Chip } from './Chip';\nimport { fillTemplate } from '../../helpers';\nexport const ChipGroupContext = React.createContext('');\nexport class ChipGroup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"toggleCollapse\", () => {\n      this.setState(prevState => ({\n        isOpen: !prevState.isOpen\n      }));\n    });\n\n    this.state = {\n      isOpen: this.props.defaultIsOpen\n    };\n  }\n\n  renderToolbarGroup() {\n    const {\n      isOpen\n    } = this.state;\n    const {\n      headingLevel = 'h4'\n    } = this.props;\n    return React.createElement(ChipGroupContext.Provider, {\n      value: headingLevel\n    }, React.createElement(InnerChipGroup, _extends({}, this.props, {\n      isOpen: isOpen,\n      onToggleCollapse: this.toggleCollapse\n    })));\n  }\n\n  renderChipGroup() {\n    const {\n      className\n    } = this.props;\n    const {\n      isOpen\n    } = this.state;\n    return React.createElement(\"ul\", {\n      className: css(styles.chipGroup, className)\n    }, React.createElement(InnerChipGroup, _extends({}, this.props, {\n      isOpen: isOpen,\n      onToggleCollapse: this.toggleCollapse\n    })));\n  }\n\n  render() {\n    const {\n      withToolbar,\n      children\n    } = this.props;\n\n    if (React.Children.count(children)) {\n      return withToolbar ? this.renderToolbarGroup() : this.renderChipGroup();\n    }\n\n    return null;\n  }\n\n}\n\n_defineProperty(ChipGroup, \"propTypes\", {\n  children: _pt.node,\n  className: _pt.string,\n  defaultIsOpen: _pt.bool,\n  expandedText: _pt.string,\n  collapsedText: _pt.string,\n  withToolbar: _pt.bool,\n  headingLevel: _pt.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']),\n  numChips: _pt.number\n});\n\n_defineProperty(ChipGroup, \"defaultProps\", {\n  className: '',\n  expandedText: 'Show Less',\n  collapsedText: '${remaining} more',\n  withToolbar: false,\n  defaultIsOpen: false,\n  numChips: 3\n});\n\nconst InnerChipGroup = props => {\n  const {\n    children,\n    expandedText,\n    isOpen,\n    onToggleCollapse,\n    collapsedText,\n    withToolbar,\n    numChips\n  } = props;\n  const collapsedTextResult = fillTemplate(collapsedText, {\n    remaining: React.Children.count(children) - numChips\n  });\n  const mappedChildren = React.Children.map(children, c => {\n    const child = c;\n\n    if (withToolbar) {\n      return React.cloneElement(child, {\n        children: React.Children.toArray(child.props.children).map(chip => React.cloneElement(chip, {\n          component: 'li'\n        }))\n      });\n    }\n\n    return React.cloneElement(child, {\n      component: 'li'\n    });\n  });\n  return React.createElement(React.Fragment, null, isOpen ? React.createElement(React.Fragment, null, mappedChildren) : React.createElement(React.Fragment, null, mappedChildren.map((child, i) => {\n    if (i < numChips) {\n      return child;\n    }\n  })), React.Children.count(children) > numChips && React.createElement(Chip, {\n    isOverflowChip: true,\n    onClick: onToggleCollapse,\n    component: withToolbar ? 'div' : 'li'\n  }, isOpen ? expandedText : collapsedTextResult));\n};\n\nInnerChipGroup.propTypes = {\n  children: _pt.node,\n  className: _pt.string,\n  defaultIsOpen: _pt.bool,\n  expandedText: _pt.string,\n  collapsedText: _pt.string,\n  withToolbar: _pt.bool,\n  headingLevel: _pt.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']),\n  numChips: _pt.number,\n  isOpen: _pt.bool.isRequired,\n  onToggleCollapse: _pt.func.isRequired\n};\n//# sourceMappingURL=ChipGroup.js.map"]},"metadata":{},"sourceType":"module"}