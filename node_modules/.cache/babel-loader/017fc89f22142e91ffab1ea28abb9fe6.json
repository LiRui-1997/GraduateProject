{"ast":null,"code":"// Don't alter the index order without also updating TrafficListComponent.onSort\nexport var sortFields = [{\n  // index 0 is default sort\n  id: 'trafficstatus',\n  title: 'Traffic Status',\n  isNumeric: false,\n  param: 'ts',\n  compare: function compare(a, b) {\n    return b.healthStatus.status.priority - a.healthStatus.status.priority;\n  } // worst health first asc\n\n}, {\n  id: 'name',\n  title: 'Name',\n  isNumeric: false,\n  param: 'na',\n  compare: function compare(a, b) {\n    return a.node.name.localeCompare(b.node.name);\n  }\n}, {\n  id: 'rate',\n  title: 'Rate',\n  isNumeric: false,\n  param: 'ra',\n  compare: function compare(a, b) {\n    return a.trafficRate.localeCompare(b.trafficRate);\n  }\n}, {\n  id: 'percent',\n  title: 'Percent Success',\n  isNumeric: false,\n  param: 'pe',\n  compare: function compare(a, b) {\n    return a.trafficPercentSuccess.localeCompare(b.trafficPercentSuccess);\n  }\n}, {\n  id: 'protocol',\n  title: 'Protocol',\n  isNumeric: false,\n  param: 'pr',\n  compare: function compare(a, b) {\n    return a.protocol.localeCompare(b.protocol);\n  }\n}];\nexport var availableFilters = [];","map":{"version":3,"sources":["/root/GraduateProject/src/components/TrafficList/FiltersAndSorts.ts"],"names":["sortFields","id","title","isNumeric","param","compare","a","b","healthStatus","status","priority","node","name","localeCompare","trafficRate","trafficPercentSuccess","protocol","availableFilters"],"mappings":"AAIA;AACA,OAAO,IAAMA,UAAwC,GAAG,CACtD;AACE;AACAC,EAAAA,EAAE,EAAE,eAFN;AAGEC,EAAAA,KAAK,EAAE,gBAHT;AAIEC,EAAAA,SAAS,EAAE,KAJb;AAKEC,EAAAA,KAAK,EAAE,IALT;AAMEC,EAAAA,OAAO,EAAE,iBAACC,CAAD,EAAqBC,CAArB;AAAA,WAA4CA,CAAC,CAACC,YAAF,CAAeC,MAAf,CAAsBC,QAAtB,GAAiCJ,CAAC,CAACE,YAAF,CAAeC,MAAf,CAAsBC,QAAnG;AAAA,GANX,CAMuH;;AANvH,CADsD,EAStD;AACET,EAAAA,EAAE,EAAE,MADN;AAEEC,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,SAAS,EAAE,KAHb;AAIEC,EAAAA,KAAK,EAAE,IAJT;AAKEC,EAAAA,OAAO,EAAE,iBAACC,CAAD,EAAqBC,CAArB;AAAA,WAA4CD,CAAC,CAACK,IAAF,CAAOC,IAAP,CAAYC,aAAZ,CAA0BN,CAAC,CAACI,IAAF,CAAOC,IAAjC,CAA5C;AAAA;AALX,CATsD,EAgBtD;AACEX,EAAAA,EAAE,EAAE,MADN;AAEEC,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,SAAS,EAAE,KAHb;AAIEC,EAAAA,KAAK,EAAE,IAJT;AAKEC,EAAAA,OAAO,EAAE,iBAACC,CAAD,EAAqBC,CAArB;AAAA,WAA4CD,CAAC,CAACQ,WAAF,CAAcD,aAAd,CAA4BN,CAAC,CAACO,WAA9B,CAA5C;AAAA;AALX,CAhBsD,EAuBtD;AACEb,EAAAA,EAAE,EAAE,SADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,SAAS,EAAE,KAHb;AAIEC,EAAAA,KAAK,EAAE,IAJT;AAKEC,EAAAA,OAAO,EAAE,iBAACC,CAAD,EAAqBC,CAArB;AAAA,WAA4CD,CAAC,CAACS,qBAAF,CAAwBF,aAAxB,CAAsCN,CAAC,CAACQ,qBAAxC,CAA5C;AAAA;AALX,CAvBsD,EA8BtD;AACEd,EAAAA,EAAE,EAAE,UADN;AAEEC,EAAAA,KAAK,EAAE,UAFT;AAGEC,EAAAA,SAAS,EAAE,KAHb;AAIEC,EAAAA,KAAK,EAAE,IAJT;AAKEC,EAAAA,OAAO,EAAE,iBAACC,CAAD,EAAqBC,CAArB;AAAA,WAA4CD,CAAC,CAACU,QAAF,CAAWH,aAAX,CAAyBN,CAAC,CAACS,QAA3B,CAA5C;AAAA;AALX,CA9BsD,CAAjD;AAuCP,OAAO,IAAMC,gBAA8B,GAAG,EAAvC","sourcesContent":["import { FilterType } from '../../types/Filters';\nimport { SortField } from '../../types/SortFilters';\nimport { TrafficListItem } from './TrafficListComponent';\n\n// Don't alter the index order without also updating TrafficListComponent.onSort\nexport const sortFields: SortField<TrafficListItem>[] = [\n  {\n    // index 0 is default sort\n    id: 'trafficstatus',\n    title: 'Traffic Status',\n    isNumeric: false,\n    param: 'ts',\n    compare: (a: TrafficListItem, b: TrafficListItem) => b.healthStatus.status.priority - a.healthStatus.status.priority // worst health first asc\n  },\n  {\n    id: 'name',\n    title: 'Name',\n    isNumeric: false,\n    param: 'na',\n    compare: (a: TrafficListItem, b: TrafficListItem) => a.node.name.localeCompare(b.node.name)\n  },\n  {\n    id: 'rate',\n    title: 'Rate',\n    isNumeric: false,\n    param: 'ra',\n    compare: (a: TrafficListItem, b: TrafficListItem) => a.trafficRate.localeCompare(b.trafficRate)\n  },\n  {\n    id: 'percent',\n    title: 'Percent Success',\n    isNumeric: false,\n    param: 'pe',\n    compare: (a: TrafficListItem, b: TrafficListItem) => a.trafficPercentSuccess.localeCompare(b.trafficPercentSuccess)\n  },\n  {\n    id: 'protocol',\n    title: 'Protocol',\n    isNumeric: false,\n    param: 'pr',\n    compare: (a: TrafficListItem, b: TrafficListItem) => a.protocol.localeCompare(b.protocol)\n  }\n];\n\nexport const availableFilters: FilterType[] = [];\n"]},"metadata":{},"sourceType":"module"}