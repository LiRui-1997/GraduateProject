{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/components/Validations/ValidationServiceSummary.tsx\";\nimport * as React from 'react';\nimport { ValidationTypes } from '../../types/IstioObjects';\nimport ServiceValidationSummary from './ServiceValidationSummary';\nexport var ValidationServiceSummary = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ValidationServiceSummary, _React$PureComponent);\n\n  var _super = _createSuper(ValidationServiceSummary);\n\n  function ValidationServiceSummary() {\n    var _this;\n\n    _classCallCheck(this, ValidationServiceSummary);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.numberOfChecks = function (type) {\n      var numCheck = 0;\n\n      _this.props.validations.forEach(function (validation) {\n        if (validation.checks) {\n          numCheck += validation.checks.filter(function (i) {\n            return i.severity === type;\n          }).length;\n        }\n      });\n\n      return numCheck;\n    };\n\n    return _this;\n  }\n\n  _createClass(ValidationServiceSummary, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ServiceValidationSummary, {\n        id: this.props.id,\n        errors: this.numberOfChecks(ValidationTypes.Error),\n        warnings: this.numberOfChecks(ValidationTypes.Warning),\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return ValidationServiceSummary;\n}(React.PureComponent);","map":{"version":3,"sources":["/root/GraduateProject/src/components/Validations/ValidationServiceSummary.tsx"],"names":["React","ValidationTypes","ServiceValidationSummary","ValidationServiceSummary","numberOfChecks","type","numCheck","props","validations","forEach","validation","checks","filter","i","severity","length","id","Error","Warning","style","PureComponent"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAA2BC,eAA3B,QAAkD,0BAAlD;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AASA,WAAaC,wBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,UACEC,cADF,GACmB,UAACC,IAAD,EAA2B;AAC1C,UAAIC,QAAQ,GAAG,CAAf;;AACA,YAAKC,KAAL,CAAWC,WAAX,CAAuBC,OAAvB,CAA+B,UAAAC,UAAU,EAAI;AAC3C,YAAIA,UAAU,CAACC,MAAf,EAAuB;AACrBL,UAAAA,QAAQ,IAAII,UAAU,CAACC,MAAX,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACC,QAAF,KAAeT,IAAnB;AAAA,WAA1B,EAAmDU,MAA/D;AACD;AACF,OAJD;;AAKA,aAAOT,QAAP;AACD,KATH;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAWE,kBAAS;AACP,0BACE,oBAAC,wBAAD;AACE,QAAA,EAAE,EAAE,KAAKC,KAAL,CAAWS,EADjB;AAEE,QAAA,MAAM,EAAE,KAAKZ,cAAL,CAAoBH,eAAe,CAACgB,KAApC,CAFV;AAGE,QAAA,QAAQ,EAAE,KAAKb,cAAL,CAAoBH,eAAe,CAACiB,OAApC,CAHZ;AAIE,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWY,KAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD;AApBH;;AAAA;AAAA,EAA8CnB,KAAK,CAACoB,aAApD","sourcesContent":["import * as React from 'react';\nimport { ObjectValidation, ValidationTypes } from '../../types/IstioObjects';\nimport ServiceValidationSummary from './ServiceValidationSummary';\nimport { CSSProperties } from 'react';\n\ninterface Props {\n  id: string;\n  validations: ObjectValidation[];\n  style?: CSSProperties;\n}\n\nexport class ValidationServiceSummary extends React.PureComponent<Props> {\n  numberOfChecks = (type: ValidationTypes) => {\n    let numCheck = 0;\n    this.props.validations.forEach(validation => {\n      if (validation.checks) {\n        numCheck += validation.checks.filter(i => i.severity === type).length;\n      }\n    });\n    return numCheck;\n  };\n\n  render() {\n    return (\n      <ServiceValidationSummary\n        id={this.props.id}\n        errors={this.numberOfChecks(ValidationTypes.Error)}\n        warnings={this.numberOfChecks(ValidationTypes.Warning)}\n        style={this.props.style}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}