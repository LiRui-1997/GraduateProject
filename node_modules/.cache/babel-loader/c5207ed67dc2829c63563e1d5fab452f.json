{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/pages/ServiceDetails/ServiceInfo.tsx\";\nimport * as React from 'react';\nimport { style } from 'typestyle';\nimport { Grid, GridItem, Stack, StackItem } from '@patternfly/react-core';\nimport ServiceDescription from './ServiceDescription';\nimport { RenderComponentScroll } from '../../components/Nav/Page';\nimport { PromisesRegistry } from 'utils/CancelablePromises';\nimport GraphDataSource from 'services/GraphDataSource';\nimport { drToIstioItems, vsToIstioItems, gwToIstioItems } from '../../types/IstioConfigList';\nimport { connect } from 'react-redux';\nimport { durationSelector, meshWideMTLSEnabledSelector } from '../../store/Selectors';\nimport MiniGraphCard from '../../components/CytoscapeGraph/MiniGraphCard';\nimport IstioConfigCard from '../../components/IstioConfigCard/IstioConfigCard';\nimport ServiceNetwork from './ServiceNetwork';\nimport history, { URLParam } from '../../app/History';\nvar fullHeightStyle = style({\n  height: '100%'\n});\n\nvar ServiceInfo = /*#__PURE__*/function (_React$Component) {\n  _inherits(ServiceInfo, _React$Component);\n\n  var _super = _createSuper(ServiceInfo);\n\n  function ServiceInfo(props) {\n    var _this;\n\n    _classCallCheck(this, ServiceInfo);\n\n    _this = _super.call(this, props);\n    _this.promises = new PromisesRegistry();\n    _this.graphDataSource = new GraphDataSource();\n\n    _this.goToMetrics = function (e) {\n      if (e.source !== e.target) {\n        var direction = e.source === _this.props.service ? 'outbound' : 'inbound';\n        var destination = direction === 'inbound' ? 'source_canonical_service' : 'destination_canonical_service';\n        var urlParams = new URLSearchParams(history.location.search);\n        urlParams.set('tab', 'metrics');\n        urlParams.set(URLParam.BY_LABELS, destination + '=' + (e.source === _this.props.service ? e.target : e.source));\n        history.replace(history.location.pathname + '?' + urlParams.toString());\n      }\n    };\n\n    _this.fetchBackend = function () {\n      if (!_this.props.serviceDetails) {\n        return;\n      }\n\n      _this.promises.cancelAll();\n\n      _this.graphDataSource.fetchForService(_this.props.duration, _this.props.namespace, _this.props.service);\n    };\n\n    _this.state = {\n      tabHeight: 300\n    };\n    return _this;\n  }\n\n  _createClass(ServiceInfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchBackend();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prev) {\n      if (prev.duration !== this.props.duration || prev.serviceDetails !== this.props.serviceDetails) {\n        this.fetchBackend();\n      }\n    }\n  }, {\n    key: \"getServiceValidation\",\n    value: function getServiceValidation() {\n      if (this.props.validations && this.props.validations.service && this.props.serviceDetails) {\n        return this.props.validations.service[this.props.serviceDetails.service.name];\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$serviceDe,\n          _this$props$serviceDe2,\n          _this$props,\n          _this$props$serviceDe3,\n          _this$props2,\n          _this2 = this;\n\n      var vsIstioConfigItems = ((_this$props$serviceDe = this.props.serviceDetails) === null || _this$props$serviceDe === void 0 ? void 0 : _this$props$serviceDe.virtualServices) ? vsToIstioItems(this.props.serviceDetails.virtualServices.items, this.props.serviceDetails.validations) : [];\n      var drIstioConfigItems = ((_this$props$serviceDe2 = this.props.serviceDetails) === null || _this$props$serviceDe2 === void 0 ? void 0 : _this$props$serviceDe2.destinationRules) ? drToIstioItems(this.props.serviceDetails.destinationRules.items, this.props.serviceDetails.validations) : [];\n      var gwIstioConfigItems = ((_this$props = this.props) === null || _this$props === void 0 ? void 0 : _this$props.gateways) && ((_this$props$serviceDe3 = this.props.serviceDetails) === null || _this$props$serviceDe3 === void 0 ? void 0 : _this$props$serviceDe3.virtualServices) ? gwToIstioItems((_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : _this$props2.gateways, this.props.serviceDetails.virtualServices.items, this.props.serviceDetails.validations) : [];\n      var istioConfigItems = gwIstioConfigItems.concat(vsIstioConfigItems.concat(drIstioConfigItems)); // RenderComponentScroll handles height to provide an inner scroll combined with tabs\n      // This height needs to be propagated to minigraph to proper resize in height\n      // Graph resizes correctly on width\n\n      var height = this.state.tabHeight ? this.state.tabHeight - 115 : 300;\n      var graphContainerStyle = style({\n        width: '100%',\n        height: height\n      });\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RenderComponentScroll, {\n        onResize: function onResize(height) {\n          return _this2.setState({\n            tabHeight: height\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        gutter: 'md',\n        className: fullHeightStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        span: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Stack, {\n        gutter: \"md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(StackItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ServiceDescription, {\n        namespace: this.props.namespace,\n        serviceDetails: this.props.serviceDetails,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }\n      })), this.props.serviceDetails && /*#__PURE__*/React.createElement(ServiceNetwork, {\n        serviceDetails: this.props.serviceDetails,\n        gateways: this.props.gateways,\n        validations: this.getServiceValidation(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(StackItem, {\n        style: {\n          paddingBottom: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IstioConfigCard, {\n        name: this.props.service,\n        items: istioConfigItems,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 19\n        }\n      })))), /*#__PURE__*/React.createElement(GridItem, {\n        span: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MiniGraphCard, {\n        dataSource: this.graphDataSource,\n        mtlsEnabled: this.props.mtlsEnabled,\n        onEdgeTap: this.goToMetrics,\n        graphContainerStyle: graphContainerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return ServiceInfo;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    duration: durationSelector(state),\n    lastRefreshAt: state.globalState.lastRefreshAt,\n    mtlsEnabled: meshWideMTLSEnabledSelector(state)\n  };\n};\n\nvar ServiceInfoContainer = connect(mapStateToProps)(ServiceInfo);\nexport default ServiceInfoContainer;","map":{"version":3,"sources":["/root/kiali-ui/src/pages/ServiceDetails/ServiceInfo.tsx"],"names":["React","style","Grid","GridItem","Stack","StackItem","ServiceDescription","RenderComponentScroll","PromisesRegistry","GraphDataSource","drToIstioItems","vsToIstioItems","gwToIstioItems","connect","durationSelector","meshWideMTLSEnabledSelector","MiniGraphCard","IstioConfigCard","ServiceNetwork","history","URLParam","fullHeightStyle","height","ServiceInfo","props","promises","graphDataSource","goToMetrics","e","source","target","direction","service","destination","urlParams","URLSearchParams","location","search","set","BY_LABELS","replace","pathname","toString","fetchBackend","serviceDetails","cancelAll","fetchForService","duration","namespace","state","tabHeight","prev","validations","name","undefined","vsIstioConfigItems","virtualServices","items","drIstioConfigItems","destinationRules","gwIstioConfigItems","gateways","istioConfigItems","concat","graphContainerStyle","width","setState","getServiceValidation","paddingBottom","mtlsEnabled","Component","mapStateToProps","lastRefreshAt","globalState","ServiceInfoContainer"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAsB,WAAtB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,KAAzB,EAAgCC,SAAhC,QAAiD,wBAAjD;AAEA,OAAOC,kBAAP,MAA+B,sBAA/B;AAGA,SAASC,qBAAT,QAAsC,2BAAtC;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AAEA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,cAAzC,QAA+D,6BAA/D;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA2BC,2BAA3B,QAA8D,uBAA9D;AACA,OAAOC,aAAP,MAA0B,+CAA1B;AACA,OAAOC,eAAP,MAA4B,kDAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAOC,OAAP,IAAkBC,QAAlB,QAAkC,mBAAlC;AAgBA,IAAMC,eAAe,GAAGpB,KAAK,CAAC;AAC5BqB,EAAAA,MAAM,EAAE;AADoB,CAAD,CAA7B;;IAIMC,W;;;;;AAIJ,uBAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AACxB,8BAAMA,KAAN;AADwB,UAHlBC,QAGkB,GAHP,IAAIjB,gBAAJ,EAGO;AAAA,UAFlBkB,eAEkB,GAFA,IAAIjB,eAAJ,EAEA;;AAAA,UAiB1BkB,WAjB0B,GAiBZ,UAACC,CAAD,EAA0B;AACtC,UAAIA,CAAC,CAACC,MAAF,KAAaD,CAAC,CAACE,MAAnB,EAA2B;AACzB,YAAMC,SAAS,GAAGH,CAAC,CAACC,MAAF,KAAa,MAAKL,KAAL,CAAWQ,OAAxB,GAAkC,UAAlC,GAA+C,SAAjE;AACA,YAAMC,WAAW,GAAGF,SAAS,KAAK,SAAd,GAA0B,0BAA1B,GAAuD,+BAA3E;AACA,YAAMG,SAAS,GAAG,IAAIC,eAAJ,CAAoBhB,OAAO,CAACiB,QAAR,CAAiBC,MAArC,CAAlB;AACAH,QAAAA,SAAS,CAACI,GAAV,CAAc,KAAd,EAAqB,SAArB;AACAJ,QAAAA,SAAS,CAACI,GAAV,CAAclB,QAAQ,CAACmB,SAAvB,EAAkCN,WAAW,GAAG,GAAd,IAAqBL,CAAC,CAACC,MAAF,KAAa,MAAKL,KAAL,CAAWQ,OAAxB,GAAkCJ,CAAC,CAACE,MAApC,GAA6CF,CAAC,CAACC,MAApE,CAAlC;AACAV,QAAAA,OAAO,CAACqB,OAAR,CAAgBrB,OAAO,CAACiB,QAAR,CAAiBK,QAAjB,GAA4B,GAA5B,GAAkCP,SAAS,CAACQ,QAAV,EAAlD;AACD;AACF,KA1ByB;;AAAA,UA4BlBC,YA5BkB,GA4BH,YAAM;AAC3B,UAAI,CAAC,MAAKnB,KAAL,CAAWoB,cAAhB,EAAgC;AAC9B;AACD;;AAED,YAAKnB,QAAL,CAAcoB,SAAd;;AACA,YAAKnB,eAAL,CAAqBoB,eAArB,CAAqC,MAAKtB,KAAL,CAAWuB,QAAhD,EAA0D,MAAKvB,KAAL,CAAWwB,SAArE,EAAgF,MAAKxB,KAAL,CAAWQ,OAA3F;AACD,KAnCyB;;AAExB,UAAKiB,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAFwB;AAKzB;;;;WAED,6BAAoB;AAClB,WAAKP,YAAL;AACD;;;WAED,4BAAmBQ,IAAnB,EAAgC;AAC9B,UAAIA,IAAI,CAACJ,QAAL,KAAkB,KAAKvB,KAAL,CAAWuB,QAA7B,IAAyCI,IAAI,CAACP,cAAL,KAAwB,KAAKpB,KAAL,CAAWoB,cAAhF,EAAgG;AAC9F,aAAKD,YAAL;AACD;AACF;;;WAsBD,gCAA6D;AAC3D,UAAI,KAAKnB,KAAL,CAAW4B,WAAX,IAA0B,KAAK5B,KAAL,CAAW4B,WAAX,CAAuBpB,OAAjD,IAA4D,KAAKR,KAAL,CAAWoB,cAA3E,EAA2F;AACzF,eAAO,KAAKpB,KAAL,CAAW4B,WAAX,CAAuBpB,OAAvB,CAA+B,KAAKR,KAAL,CAAWoB,cAAX,CAA0BZ,OAA1B,CAAkCqB,IAAjE,CAAP;AACD;;AACD,aAAOC,SAAP;AACD;;;WAED,kBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACP,UAAMC,kBAAkB,GAAG,+BAAK/B,KAAL,CAAWoB,cAAX,gFAA2BY,eAA3B,IACvB7C,cAAc,CAAC,KAAKa,KAAL,CAAWoB,cAAX,CAA0BY,eAA1B,CAA0CC,KAA3C,EAAkD,KAAKjC,KAAL,CAAWoB,cAAX,CAA0BQ,WAA5E,CADS,GAEvB,EAFJ;AAGA,UAAMM,kBAAkB,GAAG,gCAAKlC,KAAL,CAAWoB,cAAX,kFAA2Be,gBAA3B,IACvBjD,cAAc,CAAC,KAAKc,KAAL,CAAWoB,cAAX,CAA0Be,gBAA1B,CAA2CF,KAA5C,EAAmD,KAAKjC,KAAL,CAAWoB,cAAX,CAA0BQ,WAA7E,CADS,GAEvB,EAFJ;AAGA,UAAMQ,kBAAkB,GACtB,qBAAKpC,KAAL,4DAAYqC,QAAZ,gCAAwB,KAAKrC,KAAL,CAAWoB,cAAnC,2DAAwB,uBAA2BY,eAAnD,IACI5C,cAAc,iBACZ,KAAKY,KADO,iDACZ,aAAYqC,QADA,EAEZ,KAAKrC,KAAL,CAAWoB,cAAX,CAA0BY,eAA1B,CAA0CC,KAF9B,EAGZ,KAAKjC,KAAL,CAAWoB,cAAX,CAA0BQ,WAHd,CADlB,GAMI,EAPN;AAQA,UAAMU,gBAAgB,GAAGF,kBAAkB,CAACG,MAAnB,CAA0BR,kBAAkB,CAACQ,MAAnB,CAA0BL,kBAA1B,CAA1B,CAAzB,CAfO,CAiBP;AACA;AACA;;AACA,UAAMpC,MAAM,GAAG,KAAK2B,KAAL,CAAWC,SAAX,GAAuB,KAAKD,KAAL,CAAWC,SAAX,GAAuB,GAA9C,GAAoD,GAAnE;AACA,UAAMc,mBAAmB,GAAG/D,KAAK,CAAC;AAAEgE,QAAAA,KAAK,EAAE,MAAT;AAAiB3C,QAAAA,MAAM,EAAEA;AAAzB,OAAD,CAAjC;AAEA,0BACE,uDACE,oBAAC,qBAAD;AAAuB,QAAA,QAAQ,EAAE,kBAAAA,MAAM;AAAA,iBAAI,MAAI,CAAC4C,QAAL,CAAc;AAAEhB,YAAAA,SAAS,EAAE5B;AAAb,WAAd,CAAJ;AAAA,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,MAAM,EAAE,IAAd;AAAoB,QAAA,SAAS,EAAED,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,kBAAD;AAAoB,QAAA,SAAS,EAAE,KAAKG,KAAL,CAAWwB,SAA1C;AAAqD,QAAA,cAAc,EAAE,KAAKxB,KAAL,CAAWoB,cAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIG,KAAKpB,KAAL,CAAWoB,cAAX,iBACC,oBAAC,cAAD;AACE,QAAA,cAAc,EAAE,KAAKpB,KAAL,CAAWoB,cAD7B;AAEE,QAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWqC,QAFvB;AAGE,QAAA,WAAW,EAAE,KAAKM,oBAAL,EAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,eAWE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEC,UAAAA,aAAa,EAAE;AAAjB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAE,KAAK5C,KAAL,CAAWQ,OAAlC;AAA2C,QAAA,KAAK,EAAE8B,gBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAXF,CADF,CADF,eAkBE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,aAAD;AACE,QAAA,UAAU,EAAE,KAAKpC,eADnB;AAEE,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAW6C,WAF1B;AAGE,QAAA,SAAS,EAAE,KAAK1C,WAHlB;AAIE,QAAA,mBAAmB,EAAEqC,mBAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAlBF,CADF,CADF,CADF;AAiCD;;;;EAxGuBhE,KAAK,CAACsE,S;;AA2GhC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACtB,KAAD;AAAA,SAA2B;AACjDF,IAAAA,QAAQ,EAAEjC,gBAAgB,CAACmC,KAAD,CADuB;AAEjDuB,IAAAA,aAAa,EAAEvB,KAAK,CAACwB,WAAN,CAAkBD,aAFgB;AAGjDH,IAAAA,WAAW,EAAEtD,2BAA2B,CAACkC,KAAD;AAHS,GAA3B;AAAA,CAAxB;;AAMA,IAAMyB,oBAAoB,GAAG7D,OAAO,CAAC0D,eAAD,CAAP,CAAyBhD,WAAzB,CAA7B;AACA,eAAemD,oBAAf","sourcesContent":["import * as React from 'react';\nimport { style } from 'typestyle';\nimport { Grid, GridItem, Stack, StackItem } from '@patternfly/react-core';\nimport ServiceId from '../../types/ServiceId';\nimport ServiceDescription from './ServiceDescription';\nimport { ServiceDetailsInfo } from '../../types/ServiceInfo';\nimport { Gateway, ObjectValidation, PeerAuthentication, Validations } from '../../types/IstioObjects';\nimport { RenderComponentScroll } from '../../components/Nav/Page';\nimport { PromisesRegistry } from 'utils/CancelablePromises';\nimport { DurationInSeconds, TimeInMilliseconds } from 'types/Common';\nimport GraphDataSource from 'services/GraphDataSource';\nimport { drToIstioItems, vsToIstioItems, gwToIstioItems } from '../../types/IstioConfigList';\nimport { KialiAppState } from '../../store/Store';\nimport { connect } from 'react-redux';\nimport { durationSelector, meshWideMTLSEnabledSelector } from '../../store/Selectors';\nimport MiniGraphCard from '../../components/CytoscapeGraph/MiniGraphCard';\nimport IstioConfigCard from '../../components/IstioConfigCard/IstioConfigCard';\nimport ServiceNetwork from './ServiceNetwork';\nimport { GraphEdgeTapEvent } from '../../components/CytoscapeGraph/CytoscapeGraph';\nimport history, { URLParam } from '../../app/History';\n\ninterface Props extends ServiceId {\n  duration: DurationInSeconds;\n  lastRefreshAt: TimeInMilliseconds;\n  mtlsEnabled: boolean;\n  serviceDetails?: ServiceDetailsInfo;\n  gateways: Gateway[];\n  peerAuthentications: PeerAuthentication[];\n  validations: Validations;\n}\n\ntype ServiceInfoState = {\n  tabHeight?: number;\n};\n\nconst fullHeightStyle = style({\n  height: '100%'\n});\n\nclass ServiceInfo extends React.Component<Props, ServiceInfoState> {\n  private promises = new PromisesRegistry();\n  private graphDataSource = new GraphDataSource();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      tabHeight: 300\n    };\n  }\n\n  componentDidMount() {\n    this.fetchBackend();\n  }\n\n  componentDidUpdate(prev: Props) {\n    if (prev.duration !== this.props.duration || prev.serviceDetails !== this.props.serviceDetails) {\n      this.fetchBackend();\n    }\n  }\n\n  goToMetrics = (e: GraphEdgeTapEvent) => {\n    if (e.source !== e.target) {\n      const direction = e.source === this.props.service ? 'outbound' : 'inbound';\n      const destination = direction === 'inbound' ? 'source_canonical_service' : 'destination_canonical_service';\n      const urlParams = new URLSearchParams(history.location.search);\n      urlParams.set('tab', 'metrics');\n      urlParams.set(URLParam.BY_LABELS, destination + '=' + (e.source === this.props.service ? e.target : e.source));\n      history.replace(history.location.pathname + '?' + urlParams.toString());\n    }\n  };\n\n  private fetchBackend = () => {\n    if (!this.props.serviceDetails) {\n      return;\n    }\n\n    this.promises.cancelAll();\n    this.graphDataSource.fetchForService(this.props.duration, this.props.namespace, this.props.service);\n  };\n\n  private getServiceValidation(): ObjectValidation | undefined {\n    if (this.props.validations && this.props.validations.service && this.props.serviceDetails) {\n      return this.props.validations.service[this.props.serviceDetails.service.name];\n    }\n    return undefined;\n  }\n\n  render() {\n    const vsIstioConfigItems = this.props.serviceDetails?.virtualServices\n      ? vsToIstioItems(this.props.serviceDetails.virtualServices.items, this.props.serviceDetails.validations)\n      : [];\n    const drIstioConfigItems = this.props.serviceDetails?.destinationRules\n      ? drToIstioItems(this.props.serviceDetails.destinationRules.items, this.props.serviceDetails.validations)\n      : [];\n    const gwIstioConfigItems =\n      this.props?.gateways && this.props.serviceDetails?.virtualServices\n        ? gwToIstioItems(\n            this.props?.gateways,\n            this.props.serviceDetails.virtualServices.items,\n            this.props.serviceDetails.validations\n          )\n        : [];\n    const istioConfigItems = gwIstioConfigItems.concat(vsIstioConfigItems.concat(drIstioConfigItems));\n\n    // RenderComponentScroll handles height to provide an inner scroll combined with tabs\n    // This height needs to be propagated to minigraph to proper resize in height\n    // Graph resizes correctly on width\n    const height = this.state.tabHeight ? this.state.tabHeight - 115 : 300;\n    const graphContainerStyle = style({ width: '100%', height: height });\n\n    return (\n      <>\n        <RenderComponentScroll onResize={height => this.setState({ tabHeight: height })}>\n          <Grid gutter={'md'} className={fullHeightStyle}>\n            <GridItem span={4}>\n              <Stack gutter=\"md\">\n                <StackItem>\n                  <ServiceDescription namespace={this.props.namespace} serviceDetails={this.props.serviceDetails} />\n                </StackItem>\n                {this.props.serviceDetails && (\n                  <ServiceNetwork\n                    serviceDetails={this.props.serviceDetails}\n                    gateways={this.props.gateways}\n                    validations={this.getServiceValidation()}\n                  />\n                )}\n                <StackItem style={{ paddingBottom: '20px' }}>\n                  <IstioConfigCard name={this.props.service} items={istioConfigItems} />\n                </StackItem>\n              </Stack>\n            </GridItem>\n            <GridItem span={8}>\n              <MiniGraphCard\n                dataSource={this.graphDataSource}\n                mtlsEnabled={this.props.mtlsEnabled}\n                onEdgeTap={this.goToMetrics}\n                graphContainerStyle={graphContainerStyle}\n              />\n            </GridItem>\n          </Grid>\n        </RenderComponentScroll>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: KialiAppState) => ({\n  duration: durationSelector(state),\n  lastRefreshAt: state.globalState.lastRefreshAt,\n  mtlsEnabled: meshWideMTLSEnabledSelector(state)\n});\n\nconst ServiceInfoContainer = connect(mapStateToProps)(ServiceInfo);\nexport default ServiceInfoContainer;\n"]},"metadata":{},"sourceType":"module"}