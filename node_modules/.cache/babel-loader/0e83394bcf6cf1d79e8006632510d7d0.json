{"ast":null,"code":"import _objectSpread from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { FILTER_ACTION_APPEND, FILTER_ACTION_UPDATE, FilterTypes } from '../../types/Filters';\nimport { WorkloadType } from '../../types/Workload';\nimport { hasHealth } from '../../types/Health';\nimport { presenceValues, istioSidecarFilter, healthFilter, labelFilter, getFilterSelectedValues, getPresenceFilterValue, filterByHealth } from '../../components/Filters/CommonFilters';\nimport { hasMissingSidecar } from '../../components/VirtualList/Config';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { filterByLabel } from '../../helpers/LabelFilterHelper';\nimport { calculateErrorRate } from '../../types/ErrorRate';\nimport { istioTypeFilter } from '../IstioConfigList/FiltersAndSorts';\nimport { compareObjectReferences } from '../AppList/FiltersAndSorts';\n\nvar missingLabels = function missingLabels(r) {\n  return r.appLabel && r.versionLabel ? 0 : r.appLabel || r.versionLabel ? 1 : 2;\n};\n\nexport var sortFields = [{\n  id: 'namespace',\n  title: 'Namespace',\n  isNumeric: false,\n  param: 'ns',\n  compare: function compare(a, b) {\n    var sortValue = a.namespace.localeCompare(b.namespace);\n\n    if (sortValue === 0) {\n      sortValue = a.name.localeCompare(b.name);\n    }\n\n    return sortValue;\n  }\n}, {\n  id: 'workloadname',\n  title: 'Workload Name',\n  isNumeric: false,\n  param: 'wn',\n  compare: function compare(a, b) {\n    return a.name.localeCompare(b.name);\n  }\n}, {\n  id: 'workloadtype',\n  title: 'Workload Type',\n  isNumeric: false,\n  param: 'wt',\n  compare: function compare(a, b) {\n    return a.type.localeCompare(b.type);\n  }\n}, {\n  id: 'details',\n  title: 'Details',\n  isNumeric: false,\n  param: 'is',\n  compare: function compare(a, b) {\n    // First sort by missing sidecar\n    var aSC = hasMissingSidecar(a) ? 1 : 0;\n    var bSC = hasMissingSidecar(b) ? 1 : 0;\n\n    if (aSC !== bSC) {\n      return aSC - bSC;\n    } // Second by Details\n\n\n    var iRefA = a.istioReferences;\n    var iRefB = b.istioReferences;\n    var cmpRefs = compareObjectReferences(iRefA, iRefB);\n\n    if (cmpRefs !== 0) {\n      return cmpRefs;\n    } // Then by additional details\n\n\n    var iconA = a.additionalDetailSample && a.additionalDetailSample.icon;\n    var iconB = b.additionalDetailSample && b.additionalDetailSample.icon;\n\n    if (iconA || iconB) {\n      if (iconA && iconB) {\n        var cmp = iconA.localeCompare(iconB);\n\n        if (cmp !== 0) {\n          return cmp;\n        }\n      } else {\n        // Make asc => icon absence is last\n        return iconA ? -1 : 1;\n      }\n    } // Second by  missing labels\n\n\n    var missingA = missingLabels(a);\n    var missingB = missingLabels(b);\n\n    if (missingA !== missingB) {\n      return missingA > missingB ? 1 : -1;\n    } // Finally by name\n\n\n    return a.name.localeCompare(b.name);\n  }\n}, {\n  id: 'applabel',\n  title: 'App Label',\n  isNumeric: false,\n  param: 'al',\n  compare: function compare(a, b) {\n    if (a.appLabel && !b.appLabel) {\n      return -1;\n    } else if (!a.appLabel && b.appLabel) {\n      return 1;\n    } else {\n      return a.name.localeCompare(b.name);\n    }\n  }\n}, {\n  id: 'versionlabel',\n  title: 'Version Label',\n  isNumeric: false,\n  param: 'vl',\n  compare: function compare(a, b) {\n    if (a.versionLabel && !b.versionLabel) {\n      return -1;\n    } else if (!a.versionLabel && b.versionLabel) {\n      return 1;\n    } else {\n      return a.name.localeCompare(b.name);\n    }\n  }\n}, {\n  id: 'labelValidation',\n  title: 'Label Validation',\n  isNumeric: false,\n  param: 'lb',\n  compare: function compare(a, b) {\n    if (a.versionLabel && a.appLabel && !(b.versionLabel && b.appLabel)) {\n      return -1;\n    } else if (!(a.versionLabel && a.appLabel) && b.versionLabel && b.appLabel) {\n      return 1;\n    } else {\n      if (a.appLabel && !b.appLabel) {\n        return 1;\n      } else if (!a.appLabel && b.appLabel) {\n        return -1;\n      } else {\n        if (a.versionLabel && !b.versionLabel) {\n          return 1;\n        } else if (!a.versionLabel && b.versionLabel) {\n          return -1;\n        } else {\n          return a.name.localeCompare(b.name);\n        }\n      }\n    }\n  }\n}, {\n  id: 'health',\n  title: 'Health',\n  isNumeric: false,\n  param: 'he',\n  compare: function compare(a, b) {\n    if (hasHealth(a) && hasHealth(b)) {\n      var statusForA = a.health.getGlobalStatus();\n      var statusForB = b.health.getGlobalStatus();\n\n      if (statusForA.priority === statusForB.priority) {\n        // If both workloads have same health status, use error rate to determine order.\n        var ratioA = calculateErrorRate(a.namespace, a.name, 'workload', a.health.requests).errorRatio.global.status.value;\n        var ratioB = calculateErrorRate(b.namespace, b.name, 'workload', b.health.requests).errorRatio.global.status.value;\n        return ratioA === ratioB ? a.name.localeCompare(b.name) : ratioB - ratioA;\n      }\n\n      return statusForB.priority - statusForA.priority;\n    } else {\n      return 0;\n    }\n  }\n}];\nvar workloadNameFilter = {\n  id: 'workloadname',\n  title: 'Workload Name',\n  placeholder: 'Filter by Workload Name',\n  filterType: TextInputTypes.text,\n  action: FILTER_ACTION_APPEND,\n  filterValues: []\n};\nexport var appLabelFilter = {\n  id: 'applabel',\n  title: 'App Label',\n  placeholder: 'Filter by App Label Validation',\n  filterType: FilterTypes.select,\n  action: FILTER_ACTION_UPDATE,\n  filterValues: presenceValues\n};\nexport var versionLabelFilter = {\n  id: 'versionlabel',\n  title: 'Version Label',\n  placeholder: 'Filter by Version Label Validation',\n  filterType: FilterTypes.select,\n  action: FILTER_ACTION_UPDATE,\n  filterValues: presenceValues\n};\nvar workloadTypeFilter = {\n  id: 'workloadtype',\n  title: 'Workload Type',\n  placeholder: 'Filter by Workload Type',\n  filterType: FilterTypes.typeAhead,\n  action: FILTER_ACTION_APPEND,\n  filterValues: [{\n    id: WorkloadType.CronJob,\n    title: WorkloadType.CronJob\n  }, {\n    id: WorkloadType.DaemonSet,\n    title: WorkloadType.DaemonSet\n  }, {\n    id: WorkloadType.Deployment,\n    title: WorkloadType.Deployment\n  }, {\n    id: WorkloadType.DeploymentConfig,\n    title: WorkloadType.DeploymentConfig\n  }, {\n    id: WorkloadType.Job,\n    title: WorkloadType.Job\n  }, {\n    id: WorkloadType.Pod,\n    title: WorkloadType.Pod\n  }, {\n    id: WorkloadType.ReplicaSet,\n    title: WorkloadType.ReplicaSet\n  }, {\n    id: WorkloadType.ReplicationController,\n    title: WorkloadType.ReplicationController\n  }, {\n    id: WorkloadType.StatefulSet,\n    title: WorkloadType.StatefulSet\n  }]\n};\nexport var availableFilters = [workloadNameFilter, workloadTypeFilter, istioSidecarFilter, istioTypeFilter, healthFilter, appLabelFilter, versionLabelFilter, labelFilter];\n/** Filter Method */\n\nvar includeName = function includeName(name, names) {\n  for (var i = 0; i < names.length; i++) {\n    if (name.includes(names[i])) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar filterByType = function filterByType(items, filter) {\n  if (filter && filter.length === 0) {\n    return items;\n  }\n\n  return items.filter(function (item) {\n    return includeName(item.type, filter);\n  });\n};\n\nvar filterByLabelPresence = function filterByLabelPresence(items, istioSidecar, app, version) {\n  var result = items;\n\n  if (istioSidecar !== undefined) {\n    result = result.filter(function (item) {\n      return item.istioSidecar === istioSidecar;\n    });\n  }\n\n  if (app !== undefined) {\n    result = result.filter(function (item) {\n      return item.appLabel === app;\n    });\n  }\n\n  if (version !== undefined) {\n    result = result.filter(function (item) {\n      return item.versionLabel === version;\n    });\n  }\n\n  return result;\n};\n\nvar filterByName = function filterByName(items, names) {\n  if (names.length === 0) {\n    return items;\n  }\n\n  return items.filter(function (item) {\n    return names.some(function (name) {\n      return item.name.includes(name);\n    });\n  });\n};\n\nvar filterByIstioType = function filterByIstioType(items, istioTypes) {\n  return items.filter(function (item) {\n    return item.istioReferences.filter(function (ref) {\n      return istioTypes.includes(ref.objectType);\n    }).length !== 0;\n  });\n};\n\nexport var filterBy = function filterBy(items, filters) {\n  var workloadTypeFilters = getFilterSelectedValues(workloadTypeFilter, filters);\n  var workloadNamesSelected = getFilterSelectedValues(workloadNameFilter, filters);\n  var istioSidecar = getPresenceFilterValue(istioSidecarFilter, filters);\n  var appLabel = getPresenceFilterValue(appLabelFilter, filters);\n  var versionLabel = getPresenceFilterValue(versionLabelFilter, filters);\n  var labelFilters = getFilterSelectedValues(labelFilter, filters);\n  var ret = items;\n  ret = filterByType(ret, workloadTypeFilters);\n  ret = filterByName(ret, workloadNamesSelected);\n  ret = filterByLabelPresence(ret, istioSidecar, appLabel, versionLabel);\n  ret = filterByLabel(ret, labelFilters, filters.op); // We may have to perform a second round of filtering, using data fetched asynchronously (health)\n  // If not, exit fast\n\n  var healthSelected = getFilterSelectedValues(healthFilter, filters);\n\n  if (healthSelected.length > 0) {\n    return filterByHealth(ret, healthSelected);\n  }\n\n  var istioTypeSelected = getFilterSelectedValues(istioTypeFilter, filters);\n\n  if (istioTypeSelected.length > 0) {\n    return filterByIstioType(ret, istioTypeSelected);\n  }\n\n  return ret;\n};\n/** Sort Method */\n\nexport var sortWorkloadsItems = function sortWorkloadsItems(unsorted, sortField, isAscending) {\n  if (sortField.title === 'Health') {\n    // In the case of health sorting, we may not have all health promises ready yet\n    // So we need to get them all before actually sorting\n    var allHealthPromises = unsorted.map(function (item) {\n      return item.healthPromise.then(function (health) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          health: health\n        });\n      });\n    });\n    return Promise.all(allHealthPromises).then(function (arr) {\n      return arr.sort(isAscending ? sortField.compare : function (a, b) {\n        return sortField.compare(b, a);\n      });\n    });\n  }\n\n  var sorted = unsorted.sort(isAscending ? sortField.compare : function (a, b) {\n    return sortField.compare(b, a);\n  });\n  return Promise.resolve(sorted);\n};","map":{"version":3,"sources":["/root/kiali-ui/src/pages/WorkloadList/FiltersAndSorts.ts"],"names":["FILTER_ACTION_APPEND","FILTER_ACTION_UPDATE","FilterTypes","WorkloadType","hasHealth","presenceValues","istioSidecarFilter","healthFilter","labelFilter","getFilterSelectedValues","getPresenceFilterValue","filterByHealth","hasMissingSidecar","TextInputTypes","filterByLabel","calculateErrorRate","istioTypeFilter","compareObjectReferences","missingLabels","r","appLabel","versionLabel","sortFields","id","title","isNumeric","param","compare","a","b","sortValue","namespace","localeCompare","name","type","aSC","bSC","iRefA","istioReferences","iRefB","cmpRefs","iconA","additionalDetailSample","icon","iconB","cmp","missingA","missingB","statusForA","health","getGlobalStatus","statusForB","priority","ratioA","requests","errorRatio","global","status","value","ratioB","workloadNameFilter","placeholder","filterType","text","action","filterValues","appLabelFilter","select","versionLabelFilter","workloadTypeFilter","typeAhead","CronJob","DaemonSet","Deployment","DeploymentConfig","Job","Pod","ReplicaSet","ReplicationController","StatefulSet","availableFilters","includeName","names","i","length","includes","filterByType","items","filter","item","filterByLabelPresence","istioSidecar","app","version","result","undefined","filterByName","some","filterByIstioType","istioTypes","ref","objectType","filterBy","filters","workloadTypeFilters","workloadNamesSelected","labelFilters","ret","op","healthSelected","istioTypeSelected","sortWorkloadsItems","unsorted","sortField","isAscending","allHealthPromises","map","healthPromise","then","Promise","all","arr","sort","sorted","resolve"],"mappings":"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","sourcesContent":["import {\n  ActiveFiltersInfo,\n  FILTER_ACTION_APPEND,\n  FILTER_ACTION_UPDATE,\n  FilterType,\n  FilterTypes\n} from '../../types/Filters';\nimport { WorkloadListItem, WorkloadType } from '../../types/Workload';\nimport { SortField } from '../../types/SortFilters';\nimport { WithWorkloadHealth, hasHealth } from '../../types/Health';\nimport {\n  presenceValues,\n  istioSidecarFilter,\n  healthFilter,\n  labelFilter,\n  getFilterSelectedValues,\n  getPresenceFilterValue,\n  filterByHealth\n} from '../../components/Filters/CommonFilters';\nimport { hasMissingSidecar } from '../../components/VirtualList/Config';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { filterByLabel } from '../../helpers/LabelFilterHelper';\nimport { calculateErrorRate } from '../../types/ErrorRate';\nimport { istioTypeFilter } from '../IstioConfigList/FiltersAndSorts';\nimport { compareObjectReferences } from '../AppList/FiltersAndSorts';\n\nconst missingLabels = (r: WorkloadListItem): number => {\n  return r.appLabel && r.versionLabel ? 0 : r.appLabel || r.versionLabel ? 1 : 2;\n};\n\nexport const sortFields: SortField<WorkloadListItem>[] = [\n  {\n    id: 'namespace',\n    title: 'Namespace',\n    isNumeric: false,\n    param: 'ns',\n    compare: (a: WorkloadListItem, b: WorkloadListItem) => {\n      let sortValue = a.namespace.localeCompare(b.namespace);\n      if (sortValue === 0) {\n        sortValue = a.name.localeCompare(b.name);\n      }\n      return sortValue;\n    }\n  },\n  {\n    id: 'workloadname',\n    title: 'Workload Name',\n    isNumeric: false,\n    param: 'wn',\n    compare: (a: WorkloadListItem, b: WorkloadListItem) => a.name.localeCompare(b.name)\n  },\n  {\n    id: 'workloadtype',\n    title: 'Workload Type',\n    isNumeric: false,\n    param: 'wt',\n    compare: (a: WorkloadListItem, b: WorkloadListItem) => a.type.localeCompare(b.type)\n  },\n  {\n    id: 'details',\n    title: 'Details',\n    isNumeric: false,\n    param: 'is',\n    compare: (a: WorkloadListItem, b: WorkloadListItem) => {\n      // First sort by missing sidecar\n      const aSC = hasMissingSidecar(a) ? 1 : 0;\n      const bSC = hasMissingSidecar(b) ? 1 : 0;\n      if (aSC !== bSC) {\n        return aSC - bSC;\n      }\n\n      // Second by Details\n      const iRefA = a.istioReferences;\n      const iRefB = b.istioReferences;\n      const cmpRefs = compareObjectReferences(iRefA, iRefB);\n      if (cmpRefs !== 0) {\n        return cmpRefs;\n      }\n\n      // Then by additional details\n      const iconA = a.additionalDetailSample && a.additionalDetailSample.icon;\n      const iconB = b.additionalDetailSample && b.additionalDetailSample.icon;\n      if (iconA || iconB) {\n        if (iconA && iconB) {\n          const cmp = iconA.localeCompare(iconB);\n          if (cmp !== 0) {\n            return cmp;\n          }\n        } else {\n          // Make asc => icon absence is last\n          return iconA ? -1 : 1;\n        }\n      }\n      // Second by  missing labels\n      const missingA = missingLabels(a);\n      const missingB = missingLabels(b);\n      if (missingA !== missingB) {\n        return missingA > missingB ? 1 : -1;\n      }\n      // Finally by name\n      return a.name.localeCompare(b.name);\n    }\n  },\n  {\n    id: 'applabel',\n    title: 'App Label',\n    isNumeric: false,\n    param: 'al',\n    compare: (a: WorkloadListItem, b: WorkloadListItem) => {\n      if (a.appLabel && !b.appLabel) {\n        return -1;\n      } else if (!a.appLabel && b.appLabel) {\n        return 1;\n      } else {\n        return a.name.localeCompare(b.name);\n      }\n    }\n  },\n  {\n    id: 'versionlabel',\n    title: 'Version Label',\n    isNumeric: false,\n    param: 'vl',\n    compare: (a: WorkloadListItem, b: WorkloadListItem) => {\n      if (a.versionLabel && !b.versionLabel) {\n        return -1;\n      } else if (!a.versionLabel && b.versionLabel) {\n        return 1;\n      } else {\n        return a.name.localeCompare(b.name);\n      }\n    }\n  },\n  {\n    id: 'labelValidation',\n    title: 'Label Validation',\n    isNumeric: false,\n    param: 'lb',\n    compare: (a: WorkloadListItem, b: WorkloadListItem) => {\n      if (a.versionLabel && a.appLabel && !(b.versionLabel && b.appLabel)) {\n        return -1;\n      } else if (!(a.versionLabel && a.appLabel) && b.versionLabel && b.appLabel) {\n        return 1;\n      } else {\n        if (a.appLabel && !b.appLabel) {\n          return 1;\n        } else if (!a.appLabel && b.appLabel) {\n          return -1;\n        } else {\n          if (a.versionLabel && !b.versionLabel) {\n            return 1;\n          } else if (!a.versionLabel && b.versionLabel) {\n            return -1;\n          } else {\n            return a.name.localeCompare(b.name);\n          }\n        }\n      }\n    }\n  },\n  {\n    id: 'health',\n    title: 'Health',\n    isNumeric: false,\n    param: 'he',\n    compare: (a, b) => {\n      if (hasHealth(a) && hasHealth(b)) {\n        const statusForA = a.health.getGlobalStatus();\n        const statusForB = b.health.getGlobalStatus();\n\n        if (statusForA.priority === statusForB.priority) {\n          // If both workloads have same health status, use error rate to determine order.\n          const ratioA = calculateErrorRate(a.namespace, a.name, 'workload', a.health.requests).errorRatio.global.status\n            .value;\n          const ratioB = calculateErrorRate(b.namespace, b.name, 'workload', b.health.requests).errorRatio.global.status\n            .value;\n          return ratioA === ratioB ? a.name.localeCompare(b.name) : ratioB - ratioA;\n        }\n\n        return statusForB.priority - statusForA.priority;\n      } else {\n        return 0;\n      }\n    }\n  }\n];\n\nconst workloadNameFilter: FilterType = {\n  id: 'workloadname',\n  title: 'Workload Name',\n  placeholder: 'Filter by Workload Name',\n  filterType: TextInputTypes.text,\n  action: FILTER_ACTION_APPEND,\n  filterValues: []\n};\n\nexport const appLabelFilter: FilterType = {\n  id: 'applabel',\n  title: 'App Label',\n  placeholder: 'Filter by App Label Validation',\n  filterType: FilterTypes.select,\n  action: FILTER_ACTION_UPDATE,\n  filterValues: presenceValues\n};\n\nexport const versionLabelFilter: FilterType = {\n  id: 'versionlabel',\n  title: 'Version Label',\n  placeholder: 'Filter by Version Label Validation',\n  filterType: FilterTypes.select,\n  action: FILTER_ACTION_UPDATE,\n  filterValues: presenceValues\n};\n\nconst workloadTypeFilter: FilterType = {\n  id: 'workloadtype',\n  title: 'Workload Type',\n  placeholder: 'Filter by Workload Type',\n  filterType: FilterTypes.typeAhead,\n  action: FILTER_ACTION_APPEND,\n  filterValues: [\n    {\n      id: WorkloadType.CronJob,\n      title: WorkloadType.CronJob\n    },\n    {\n      id: WorkloadType.DaemonSet,\n      title: WorkloadType.DaemonSet\n    },\n    {\n      id: WorkloadType.Deployment,\n      title: WorkloadType.Deployment\n    },\n    {\n      id: WorkloadType.DeploymentConfig,\n      title: WorkloadType.DeploymentConfig\n    },\n    {\n      id: WorkloadType.Job,\n      title: WorkloadType.Job\n    },\n    {\n      id: WorkloadType.Pod,\n      title: WorkloadType.Pod\n    },\n    {\n      id: WorkloadType.ReplicaSet,\n      title: WorkloadType.ReplicaSet\n    },\n    {\n      id: WorkloadType.ReplicationController,\n      title: WorkloadType.ReplicationController\n    },\n    {\n      id: WorkloadType.StatefulSet,\n      title: WorkloadType.StatefulSet\n    }\n  ]\n};\n\nexport const availableFilters: FilterType[] = [\n  workloadNameFilter,\n  workloadTypeFilter,\n  istioSidecarFilter,\n  istioTypeFilter,\n  healthFilter,\n  appLabelFilter,\n  versionLabelFilter,\n  labelFilter\n];\n\n/** Filter Method */\nconst includeName = (name: string, names: string[]) => {\n  for (let i = 0; i < names.length; i++) {\n    if (name.includes(names[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst filterByType = (items: WorkloadListItem[], filter: string[]): WorkloadListItem[] => {\n  if (filter && filter.length === 0) {\n    return items;\n  }\n  return items.filter(item => includeName(item.type, filter));\n};\n\nconst filterByLabelPresence = (\n  items: WorkloadListItem[],\n  istioSidecar: boolean | undefined,\n  app: boolean | undefined,\n  version: boolean | undefined\n): WorkloadListItem[] => {\n  let result = items;\n  if (istioSidecar !== undefined) {\n    result = result.filter(item => item.istioSidecar === istioSidecar);\n  }\n  if (app !== undefined) {\n    result = result.filter(item => item.appLabel === app);\n  }\n  if (version !== undefined) {\n    result = result.filter(item => item.versionLabel === version);\n  }\n  return result;\n};\n\nconst filterByName = (items: WorkloadListItem[], names: string[]): WorkloadListItem[] => {\n  if (names.length === 0) {\n    return items;\n  }\n  return items.filter(item => names.some(name => item.name.includes(name)));\n};\n\nconst filterByIstioType = (items: WorkloadListItem[], istioTypes: string[]): WorkloadListItem[] => {\n  return items.filter(item => item.istioReferences.filter(ref => istioTypes.includes(ref.objectType)).length !== 0);\n};\n\nexport const filterBy = (\n  items: WorkloadListItem[],\n  filters: ActiveFiltersInfo\n): Promise<WorkloadListItem[]> | WorkloadListItem[] => {\n  const workloadTypeFilters = getFilterSelectedValues(workloadTypeFilter, filters);\n  const workloadNamesSelected = getFilterSelectedValues(workloadNameFilter, filters);\n  const istioSidecar = getPresenceFilterValue(istioSidecarFilter, filters);\n  const appLabel = getPresenceFilterValue(appLabelFilter, filters);\n  const versionLabel = getPresenceFilterValue(versionLabelFilter, filters);\n  const labelFilters = getFilterSelectedValues(labelFilter, filters);\n\n  let ret = items;\n  ret = filterByType(ret, workloadTypeFilters);\n  ret = filterByName(ret, workloadNamesSelected);\n  ret = filterByLabelPresence(ret, istioSidecar, appLabel, versionLabel);\n  ret = filterByLabel(ret, labelFilters, filters.op) as WorkloadListItem[];\n\n  // We may have to perform a second round of filtering, using data fetched asynchronously (health)\n  // If not, exit fast\n  const healthSelected = getFilterSelectedValues(healthFilter, filters);\n  if (healthSelected.length > 0) {\n    return filterByHealth(ret, healthSelected);\n  }\n\n  const istioTypeSelected = getFilterSelectedValues(istioTypeFilter, filters);\n  if (istioTypeSelected.length > 0) {\n    return filterByIstioType(ret, istioTypeSelected);\n  }\n  return ret;\n};\n\n/** Sort Method */\n\nexport const sortWorkloadsItems = (\n  unsorted: WorkloadListItem[],\n  sortField: SortField<WorkloadListItem>,\n  isAscending: boolean\n): Promise<WorkloadListItem[]> => {\n  if (sortField.title === 'Health') {\n    // In the case of health sorting, we may not have all health promises ready yet\n    // So we need to get them all before actually sorting\n    const allHealthPromises: Promise<WithWorkloadHealth<WorkloadListItem>>[] = unsorted.map(item => {\n      return item.healthPromise.then((health): WithWorkloadHealth<WorkloadListItem> => ({ ...item, health }));\n    });\n    return Promise.all(allHealthPromises).then(arr => {\n      return arr.sort(isAscending ? sortField.compare : (a, b) => sortField.compare(b, a));\n    });\n  }\n  const sorted = unsorted.sort(isAscending ? sortField.compare : (a, b) => sortField.compare(b, a));\n  return Promise.resolve(sorted);\n};\n"]},"metadata":{},"sourceType":"module"}