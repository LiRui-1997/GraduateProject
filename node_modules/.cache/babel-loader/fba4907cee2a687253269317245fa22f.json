{"ast":null,"code":"export var MTLSStatuses;\n\n(function (MTLSStatuses) {\n  MTLSStatuses[\"ENABLED\"] = \"MTLS_ENABLED\";\n  MTLSStatuses[\"PARTIALLY\"] = \"MTLS_PARTIALLY_ENABLED\";\n  MTLSStatuses[\"NOT_ENABLED\"] = \"MTLS_NOT_ENABLED\";\n  MTLSStatuses[\"DISABLED\"] = \"MTLS_DISABLED\";\n})(MTLSStatuses || (MTLSStatuses = {}));\n\nexport var nsWideMTLSStatus = function nsWideMTLSStatus(nsStatus, meshStatus) {\n  var finalStatus = nsStatus; // When mTLS is enabled meshwide but not disabled at ns level\n  // Then the ns has mtls enabled\n\n  if (meshStatus === MTLSStatuses.ENABLED && nsStatus === MTLSStatuses.NOT_ENABLED) {\n    finalStatus = MTLSStatuses.ENABLED;\n  }\n\n  return finalStatus;\n};\nexport var isMTLSEnabled = function isMTLSEnabled(status) {\n  return status === MTLSStatuses.ENABLED;\n};","map":{"version":3,"sources":["/root/GraduateProject/src/types/TLSStatus.ts"],"names":["MTLSStatuses","nsWideMTLSStatus","nsStatus","meshStatus","finalStatus","ENABLED","NOT_ENABLED","isMTLSEnabled","status"],"mappings":"AAAA,WAAYA,YAAZ;;WAAYA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;GAAAA,Y,KAAAA,Y;;AAWZ,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAAmBC,UAAnB,EAAkD;AAChF,MAAIC,WAAW,GAAGF,QAAlB,CADgF,CAGhF;AACA;;AACA,MAAIC,UAAU,KAAKH,YAAY,CAACK,OAA5B,IAAuCH,QAAQ,KAAKF,YAAY,CAACM,WAArE,EAAkF;AAChFF,IAAAA,WAAW,GAAGJ,YAAY,CAACK,OAA3B;AACD;;AAED,SAAOD,WAAP;AACD,CAVM;AAYP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAA6B;AACxD,SAAOA,MAAM,KAAKR,YAAY,CAACK,OAA/B;AACD,CAFM","sourcesContent":["export enum MTLSStatuses {\n  ENABLED = 'MTLS_ENABLED',\n  PARTIALLY = 'MTLS_PARTIALLY_ENABLED',\n  NOT_ENABLED = 'MTLS_NOT_ENABLED',\n  DISABLED = 'MTLS_DISABLED'\n}\n\nexport interface TLSStatus {\n  status: string;\n}\n\nexport const nsWideMTLSStatus = (nsStatus: string, meshStatus: string): string => {\n  let finalStatus = nsStatus;\n\n  // When mTLS is enabled meshwide but not disabled at ns level\n  // Then the ns has mtls enabled\n  if (meshStatus === MTLSStatuses.ENABLED && nsStatus === MTLSStatuses.NOT_ENABLED) {\n    finalStatus = MTLSStatuses.ENABLED;\n  }\n\n  return finalStatus;\n};\n\nexport const isMTLSEnabled = (status: string): boolean => {\n  return status === MTLSStatuses.ENABLED;\n};\n"]},"metadata":{},"sourceType":"module"}