{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/components/Nav/Page/RenderComponentScroll.tsx\";\nimport React from 'react'; // TOP_PADDING constant is used to adjust the height of the main div to allow scrolling in the inner container layer.\n\nexport var TOP_PADDING = 76 + 118;\nexport var RenderComponentScroll = /*#__PURE__*/function (_React$Component) {\n  _inherits(RenderComponentScroll, _React$Component);\n\n  var _super = _createSuper(RenderComponentScroll);\n\n  function RenderComponentScroll(props) {\n    var _this;\n\n    _classCallCheck(this, RenderComponentScroll);\n\n    _this = _super.call(this, props);\n\n    _this.updateWindowDimensions = function () {\n      _this.setState({\n        height: window.innerHeight - TOP_PADDING\n      }, function () {\n        if (_this.props.onResize) {\n          _this.props.onResize(_this.state.height);\n        }\n      });\n    };\n\n    _this.state = {\n      height: 0\n    };\n    return _this;\n  }\n\n  _createClass(RenderComponentScroll, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: this.state.height,\n          overflowY: 'auto',\n          padding: '20px'\n        },\n        className: this.props.className ? this.props.className : undefined,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      }, this.props.children);\n    }\n  }]);\n\n  return RenderComponentScroll;\n}(React.Component);","map":{"version":3,"sources":["/root/GraduateProject/src/components/Nav/Page/RenderComponentScroll.tsx"],"names":["React","TOP_PADDING","RenderComponentScroll","props","updateWindowDimensions","setState","height","window","innerHeight","onResize","state","addEventListener","removeEventListener","overflowY","padding","className","undefined","children","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,IAAMC,WAAW,GAAG,KAAK,GAAzB;AAWP,WAAaC,qBAAb;AAAA;;AAAA;;AACE,iCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAcnBC,sBAdmB,GAcM,YAAM;AAC7B,YAAKC,QAAL,CACE;AACEC,QAAAA,MAAM,EAAEC,MAAM,CAACC,WAAP,GAAqBP;AAD/B,OADF,EAIE,YAAM;AACJ,YAAI,MAAKE,KAAL,CAAWM,QAAf,EAAyB;AACvB,gBAAKN,KAAL,CAAWM,QAAX,CAAoB,MAAKC,KAAL,CAAWJ,MAA/B;AACD;AACF,OARH;AAUD,KAzBkB;;AAEjB,UAAKI,KAAL,GAAa;AAAEJ,MAAAA,MAAM,EAAE;AAAV,KAAb;AAFiB;AAGlB;;AAJH;AAAA;AAAA,WAME,6BAAoB;AAClB,WAAKF,sBAAL;AACAG,MAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkC,KAAKP,sBAAvC;AACD;AATH;AAAA;AAAA,WAWE,gCAAuB;AACrBG,MAAAA,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqC,KAAKR,sBAA1C;AACD;AAbH;AAAA;AAAA,WA4BE,kBAAS;AACP,0BACE;AACE,QAAA,KAAK,EAAE;AAAEE,UAAAA,MAAM,EAAE,KAAKI,KAAL,CAAWJ,MAArB;AAA6BO,UAAAA,SAAS,EAAE,MAAxC;AAAgDC,UAAAA,OAAO,EAAE;AAAzD,SADT;AAEE,QAAA,SAAS,EAAE,KAAKX,KAAL,CAAWY,SAAX,GAAuB,KAAKZ,KAAL,CAAWY,SAAlC,GAA8CC,SAF3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,KAAKb,KAAL,CAAWc,QAJd,CADF;AAQD;AArCH;;AAAA;AAAA,EAA2CjB,KAAK,CAACkB,SAAjD","sourcesContent":["import React from 'react';\n\n// TOP_PADDING constant is used to adjust the height of the main div to allow scrolling in the inner container layer.\nexport const TOP_PADDING = 76 + 118;\n\ninterface Props {\n  className?: any;\n  onResize?: (height: number) => void;\n}\n\ninterface State {\n  height: number;\n}\n\nexport class RenderComponentScroll extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = { height: 0 };\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions = () => {\n    this.setState(\n      {\n        height: window.innerHeight - TOP_PADDING\n      },\n      () => {\n        if (this.props.onResize) {\n          this.props.onResize(this.state.height);\n        }\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div\n        style={{ height: this.state.height, overflowY: 'auto', padding: '20px' }}\n        className={this.props.className ? this.props.className : undefined}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}