{"ast":null,"code":"import _objectSpread from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { store } from '../store/ConfigStore';\nimport { MessageType } from '../types/MessageCenter';\nimport { MessageCenterActions } from '../actions/MessageCenterActions';\nimport * as API from '../services/Api';\nexport var add = function add(content, group, type) {\n  store.dispatch(MessageCenterActions.addMessage(content, '', group, type));\n};\nexport var addMessage = function addMessage(msg) {\n  store.dispatch(MessageCenterActions.addMessage(msg.content, msg.detail || '', msg.group, msg.type, msg.showNotification));\n};\nexport var addError = function addError(message, error, group, type, detail) {\n  if (!error) {\n    store.dispatch(MessageCenterActions.addMessage(message, detail ? detail : '', group, MessageType.ERROR));\n    return;\n  }\n\n  var finalType = type ? type : MessageType.ERROR;\n  var err = extractAxiosError(message, error);\n  addMessage(_objectSpread(_objectSpread({}, err), {}, {\n    group: group,\n    type: finalType\n  }));\n};\nexport var extractAxiosError = function extractAxiosError(message, error) {\n  var errorString = API.getErrorString(error);\n  var errorDetail = API.getErrorDetail(error);\n\n  if (message) {\n    // combine error string and detail into a single detail\n    if (errorString && errorDetail) {\n      return {\n        content: message,\n        detail: \"\".concat(errorString, \"\\nAdditional Detail:\\n\").concat(errorDetail)\n      };\n    } else if (errorDetail) {\n      return {\n        content: message,\n        detail: errorDetail\n      };\n    } else {\n      return {\n        content: message,\n        detail: errorString\n      };\n    }\n  }\n\n  return {\n    content: errorString,\n    detail: errorDetail\n  };\n}; // info level message do not generate a toast notification\n\nexport var addInfo = function addInfo(content, showNotification, group, detail) {\n  store.dispatch(MessageCenterActions.addMessage(content, detail ? detail : '', group, MessageType.INFO, showNotification));\n};\nexport var addSuccess = function addSuccess(content, showNotification, group, detail) {\n  store.dispatch(MessageCenterActions.addMessage(content, detail ? detail : '', group, MessageType.SUCCESS, showNotification));\n};\nexport var addWarning = function addWarning(content, showNotification, group, detail) {\n  store.dispatch(MessageCenterActions.addMessage(content, detail ? detail : '', group, MessageType.WARNING, showNotification));\n};","map":{"version":3,"sources":["/root/GraduateProject/src/utils/AlertUtils.ts"],"names":["store","MessageType","MessageCenterActions","API","add","content","group","type","dispatch","addMessage","msg","detail","showNotification","addError","message","error","ERROR","finalType","err","extractAxiosError","errorString","getErrorString","errorDetail","getErrorDetail","addInfo","INFO","addSuccess","SUCCESS","addWarning","WARNING"],"mappings":"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","sourcesContent":["import { store } from '../store/ConfigStore';\nimport { MessageType } from '../types/MessageCenter';\nimport { MessageCenterActions } from '../actions/MessageCenterActions';\nimport { AxiosError } from 'axios';\nimport * as API from '../services/Api';\n\nexport type Message = {\n  content: string;\n  detail?: string;\n  group?: string;\n  type?: MessageType;\n  showNotification?: boolean;\n};\n\nexport const add = (content: string, group?: string, type?: MessageType) => {\n  store.dispatch(MessageCenterActions.addMessage(content, '', group, type));\n};\n\nexport const addMessage = (msg: Message) => {\n  store.dispatch(\n    MessageCenterActions.addMessage(msg.content, msg.detail || '', msg.group, msg.type, msg.showNotification)\n  );\n};\n\nexport const addError = (message: string, error?: AxiosError, group?: string, type?: MessageType, detail?: string) => {\n  if (!error) {\n    store.dispatch(MessageCenterActions.addMessage(message, detail ? detail : '', group, MessageType.ERROR));\n    return;\n  }\n  const finalType: MessageType = type ? type : MessageType.ERROR;\n  const err = extractAxiosError(message, error);\n  addMessage({\n    ...err,\n    group: group,\n    type: finalType\n  });\n};\n\nexport const extractAxiosError = (message: string, error: AxiosError): { content: string; detail: string } => {\n  const errorString: string = API.getErrorString(error);\n  const errorDetail: string = API.getErrorDetail(error);\n  if (message) {\n    // combine error string and detail into a single detail\n    if (errorString && errorDetail) {\n      return { content: message, detail: `${errorString}\\nAdditional Detail:\\n${errorDetail}` };\n    } else if (errorDetail) {\n      return { content: message, detail: errorDetail };\n    } else {\n      return { content: message, detail: errorString };\n    }\n  }\n  return { content: errorString, detail: errorDetail };\n};\n\n// info level message do not generate a toast notification\nexport const addInfo = (content: string, showNotification?: boolean, group?: string, detail?: string) => {\n  store.dispatch(\n    MessageCenterActions.addMessage(content, detail ? detail : '', group, MessageType.INFO, showNotification)\n  );\n};\n\nexport const addSuccess = (content: string, showNotification?: boolean, group?: string, detail?: string) => {\n  store.dispatch(\n    MessageCenterActions.addMessage(content, detail ? detail : '', group, MessageType.SUCCESS, showNotification)\n  );\n};\n\nexport const addWarning = (content: string, showNotification?: boolean, group?: string, detail?: string) => {\n  store.dispatch(\n    MessageCenterActions.addMessage(content, detail ? detail : '', group, MessageType.WARNING, showNotification)\n  );\n};\n"]},"metadata":{},"sourceType":"module"}