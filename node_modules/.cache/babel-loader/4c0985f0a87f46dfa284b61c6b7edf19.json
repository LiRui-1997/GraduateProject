{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _pt from \"prop-types\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/OptionsMenu/options-menu';\nimport paginationStyles from '@patternfly/react-styles/css/components/Pagination/pagination';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownItem, DropdownDirection, DropdownWithContext, DropdownContext } from '../Dropdown';\nimport CheckIcon from '@patternfly/react-icons/dist/js/icons/check-icon';\nimport { OptionsToggle } from './OptionsToggle';\nexport var PaginationOptionsMenu = /*#__PURE__*/function (_React$Component) {\n  _inherits(PaginationOptionsMenu, _React$Component);\n\n  var _super = _createSuper(PaginationOptionsMenu);\n\n  function PaginationOptionsMenu(props) {\n    var _this;\n\n    _classCallCheck(this, PaginationOptionsMenu);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"parentRef\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggle\", function (isOpen) {\n      _this.setState({\n        isOpen: isOpen\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSelect\", function () {\n      _this.setState(function (prevState) {\n        return {\n          isOpen: !prevState.isOpen\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNewPerPage\", function (_evt, newPerPage) {\n      var _this$props = _this.props,\n          page = _this$props.page,\n          onPerPageSelect = _this$props.onPerPageSelect,\n          itemCount = _this$props.itemCount,\n          defaultToFullPage = _this$props.defaultToFullPage;\n      var newPage = page;\n\n      while (Math.ceil(itemCount / newPerPage) < newPage) {\n        newPage--;\n      }\n\n      if (defaultToFullPage) {\n        if (itemCount / newPerPage !== newPage) {\n          while (newPage > 1 && itemCount - newPerPage * newPage < 0) {\n            newPage--;\n          }\n        }\n      }\n\n      var startIdx = (newPage - 1) * newPerPage;\n      var endIdx = newPage * newPerPage;\n      return onPerPageSelect(_evt, newPerPage, newPage, startIdx, endIdx);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderItems\", function () {\n      var _this$props2 = _this.props,\n          perPageOptions = _this$props2.perPageOptions,\n          perPage = _this$props2.perPage,\n          perPageSuffix = _this$props2.perPageSuffix;\n      return perPageOptions.map(function (_ref) {\n        var value = _ref.value,\n            title = _ref.title;\n        return React.createElement(DropdownItem, {\n          key: value,\n          component: \"button\",\n          \"data-action\": \"per-page-\".concat(value),\n          className: css(perPage === value && 'pf-m-selected'),\n          onClick: function onClick(event) {\n            return _this.handleNewPerPage(event, value);\n          }\n        }, title, React.createElement(\"span\", {\n          className: css(paginationStyles.paginationMenuText)\n        }, \" \".concat(perPageSuffix)), perPage === value && React.createElement(\"i\", {\n          className: css(styles.optionsMenuMenuItemIcon)\n        }, React.createElement(CheckIcon, null)));\n      });\n    });\n\n    _this.state = {\n      isOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(PaginationOptionsMenu, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          widgetId = _this$props3.widgetId,\n          isDisabled = _this$props3.isDisabled,\n          itemsPerPageTitle = _this$props3.itemsPerPageTitle,\n          dropDirection = _this$props3.dropDirection,\n          optionsToggle = _this$props3.optionsToggle,\n          perPageOptions = _this$props3.perPageOptions,\n          toggleTemplate = _this$props3.toggleTemplate,\n          firstIndex = _this$props3.firstIndex,\n          lastIndex = _this$props3.lastIndex,\n          itemCount = _this$props3.itemCount,\n          itemsTitle = _this$props3.itemsTitle;\n      var isOpen = this.state.isOpen;\n      return React.createElement(DropdownContext.Provider, {\n        value: {\n          id: widgetId,\n          onSelect: this.onSelect,\n          toggleIconClass: styles.optionsMenuToggleIcon,\n          toggleTextClass: styles.optionsMenuToggleText,\n          menuClass: styles.optionsMenuMenu,\n          itemClass: styles.optionsMenuMenuItem,\n          toggleClass: ' ',\n          baseClass: styles.optionsMenu,\n          disabledClass: styles.modifiers.disabled,\n          menuComponent: 'ul',\n          baseComponent: 'div'\n        }\n      }, React.createElement(DropdownWithContext, {\n        direction: dropDirection,\n        isOpen: isOpen,\n        toggle: React.createElement(OptionsToggle, {\n          optionsToggle: optionsToggle,\n          itemsPerPageTitle: itemsPerPageTitle,\n          showToggle: perPageOptions && perPageOptions.length > 0,\n          onToggle: this.onToggle,\n          isOpen: isOpen,\n          widgetId: widgetId,\n          firstIndex: firstIndex,\n          lastIndex: lastIndex,\n          itemCount: itemCount,\n          itemsTitle: itemsTitle,\n          toggleTemplate: toggleTemplate,\n          parentRef: this.parentRef.current,\n          isDisabled: isDisabled\n        }),\n        dropdownItems: this.renderItems(),\n        isPlain: true\n      }));\n    }\n  }]);\n\n  return PaginationOptionsMenu;\n}(React.Component);\n\n_defineProperty(PaginationOptionsMenu, \"propTypes\", {\n  className: _pt.string,\n  widgetId: _pt.string,\n  isDisabled: _pt.bool,\n  dropDirection: _pt.oneOf(['up', 'down']),\n  perPageOptions: _pt.arrayOf(_pt.any),\n  itemsPerPageTitle: _pt.string,\n  page: _pt.number,\n  perPageSuffix: _pt.string,\n  itemsTitle: _pt.string,\n  optionsToggle: _pt.string,\n  itemCount: _pt.number,\n  firstIndex: _pt.number,\n  lastIndex: _pt.number,\n  defaultToFullPage: _pt.bool,\n  perPage: _pt.number,\n  lastPage: _pt.number,\n  toggleTemplate: _pt.oneOfType([_pt.func, _pt.string]),\n  onPerPageSelect: _pt.any\n});\n\n_defineProperty(PaginationOptionsMenu, \"defaultProps\", {\n  className: '',\n  widgetId: '',\n  isDisabled: false,\n  dropDirection: DropdownDirection.down,\n  perPageOptions: [],\n  itemsPerPageTitle: 'Items per page',\n  perPageSuffix: 'per page',\n  optionsToggle: 'Select',\n  perPage: 0,\n  firstIndex: 0,\n  lastIndex: 0,\n  defaultToFullPage: false,\n  itemCount: 0,\n  itemsTitle: 'items',\n  toggleTemplate: function toggleTemplate(_ref2) {\n    var firstIndex = _ref2.firstIndex,\n        lastIndex = _ref2.lastIndex,\n        itemCount = _ref2.itemCount,\n        itemsTitle = _ref2.itemsTitle;\n    return React.createElement(React.Fragment, null, React.createElement(\"b\", null, firstIndex, \" - \", lastIndex), ' ', \"of\", React.createElement(\"b\", null, itemCount), \" \", itemsTitle);\n  },\n  onPerPageSelect: function onPerPageSelect() {\n    return null;\n  }\n});","map":{"version":3,"sources":["/root/kiali-ui/node_modules/@patternfly/react-core/dist/esm/components/Pagination/PaginationOptionsMenu.js"],"names":["_pt","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","styles","paginationStyles","css","DropdownItem","DropdownDirection","DropdownWithContext","DropdownContext","CheckIcon","OptionsToggle","PaginationOptionsMenu","props","createRef","isOpen","setState","prevState","_evt","newPerPage","page","onPerPageSelect","itemCount","defaultToFullPage","newPage","Math","ceil","startIdx","endIdx","perPageOptions","perPage","perPageSuffix","map","title","createElement","component","className","onClick","event","handleNewPerPage","paginationMenuText","optionsMenuMenuItemIcon","state","widgetId","isDisabled","itemsPerPageTitle","dropDirection","optionsToggle","toggleTemplate","firstIndex","lastIndex","itemsTitle","Provider","id","onSelect","toggleIconClass","optionsMenuToggleIcon","toggleTextClass","optionsMenuToggleText","menuClass","optionsMenuMenu","itemClass","optionsMenuMenuItem","toggleClass","baseClass","optionsMenu","disabledClass","modifiers","disabled","menuComponent","baseComponent","direction","toggle","showToggle","length","onToggle","parentRef","current","dropdownItems","renderItems","isPlain","Component","string","bool","oneOf","arrayOf","any","number","lastPage","oneOfType","func","down","Fragment"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/OptionsMenu/options-menu';\nimport paginationStyles from '@patternfly/react-styles/css/components/Pagination/pagination';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownItem, DropdownDirection, DropdownWithContext, DropdownContext } from '../Dropdown';\nimport CheckIcon from '@patternfly/react-icons/dist/js/icons/check-icon';\nimport { OptionsToggle } from './OptionsToggle';\nexport class PaginationOptionsMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"parentRef\", React.createRef());\n\n    _defineProperty(this, \"onToggle\", isOpen => {\n      this.setState({\n        isOpen\n      });\n    });\n\n    _defineProperty(this, \"onSelect\", () => {\n      this.setState(prevState => ({\n        isOpen: !prevState.isOpen\n      }));\n    });\n\n    _defineProperty(this, \"handleNewPerPage\", (_evt, newPerPage) => {\n      const {\n        page,\n        onPerPageSelect,\n        itemCount,\n        defaultToFullPage\n      } = this.props;\n      let newPage = page;\n\n      while (Math.ceil(itemCount / newPerPage) < newPage) {\n        newPage--;\n      }\n\n      if (defaultToFullPage) {\n        if (itemCount / newPerPage !== newPage) {\n          while (newPage > 1 && itemCount - newPerPage * newPage < 0) {\n            newPage--;\n          }\n        }\n      }\n\n      const startIdx = (newPage - 1) * newPerPage;\n      const endIdx = newPage * newPerPage;\n      return onPerPageSelect(_evt, newPerPage, newPage, startIdx, endIdx);\n    });\n\n    _defineProperty(this, \"renderItems\", () => {\n      const {\n        perPageOptions,\n        perPage,\n        perPageSuffix\n      } = this.props;\n      return perPageOptions.map(({\n        value,\n        title\n      }) => React.createElement(DropdownItem, {\n        key: value,\n        component: \"button\",\n        \"data-action\": `per-page-${value}`,\n        className: css(perPage === value && 'pf-m-selected'),\n        onClick: event => this.handleNewPerPage(event, value)\n      }, title, React.createElement(\"span\", {\n        className: css(paginationStyles.paginationMenuText)\n      }, ` ${perPageSuffix}`), perPage === value && React.createElement(\"i\", {\n        className: css(styles.optionsMenuMenuItemIcon)\n      }, React.createElement(CheckIcon, null))));\n    });\n\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  render() {\n    const {\n      widgetId,\n      isDisabled,\n      itemsPerPageTitle,\n      dropDirection,\n      optionsToggle,\n      perPageOptions,\n      toggleTemplate,\n      firstIndex,\n      lastIndex,\n      itemCount,\n      itemsTitle\n    } = this.props;\n    const {\n      isOpen\n    } = this.state;\n    return React.createElement(DropdownContext.Provider, {\n      value: {\n        id: widgetId,\n        onSelect: this.onSelect,\n        toggleIconClass: styles.optionsMenuToggleIcon,\n        toggleTextClass: styles.optionsMenuToggleText,\n        menuClass: styles.optionsMenuMenu,\n        itemClass: styles.optionsMenuMenuItem,\n        toggleClass: ' ',\n        baseClass: styles.optionsMenu,\n        disabledClass: styles.modifiers.disabled,\n        menuComponent: 'ul',\n        baseComponent: 'div'\n      }\n    }, React.createElement(DropdownWithContext, {\n      direction: dropDirection,\n      isOpen: isOpen,\n      toggle: React.createElement(OptionsToggle, {\n        optionsToggle: optionsToggle,\n        itemsPerPageTitle: itemsPerPageTitle,\n        showToggle: perPageOptions && perPageOptions.length > 0,\n        onToggle: this.onToggle,\n        isOpen: isOpen,\n        widgetId: widgetId,\n        firstIndex: firstIndex,\n        lastIndex: lastIndex,\n        itemCount: itemCount,\n        itemsTitle: itemsTitle,\n        toggleTemplate: toggleTemplate,\n        parentRef: this.parentRef.current,\n        isDisabled: isDisabled\n      }),\n      dropdownItems: this.renderItems(),\n      isPlain: true\n    }));\n  }\n\n}\n\n_defineProperty(PaginationOptionsMenu, \"propTypes\", {\n  className: _pt.string,\n  widgetId: _pt.string,\n  isDisabled: _pt.bool,\n  dropDirection: _pt.oneOf(['up', 'down']),\n  perPageOptions: _pt.arrayOf(_pt.any),\n  itemsPerPageTitle: _pt.string,\n  page: _pt.number,\n  perPageSuffix: _pt.string,\n  itemsTitle: _pt.string,\n  optionsToggle: _pt.string,\n  itemCount: _pt.number,\n  firstIndex: _pt.number,\n  lastIndex: _pt.number,\n  defaultToFullPage: _pt.bool,\n  perPage: _pt.number,\n  lastPage: _pt.number,\n  toggleTemplate: _pt.oneOfType([_pt.func, _pt.string]),\n  onPerPageSelect: _pt.any\n});\n\n_defineProperty(PaginationOptionsMenu, \"defaultProps\", {\n  className: '',\n  widgetId: '',\n  isDisabled: false,\n  dropDirection: DropdownDirection.down,\n  perPageOptions: [],\n  itemsPerPageTitle: 'Items per page',\n  perPageSuffix: 'per page',\n  optionsToggle: 'Select',\n  perPage: 0,\n  firstIndex: 0,\n  lastIndex: 0,\n  defaultToFullPage: false,\n  itemCount: 0,\n  itemsTitle: 'items',\n  toggleTemplate: ({\n    firstIndex,\n    lastIndex,\n    itemCount,\n    itemsTitle\n  }) => React.createElement(React.Fragment, null, React.createElement(\"b\", null, firstIndex, \" - \", lastIndex), ' ', \"of\", React.createElement(\"b\", null, itemCount), \" \", itemsTitle),\n  onPerPageSelect: () => null\n});\n//# sourceMappingURL=PaginationOptionsMenu.js.map"]},"metadata":{},"sourceType":"module"}