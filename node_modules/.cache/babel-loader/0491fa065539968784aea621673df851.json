{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _placeholderText,\n    _jsxFileName = \"/root/kiali-ui/src/components/IstioWizards/RequestRouting/MatchBuilder.tsx\";\n\nimport * as React from 'react';\nimport { Button, Dropdown, DropdownToggle, DropdownItem, InputGroup, TextInput } from '@patternfly/react-core';\nexport var HEADERS = 'headers';\nexport var URI = 'uri';\nexport var SCHEME = 'scheme';\nexport var METHOD = 'method';\nexport var AUTHORITY = 'authority';\nvar matchOptions = [HEADERS, URI, SCHEME, METHOD, AUTHORITY];\nexport var EXACT = 'exact';\nexport var PREFIX = 'prefix';\nexport var REGEX = 'regex'; // Pseudo operator\n\nexport var PRESENCE = 'is present';\nexport var ANYTHING = '^.*$';\nvar opOptions = [EXACT, PREFIX, REGEX];\nvar placeholderText = (_placeholderText = {}, _defineProperty(_placeholderText, HEADERS, 'Header value...'), _defineProperty(_placeholderText, URI, 'Uri value...'), _defineProperty(_placeholderText, SCHEME, 'Scheme value...'), _defineProperty(_placeholderText, METHOD, 'Method value...'), _defineProperty(_placeholderText, AUTHORITY, 'Authority value...'), _placeholderText);\n\nvar MatchBuilder = /*#__PURE__*/function (_React$Component) {\n  _inherits(MatchBuilder, _React$Component);\n\n  var _super = _createSuper(MatchBuilder);\n\n  function MatchBuilder(props) {\n    var _this;\n\n    _classCallCheck(this, MatchBuilder);\n\n    _this = _super.call(this, props);\n\n    _this.onMathOptionsToggle = function () {\n      _this.setState({\n        isMatchDropdown: !_this.state.isMatchDropdown\n      });\n    };\n\n    _this.onOperatorToggle = function () {\n      _this.setState({\n        isOperatorDropdown: !_this.state.isOperatorDropdown\n      });\n    };\n\n    _this.state = {\n      isMatchDropdown: false,\n      isOperatorDropdown: false\n    };\n    return _this;\n  }\n\n  _createClass(MatchBuilder, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var renderOpOptions = this.props.category === HEADERS ? [PRESENCE].concat(opOptions) : opOptions;\n      return /*#__PURE__*/React.createElement(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown, {\n        toggle: /*#__PURE__*/React.createElement(DropdownToggle, {\n          onToggle: this.onMathOptionsToggle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }\n        }, this.props.category),\n        isOpen: this.state.isMatchDropdown,\n        dropdownItems: matchOptions.map(function (mode, index) {\n          return /*#__PURE__*/React.createElement(DropdownItem, {\n            key: mode + '_' + index,\n            value: mode,\n            component: \"button\",\n            onClick: function onClick() {\n              _this2.props.onSelectCategory(mode);\n\n              _this2.onMathOptionsToggle();\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }\n          }, mode);\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }), this.props.category === HEADERS && /*#__PURE__*/React.createElement(TextInput, {\n        id: \"header-name-id\",\n        value: this.props.headerName,\n        onChange: this.props.onHeaderNameChange,\n        placeholder: \"Header name...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown, {\n        toggle: /*#__PURE__*/React.createElement(DropdownToggle, {\n          onToggle: this.onOperatorToggle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }\n        }, this.props.operator),\n        isOpen: this.state.isOperatorDropdown,\n        dropdownItems: renderOpOptions.map(function (op, index) {\n          return /*#__PURE__*/React.createElement(DropdownItem, {\n            key: op + '_' + index,\n            value: op,\n            component: \"button\",\n            onClick: function onClick() {\n              _this2.props.onSelectOperator(op);\n\n              _this2.onOperatorToggle();\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }\n          }, op);\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }), this.props.operator !== PRESENCE && /*#__PURE__*/React.createElement(TextInput, {\n        id: \"match-value-id\",\n        value: this.props.matchValue,\n        onChange: this.props.onMatchValueChange,\n        placeholder: placeholderText[this.props.category],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        disabled: !this.props.isValid,\n        onClick: this.props.onAddMatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, \"Add Match\"));\n    }\n  }]);\n\n  return MatchBuilder;\n}(React.Component);\n\nexport default MatchBuilder;","map":{"version":3,"sources":["/root/kiali-ui/src/components/IstioWizards/RequestRouting/MatchBuilder.tsx"],"names":["React","Button","Dropdown","DropdownToggle","DropdownItem","InputGroup","TextInput","HEADERS","URI","SCHEME","METHOD","AUTHORITY","matchOptions","EXACT","PREFIX","REGEX","PRESENCE","ANYTHING","opOptions","placeholderText","MatchBuilder","props","onMathOptionsToggle","setState","isMatchDropdown","state","onOperatorToggle","isOperatorDropdown","renderOpOptions","category","map","mode","index","onSelectCategory","headerName","onHeaderNameChange","operator","op","onSelectOperator","matchValue","onMatchValueChange","isValid","onAddMatch","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Button, Dropdown, DropdownToggle, DropdownItem, InputGroup, TextInput } from '@patternfly/react-core';\n\ntype Props = {\n  category: string;\n  operator: string;\n  headerName: string;\n  matchValue: string;\n  isValid: boolean;\n  onSelectCategory: (category: string) => void;\n  onHeaderNameChange: (headerName: string) => void;\n  onSelectOperator: (operator: string) => void;\n  onMatchValueChange: (matchValue: string) => void;\n  onAddMatch: () => void;\n};\n\ntype State = {\n  isMatchDropdown: boolean;\n  isOperatorDropdown: boolean;\n};\n\nexport const HEADERS = 'headers';\nexport const URI = 'uri';\nexport const SCHEME = 'scheme';\nexport const METHOD = 'method';\nexport const AUTHORITY = 'authority';\n\nconst matchOptions: string[] = [HEADERS, URI, SCHEME, METHOD, AUTHORITY];\n\nexport const EXACT = 'exact';\nexport const PREFIX = 'prefix';\nexport const REGEX = 'regex';\n\n// Pseudo operator\nexport const PRESENCE = 'is present';\nexport const ANYTHING = '^.*$';\n\nconst opOptions: string[] = [EXACT, PREFIX, REGEX];\n\nconst placeholderText = {\n  [HEADERS]: 'Header value...',\n  [URI]: 'Uri value...',\n  [SCHEME]: 'Scheme value...',\n  [METHOD]: 'Method value...',\n  [AUTHORITY]: 'Authority value...'\n};\n\nclass MatchBuilder extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMatchDropdown: false,\n      isOperatorDropdown: false\n    };\n  }\n\n  onMathOptionsToggle = () => {\n    this.setState({\n      isMatchDropdown: !this.state.isMatchDropdown\n    });\n  };\n\n  onOperatorToggle = () => {\n    this.setState({\n      isOperatorDropdown: !this.state.isOperatorDropdown\n    });\n  };\n\n  render() {\n    const renderOpOptions: string[] = this.props.category === HEADERS ? [PRESENCE, ...opOptions] : opOptions;\n    return (\n      <InputGroup>\n        <Dropdown\n          toggle={<DropdownToggle onToggle={this.onMathOptionsToggle}>{this.props.category}</DropdownToggle>}\n          isOpen={this.state.isMatchDropdown}\n          dropdownItems={matchOptions.map((mode, index) => (\n            <DropdownItem\n              key={mode + '_' + index}\n              value={mode}\n              component=\"button\"\n              onClick={() => {\n                this.props.onSelectCategory(mode);\n                this.onMathOptionsToggle();\n              }}\n            >\n              {mode}\n            </DropdownItem>\n          ))}\n        />\n        {this.props.category === HEADERS && (\n          <TextInput\n            id=\"header-name-id\"\n            value={this.props.headerName}\n            onChange={this.props.onHeaderNameChange}\n            placeholder=\"Header name...\"\n          />\n        )}\n        <Dropdown\n          toggle={<DropdownToggle onToggle={this.onOperatorToggle}>{this.props.operator}</DropdownToggle>}\n          isOpen={this.state.isOperatorDropdown}\n          dropdownItems={renderOpOptions.map((op, index) => (\n            <DropdownItem\n              key={op + '_' + index}\n              value={op}\n              component=\"button\"\n              onClick={() => {\n                this.props.onSelectOperator(op);\n                this.onOperatorToggle();\n              }}\n            >\n              {op}\n            </DropdownItem>\n          ))}\n        />\n        {this.props.operator !== PRESENCE && (\n          <TextInput\n            id=\"match-value-id\"\n            value={this.props.matchValue}\n            onChange={this.props.onMatchValueChange}\n            placeholder={placeholderText[this.props.category]}\n          />\n        )}\n        <Button variant=\"secondary\" disabled={!this.props.isValid} onClick={this.props.onAddMatch}>\n          Add Match\n        </Button>\n      </InputGroup>\n    );\n  }\n}\n\nexport default MatchBuilder;\n"]},"metadata":{},"sourceType":"module"}