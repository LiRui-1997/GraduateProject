{"ast":null,"code":"import { HistoryManager, URLParam } from '../app/History';\nexport var isKioskMode = function isKioskMode() {\n  var urlParams = new URLSearchParams(window.location.search);\n  return urlParams.get('kiosk') === 'true';\n};\nexport var getFocusSelector = function getFocusSelector() {\n  return new URLSearchParams(window.location.search).get(URLParam.FOCUS_SELECTOR) || undefined;\n};\nexport var unsetFocusSelector = function unsetFocusSelector() {\n  HistoryManager.deleteParam(URLParam.FOCUS_SELECTOR, true);\n};\nexport var getExperimentalFlags = function getExperimentalFlags() {\n  var flags = HistoryManager.getParam(URLParam.EXPERIMENTAL_FLAGS);\n\n  if (!flags) {\n    return [];\n  }\n\n  return flags.split(',');\n};\nexport var hasExperimentalFlag = function hasExperimentalFlag(flag) {\n  return getExperimentalFlags().includes(flag);\n};\nexport var getSpanId = function getSpanId() {\n  return new URLSearchParams(window.location.search).get(URLParam.JAEGER_SPAN_ID) || undefined;\n};\nexport var getTraceId = function getTraceId() {\n  return new URLSearchParams(window.location.search).get(URLParam.JAEGER_TRACE_ID) || undefined;\n};\nexport var setTraceId = function setTraceId(traceId) {\n  if (traceId) {\n    HistoryManager.setParam(URLParam.JAEGER_TRACE_ID, traceId);\n  } else {\n    HistoryManager.deleteParam(URLParam.JAEGER_TRACE_ID);\n  }\n};","map":{"version":3,"sources":["/root/GraduateProject/src/utils/SearchParamUtils.ts"],"names":["HistoryManager","URLParam","isKioskMode","urlParams","URLSearchParams","window","location","search","get","getFocusSelector","FOCUS_SELECTOR","undefined","unsetFocusSelector","deleteParam","getExperimentalFlags","flags","getParam","EXPERIMENTAL_FLAGS","split","hasExperimentalFlag","flag","includes","getSpanId","JAEGER_SPAN_ID","getTraceId","JAEGER_TRACE_ID","setTraceId","traceId","setParam"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,QAAzB,QAAyC,gBAAzC;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC/B,MAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAlB;AACA,SAAOJ,SAAS,CAACK,GAAV,CAAc,OAAd,MAA2B,MAAlC;AACD,CAHM;AAKP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AACpC,SAAO,IAAIL,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,EAA4CC,GAA5C,CAAgDP,QAAQ,CAACS,cAAzD,KAA4EC,SAAnF;AACD,CAFM;AAIP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AACtCZ,EAAAA,cAAc,CAACa,WAAf,CAA2BZ,QAAQ,CAACS,cAApC,EAAoD,IAApD;AACD,CAFM;AAIP,OAAO,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAgB;AAClD,MAAMC,KAAK,GAAGf,cAAc,CAACgB,QAAf,CAAwBf,QAAQ,CAACgB,kBAAjC,CAAd;;AACA,MAAI,CAACF,KAAL,EAAY;AACV,WAAO,EAAP;AACD;;AACD,SAAOA,KAAK,CAACG,KAAN,CAAY,GAAZ,CAAP;AACD,CANM;AAQP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,IAAD,EAA2B;AAC5D,SAAON,oBAAoB,GAAGO,QAAvB,CAAgCD,IAAhC,CAAP;AACD,CAFM;AAIP,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7B,SAAO,IAAIlB,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,EAA4CC,GAA5C,CAAgDP,QAAQ,CAACsB,cAAzD,KAA4EZ,SAAnF;AACD,CAFM;AAIP,OAAO,IAAMa,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC9B,SAAO,IAAIpB,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,EAA4CC,GAA5C,CAAgDP,QAAQ,CAACwB,eAAzD,KAA6Ed,SAApF;AACD,CAFM;AAIP,OAAO,IAAMe,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAsB;AAC9C,MAAIA,OAAJ,EAAa;AACX3B,IAAAA,cAAc,CAAC4B,QAAf,CAAwB3B,QAAQ,CAACwB,eAAjC,EAAkDE,OAAlD;AACD,GAFD,MAEO;AACL3B,IAAAA,cAAc,CAACa,WAAf,CAA2BZ,QAAQ,CAACwB,eAApC;AACD;AACF,CANM","sourcesContent":["import { HistoryManager, URLParam } from '../app/History';\n\nexport const isKioskMode = () => {\n  const urlParams = new URLSearchParams(window.location.search);\n  return urlParams.get('kiosk') === 'true';\n};\n\nexport const getFocusSelector = () => {\n  return new URLSearchParams(window.location.search).get(URLParam.FOCUS_SELECTOR) || undefined;\n};\n\nexport const unsetFocusSelector = () => {\n  HistoryManager.deleteParam(URLParam.FOCUS_SELECTOR, true);\n};\n\nexport const getExperimentalFlags = (): string[] => {\n  const flags = HistoryManager.getParam(URLParam.EXPERIMENTAL_FLAGS);\n  if (!flags) {\n    return [];\n  }\n  return flags.split(',');\n};\n\nexport const hasExperimentalFlag = (flag: string): boolean => {\n  return getExperimentalFlags().includes(flag);\n};\n\nexport const getSpanId = () => {\n  return new URLSearchParams(window.location.search).get(URLParam.JAEGER_SPAN_ID) || undefined;\n};\n\nexport const getTraceId = () => {\n  return new URLSearchParams(window.location.search).get(URLParam.JAEGER_TRACE_ID) || undefined;\n};\n\nexport const setTraceId = (traceId?: string) => {\n  if (traceId) {\n    HistoryManager.setParam(URLParam.JAEGER_TRACE_ID, traceId);\n  } else {\n    HistoryManager.deleteParam(URLParam.JAEGER_TRACE_ID);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}