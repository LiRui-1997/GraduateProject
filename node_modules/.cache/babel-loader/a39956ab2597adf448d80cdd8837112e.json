{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/pages/ServiceDetails/ServiceDescription.tsx\";\nimport * as React from 'react';\nimport { Card, CardBody, CardHeader, Title, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport DetailDescription from '../../components/Details/DetailDescription';\nimport { serverConfig } from '../../config';\nimport Labels from '../../components/Label/Labels';\nimport { style } from 'typestyle';\nimport LocalTime from '../../components/Time/LocalTime';\nimport { renderAPILogo } from '../../components/Logo/Logos';\nimport { TextOrLink } from '../../components/TextOrLink';\nimport { KialiIcon } from '../../config/KialiIcon';\nimport { HealthIndicator } from '../../components/Health/HealthIndicator';\nimport { PFBadge, PFBadges } from '../../components/Pf/PfBadges';\nvar resourceListStyle = style({\n  margin: '0px 0 11px 0',\n  $nest: {\n    '& > ul > li > span': {\n      float: 'left',\n      width: '125px',\n      fontWeight: 700\n    }\n  }\n});\nvar iconStyle = style({\n  margin: '0 0 0 0',\n  padding: '0 0 0 0',\n  display: 'inline-block',\n  verticalAlign: '2px !important'\n});\nvar infoStyle = style({\n  margin: '0px 0px 2px 10px',\n  verticalAlign: '-5px !important'\n});\nvar healthIconStyle = style({\n  marginLeft: '10px',\n  verticalAlign: '-1px !important'\n});\n\nvar ServiceDescription = /*#__PURE__*/function (_React$Component) {\n  _inherits(ServiceDescription, _React$Component);\n\n  var _super = _createSuper(ServiceDescription);\n\n  function ServiceDescription(props) {\n    var _this;\n\n    _classCallCheck(this, ServiceDescription);\n\n    _this = _super.call(this, props);\n\n    _this.serviceInfoHandleTabClick = function (_event, tabIndex) {\n      _this.setState({\n        serviceInfoTabKey: tabIndex\n      });\n    };\n\n    _this.state = {\n      serviceInfoTabKey: 0\n    };\n    return _this;\n  }\n\n  _createClass(ServiceDescription, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _this$props$serviceDe;\n\n      var apps = [];\n      var workloads = [];\n\n      if (this.props.serviceDetails) {\n        if (this.props.serviceDetails.workloads) {\n          this.props.serviceDetails.workloads.sort(function (w1, w2) {\n            return w1.name < w2.name ? -1 : 1;\n          }).forEach(function (wk) {\n            if (wk.labels) {\n              var appName = wk.labels[serverConfig.istioLabels.appLabelName];\n\n              if (!apps.includes(appName)) {\n                apps.push(appName);\n              }\n            }\n\n            workloads.push({\n              workloadName: wk.name,\n              istioSidecar: wk.istioSidecar\n            });\n          });\n        }\n      } // We will show service labels only when there is some label that is not present in the selector\n\n\n      var showServiceLabels = false;\n\n      if (this.props.serviceDetails && this.props.serviceDetails.service.labels && this.props.serviceDetails.service.selectors) {\n        var keys = Object.keys(this.props.serviceDetails.service.labels);\n\n        for (var i = 0; i < keys.length; i++) {\n          var key = keys[i];\n          var value = this.props.serviceDetails.service.labels[key];\n\n          if (this.props.serviceDetails.service.selectors[key] !== value) {\n            showServiceLabels = true;\n            break;\n          }\n        }\n      }\n\n      var serviceProperties = /*#__PURE__*/React.createElement(\"div\", {\n        key: \"properties-list\",\n        className: resourceListStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        style: {\n          listStyleType: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }, this.props.serviceDetails && /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }\n      }, \"Created\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'inline-block'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(LocalTime, {\n        time: this.props.serviceDetails.service.createdAt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }))), this.props.serviceDetails && /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }, \"Version\"), this.props.serviceDetails.service.resourceVersion), this.props.serviceDetails && this.props.serviceDetails.additionalDetails && this.props.serviceDetails.additionalDetails.map(function (additionalItem, idx) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: 'additional-details-' + idx,\n          id: 'additional-details-' + idx,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 19\n          }\n        }, additionalItem.title), additionalItem.icon && renderAPILogo(additionalItem.icon, undefined, idx), /*#__PURE__*/React.createElement(TextOrLink, {\n          text: additionalItem.value,\n          urlTruncate: 64,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 19\n          }\n        }));\n      })));\n      var serviceName = this.props.serviceDetails ? this.props.serviceDetails.service.name : 'Service';\n      return /*#__PURE__*/React.createElement(Card, {\n        id: 'ServiceDescriptionCard',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Title, {\n        headingLevel: \"h5\",\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        key: \"service-icon\",\n        className: iconStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(PFBadge, {\n        badge: PFBadges.Service,\n        position: TooltipPosition.top,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }\n      })), serviceName, /*#__PURE__*/React.createElement(Tooltip, {\n        position: TooltipPosition.right,\n        content: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: 'left'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 24\n          }\n        }, serviceProperties),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(KialiIcon.Info, {\n        className: infoStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: healthIconStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(HealthIndicator, {\n        id: serviceName,\n        health: this.props.serviceDetails ? this.props.serviceDetails.health : undefined,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      }, this.props.serviceDetails && showServiceLabels && /*#__PURE__*/React.createElement(Labels, {\n        labels: this.props.serviceDetails.service.labels,\n        tooltipMessage: 'Labels defined on the Service',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }), this.props.serviceDetails && /*#__PURE__*/React.createElement(Labels, {\n        labels: this.props.serviceDetails.service.selectors,\n        tooltipMessage: 'Labels defined on the ' + (showServiceLabels ? 'Selector' : 'Service and Selector'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(DetailDescription, {\n        namespace: this.props.namespace,\n        apps: apps,\n        workloads: workloads,\n        health: (_this$props$serviceDe = this.props.serviceDetails) === null || _this$props$serviceDe === void 0 ? void 0 : _this$props$serviceDe.health,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return ServiceDescription;\n}(React.Component);\n\nexport default ServiceDescription;","map":{"version":3,"sources":["/root/GraduateProject/src/pages/ServiceDetails/ServiceDescription.tsx"],"names":["React","Card","CardBody","CardHeader","Title","Tooltip","TooltipPosition","DetailDescription","serverConfig","Labels","style","LocalTime","renderAPILogo","TextOrLink","KialiIcon","HealthIndicator","PFBadge","PFBadges","resourceListStyle","margin","$nest","float","width","fontWeight","iconStyle","padding","display","verticalAlign","infoStyle","healthIconStyle","marginLeft","ServiceDescription","props","serviceInfoHandleTabClick","_event","tabIndex","setState","serviceInfoTabKey","state","apps","workloads","serviceDetails","sort","w1","w2","name","forEach","wk","labels","appName","istioLabels","appLabelName","includes","push","workloadName","istioSidecar","showServiceLabels","service","selectors","keys","Object","i","length","key","value","serviceProperties","listStyleType","createdAt","resourceVersion","additionalDetails","map","additionalItem","idx","title","icon","undefined","serviceName","Service","top","right","textAlign","health","namespace","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Card, CardBody, CardHeader, Title, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { ServiceDetailsInfo, WorkloadOverview } from '../../types/ServiceInfo';\nimport DetailDescription from '../../components/Details/DetailDescription';\nimport { AppWorkload } from '../../types/App';\nimport { serverConfig } from '../../config';\nimport Labels from '../../components/Label/Labels';\nimport { style } from 'typestyle';\nimport LocalTime from '../../components/Time/LocalTime';\nimport { renderAPILogo } from '../../components/Logo/Logos';\nimport { TextOrLink } from '../../components/TextOrLink';\nimport { KialiIcon } from '../../config/KialiIcon';\nimport { HealthIndicator } from '../../components/Health/HealthIndicator';\nimport { PFBadge, PFBadges } from '../../components/Pf/PfBadges';\n\ninterface ServiceInfoDescriptionProps {\n  namespace: string;\n  serviceDetails?: ServiceDetailsInfo;\n}\n\ntype State = {\n  serviceInfoTabKey: number;\n};\n\nconst resourceListStyle = style({\n  margin: '0px 0 11px 0',\n  $nest: {\n    '& > ul > li > span': {\n      float: 'left',\n      width: '125px',\n      fontWeight: 700\n    }\n  }\n});\n\nconst iconStyle = style({\n  margin: '0 0 0 0',\n  padding: '0 0 0 0',\n  display: 'inline-block',\n  verticalAlign: '2px !important'\n});\n\nconst infoStyle = style({\n  margin: '0px 0px 2px 10px',\n  verticalAlign: '-5px !important'\n});\n\nconst healthIconStyle = style({\n  marginLeft: '10px',\n  verticalAlign: '-1px !important'\n});\n\nclass ServiceDescription extends React.Component<ServiceInfoDescriptionProps, State> {\n  constructor(props: ServiceInfoDescriptionProps) {\n    super(props);\n    this.state = {\n      serviceInfoTabKey: 0\n    };\n  }\n\n  serviceInfoHandleTabClick = (_event, tabIndex) => {\n    this.setState({\n      serviceInfoTabKey: tabIndex\n    });\n  };\n\n  render() {\n    const apps: string[] = [];\n    const workloads: AppWorkload[] = [];\n    if (this.props.serviceDetails) {\n      if (this.props.serviceDetails.workloads) {\n        this.props.serviceDetails.workloads\n          .sort((w1: WorkloadOverview, w2: WorkloadOverview) => (w1.name < w2.name ? -1 : 1))\n          .forEach(wk => {\n            if (wk.labels) {\n              const appName = wk.labels[serverConfig.istioLabels.appLabelName];\n              if (!apps.includes(appName)) {\n                apps.push(appName);\n              }\n            }\n            workloads.push({\n              workloadName: wk.name,\n              istioSidecar: wk.istioSidecar\n            });\n          });\n      }\n    }\n    // We will show service labels only when there is some label that is not present in the selector\n    let showServiceLabels = false;\n    if (\n      this.props.serviceDetails &&\n      this.props.serviceDetails.service.labels &&\n      this.props.serviceDetails.service.selectors\n    ) {\n      const keys = Object.keys(this.props.serviceDetails.service.labels);\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const value = this.props.serviceDetails.service.labels[key];\n        if (this.props.serviceDetails.service.selectors[key] !== value) {\n          showServiceLabels = true;\n          break;\n        }\n      }\n    }\n    const serviceProperties = (\n      <div key=\"properties-list\" className={resourceListStyle}>\n        <ul style={{ listStyleType: 'none' }}>\n          {this.props.serviceDetails && (\n            <li>\n              <span>Created</span>\n              <div style={{ display: 'inline-block' }}>\n                <LocalTime time={this.props.serviceDetails.service.createdAt} />\n              </div>\n            </li>\n          )}\n          {this.props.serviceDetails && (\n            <li>\n              <span>Version</span>\n              {this.props.serviceDetails.service.resourceVersion}\n            </li>\n          )}\n          {this.props.serviceDetails &&\n            this.props.serviceDetails.additionalDetails &&\n            this.props.serviceDetails.additionalDetails.map((additionalItem, idx) => {\n              return (\n                <li key={'additional-details-' + idx} id={'additional-details-' + idx}>\n                  <span>{additionalItem.title}</span>\n                  {additionalItem.icon && renderAPILogo(additionalItem.icon, undefined, idx)}\n                  <TextOrLink text={additionalItem.value} urlTruncate={64} />\n                </li>\n              );\n            })}\n        </ul>\n      </div>\n    );\n\n    const serviceName = this.props.serviceDetails ? this.props.serviceDetails.service.name : 'Service';\n    return (\n      <Card id={'ServiceDescriptionCard'}>\n        <CardHeader>\n          <Title headingLevel=\"h5\" size=\"lg\">\n            <div key=\"service-icon\" className={iconStyle}>\n              <PFBadge badge={PFBadges.Service} position={TooltipPosition.top} />\n            </div>\n            {serviceName}\n            <Tooltip\n              position={TooltipPosition.right}\n              content={<div style={{ textAlign: 'left' }}>{serviceProperties}</div>}\n            >\n              <KialiIcon.Info className={infoStyle} />\n            </Tooltip>\n            <span className={healthIconStyle}>\n              <HealthIndicator\n                id={serviceName}\n                health={this.props.serviceDetails ? this.props.serviceDetails.health : undefined}\n              />\n            </span>\n          </Title>\n        </CardHeader>\n        <CardBody>\n          {this.props.serviceDetails && showServiceLabels && (\n            <Labels\n              labels={this.props.serviceDetails.service.labels}\n              tooltipMessage={'Labels defined on the Service'}\n            />\n          )}\n          {this.props.serviceDetails && (\n            <Labels\n              labels={this.props.serviceDetails.service.selectors}\n              tooltipMessage={'Labels defined on the ' + (showServiceLabels ? 'Selector' : 'Service and Selector')}\n            />\n          )}\n          <DetailDescription\n            namespace={this.props.namespace}\n            apps={apps}\n            workloads={workloads}\n            health={this.props.serviceDetails?.health}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default ServiceDescription;\n"]},"metadata":{},"sourceType":"module"}