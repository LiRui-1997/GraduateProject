{"ast":null,"code":"import _toConsumableArray from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* eslint-disable camelcase */\n\n\nimport chart_area_Opacity from '@patternfly/react-tokens/dist/js/chart_area_Opacity';\nimport chart_color_black_500 from '@patternfly/react-tokens/dist/js/chart_color_black_500'; // Returns child names for each series, except given ID index\n\nvar getChildNames = function getChildNames(_ref) {\n  var chartNames = _ref.chartNames,\n      omitIndex = _ref.omitIndex;\n  var result = [];\n  chartNames.map(function (chartName, index) {\n    if (index !== omitIndex) {\n      if (Array.isArray(chartName)) {\n        chartName.forEach(function (name) {\n          return result.push(name);\n        });\n      } else {\n        result.push(chartName);\n      }\n    }\n  });\n  return result;\n}; // Returns events for an interactive legend\n\n\nexport var getInteractiveLegendEvents = function getInteractiveLegendEvents(props) {\n  return [].concat(_toConsumableArray(getInteractiveLegendTargetEvents(_objectSpread({}, props, {\n    target: 'data'\n  }))), _toConsumableArray(getInteractiveLegendTargetEvents(_objectSpread({}, props, {\n    target: 'labels'\n  }))));\n}; // Returns legend items, except given ID index\n\nvar getInteractiveLegendItems = function getInteractiveLegendItems(_ref2) {\n  var chartNames = _ref2.chartNames,\n      omitIndex = _ref2.omitIndex;\n  var result = [];\n  chartNames.map(function (_, index) {\n    if (index !== omitIndex) {\n      result.push(index);\n    }\n  });\n  return result;\n}; // Returns styles for interactive legend items\n\n\nexport var getInteractiveLegendItemStyles = function getInteractiveLegendItemStyles() {\n  var hidden = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return !hidden ? {} : {\n    labels: {\n      fill: chart_color_black_500.value\n    },\n    symbol: {\n      fill: chart_color_black_500.value,\n      type: 'eyeSlash'\n    }\n  };\n}; // Returns targeted events for legend 'data' or 'labels'\n\nvar getInteractiveLegendTargetEvents = function getInteractiveLegendTargetEvents(_ref3) {\n  var chartNames = _ref3.chartNames,\n      _ref3$isHidden = _ref3.isHidden,\n      isHidden = _ref3$isHidden === void 0 ? function () {\n    return false;\n  } : _ref3$isHidden,\n      legendName = _ref3.legendName,\n      _ref3$onLegendClick = _ref3.onLegendClick,\n      onLegendClick = _ref3$onLegendClick === void 0 ? function () {\n    return null;\n  } : _ref3$onLegendClick,\n      target = _ref3.target;\n\n  if (chartNames === undefined || legendName === undefined) {\n    // eslint-disable-next-line no-console\n    console.error('getInteractiveLegendTargetEvents:', 'requires chartNames and legendName to be specified');\n    return [];\n  }\n\n  return chartNames.map(function (_, index) {\n    // Get IDs to attach events to, except the IDs associated with this event.\n    //\n    // For example, if the current event key is 0, we need IDs associated with events 1 and 2. If the current event\n    // key is 1, we need IDs associated with events 0 and 2. And so on...\n    var childNames = getChildNames({\n      chartNames: chartNames,\n      legendName: legendName,\n      omitIndex: index\n    });\n    var legendItems = getInteractiveLegendItems({\n      chartNames: chartNames,\n      legendName: legendName,\n      omitIndex: index\n    });\n    return {\n      childName: legendName,\n      target: target,\n      eventKey: index,\n      eventHandlers: {\n        onClick: function onClick() {\n          return [{\n            // Hide each data series individually\n            target: 'data',\n            mutation: function mutation(props) {\n              onLegendClick(props);\n              return null;\n            }\n          }];\n        },\n        onMouseOver: function onMouseOver() {\n          return isHidden(index) ? null : [{\n            // Mute all data series, except the data associated with this event\n            childName: childNames,\n            target: 'data',\n            eventKey: 'all',\n            mutation: function mutation(props) {\n              return {\n                style: _objectSpread({}, props.style, {\n                  opacity: chart_area_Opacity.value\n                })\n              };\n            }\n          }, {\n            // Mute all legend item symbols, except the symbol associated with this event\n            childName: 'legend',\n            target: 'data',\n            eventKey: legendItems,\n            mutation: function mutation(props) {\n              return isHidden(props.index) ? null : {\n                // Skip if hidden\n                style: _objectSpread({}, props.style, {\n                  opacity: chart_area_Opacity.value\n                })\n              };\n            }\n          }, {\n            // Mute all legend item labels, except the label associated with this event\n            childName: 'legend',\n            target: 'labels',\n            eventKey: legendItems,\n            mutation: function mutation(props) {\n              var column = props.datum && props.datum.column ? props.datum.column : 0;\n              return isHidden(column) ? null : {\n                // Skip if hidden\n                style: _objectSpread({}, props.style, {\n                  opacity: chart_area_Opacity.value\n                })\n              };\n            }\n          }];\n        },\n        onMouseOut: function onMouseOut() {\n          return [{\n            // Restore all data series associated with this event\n            childName: childNames,\n            target: 'data',\n            eventKey: 'all',\n            mutation: function mutation() {\n              return null;\n            }\n          }, {\n            // Restore all legend item symbols associated with this event\n            childName: 'legend',\n            target: 'data',\n            eventKey: legendItems,\n            mutation: function mutation() {\n              return null;\n            }\n          }, {\n            // Restore all legend item labels associated with this event\n            childName: 'legend',\n            target: 'labels',\n            eventKey: legendItems,\n            mutation: function mutation() {\n              return null;\n            }\n          }];\n        }\n      }\n    };\n  });\n};","map":{"version":3,"sources":["/root/kiali-ui/node_modules/@patternfly/react-charts/dist/esm/components/ChartUtils/chart-interactive-legend.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","chart_area_Opacity","chart_color_black_500","getChildNames","chartNames","omitIndex","result","map","chartName","index","Array","isArray","name","getInteractiveLegendEvents","props","getInteractiveLegendTargetEvents","getInteractiveLegendItems","_","getInteractiveLegendItemStyles","hidden","labels","fill","symbol","type","isHidden","legendName","onLegendClick","undefined","console","error","childNames","legendItems","childName","eventKey","eventHandlers","onClick","mutation","onMouseOver","style","opacity","column","datum","onMouseOut"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable camelcase */\nimport chart_area_Opacity from '@patternfly/react-tokens/dist/js/chart_area_Opacity';\nimport chart_color_black_500 from '@patternfly/react-tokens/dist/js/chart_color_black_500';\n\n// Returns child names for each series, except given ID index\nconst getChildNames = ({\n  chartNames,\n  omitIndex\n}) => {\n  const result = [];\n  chartNames.map((chartName, index) => {\n    if (index !== omitIndex) {\n      if (Array.isArray(chartName)) {\n        chartName.forEach(name => result.push(name));\n      } else {\n        result.push(chartName);\n      }\n    }\n  });\n  return result;\n}; // Returns events for an interactive legend\n\n\nexport const getInteractiveLegendEvents = props => [...getInteractiveLegendTargetEvents(_objectSpread({}, props, {\n  target: 'data'\n})), ...getInteractiveLegendTargetEvents(_objectSpread({}, props, {\n  target: 'labels'\n}))]; // Returns legend items, except given ID index\n\nconst getInteractiveLegendItems = ({\n  chartNames,\n  omitIndex\n}) => {\n  const result = [];\n  chartNames.map((_, index) => {\n    if (index !== omitIndex) {\n      result.push(index);\n    }\n  });\n  return result;\n}; // Returns styles for interactive legend items\n\n\nexport const getInteractiveLegendItemStyles = (hidden = false) => !hidden ? {} : {\n  labels: {\n    fill: chart_color_black_500.value\n  },\n  symbol: {\n    fill: chart_color_black_500.value,\n    type: 'eyeSlash'\n  }\n}; // Returns targeted events for legend 'data' or 'labels'\n\nconst getInteractiveLegendTargetEvents = ({\n  chartNames,\n  isHidden = () => false,\n  legendName,\n  onLegendClick = () => null,\n  target\n}) => {\n  if (chartNames === undefined || legendName === undefined) {\n    // eslint-disable-next-line no-console\n    console.error('getInteractiveLegendTargetEvents:', 'requires chartNames and legendName to be specified');\n    return [];\n  }\n\n  return chartNames.map((_, index) => {\n    // Get IDs to attach events to, except the IDs associated with this event.\n    //\n    // For example, if the current event key is 0, we need IDs associated with events 1 and 2. If the current event\n    // key is 1, we need IDs associated with events 0 and 2. And so on...\n    const childNames = getChildNames({\n      chartNames,\n      legendName,\n      omitIndex: index\n    });\n    const legendItems = getInteractiveLegendItems({\n      chartNames,\n      legendName,\n      omitIndex: index\n    });\n    return {\n      childName: legendName,\n      target,\n      eventKey: index,\n      eventHandlers: {\n        onClick: () => [{\n          // Hide each data series individually\n          target: 'data',\n          mutation: props => {\n            onLegendClick(props);\n            return null;\n          }\n        }],\n        onMouseOver: () => isHidden(index) ? null : [{\n          // Mute all data series, except the data associated with this event\n          childName: childNames,\n          target: 'data',\n          eventKey: 'all',\n          mutation: props => ({\n            style: _objectSpread({}, props.style, {\n              opacity: chart_area_Opacity.value\n            })\n          })\n        }, {\n          // Mute all legend item symbols, except the symbol associated with this event\n          childName: 'legend',\n          target: 'data',\n          eventKey: legendItems,\n          mutation: props => isHidden(props.index) ? null : {\n            // Skip if hidden\n            style: _objectSpread({}, props.style, {\n              opacity: chart_area_Opacity.value\n            })\n          }\n        }, {\n          // Mute all legend item labels, except the label associated with this event\n          childName: 'legend',\n          target: 'labels',\n          eventKey: legendItems,\n          mutation: props => {\n            const column = props.datum && props.datum.column ? props.datum.column : 0;\n            return isHidden(column) ? null : {\n              // Skip if hidden\n              style: _objectSpread({}, props.style, {\n                opacity: chart_area_Opacity.value\n              })\n            };\n          }\n        }],\n        onMouseOut: () => [{\n          // Restore all data series associated with this event\n          childName: childNames,\n          target: 'data',\n          eventKey: 'all',\n          mutation: () => null\n        }, {\n          // Restore all legend item symbols associated with this event\n          childName: 'legend',\n          target: 'data',\n          eventKey: legendItems,\n          mutation: () => null\n        }, {\n          // Restore all legend item labels associated with this event\n          childName: 'legend',\n          target: 'labels',\n          eventKey: legendItems,\n          mutation: () => null\n        }]\n      }\n    };\n  });\n};\n//# sourceMappingURL=chart-interactive-legend.js.map"]},"metadata":{},"sourceType":"module"}