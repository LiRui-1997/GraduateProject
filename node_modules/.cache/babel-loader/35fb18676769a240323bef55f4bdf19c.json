{"ast":null,"code":"import _slicedToArray from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/pages/IstioConfigDetails/IstioObjectDetails/VirtualServiceRoute.tsx\";\nimport * as React from 'react';\nimport { ChartBullet } from '@patternfly/react-charts/dist/js/components/ChartBullet';\n\nvar VirtualServiceRoute = /*#__PURE__*/function (_React$Component) {\n  _inherits(VirtualServiceRoute, _React$Component);\n\n  var _super = _createSuper(VirtualServiceRoute);\n\n  function VirtualServiceRoute() {\n    _classCallCheck(this, VirtualServiceRoute);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(VirtualServiceRoute, [{\n    key: \"bulletChartValues\",\n    value: function bulletChartValues(routes) {\n      var weightSum = 0;\n      return (routes.route || []).map(function (destinationWeight) {\n        var destination = destinationWeight.destination;\n        var destRepresentation = \"\".concat(destination.host || '-', \"_\").concat(destination.subset || '-', \"_\").concat(destination.port || '-');\n        var routeSum = routes.route && routes.route.length === 1 ? 100 : destinationWeight.weight || 0;\n        weightSum += routeSum;\n        var dWeight = destinationWeight.weight ? destinationWeight.weight : 100;\n        return {\n          y: weightSum,\n          name: \"\".concat(dWeight, \"_\").concat(destRepresentation)\n        };\n      });\n    }\n  }, {\n    key: \"bulletChartLabels\",\n    value: function bulletChartLabels(data) {\n      var datum = data.datum;\n\n      var _datum$name$split = datum.name.split('_'),\n          _datum$name$split2 = _slicedToArray(_datum$name$split, 2),\n          percent = _datum$name$split2[0],\n          host = _datum$name$split2[1];\n\n      var label = 'Weight';\n\n      if (host) {\n        label = \"\".concat(percent, \" %\");\n      }\n\n      return label;\n    }\n  }, {\n    key: \"renderWeights\",\n    value: function renderWeights(route, i) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, (route.route || []).length >= 1 && /*#__PURE__*/React.createElement(ChartBullet, {\n        key: 'bullet-chart-' + i,\n        ariaDesc: 'Routing percentage representation',\n        ariaTitle: 'Traffic routing distribution',\n        maxDomain: {\n          y: 100\n        },\n        height: 80,\n        qualitativeRangeData: [{\n          name: 'Range',\n          y: 100\n        }],\n        primarySegmentedMeasureData: this.bulletChartValues(route),\n        labels: this.bulletChartLabels,\n        padding: '80 0 0 0',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return (this.props.routes || []).map(function (route, i) {\n        var marginTop = i === 0 ? -30 : 0;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: 'bulletchart-wrapper-' + i,\n          style: {\n            marginTop: marginTop\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }\n        }, _this.renderWeights(route, i));\n      });\n    }\n  }]);\n\n  return VirtualServiceRoute;\n}(React.Component);\n\nexport default VirtualServiceRoute;","map":{"version":3,"sources":["/root/GraduateProject/src/pages/IstioConfigDetails/IstioObjectDetails/VirtualServiceRoute.tsx"],"names":["React","ChartBullet","VirtualServiceRoute","routes","weightSum","route","map","destinationWeight","destination","destRepresentation","host","subset","port","routeSum","length","weight","dWeight","y","name","data","datum","split","percent","label","i","bulletChartValues","bulletChartLabels","props","marginTop","renderWeights","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { HTTPRoute, TCPRoute } from '../../../types/IstioObjects';\nimport { ChartBullet } from '@patternfly/react-charts/dist/js/components/ChartBullet';\n\ninterface VirtualServiceRouteProps {\n  name: string;\n  namespace: string;\n  kind: string;\n  routes: any[];\n}\n\nclass VirtualServiceRoute extends React.Component<VirtualServiceRouteProps> {\n  bulletChartValues(routes: TCPRoute | HTTPRoute) {\n    let weightSum: number = 0;\n    return (routes.route || []).map(destinationWeight => {\n      const destination = destinationWeight.destination;\n      const destRepresentation = `${destination.host || '-'}_${destination.subset || '-'}_${destination.port || '-'}`;\n\n      const routeSum = routes.route && routes.route.length === 1 ? 100 : destinationWeight.weight || 0;\n      weightSum += routeSum;\n      const dWeight = destinationWeight.weight ? destinationWeight.weight : 100;\n\n      return {\n        y: weightSum,\n        name: `${dWeight}_${destRepresentation}`\n      };\n    });\n  }\n\n  bulletChartLabels(data: any) {\n    const datum = data.datum;\n    const [percent, host] = datum.name.split('_');\n    let label = 'Weight';\n    if (host) {\n      label = `${percent} %`;\n    }\n    return label;\n  }\n\n  renderWeights(route: any, i: number) {\n    return (\n      <>\n        {(route.route || []).length >= 1 && (\n          <ChartBullet\n            key={'bullet-chart-' + i}\n            ariaDesc={'Routing percentage representation'}\n            ariaTitle={'Traffic routing distribution'}\n            maxDomain={{ y: 100 }}\n            height={80}\n            qualitativeRangeData={[{ name: 'Range', y: 100 }]}\n            primarySegmentedMeasureData={this.bulletChartValues(route)}\n            labels={this.bulletChartLabels}\n            padding={'80 0 0 0'}\n          />\n        )}\n      </>\n    );\n  }\n\n  render() {\n    return (this.props.routes || []).map((route, i) => {\n      const marginTop = i === 0 ? -30 : 0;\n      return (\n        <div key={'bulletchart-wrapper-' + i} style={{ marginTop: marginTop }}>\n          {this.renderWeights(route, i)}\n        </div>\n      );\n    });\n  }\n}\n\nexport default VirtualServiceRoute;\n"]},"metadata":{},"sourceType":"module"}