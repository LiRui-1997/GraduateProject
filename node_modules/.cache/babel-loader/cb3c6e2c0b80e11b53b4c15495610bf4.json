{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/components/MissingLabel/MissingLabel.tsx\";\nimport * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { icons, serverConfig } from '../../config';\nimport { KialiIcon } from '../../config/KialiIcon';\nimport { style } from 'typestyle';\nimport { PFBadge } from '../Pf/PfBadges';\nvar infoStyle = style({\n  margin: '0px 5px 2px 4px',\n  verticalAlign: '-5px !important'\n});\n\nvar MissingLabel = /*#__PURE__*/function (_React$Component) {\n  _inherits(MissingLabel, _React$Component);\n\n  var _super = _createSuper(MissingLabel);\n\n  function MissingLabel() {\n    _classCallCheck(this, MissingLabel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MissingLabel, [{\n    key: \"render\",\n    value: function render() {\n      var appLabel = serverConfig.istioLabels.appLabelName;\n      var versionLabel = serverConfig.istioLabels.versionLabelName;\n      var icon = icons.istio.missingLabel.icon;\n      var color = icons.istio.missingLabel.color;\n      var tooltipContent = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }, this.props.missingApp && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(PFBadge, {\n        badge: {\n          badge: appLabel\n        },\n        isRead: true,\n        style: {\n          marginRight: '0px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }\n      }), \" label is missing.\", ' ', /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, \"This workload won't be linked with an application.\")), this.props.missingVersion && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(PFBadge, {\n        badge: {\n          badge: versionLabel\n        },\n        isRead: true,\n        style: {\n          marginRight: '0px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      }), \" label is missing.\", ' ', /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, \"This workload won't have Istio routing capabilities.\")), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, \"Missing labels will impact in the telemetry collected by the Istio proxy.\"));\n      var iconComponent = /*#__PURE__*/React.createElement(\"span\", {\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }, React.createElement(icon, {\n        style: {\n          color: color,\n          verticalAlign: '-2px'\n        }\n      }), !this.props.tooltip && /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          marginLeft: '8px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, \"Missing \", this.props.missingApp ? 'App' : this.props.missingVersion ? 'Version' : 'Label', /*#__PURE__*/React.createElement(Tooltip, {\n        key: \"tooltip_missing_label\",\n        position: TooltipPosition.top,\n        content: tooltipContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(KialiIcon.Info, {\n        className: infoStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }))));\n      return this.props.tooltip ? /*#__PURE__*/React.createElement(Tooltip, {\n        key: \"tooltip_missing_label\",\n        position: TooltipPosition.right,\n        content: tooltipContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, iconComponent) : iconComponent;\n    }\n  }]);\n\n  return MissingLabel;\n}(React.Component);\n\nexport default MissingLabel;","map":{"version":3,"sources":["/root/kiali-ui/src/components/MissingLabel/MissingLabel.tsx"],"names":["React","Tooltip","TooltipPosition","icons","serverConfig","KialiIcon","style","PFBadge","infoStyle","margin","verticalAlign","MissingLabel","appLabel","istioLabels","appLabelName","versionLabel","versionLabelName","icon","istio","missingLabel","color","tooltipContent","textAlign","props","missingApp","badge","marginRight","missingVersion","iconComponent","createElement","tooltip","marginLeft","top","right","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { icons, serverConfig } from '../../config';\nimport { KialiIcon } from '../../config/KialiIcon';\nimport { style } from 'typestyle';\nimport { PFBadge } from '../Pf/PfBadges';\n\ntype MissingLabelProps = {\n  missingApp: boolean;\n  missingVersion: boolean;\n  tooltip: boolean;\n  style?: React.CSSProperties;\n};\n\nconst infoStyle = style({\n  margin: '0px 5px 2px 4px',\n  verticalAlign: '-5px !important'\n});\n\nclass MissingLabel extends React.Component<MissingLabelProps, {}> {\n  render() {\n    const appLabel = serverConfig.istioLabels.appLabelName;\n    const versionLabel = serverConfig.istioLabels.versionLabelName;\n    const icon = icons.istio.missingLabel.icon;\n    const color = icons.istio.missingLabel.color;\n    const tooltipContent = (\n      <div style={{ textAlign: 'left' }}>\n        {this.props.missingApp && (\n          <>\n            <div>\n              <PFBadge badge={{ badge: appLabel }} isRead={true} style={{ marginRight: '0px' }} /> label is missing.{' '}\n              <br />\n            </div>\n            <div>This workload won't be linked with an application.</div>\n          </>\n        )}\n        {this.props.missingVersion && (\n          <>\n            <div>\n              <PFBadge badge={{ badge: versionLabel }} isRead={true} style={{ marginRight: '0px' }} /> label is missing.{' '}\n              <br />\n            </div>\n            <div>This workload won't have Istio routing capabilities.</div>\n          </>\n        )}\n        <div>Missing labels will impact in the telemetry collected by the Istio proxy.</div>\n      </div>\n    );\n    const iconComponent = (\n      <span style={this.props.style}>\n        {React.createElement(icon, { style: { color: color, verticalAlign: '-2px' } })}\n        {!this.props.tooltip && (\n          <span style={{ marginLeft: '8px' }}>\n            Missing {this.props.missingApp ? 'App' : this.props.missingVersion ? 'Version' : 'Label'}\n            <Tooltip key={`tooltip_missing_label`} position={TooltipPosition.top} content={tooltipContent}>\n              <KialiIcon.Info className={infoStyle} />\n            </Tooltip>\n          </span>\n        )}\n      </span>\n    );\n    return this.props.tooltip ? (\n      <Tooltip key={`tooltip_missing_label`} position={TooltipPosition.right} content={tooltipContent}>\n        {iconComponent}\n      </Tooltip>\n    ) : (\n      iconComponent\n    );\n  }\n}\n\nexport default MissingLabel;\n"]},"metadata":{},"sourceType":"module"}