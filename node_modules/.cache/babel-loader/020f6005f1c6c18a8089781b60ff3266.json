{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/pages/Overview/OverviewNamespaceActions.tsx\";\nimport * as React from 'react';\nimport { Dropdown, DropdownGroup, DropdownItem, DropdownSeparator, KebabToggle, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nexport var OverviewNamespaceActions = /*#__PURE__*/function (_React$Component) {\n  _inherits(OverviewNamespaceActions, _React$Component);\n\n  var _super = _createSuper(OverviewNamespaceActions);\n\n  function OverviewNamespaceActions(props) {\n    var _this;\n\n    _classCallCheck(this, OverviewNamespaceActions);\n\n    _this = _super.call(this, props);\n\n    _this.onKebabToggle = function (isOpen) {\n      _this.setState({\n        isKebabOpen: isOpen\n      });\n    };\n\n    _this.renderTooltip = function (key, position, msg, child) {\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        key: 'tooltip_' + key,\n        position: position,\n        content: /*#__PURE__*/React.createElement(React.Fragment, null, msg),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'inline-block',\n          cursor: 'not-allowed'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, child));\n    };\n\n    _this.state = {\n      isKebabOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(OverviewNamespaceActions, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_, prevState) {\n      if (prevState.isKebabOpen) {\n        this.setState({\n          isKebabOpen: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var namespaceActions = this.props.actions.map(function (action, i) {\n        if (action.isSeparator) {\n          return /*#__PURE__*/React.createElement(DropdownSeparator, {\n            key: 'separator_' + i,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 16\n            }\n          });\n        }\n\n        if (action.isGroup && action.children) {\n          return /*#__PURE__*/React.createElement(DropdownGroup, {\n            key: 'group_' + i,\n            label: action.title,\n            className: \"kiali-group-menu\",\n            children: action.children.map(function (subaction, j) {\n              var itemKey = 'subaction_' + i + '_' + j;\n              var item = /*#__PURE__*/React.createElement(DropdownItem, {\n                key: itemKey,\n                isDisabled: subaction.isDisabled,\n                onClick: function onClick() {\n                  return subaction.action ? subaction.action(_this2.props.namespace) : undefined;\n                },\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 17\n                }\n              }, subaction.title);\n              return subaction.isDisabled ? _this2.renderTooltip('tooltip_' + itemKey, TooltipPosition.left, 'User has not enough permissions for this action', item) : item;\n            }),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 11\n            }\n          });\n        } else if (action.title && action.action) {\n          var item = /*#__PURE__*/React.createElement(DropdownItem, {\n            key: 'action_' + i,\n            isDisabled: action.isDisabled,\n            onClick: function onClick() {\n              return action.action ? action.action(_this2.props.namespace) : undefined;\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 11\n            }\n          }, action.title, \" \", !!action.isExternal ? /*#__PURE__*/React.createElement(ExternalLinkAltIcon, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 51\n            }\n          }) : undefined);\n          return action.isDisabled ? _this2.renderTooltip('tooltip_action_' + i, TooltipPosition.left, 'User has not enough permissions for this action', item) : item;\n        }\n\n        return undefined;\n      });\n      return /*#__PURE__*/React.createElement(Dropdown, {\n        toggle: /*#__PURE__*/React.createElement(KebabToggle, {\n          onToggle: this.onKebabToggle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }\n        }),\n        dropdownItems: namespaceActions,\n        isPlain: true,\n        isOpen: this.state.isKebabOpen,\n        position: 'right',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return OverviewNamespaceActions;\n}(React.Component);","map":{"version":3,"sources":["/root/kiali-ui/src/pages/Overview/OverviewNamespaceActions.tsx"],"names":["React","Dropdown","DropdownGroup","DropdownItem","DropdownSeparator","KebabToggle","Tooltip","TooltipPosition","ExternalLinkAltIcon","OverviewNamespaceActions","props","onKebabToggle","isOpen","setState","isKebabOpen","renderTooltip","key","position","msg","child","display","cursor","state","_","prevState","namespaceActions","actions","map","action","i","isSeparator","isGroup","children","title","subaction","j","itemKey","item","isDisabled","namespace","undefined","left","isExternal","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Dropdown,\n  DropdownGroup,\n  DropdownItem,\n  DropdownSeparator,\n  KebabToggle,\n  Tooltip,\n  TooltipPosition\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nexport type OverviewNamespaceAction = {\n  isGroup: boolean;\n  isSeparator: boolean;\n  isDisabled: boolean;\n  isExternal?: boolean;\n  title?: string;\n  children?: OverviewNamespaceAction[];\n  action?: (namespace: string) => void;\n};\n\ntype Props = {\n  namespace: string;\n  actions: OverviewNamespaceAction[];\n};\n\ntype State = {\n  isKebabOpen: boolean;\n};\n\nexport class OverviewNamespaceActions extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isKebabOpen: false\n    };\n  }\n\n  onKebabToggle = (isOpen: boolean) => {\n    this.setState({\n      isKebabOpen: isOpen\n    });\n  };\n\n  renderTooltip = (key, position, msg, child): JSX.Element => {\n    return (\n      <Tooltip key={'tooltip_' + key} position={position} content={<>{msg}</>}>\n        <div style={{ display: 'inline-block', cursor: 'not-allowed' }}>{child}</div>\n      </Tooltip>\n    );\n  };\n\n  componentDidUpdate(_: Readonly<Props>, prevState: Readonly<State>) {\n    if (prevState.isKebabOpen) {\n      this.setState({\n        isKebabOpen: false\n      });\n    }\n  }\n\n  render() {\n    const namespaceActions = this.props.actions.map((action, i) => {\n      if (action.isSeparator) {\n        return <DropdownSeparator key={'separator_' + i} />;\n      }\n      if (action.isGroup && action.children) {\n        return (\n          <DropdownGroup\n            key={'group_' + i}\n            label={action.title}\n            className=\"kiali-group-menu\"\n            children={action.children.map((subaction, j) => {\n              const itemKey = 'subaction_' + i + '_' + j;\n              const item = (\n                <DropdownItem\n                  key={itemKey}\n                  isDisabled={subaction.isDisabled}\n                  onClick={() => (subaction.action ? subaction.action(this.props.namespace) : undefined)}\n                >\n                  {subaction.title}\n                </DropdownItem>\n              );\n              return subaction.isDisabled\n                ? this.renderTooltip(\n                    'tooltip_' + itemKey,\n                    TooltipPosition.left,\n                    'User has not enough permissions for this action',\n                    item\n                  )\n                : item;\n            })}\n          />\n        );\n      } else if (action.title && action.action) {\n        const item = (\n          <DropdownItem\n            key={'action_' + i}\n            isDisabled={action.isDisabled}\n            onClick={() => (action.action ? action.action(this.props.namespace) : undefined)}\n          >\n            {action.title} {!!action.isExternal ? <ExternalLinkAltIcon /> : undefined}\n          </DropdownItem>\n        );\n        return action.isDisabled\n          ? this.renderTooltip(\n              'tooltip_action_' + i,\n              TooltipPosition.left,\n              'User has not enough permissions for this action',\n              item\n            )\n          : item;\n      }\n      return undefined;\n    });\n    return (\n      <Dropdown\n        toggle={<KebabToggle onToggle={this.onKebabToggle} />}\n        dropdownItems={namespaceActions}\n        isPlain={true}\n        isOpen={this.state.isKebabOpen}\n        position={'right'}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}