{"ast":null,"code":"function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { defaults } from 'lodash';\nimport { VictoryLegend } from 'victory';\nimport { Helpers, TextSize } from 'victory-core';\nimport { ChartCommonStyles } from '../ChartTheme';\nimport { overpassFontCharacterConstant } from './chart-label';\nimport { getPieOrigin } from './chart-origin';\nimport * as React from 'react'; // Returns a legend which has been positioned per the given chart properties\n\nexport var getComputedLegend = function getComputedLegend(_ref3) {\n  var _ref3$allowWrap = _ref3.allowWrap,\n      allowWrap = _ref3$allowWrap === void 0 ? true : _ref3$allowWrap,\n      _ref3$chartType = _ref3.chartType,\n      chartType = _ref3$chartType === void 0 ? 'chart' : _ref3$chartType,\n      _ref3$dx = _ref3.dx,\n      dx = _ref3$dx === void 0 ? 0 : _ref3$dx,\n      _ref3$dy = _ref3.dy,\n      dy = _ref3$dy === void 0 ? 0 : _ref3$dy,\n      height = _ref3.height,\n      legendComponent = _ref3.legendComponent,\n      padding = _ref3.padding,\n      _ref3$position = _ref3.position,\n      position = _ref3$position === void 0 ? ChartCommonStyles.legend.position : _ref3$position,\n      theme = _ref3.theme,\n      width = _ref3.width,\n      _ref3$orientation = _ref3.orientation,\n      orientation = _ref3$orientation === void 0 ? theme.legend.orientation : _ref3$orientation;\n  // Get the number of legend items per row\n  var legendItemsProps = legendComponent.props ? legendComponent.props : {};\n  var legendItemsPerRow = allowWrap ? getLegendItemsPerRow({\n    chartType: chartType,\n    dx: dx,\n    height: height,\n    legendData: legendItemsProps.data,\n    legendOrientation: legendItemsProps.legendOrientation ? legendItemsProps.legendOrientation : orientation,\n    legendPosition: position,\n    legendProps: legendItemsProps,\n    padding: padding,\n    theme: theme,\n    width: width\n  }) : undefined; // Include new itemsPerRow prop when determining x and y position\n\n  var legendPositionProps = defaults({}, legendComponent.props, {\n    itemsPerRow: legendItemsPerRow\n  });\n  var legendX = getLegendX({\n    chartType: chartType,\n    dx: dx,\n    height: height,\n    legendData: legendPositionProps.data,\n    legendOrientation: legendPositionProps.legendOrientation ? legendPositionProps.legendOrientation : orientation,\n    legendPosition: position,\n    legendProps: legendPositionProps,\n    padding: padding,\n    theme: theme,\n    width: width\n  });\n  var legendY = getLegendY({\n    chartType: chartType,\n    dy: dy,\n    height: height,\n    legendData: legendPositionProps.data,\n    legendOrientation: legendPositionProps.legendOrientation ? legendPositionProps.legendOrientation : orientation,\n    legendProps: legendPositionProps,\n    legendPosition: position,\n    padding: padding,\n    theme: theme,\n    width: width\n  }); // Clone legend with updated props\n\n  var legendProps = defaults({}, legendComponent.props, {\n    itemsPerRow: legendItemsPerRow,\n    orientation: orientation,\n    standalone: false,\n    theme: theme,\n    x: legendX > 0 ? legendX : 0,\n    y: legendY > 0 ? legendY : 0\n  });\n  return React.cloneElement(legendComponent, legendProps);\n}; // Returns legend dimensions\n\nexport var getLegendDimensions = function getLegendDimensions(_ref4) {\n  var legendData = _ref4.legendData,\n      legendOrientation = _ref4.legendOrientation,\n      legendProps = _ref4.legendProps,\n      theme = _ref4.theme;\n\n  if (legendData || legendProps.data) {\n    return VictoryLegend.getDimensions(_objectSpread({\n      data: legendData,\n      orientation: legendOrientation,\n      theme: theme\n    }, legendProps));\n  }\n\n  return {};\n}; // Returns true if the legend is smaller than its container\n\nexport var doesLegendFit = function doesLegendFit(_ref5) {\n  var _ref5$dx = _ref5.dx,\n      dx = _ref5$dx === void 0 ? 0 : _ref5$dx,\n      height = _ref5.height,\n      legendPosition = _ref5.legendPosition,\n      legendData = _ref5.legendData,\n      legendOrientation = _ref5.legendOrientation,\n      legendProps = _ref5.legendProps,\n      padding = _ref5.padding,\n      theme = _ref5.theme,\n      width = _ref5.width;\n\n  var _Helpers$getPadding = Helpers.getPadding({\n    padding: padding\n  }),\n      left = _Helpers$getPadding.left,\n      right = _Helpers$getPadding.right;\n\n  var chartSize = {\n    height: height,\n    // Fixed size\n    width: width - left - right\n  };\n  var legendDimensions = getLegendDimensions({\n    legendData: legendData,\n    legendOrientation: legendOrientation,\n    legendProps: legendProps,\n    theme: theme\n  });\n  var occupiedWidth = 0;\n\n  switch (legendPosition) {\n    case 'bottom-left':\n      occupiedWidth = left + dx;\n      break;\n\n    case 'right':\n      occupiedWidth = chartSize.width + ChartCommonStyles.legend.margin + left + dx;\n      break;\n\n    default:\n      occupiedWidth = dx;\n      break;\n  }\n\n  return width - occupiedWidth > legendDimensions.width;\n}; // Returns the number of legend items per row\n\nexport var getLegendItemsPerRow = function getLegendItemsPerRow(_ref6) {\n  var dx = _ref6.dx,\n      height = _ref6.height,\n      legendPosition = _ref6.legendPosition,\n      legendData = _ref6.legendData,\n      legendOrientation = _ref6.legendOrientation,\n      legendProps = _ref6.legendProps,\n      padding = _ref6.padding,\n      theme = _ref6.theme,\n      width = _ref6.width;\n  var itemsPerRow = legendData ? legendData.length : 0;\n\n  for (var i = itemsPerRow; i > 0; i--) {\n    var fits = doesLegendFit({\n      dx: dx,\n      height: height,\n      legendPosition: legendPosition,\n      legendData: legendData,\n      legendOrientation: legendOrientation,\n      legendProps: _objectSpread({}, legendProps, {\n        itemsPerRow: i\n      }),\n      padding: padding,\n      theme: theme,\n      width: width\n    });\n\n    if (fits) {\n      itemsPerRow = i;\n      break;\n    }\n  }\n\n  return itemsPerRow;\n}; // Returns x coordinate for legend\n\nexport var getLegendX = function getLegendX(_ref) {\n  var chartType = _ref.chartType,\n      rest = _objectWithoutProperties(_ref, [\"chartType\"]);\n\n  return chartType === 'pie' ? getPieLegendX(rest) : getChartLegendX(rest);\n}; // Returns y coordinate for legend\n\nexport var getLegendY = function getLegendY(_ref2) {\n  var chartType = _ref2.chartType,\n      rest = _objectWithoutProperties(_ref2, [\"chartType\"]);\n\n  switch (chartType) {\n    case 'pie':\n      return getPieLegendY(rest);\n\n    case 'bullet':\n      return getBulletLegendY(rest);\n\n    default:\n      return getChartLegendY(rest);\n  }\n}; // Returns y coordinate for bullet legends\n\nexport var getBulletLegendY = function getBulletLegendY(_ref7) {\n  var _ref7$dy = _ref7.dy,\n      dy = _ref7$dy === void 0 ? 0 : _ref7$dy,\n      height = _ref7.height,\n      legendPosition = _ref7.legendPosition,\n      legendData = _ref7.legendData,\n      legendOrientation = _ref7.legendOrientation,\n      legendProps = _ref7.legendProps,\n      padding = _ref7.padding,\n      theme = _ref7.theme,\n      width = _ref7.width;\n\n  var _Helpers$getPadding2 = Helpers.getPadding({\n    padding: padding\n  }),\n      left = _Helpers$getPadding2.left,\n      right = _Helpers$getPadding2.right;\n\n  var chartSize = {\n    height: height,\n    // Fixed size\n    width: width - left - right\n  };\n\n  switch (legendPosition) {\n    case 'bottom':\n    case 'bottom-left':\n      return chartSize.height + ChartCommonStyles.legend.margin + dy;\n\n    case 'right':\n      {\n        // Legend height with padding\n        var legendDimensions = getLegendDimensions({\n          legendData: legendData,\n          legendOrientation: legendOrientation,\n          legendProps: legendProps,\n          theme: theme\n        });\n\n        var legendPadding = function legendPadding(legendDataArr) {\n          return legendDataArr && legendDataArr.length > 0 ? 17 : 0;\n        };\n\n        return (chartSize.height - legendDimensions.height) / 2 + legendPadding(legendData);\n      }\n\n    default:\n      return dy;\n  }\n}; // Returns x coordinate for chart legends\n\nexport var getChartLegendX = function getChartLegendX(_ref8) {\n  var _ref8$dx = _ref8.dx,\n      dx = _ref8$dx === void 0 ? 0 : _ref8$dx,\n      height = _ref8.height,\n      legendData = _ref8.legendData,\n      legendOrientation = _ref8.legendOrientation,\n      legendPosition = _ref8.legendPosition,\n      legendProps = _ref8.legendProps,\n      padding = _ref8.padding,\n      theme = _ref8.theme,\n      width = _ref8.width;\n\n  var _Helpers$getPadding3 = Helpers.getPadding({\n    padding: padding\n  }),\n      top = _Helpers$getPadding3.top,\n      bottom = _Helpers$getPadding3.bottom,\n      left = _Helpers$getPadding3.left,\n      right = _Helpers$getPadding3.right;\n\n  var chartSize = {\n    height: Math.abs(height - (bottom + top)),\n    width: Math.abs(width - (left + right))\n  };\n  var legendDimensions = getLegendDimensions({\n    legendData: legendData,\n    legendOrientation: legendOrientation,\n    legendProps: legendProps,\n    theme: theme\n  });\n  var textSizeWorkAround = getTextSizeWorkAround({\n    legendData: legendData,\n    legendOrientation: legendOrientation,\n    theme: theme\n  });\n\n  switch (legendPosition) {\n    case 'bottom':\n      return width > legendDimensions.width - textSizeWorkAround ? Math.round((width - (legendDimensions.width - textSizeWorkAround)) / 2) + dx : dx;\n\n    case 'bottom-left':\n      return left + dx;\n\n    case 'right':\n      return chartSize.width + ChartCommonStyles.legend.margin + left + dx;\n\n    default:\n      return dx;\n  }\n}; // Returns y coordinate for chart legends\n\nexport var getChartLegendY = function getChartLegendY(_ref9) {\n  var _ref9$dy = _ref9.dy,\n      dy = _ref9$dy === void 0 ? 0 : _ref9$dy,\n      height = _ref9.height,\n      legendPosition = _ref9.legendPosition,\n      legendData = _ref9.legendData,\n      legendOrientation = _ref9.legendOrientation,\n      legendProps = _ref9.legendProps,\n      padding = _ref9.padding,\n      theme = _ref9.theme,\n      width = _ref9.width;\n\n  var _Helpers$getPadding4 = Helpers.getPadding({\n    padding: padding\n  }),\n      top = _Helpers$getPadding4.top,\n      bottom = _Helpers$getPadding4.bottom,\n      left = _Helpers$getPadding4.left,\n      right = _Helpers$getPadding4.right;\n\n  var chartSize = {\n    height: Math.abs(height - (bottom + top)),\n    width: Math.abs(width - (left + right))\n  };\n\n  switch (legendPosition) {\n    case 'bottom':\n    case 'bottom-left':\n      return chartSize.height + ChartCommonStyles.legend.margin * 2 + top + dy;\n\n    case 'right':\n      {\n        // Legend height with padding\n        var legendDimensions = getLegendDimensions({\n          legendData: legendData,\n          legendOrientation: legendOrientation,\n          legendProps: legendProps,\n          theme: theme\n        });\n        var originX = chartSize.height / 2 + top;\n\n        var legendPadding = function legendPadding(legendDataArr) {\n          return legendDataArr && legendDataArr.length > 0 ? 2 : 0;\n        };\n\n        return originX - legendDimensions.height / 2 + legendPadding(legendData);\n      }\n\n    default:\n      return dy;\n  }\n}; // Returns x coordinate for pie legends\n\nexport var getPieLegendX = function getPieLegendX(_ref10) {\n  var _ref10$dx = _ref10.dx,\n      dx = _ref10$dx === void 0 ? 0 : _ref10$dx,\n      height = _ref10.height,\n      legendData = _ref10.legendData,\n      legendOrientation = _ref10.legendOrientation,\n      legendPosition = _ref10.legendPosition,\n      legendProps = _ref10.legendProps,\n      padding = _ref10.padding,\n      theme = _ref10.theme,\n      width = _ref10.width;\n  var origin = getPieOrigin({\n    height: height,\n    padding: padding,\n    width: width\n  });\n  var radius = Helpers.getRadius({\n    height: height,\n    width: width,\n    padding: padding\n  });\n  var legendDimensions = getLegendDimensions({\n    legendData: legendData,\n    legendOrientation: legendOrientation,\n    legendProps: legendProps,\n    theme: theme\n  });\n  var textSizeWorkAround = getTextSizeWorkAround({\n    legendData: legendData,\n    legendOrientation: legendOrientation,\n    theme: theme\n  });\n\n  switch (legendPosition) {\n    case 'bottom':\n      return width > legendDimensions.width - textSizeWorkAround ? Math.round((width - (legendDimensions.width - textSizeWorkAround)) / 2) + dx : dx;\n\n    case 'right':\n      return origin.x + ChartCommonStyles.label.margin + dx + radius;\n\n    default:\n      return dx;\n  }\n}; // Returns y coordinate for pie legends\n\nexport var getPieLegendY = function getPieLegendY(_ref11) {\n  var _ref11$dy = _ref11.dy,\n      dy = _ref11$dy === void 0 ? 0 : _ref11$dy,\n      height = _ref11.height,\n      legendPosition = _ref11.legendPosition,\n      legendData = _ref11.legendData,\n      legendOrientation = _ref11.legendOrientation,\n      legendProps = _ref11.legendProps,\n      padding = _ref11.padding,\n      theme = _ref11.theme,\n      width = _ref11.width;\n  var origin = getPieOrigin({\n    height: height,\n    padding: padding,\n    width: width\n  });\n  var radius = Helpers.getRadius({\n    height: height,\n    width: width,\n    padding: padding\n  });\n\n  switch (legendPosition) {\n    case 'bottom':\n      return origin.y + ChartCommonStyles.legend.margin + radius + dy;\n\n    case 'right':\n      {\n        // Legend height with padding\n        var legendDimensions = getLegendDimensions({\n          legendData: legendData,\n          legendOrientation: legendOrientation,\n          legendProps: legendProps,\n          theme: theme\n        });\n\n        var legendPadding = function legendPadding(legendDataArr) {\n          return legendDataArr && legendDataArr.length > 0 ? 2 : 0;\n        };\n\n        return origin.y - legendDimensions.height / 2 + legendPadding(legendData);\n      }\n\n    default:\n      return dy;\n  }\n}; // Returns an approximation of over-sized text width due to growing character count\n//\n// See https://github.com/FormidableLabs/victory/issues/864\n\nvar getTextSizeWorkAround = function getTextSizeWorkAround(_ref12) {\n  var legendData = _ref12.legendData,\n      legendOrientation = _ref12.legendOrientation,\n      theme = _ref12.theme;\n  var style = theme.legend.style.labels;\n\n  if (!(legendData && legendData.length)) {\n    return 0;\n  } // For horizontal legends, account for the growing char count of the last legend item\n\n\n  var result = legendData[legendData.length - 1].name; // For vertical legends, account for the growing char count of the longest legend item\n\n  if (legendOrientation === 'vertical') {\n    legendData.forEach(function (data) {\n      if (data.name && data.name.length > result.length) {\n        result = data.name;\n      }\n    });\n  }\n\n  var textSize = TextSize.approximateTextSize(result, style);\n  var adjustedTextSize = TextSize.approximateTextSize(result, _objectSpread({}, style, {\n    characterConstant: overpassFontCharacterConstant\n  }));\n  return Math.abs(textSize.width - adjustedTextSize.width);\n};","map":{"version":3,"sources":["/root/kiali-ui/node_modules/@patternfly/react-charts/dist/esm/components/ChartUtils/chart-legend.js"],"names":["_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","keys","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","defaults","VictoryLegend","Helpers","TextSize","ChartCommonStyles","overpassFontCharacterConstant","getPieOrigin","React","getComputedLegend","allowWrap","chartType","dx","dy","height","legendComponent","padding","position","legend","theme","width","orientation","legendItemsProps","props","legendItemsPerRow","getLegendItemsPerRow","legendData","data","legendOrientation","legendPosition","legendProps","undefined","legendPositionProps","itemsPerRow","legendX","getLegendX","legendY","getLegendY","standalone","x","y","cloneElement","getLegendDimensions","getDimensions","doesLegendFit","getPadding","left","right","chartSize","legendDimensions","occupiedWidth","margin","fits","_ref","rest","getPieLegendX","getChartLegendX","_ref2","getPieLegendY","getBulletLegendY","getChartLegendY","legendPadding","legendDataArr","top","bottom","Math","abs","textSizeWorkAround","getTextSizeWorkAround","round","originX","origin","radius","getRadius","label","style","labels","result","name","textSize","approximateTextSize","adjustedTextSize","characterConstant"],"mappings":"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","sourcesContent":["function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { defaults } from 'lodash';\nimport { VictoryLegend } from 'victory';\nimport { Helpers, TextSize } from 'victory-core';\nimport { ChartCommonStyles } from '../ChartTheme';\nimport { overpassFontCharacterConstant } from './chart-label';\nimport { getPieOrigin } from './chart-origin';\nimport * as React from 'react';\n// Returns a legend which has been positioned per the given chart properties\nexport const getComputedLegend = ({\n  allowWrap = true,\n  chartType = 'chart',\n  dx = 0,\n  dy = 0,\n  height,\n  legendComponent,\n  padding,\n  position = ChartCommonStyles.legend.position,\n  theme,\n  width,\n  // destructure last\n  orientation = theme.legend.orientation\n}) => {\n  // Get the number of legend items per row\n  const legendItemsProps = legendComponent.props ? legendComponent.props : {};\n  const legendItemsPerRow = allowWrap ? getLegendItemsPerRow({\n    chartType,\n    dx,\n    height,\n    legendData: legendItemsProps.data,\n    legendOrientation: legendItemsProps.legendOrientation ? legendItemsProps.legendOrientation : orientation,\n    legendPosition: position,\n    legendProps: legendItemsProps,\n    padding,\n    theme,\n    width\n  }) : undefined; // Include new itemsPerRow prop when determining x and y position\n\n  const legendPositionProps = defaults({}, legendComponent.props, {\n    itemsPerRow: legendItemsPerRow\n  });\n  const legendX = getLegendX({\n    chartType,\n    dx,\n    height,\n    legendData: legendPositionProps.data,\n    legendOrientation: legendPositionProps.legendOrientation ? legendPositionProps.legendOrientation : orientation,\n    legendPosition: position,\n    legendProps: legendPositionProps,\n    padding,\n    theme,\n    width\n  });\n  const legendY = getLegendY({\n    chartType,\n    dy,\n    height,\n    legendData: legendPositionProps.data,\n    legendOrientation: legendPositionProps.legendOrientation ? legendPositionProps.legendOrientation : orientation,\n    legendProps: legendPositionProps,\n    legendPosition: position,\n    padding,\n    theme,\n    width\n  }); // Clone legend with updated props\n\n  const legendProps = defaults({}, legendComponent.props, {\n    itemsPerRow: legendItemsPerRow,\n    orientation,\n    standalone: false,\n    theme,\n    x: legendX > 0 ? legendX : 0,\n    y: legendY > 0 ? legendY : 0\n  });\n  return React.cloneElement(legendComponent, legendProps);\n}; // Returns legend dimensions\n\nexport const getLegendDimensions = ({\n  legendData,\n  legendOrientation,\n  legendProps,\n  theme\n}) => {\n  if (legendData || legendProps.data) {\n    return VictoryLegend.getDimensions(_objectSpread({\n      data: legendData,\n      orientation: legendOrientation,\n      theme\n    }, legendProps));\n  }\n\n  return {};\n}; // Returns true if the legend is smaller than its container\n\nexport const doesLegendFit = ({\n  dx = 0,\n  height,\n  legendPosition,\n  legendData,\n  legendOrientation,\n  legendProps,\n  padding,\n  theme,\n  width\n}) => {\n  const {\n    left,\n    right\n  } = Helpers.getPadding({\n    padding\n  });\n  const chartSize = {\n    height,\n    // Fixed size\n    width: width - left - right\n  };\n  const legendDimensions = getLegendDimensions({\n    legendData,\n    legendOrientation,\n    legendProps,\n    theme\n  });\n  let occupiedWidth = 0;\n\n  switch (legendPosition) {\n    case 'bottom-left':\n      occupiedWidth = left + dx;\n      break;\n\n    case 'right':\n      occupiedWidth = chartSize.width + ChartCommonStyles.legend.margin + left + dx;\n      break;\n\n    default:\n      occupiedWidth = dx;\n      break;\n  }\n\n  return width - occupiedWidth > legendDimensions.width;\n}; // Returns the number of legend items per row\n\nexport const getLegendItemsPerRow = ({\n  dx,\n  height,\n  legendPosition,\n  legendData,\n  legendOrientation,\n  legendProps,\n  padding,\n  theme,\n  width\n}) => {\n  let itemsPerRow = legendData ? legendData.length : 0;\n\n  for (let i = itemsPerRow; i > 0; i--) {\n    const fits = doesLegendFit({\n      dx,\n      height,\n      legendPosition,\n      legendData,\n      legendOrientation,\n      legendProps: _objectSpread({}, legendProps, {\n        itemsPerRow: i\n      }),\n      padding,\n      theme,\n      width\n    });\n\n    if (fits) {\n      itemsPerRow = i;\n      break;\n    }\n  }\n\n  return itemsPerRow;\n}; // Returns x coordinate for legend\n\nexport const getLegendX = (_ref) => {\n  let {\n    chartType\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"chartType\"]);\n\n  return chartType === 'pie' ? getPieLegendX(rest) : getChartLegendX(rest);\n}; // Returns y coordinate for legend\n\nexport const getLegendY = (_ref2) => {\n  let {\n    chartType\n  } = _ref2,\n      rest = _objectWithoutProperties(_ref2, [\"chartType\"]);\n\n  switch (chartType) {\n    case 'pie':\n      return getPieLegendY(rest);\n\n    case 'bullet':\n      return getBulletLegendY(rest);\n\n    default:\n      return getChartLegendY(rest);\n  }\n}; // Returns y coordinate for bullet legends\n\nexport const getBulletLegendY = ({\n  dy = 0,\n  height,\n  legendPosition,\n  legendData,\n  legendOrientation,\n  legendProps,\n  padding,\n  theme,\n  width\n}) => {\n  const {\n    left,\n    right\n  } = Helpers.getPadding({\n    padding\n  });\n  const chartSize = {\n    height,\n    // Fixed size\n    width: width - left - right\n  };\n\n  switch (legendPosition) {\n    case 'bottom':\n    case 'bottom-left':\n      return chartSize.height + ChartCommonStyles.legend.margin + dy;\n\n    case 'right':\n      {\n        // Legend height with padding\n        const legendDimensions = getLegendDimensions({\n          legendData,\n          legendOrientation,\n          legendProps,\n          theme\n        });\n\n        const legendPadding = legendDataArr => legendDataArr && legendDataArr.length > 0 ? 17 : 0;\n\n        return (chartSize.height - legendDimensions.height) / 2 + legendPadding(legendData);\n      }\n\n    default:\n      return dy;\n  }\n}; // Returns x coordinate for chart legends\n\nexport const getChartLegendX = ({\n  dx = 0,\n  height,\n  legendData,\n  legendOrientation,\n  legendPosition,\n  legendProps,\n  padding,\n  theme,\n  width\n}) => {\n  const {\n    top,\n    bottom,\n    left,\n    right\n  } = Helpers.getPadding({\n    padding\n  });\n  const chartSize = {\n    height: Math.abs(height - (bottom + top)),\n    width: Math.abs(width - (left + right))\n  };\n  const legendDimensions = getLegendDimensions({\n    legendData,\n    legendOrientation,\n    legendProps,\n    theme\n  });\n  const textSizeWorkAround = getTextSizeWorkAround({\n    legendData,\n    legendOrientation,\n    theme\n  });\n\n  switch (legendPosition) {\n    case 'bottom':\n      return width > legendDimensions.width - textSizeWorkAround ? Math.round((width - (legendDimensions.width - textSizeWorkAround)) / 2) + dx : dx;\n\n    case 'bottom-left':\n      return left + dx;\n\n    case 'right':\n      return chartSize.width + ChartCommonStyles.legend.margin + left + dx;\n\n    default:\n      return dx;\n  }\n}; // Returns y coordinate for chart legends\n\nexport const getChartLegendY = ({\n  dy = 0,\n  height,\n  legendPosition,\n  legendData,\n  legendOrientation,\n  legendProps,\n  padding,\n  theme,\n  width\n}) => {\n  const {\n    top,\n    bottom,\n    left,\n    right\n  } = Helpers.getPadding({\n    padding\n  });\n  const chartSize = {\n    height: Math.abs(height - (bottom + top)),\n    width: Math.abs(width - (left + right))\n  };\n\n  switch (legendPosition) {\n    case 'bottom':\n    case 'bottom-left':\n      return chartSize.height + ChartCommonStyles.legend.margin * 2 + top + dy;\n\n    case 'right':\n      {\n        // Legend height with padding\n        const legendDimensions = getLegendDimensions({\n          legendData,\n          legendOrientation,\n          legendProps,\n          theme\n        });\n        const originX = chartSize.height / 2 + top;\n\n        const legendPadding = legendDataArr => legendDataArr && legendDataArr.length > 0 ? 2 : 0;\n\n        return originX - legendDimensions.height / 2 + legendPadding(legendData);\n      }\n\n    default:\n      return dy;\n  }\n}; // Returns x coordinate for pie legends\n\nexport const getPieLegendX = ({\n  dx = 0,\n  height,\n  legendData,\n  legendOrientation,\n  legendPosition,\n  legendProps,\n  padding,\n  theme,\n  width\n}) => {\n  const origin = getPieOrigin({\n    height,\n    padding,\n    width\n  });\n  const radius = Helpers.getRadius({\n    height,\n    width,\n    padding\n  });\n  const legendDimensions = getLegendDimensions({\n    legendData,\n    legendOrientation,\n    legendProps,\n    theme\n  });\n  const textSizeWorkAround = getTextSizeWorkAround({\n    legendData,\n    legendOrientation,\n    theme\n  });\n\n  switch (legendPosition) {\n    case 'bottom':\n      return width > legendDimensions.width - textSizeWorkAround ? Math.round((width - (legendDimensions.width - textSizeWorkAround)) / 2) + dx : dx;\n\n    case 'right':\n      return origin.x + ChartCommonStyles.label.margin + dx + radius;\n\n    default:\n      return dx;\n  }\n}; // Returns y coordinate for pie legends\n\nexport const getPieLegendY = ({\n  dy = 0,\n  height,\n  legendPosition,\n  legendData,\n  legendOrientation,\n  legendProps,\n  padding,\n  theme,\n  width\n}) => {\n  const origin = getPieOrigin({\n    height,\n    padding,\n    width\n  });\n  const radius = Helpers.getRadius({\n    height,\n    width,\n    padding\n  });\n\n  switch (legendPosition) {\n    case 'bottom':\n      return origin.y + ChartCommonStyles.legend.margin + radius + dy;\n\n    case 'right':\n      {\n        // Legend height with padding\n        const legendDimensions = getLegendDimensions({\n          legendData,\n          legendOrientation,\n          legendProps,\n          theme\n        });\n\n        const legendPadding = legendDataArr => legendDataArr && legendDataArr.length > 0 ? 2 : 0;\n\n        return origin.y - legendDimensions.height / 2 + legendPadding(legendData);\n      }\n\n    default:\n      return dy;\n  }\n}; // Returns an approximation of over-sized text width due to growing character count\n//\n// See https://github.com/FormidableLabs/victory/issues/864\n\nconst getTextSizeWorkAround = ({\n  legendData,\n  legendOrientation,\n  theme\n}) => {\n  const style = theme.legend.style.labels;\n\n  if (!(legendData && legendData.length)) {\n    return 0;\n  } // For horizontal legends, account for the growing char count of the last legend item\n\n\n  let result = legendData[legendData.length - 1].name; // For vertical legends, account for the growing char count of the longest legend item\n\n  if (legendOrientation === 'vertical') {\n    legendData.forEach(data => {\n      if (data.name && data.name.length > result.length) {\n        result = data.name;\n      }\n    });\n  }\n\n  const textSize = TextSize.approximateTextSize(result, style);\n  const adjustedTextSize = TextSize.approximateTextSize(result, _objectSpread({}, style, {\n    characterConstant: overpassFontCharacterConstant\n  }));\n  return Math.abs(textSize.width - adjustedTextSize.width);\n};\n//# sourceMappingURL=chart-legend.js.map"]},"metadata":{},"sourceType":"module"}