{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/root/kiali-ui/src/app/InitializingScreen.tsx\";\n\nimport * as React from 'react';\nimport { Alert, Button } from '@patternfly/react-core';\nimport { style } from 'typestyle';\nimport { isKioskMode } from '../utils/SearchParamUtils';\nimport kialiTitle from \"../assets/img/logo-lightbkg.svg\";\nvar defaultErrorStyle = style({\n  $nest: {\n    '& > textarea': {\n      display: 'none'\n    },\n    '& > p:last-of-type': {\n      marginTop: '3em'\n    }\n  }\n});\nvar expandedErrorStyle = style({\n  $nest: {\n    '& > p:last-of-type': {\n      display: 'none'\n    },\n    '& > textarea': {\n      width: '100%',\n      whiteSpace: 'pre',\n      marginTop: '3em'\n    }\n  }\n});\nvar centerVerticalHorizontalStyle = style({\n  position: 'relative',\n  top: '10em',\n  textAlign: 'center',\n  $nest: {\n    '& > img': {\n      marginBottom: '3em'\n    },\n    '& > div': {\n      width: '40em',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      textAlign: 'left'\n    }\n  }\n});\n\nvar InitializingScreen = function InitializingScreen(props) {\n  var errorDiv = React.createRef();\n\n  if (document.documentElement) {\n    document.documentElement.className = isKioskMode() ? 'kiosk' : '';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: centerVerticalHorizontalStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Kiali Logo\",\n    src: kialiTitle,\n    width: \"200\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), props.errorMsg ? /*#__PURE__*/React.createElement(\"div\", {\n    ref: errorDiv,\n    className: defaultErrorStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    title: props.errorMsg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), props.errorDetails ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"link\",\n    onClick: function onClick(e) {\n      e.preventDefault();\n\n      if (errorDiv.current) {\n        errorDiv.current.setAttribute('class', expandedErrorStyle);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Show details\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    readOnly: true,\n    rows: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, props.errorDetails)) : null) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Loading...\"));\n};\n\nexport default InitializingScreen;","map":{"version":3,"sources":["/root/kiali-ui/src/app/InitializingScreen.tsx"],"names":["React","Alert","Button","style","isKioskMode","defaultErrorStyle","$nest","display","marginTop","expandedErrorStyle","width","whiteSpace","centerVerticalHorizontalStyle","position","top","textAlign","marginBottom","marginLeft","marginRight","InitializingScreen","props","errorDiv","createRef","document","documentElement","className","kialiTitle","errorMsg","errorDetails","e","preventDefault","current","setAttribute"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Alert, Button } from '@patternfly/react-core';\nimport { style } from 'typestyle';\nimport { isKioskMode } from '../utils/SearchParamUtils';\n\nimport kialiTitle from '../assets/img/logo-lightbkg.svg';\n\ntype initializingScreenProps = {\n  errorMsg?: string;\n  errorDetails?: string;\n};\n\nconst defaultErrorStyle = style({\n  $nest: {\n    '& > textarea': {\n      display: 'none'\n    },\n    '& > p:last-of-type': {\n      marginTop: '3em'\n    }\n  }\n});\n\nconst expandedErrorStyle = style({\n  $nest: {\n    '& > p:last-of-type': {\n      display: 'none'\n    },\n    '& > textarea': {\n      width: '100%',\n      whiteSpace: 'pre',\n      marginTop: '3em'\n    }\n  }\n});\n\nconst centerVerticalHorizontalStyle = style({\n  position: 'relative',\n  top: '10em',\n  textAlign: 'center',\n  $nest: {\n    '& > img': {\n      marginBottom: '3em'\n    },\n    '& > div': {\n      width: '40em',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      textAlign: 'left'\n    }\n  }\n});\n\nconst InitializingScreen: React.FC<initializingScreenProps> = (props: initializingScreenProps) => {\n  const errorDiv = React.createRef<HTMLDivElement>();\n\n  if (document.documentElement) {\n    document.documentElement.className = isKioskMode() ? 'kiosk' : '';\n  }\n\n  return (\n    <div className={centerVerticalHorizontalStyle}>\n      <img alt=\"Kiali Logo\" src={kialiTitle} width=\"200\" />\n      {props.errorMsg ? (\n        <div ref={errorDiv} className={defaultErrorStyle}>\n          <Alert variant=\"danger\" title={props.errorMsg} />\n          {props.errorDetails ? (\n            <>\n              <p>\n                <Button\n                  variant=\"link\"\n                  onClick={e => {\n                    e.preventDefault();\n                    if (errorDiv.current) {\n                      errorDiv.current.setAttribute('class', expandedErrorStyle);\n                    }\n                  }}\n                >\n                  Show details\n                </Button>\n              </p>\n              <textarea readOnly={true} rows={10}>\n                {props.errorDetails}\n              </textarea>\n            </>\n          ) : null}\n        </div>\n      ) : (\n        <h1>Loading...</h1>\n      )}\n    </div>\n  );\n};\n\nexport default InitializingScreen;\n"]},"metadata":{},"sourceType":"module"}