{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/pages/WorkloadDetails/WorkloadInfo.tsx\";\nimport * as React from 'react';\nimport { style } from 'typestyle';\nimport * as API from '../../services/Api';\nimport * as AlertUtils from '../../utils/AlertUtils';\nimport { ValidationTypes } from '../../types/IstioObjects';\nimport WorkloadDescription from './WorkloadDescription';\nimport { Grid, GridItem, Stack, StackItem } from '@patternfly/react-core';\nimport { activeTab } from '../../components/Tab/Tabs';\nimport { RenderComponentScroll } from '../../components/Nav/Page';\nimport GraphDataSource from '../../services/GraphDataSource';\nimport { isIstioNamespace } from '../../config/ServerConfig';\nimport { toIstioItems } from '../../types/IstioConfigList';\nimport { connect } from 'react-redux';\nimport { durationSelector, meshWideMTLSEnabledSelector } from '../../store/Selectors';\nimport MiniGraphCard from '../../components/CytoscapeGraph/MiniGraphCard';\nimport IstioConfigCard from '../../components/IstioConfigCard/IstioConfigCard';\nimport WorkloadPods from './WorkloadPods';\nimport history, { URLParam } from '../../app/History';\nvar fullHeightStyle = style({\n  height: '100%'\n});\nvar tabName = 'list';\nvar defaultTab = 'pods';\nvar workloadIstioResources = ['gateways', 'authorizationpolicies', 'peerauthentications', 'sidecars', 'requestauthentications', 'envoyfilters'];\n\nvar WorkloadInfo = /*#__PURE__*/function (_React$Component) {\n  _inherits(WorkloadInfo, _React$Component);\n\n  var _super = _createSuper(WorkloadInfo);\n\n  function WorkloadInfo(props) {\n    var _this;\n\n    _classCallCheck(this, WorkloadInfo);\n\n    _this = _super.call(this, props);\n    _this.graphDataSource = new GraphDataSource();\n\n    _this.fetchBackend = function () {\n      if (!_this.props.workload) {\n        return;\n      }\n\n      _this.graphDataSource.fetchForWorkload(_this.props.duration, _this.props.namespace, _this.props.workload.name);\n\n      _this.setState({\n        validations: _this.workloadValidations(_this.props.workload)\n      });\n\n      var labels = _this.props.workload.labels;\n      var wkLabels = [];\n      Object.keys(labels).forEach(function (key) {\n        var label = key + (labels[key] ? '=' + labels[key] : '');\n        wkLabels.push(label);\n      });\n      var workloadSelector = wkLabels.join(',');\n      Promise.all([API.getWorkloadHealth(_this.props.namespace, _this.props.workload.name, _this.props.workload ? _this.props.workload.type : '', _this.props.duration, _this.props.workload ? _this.props.workload.istioSidecar : false), API.getIstioConfig(_this.props.namespace, workloadIstioResources, true, '', workloadSelector)]).then(function (results) {\n        _this.setState({\n          health: results[0],\n          workloadIstioConfig: results[1].data\n        });\n      }).catch(function (error) {\n        return AlertUtils.addError('Could not fetch Health/IstioConfig.', error);\n      });\n    };\n\n    _this.goToMetrics = function (e) {\n      if (e.source !== e.target && _this.props.workload) {\n        var direction = e.source === _this.props.workload.name ? 'outbound' : 'inbound';\n        var destination = direction === 'inbound' ? 'source_canonical_service' : 'destination_canonical_service';\n        var urlParams = new URLSearchParams(history.location.search);\n        urlParams.set('tab', direction === 'inbound' ? 'in_metrics' : 'out_metrics');\n        urlParams.set(URLParam.BY_LABELS, destination + '=' + (e.source === _this.props.workload.name ? e.target : e.source));\n        history.replace(history.location.pathname + '?' + urlParams.toString());\n      }\n    };\n\n    _this.state = {\n      currentTab: activeTab(tabName, defaultTab)\n    };\n    return _this;\n  }\n\n  _createClass(WorkloadInfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchBackend();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prev) {\n      // Fetch WorkloadInfo backend on duration changes or WorkloadDetailsPage update\n      if (prev.duration !== this.props.duration || this.props.workload !== prev.workload) {\n        this.fetchBackend();\n      }\n    }\n  }, {\n    key: \"workloadValidations\",\n    value: // All information for validations is fetched in the workload, no need to add another call\n    function workloadValidations(workload) {\n      var _this2 = this;\n\n      var noIstiosidecar = {\n        message: 'Pod has no Istio sidecar',\n        severity: ValidationTypes.Warning,\n        path: ''\n      };\n      var noAppLabel = {\n        message: 'Pod has no app label',\n        severity: ValidationTypes.Warning,\n        path: ''\n      };\n      var noVersionLabel = {\n        message: 'Pod has no version label',\n        severity: ValidationTypes.Warning,\n        path: ''\n      };\n      var pendingPod = {\n        message: 'Pod is in Pending Phase',\n        severity: ValidationTypes.Warning,\n        path: ''\n      };\n      var unknownPod = {\n        message: 'Pod is in Unknown Phase',\n        severity: ValidationTypes.Warning,\n        path: ''\n      };\n      var failedPod = {\n        message: 'Pod is in Failed Phase',\n        severity: ValidationTypes.Error,\n        path: ''\n      };\n      var failingPodContainer = {\n        message: 'Pod has failing container',\n        severity: ValidationTypes.Warning,\n        path: ''\n      };\n      var failingPodIstioContainer = {\n        message: 'Pod has failing Istio container',\n        severity: ValidationTypes.Warning,\n        path: ''\n      };\n      var failingPodAppContainer = {\n        message: 'Pod has failing app container',\n        severity: ValidationTypes.Warning,\n        path: ''\n      };\n      var validations = {};\n\n      if (workload.pods.length > 0) {\n        validations.pod = {};\n        workload.pods.forEach(function (pod) {\n          validations.pod[pod.name] = {\n            name: pod.name,\n            objectType: 'pod',\n            valid: true,\n            checks: []\n          };\n\n          if (!isIstioNamespace(_this2.props.namespace)) {\n            if (!pod.istioContainers || pod.istioContainers.length === 0) {\n              validations.pod[pod.name].checks.push(noIstiosidecar);\n            } else {\n              pod.istioContainers.forEach(function (c) {\n                if (!c.isReady && validations.pod[pod.name].checks.indexOf(failingPodIstioContainer) === -1) {\n                  validations.pod[pod.name].checks.push(failingPodIstioContainer);\n                }\n              });\n            }\n\n            if (!pod.containers || pod.containers.length === 0) {\n              validations.pod[pod.name].checks.push(failingPodContainer);\n            } else {\n              pod.containers.forEach(function (c) {\n                if (!c.isReady && validations.pod[pod.name].checks.indexOf(failingPodAppContainer) === -1) {\n                  validations.pod[pod.name].checks.push(failingPodAppContainer);\n                }\n              });\n            }\n\n            if (!pod.labels) {\n              validations.pod[pod.name].checks.push(noAppLabel);\n              validations.pod[pod.name].checks.push(noVersionLabel);\n            } else {\n              if (!pod.appLabel) {\n                validations.pod[pod.name].checks.push(noAppLabel);\n              }\n\n              if (!pod.versionLabel) {\n                validations.pod[pod.name].checks.push(noVersionLabel);\n              }\n            }\n          }\n\n          switch (pod.status) {\n            case 'Pending':\n              validations.pod[pod.name].checks.push(pendingPod);\n              break;\n\n            case 'Unknown':\n              validations.pod[pod.name].checks.push(unknownPod);\n              break;\n\n            case 'Failed':\n              validations.pod[pod.name].checks.push(failedPod);\n              break;\n\n            default: // Pod healthy\n\n          } // If statusReason is present\n\n\n          if (pod.statusReason) {\n            validations.pod[pod.name].checks.push({\n              message: pod.statusReason,\n              severity: ValidationTypes.Warning,\n              path: ''\n            });\n          }\n\n          validations.pod[pod.name].valid = validations.pod[pod.name].checks.length === 0;\n        });\n      }\n\n      return validations;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$workloadI,\n          _this3 = this,\n          _this$props$workload,\n          _this$state$validatio;\n\n      var workload = this.props.workload;\n      var pods = (workload === null || workload === void 0 ? void 0 : workload.pods) || [];\n      var istioConfigItems = this.state.workloadIstioConfig ? toIstioItems(this.state.workloadIstioConfig) : []; // Helper to iterate at same time on workloadIstioConfig resources and validations\n\n      var wkIstioTypes = [{\n        field: 'gateways',\n        validation: 'gateway'\n      }, {\n        field: 'sidecars',\n        validation: 'sidecar'\n      }, {\n        field: 'envoyFilters',\n        validation: 'envoyfilter'\n      }, {\n        field: 'requestAuthentications',\n        validation: 'requestauthentication'\n      }, {\n        field: 'authorizationPolicies',\n        validation: 'authorizationpolicy'\n      }, {\n        field: 'peerAuthentications',\n        validation: 'peerauthentication'\n      }];\n\n      if ((_this$state$workloadI = this.state.workloadIstioConfig) === null || _this$state$workloadI === void 0 ? void 0 : _this$state$workloadI.validations) {\n        var typeNames = {};\n        wkIstioTypes.forEach(function (wkIstioType) {\n          if (_this3.state.workloadIstioConfig && _this3.state.workloadIstioConfig.validations[wkIstioType.validation]) {\n            var _this3$state$workload;\n\n            typeNames[wkIstioType.validation] = [];\n            (_this3$state$workload = _this3.state.workloadIstioConfig[wkIstioType.field]) === null || _this3$state$workload === void 0 ? void 0 : _this3$state$workload.forEach(function (r) {\n              return typeNames[wkIstioType.validation].push(r.metadata.name);\n            });\n          }\n        });\n      } // RenderComponentScroll handles height to provide an inner scroll combined with tabs\n      // This height needs to be propagated to minigraph to proper resize in height\n      // Graph resizes correctly on width\n\n\n      var height = this.state.tabHeight ? this.state.tabHeight - 115 : 300;\n      var graphContainerStyle = style({\n        width: '100%',\n        height: height\n      });\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RenderComponentScroll, {\n        onResize: function onResize(height) {\n          return _this3.setState({\n            tabHeight: height\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        gutter: 'md',\n        className: fullHeightStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        span: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Stack, {\n        gutter: \"md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(StackItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(WorkloadDescription, {\n        workload: workload,\n        health: this.state.health,\n        namespace: this.props.namespace,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(StackItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(WorkloadPods, {\n        namespace: this.props.namespace,\n        workload: ((_this$props$workload = this.props.workload) === null || _this$props$workload === void 0 ? void 0 : _this$props$workload.name) || '',\n        pods: pods,\n        validations: ((_this$state$validatio = this.state.validations) === null || _this$state$validatio === void 0 ? void 0 : _this$state$validatio.pod) || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(StackItem, {\n        style: {\n          paddingBottom: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IstioConfigCard, {\n        name: this.props.workload ? this.props.workload.name : '',\n        items: istioConfigItems,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 19\n        }\n      })))), /*#__PURE__*/React.createElement(GridItem, {\n        span: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MiniGraphCard, {\n        onEdgeTap: this.goToMetrics,\n        dataSource: this.graphDataSource,\n        mtlsEnabled: this.props.mtlsEnabled,\n        graphContainerStyle: graphContainerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return WorkloadInfo;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    duration: durationSelector(state),\n    lastRefreshAt: state.globalState.lastRefreshAt,\n    mtlsEnabled: meshWideMTLSEnabledSelector(state)\n  };\n};\n\nvar WorkloadInfoContainer = connect(mapStateToProps)(WorkloadInfo);\nexport default WorkloadInfoContainer;","map":{"version":3,"sources":["/root/kiali-ui/src/pages/WorkloadDetails/WorkloadInfo.tsx"],"names":["React","style","API","AlertUtils","ValidationTypes","WorkloadDescription","Grid","GridItem","Stack","StackItem","activeTab","RenderComponentScroll","GraphDataSource","isIstioNamespace","toIstioItems","connect","durationSelector","meshWideMTLSEnabledSelector","MiniGraphCard","IstioConfigCard","WorkloadPods","history","URLParam","fullHeightStyle","height","tabName","defaultTab","workloadIstioResources","WorkloadInfo","props","graphDataSource","fetchBackend","workload","fetchForWorkload","duration","namespace","name","setState","validations","workloadValidations","labels","wkLabels","Object","keys","forEach","key","label","push","workloadSelector","join","Promise","all","getWorkloadHealth","type","istioSidecar","getIstioConfig","then","results","health","workloadIstioConfig","data","catch","error","addError","goToMetrics","e","source","target","direction","destination","urlParams","URLSearchParams","location","search","set","BY_LABELS","replace","pathname","toString","state","currentTab","prev","noIstiosidecar","message","severity","Warning","path","noAppLabel","noVersionLabel","pendingPod","unknownPod","failedPod","Error","failingPodContainer","failingPodIstioContainer","failingPodAppContainer","pods","length","pod","objectType","valid","checks","istioContainers","c","isReady","indexOf","containers","appLabel","versionLabel","status","statusReason","istioConfigItems","wkIstioTypes","field","validation","typeNames","wkIstioType","r","metadata","tabHeight","graphContainerStyle","width","paddingBottom","mtlsEnabled","Component","mapStateToProps","lastRefreshAt","globalState","WorkloadInfoContainer"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { style } from 'typestyle';\nimport * as API from '../../services/Api';\nimport * as AlertUtils from '../../utils/AlertUtils';\nimport { ObjectCheck, Validations, ValidationTypes } from '../../types/IstioObjects';\nimport WorkloadDescription from './WorkloadDescription';\nimport { WorkloadHealth } from '../../types/Health';\nimport { Workload } from '../../types/Workload';\nimport { Grid, GridItem, Stack, StackItem } from '@patternfly/react-core';\nimport { activeTab } from '../../components/Tab/Tabs';\nimport { RenderComponentScroll } from '../../components/Nav/Page';\nimport GraphDataSource from '../../services/GraphDataSource';\nimport { DurationInSeconds, TimeInMilliseconds } from 'types/Common';\nimport { isIstioNamespace } from '../../config/ServerConfig';\nimport { IstioConfigList, toIstioItems } from '../../types/IstioConfigList';\nimport { KialiAppState } from '../../store/Store';\nimport { connect } from 'react-redux';\nimport { durationSelector, meshWideMTLSEnabledSelector } from '../../store/Selectors';\nimport MiniGraphCard from '../../components/CytoscapeGraph/MiniGraphCard';\nimport IstioConfigCard from '../../components/IstioConfigCard/IstioConfigCard';\nimport WorkloadPods from './WorkloadPods';\nimport { GraphEdgeTapEvent } from '../../components/CytoscapeGraph/CytoscapeGraph';\nimport history, { URLParam } from '../../app/History';\n\ntype WorkloadInfoProps = {\n  namespace: string;\n  workload?: Workload;\n  duration: DurationInSeconds;\n  lastRefreshAt: TimeInMilliseconds;\n  mtlsEnabled: boolean;\n  refreshWorkload: () => void;\n};\n\ntype WorkloadInfoState = {\n  validations?: Validations;\n  currentTab: string;\n  health?: WorkloadHealth;\n  workloadIstioConfig?: IstioConfigList;\n  tabHeight?: number;\n};\n\nconst fullHeightStyle = style({\n  height: '100%'\n});\n\nconst tabName = 'list';\nconst defaultTab = 'pods';\n\nconst workloadIstioResources = [\n  'gateways',\n  'authorizationpolicies',\n  'peerauthentications',\n  'sidecars',\n  'requestauthentications',\n  'envoyfilters'\n];\n\nclass WorkloadInfo extends React.Component<WorkloadInfoProps, WorkloadInfoState> {\n  private graphDataSource = new GraphDataSource();\n\n  constructor(props: WorkloadInfoProps) {\n    super(props);\n    this.state = {\n      currentTab: activeTab(tabName, defaultTab)\n    };\n  }\n\n  componentDidMount() {\n    this.fetchBackend();\n  }\n\n  componentDidUpdate(prev: WorkloadInfoProps) {\n    // Fetch WorkloadInfo backend on duration changes or WorkloadDetailsPage update\n    if (prev.duration !== this.props.duration || this.props.workload !== prev.workload) {\n      this.fetchBackend();\n    }\n  }\n\n  private fetchBackend = () => {\n    if (!this.props.workload) {\n      return;\n    }\n    this.graphDataSource.fetchForWorkload(this.props.duration, this.props.namespace, this.props.workload.name);\n    this.setState({\n      validations: this.workloadValidations(this.props.workload)\n    });\n    const labels = this.props.workload.labels;\n    const wkLabels: string[] = [];\n    Object.keys(labels).forEach(key => {\n      const label = key + (labels[key] ? '=' + labels[key] : '');\n      wkLabels.push(label);\n    });\n    const workloadSelector = wkLabels.join(',');\n\n    Promise.all([\n      API.getWorkloadHealth(\n        this.props.namespace,\n        this.props.workload.name,\n        this.props.workload ? this.props.workload.type : '',\n        this.props.duration,\n        this.props.workload ? this.props.workload.istioSidecar : false\n      ),\n      API.getIstioConfig(this.props.namespace, workloadIstioResources, true, '', workloadSelector)\n    ])\n      .then(results => {\n        this.setState({\n          health: results[0],\n          workloadIstioConfig: results[1].data\n        });\n      })\n      .catch(error => AlertUtils.addError('Could not fetch Health/IstioConfig.', error));\n  };\n\n  // All information for validations is fetched in the workload, no need to add another call\n  private workloadValidations(workload: Workload): Validations {\n    const noIstiosidecar: ObjectCheck = {\n      message: 'Pod has no Istio sidecar',\n      severity: ValidationTypes.Warning,\n      path: ''\n    };\n    const noAppLabel: ObjectCheck = { message: 'Pod has no app label', severity: ValidationTypes.Warning, path: '' };\n    const noVersionLabel: ObjectCheck = {\n      message: 'Pod has no version label',\n      severity: ValidationTypes.Warning,\n      path: ''\n    };\n    const pendingPod: ObjectCheck = { message: 'Pod is in Pending Phase', severity: ValidationTypes.Warning, path: '' };\n    const unknownPod: ObjectCheck = { message: 'Pod is in Unknown Phase', severity: ValidationTypes.Warning, path: '' };\n    const failedPod: ObjectCheck = { message: 'Pod is in Failed Phase', severity: ValidationTypes.Error, path: '' };\n    const failingPodContainer: ObjectCheck = {\n      message: 'Pod has failing container',\n      severity: ValidationTypes.Warning,\n      path: ''\n    };\n    const failingPodIstioContainer: ObjectCheck = {\n      message: 'Pod has failing Istio container',\n      severity: ValidationTypes.Warning,\n      path: ''\n    };\n    const failingPodAppContainer: ObjectCheck = {\n      message: 'Pod has failing app container',\n      severity: ValidationTypes.Warning,\n      path: ''\n    };\n\n    const validations: Validations = {};\n    if (workload.pods.length > 0) {\n      validations.pod = {};\n      workload.pods.forEach(pod => {\n        validations.pod[pod.name] = {\n          name: pod.name,\n          objectType: 'pod',\n          valid: true,\n          checks: []\n        };\n        if (!isIstioNamespace(this.props.namespace)) {\n          if (!pod.istioContainers || pod.istioContainers.length === 0) {\n            validations.pod[pod.name].checks.push(noIstiosidecar);\n          } else {\n            pod.istioContainers.forEach(c => {\n              if (!c.isReady && validations.pod[pod.name].checks.indexOf(failingPodIstioContainer) === -1) {\n                validations.pod[pod.name].checks.push(failingPodIstioContainer);\n              }\n            });\n          }\n          if (!pod.containers || pod.containers.length === 0) {\n            validations.pod[pod.name].checks.push(failingPodContainer);\n          } else {\n            pod.containers.forEach(c => {\n              if (!c.isReady && validations.pod[pod.name].checks.indexOf(failingPodAppContainer) === -1) {\n                validations.pod[pod.name].checks.push(failingPodAppContainer);\n              }\n            });\n          }\n          if (!pod.labels) {\n            validations.pod[pod.name].checks.push(noAppLabel);\n            validations.pod[pod.name].checks.push(noVersionLabel);\n          } else {\n            if (!pod.appLabel) {\n              validations.pod[pod.name].checks.push(noAppLabel);\n            }\n            if (!pod.versionLabel) {\n              validations.pod[pod.name].checks.push(noVersionLabel);\n            }\n          }\n        }\n        switch (pod.status) {\n          case 'Pending':\n            validations.pod[pod.name].checks.push(pendingPod);\n            break;\n          case 'Unknown':\n            validations.pod[pod.name].checks.push(unknownPod);\n            break;\n          case 'Failed':\n            validations.pod[pod.name].checks.push(failedPod);\n            break;\n          default:\n          // Pod healthy\n        }\n        // If statusReason is present\n        if (pod.statusReason) {\n          validations.pod[pod.name].checks.push({\n            message: pod.statusReason,\n            severity: ValidationTypes.Warning,\n            path: ''\n          });\n        }\n        validations.pod[pod.name].valid = validations.pod[pod.name].checks.length === 0;\n      });\n    }\n    return validations;\n  }\n\n  goToMetrics = (e: GraphEdgeTapEvent) => {\n    if (e.source !== e.target && this.props.workload) {\n      const direction = e.source === this.props.workload.name ? 'outbound' : 'inbound';\n      const destination = direction === 'inbound' ? 'source_canonical_service' : 'destination_canonical_service';\n      const urlParams = new URLSearchParams(history.location.search);\n      urlParams.set('tab', direction === 'inbound' ? 'in_metrics' : 'out_metrics');\n      urlParams.set(\n        URLParam.BY_LABELS,\n        destination + '=' + (e.source === this.props.workload.name ? e.target : e.source)\n      );\n      history.replace(history.location.pathname + '?' + urlParams.toString());\n    }\n  };\n\n  render() {\n    const workload = this.props.workload;\n    const pods = workload?.pods || [];\n    const istioConfigItems = this.state.workloadIstioConfig ? toIstioItems(this.state.workloadIstioConfig) : [];\n    // Helper to iterate at same time on workloadIstioConfig resources and validations\n    const wkIstioTypes = [\n      { field: 'gateways', validation: 'gateway' },\n      { field: 'sidecars', validation: 'sidecar' },\n      { field: 'envoyFilters', validation: 'envoyfilter' },\n      { field: 'requestAuthentications', validation: 'requestauthentication' },\n      { field: 'authorizationPolicies', validation: 'authorizationpolicy' },\n      { field: 'peerAuthentications', validation: 'peerauthentication' }\n    ];\n    if (this.state.workloadIstioConfig?.validations) {\n      const typeNames: { [key: string]: string[] } = {};\n      wkIstioTypes.forEach(wkIstioType => {\n        if (this.state.workloadIstioConfig && this.state.workloadIstioConfig.validations[wkIstioType.validation]) {\n          typeNames[wkIstioType.validation] = [];\n          this.state.workloadIstioConfig[wkIstioType.field]?.forEach(r =>\n            typeNames[wkIstioType.validation].push(r.metadata.name)\n          );\n        }\n      });\n    }\n\n    // RenderComponentScroll handles height to provide an inner scroll combined with tabs\n    // This height needs to be propagated to minigraph to proper resize in height\n    // Graph resizes correctly on width\n    const height = this.state.tabHeight ? this.state.tabHeight - 115 : 300;\n    const graphContainerStyle = style({ width: '100%', height: height });\n\n    return (\n      <>\n        <RenderComponentScroll onResize={height => this.setState({ tabHeight: height })}>\n          <Grid gutter={'md'} className={fullHeightStyle}>\n            <GridItem span={4}>\n              <Stack gutter=\"md\">\n                <StackItem>\n                  <WorkloadDescription\n                    workload={workload}\n                    health={this.state.health}\n                    namespace={this.props.namespace}\n                  />\n                </StackItem>\n                <StackItem>\n                  <WorkloadPods\n                    namespace={this.props.namespace}\n                    workload={this.props.workload?.name || ''}\n                    pods={pods}\n                    validations={this.state.validations?.pod || {}}\n                  />\n                </StackItem>\n                <StackItem style={{ paddingBottom: '20px' }}>\n                  <IstioConfigCard\n                    name={this.props.workload ? this.props.workload.name : ''}\n                    items={istioConfigItems}\n                  />\n                </StackItem>\n              </Stack>\n            </GridItem>\n            <GridItem span={8}>\n              <MiniGraphCard\n                onEdgeTap={this.goToMetrics}\n                dataSource={this.graphDataSource}\n                mtlsEnabled={this.props.mtlsEnabled}\n                graphContainerStyle={graphContainerStyle}\n              />\n            </GridItem>\n          </Grid>\n        </RenderComponentScroll>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: KialiAppState) => ({\n  duration: durationSelector(state),\n  lastRefreshAt: state.globalState.lastRefreshAt,\n  mtlsEnabled: meshWideMTLSEnabledSelector(state)\n});\n\nconst WorkloadInfoContainer = connect(mapStateToProps)(WorkloadInfo);\nexport default WorkloadInfoContainer;\n"]},"metadata":{},"sourceType":"module"}