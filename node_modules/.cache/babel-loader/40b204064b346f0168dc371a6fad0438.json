{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/components/SummaryPanel/ResponseFlagsTable.tsx\";\nimport * as React from 'react';\nimport _ from 'lodash';\nimport responseFlags from '../../utils/ResponseFlags';\nexport var ResponseFlagsTable = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ResponseFlagsTable, _React$PureComponent);\n\n  var _super = _createSuper(ResponseFlagsTable);\n\n  function ResponseFlagsTable() {\n    var _this;\n\n    _classCallCheck(this, ResponseFlagsTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.getRows = function (responses) {\n      var rows = [];\n\n      _.keys(responses).forEach(function (code) {\n        _.keys(responses[code].flags).forEach(function (f) {\n          rows.push({\n            key: \"\".concat(code, \" \").concat(f),\n            code: code,\n            flags: f,\n            val: responses[code].flags[f]\n          });\n        });\n      });\n\n      return rows;\n    };\n\n    _this.getTitle = function (flags) {\n      return flags.split(',').map(function (flagToken) {\n        flagToken = flagToken.trim();\n        var flag = responseFlags[flagToken];\n        return flagToken === '-' ? '' : \"[\".concat(flagToken, \"] \").concat(flag ? flag.help : 'Unknown Flag');\n      }).join('\\n');\n    };\n\n    return _this;\n  }\n\n  _createClass(ResponseFlagsTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, this.props.title), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        key: \"table-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }\n      }, \"Code\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }\n      }, \"Flags\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }, \"% Req\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, this.getRows(this.props.responses).map(function (row) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: row.key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }\n        }, row.code), /*#__PURE__*/React.createElement(\"td\", {\n          title: _this2.getTitle(row.flags),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }\n        }, row.flags), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }\n        }, row.val));\n      }))));\n    }\n  }]);\n\n  return ResponseFlagsTable;\n}(React.PureComponent);","map":{"version":3,"sources":["/root/kiali-ui/src/components/SummaryPanel/ResponseFlagsTable.tsx"],"names":["React","_","responseFlags","ResponseFlagsTable","getRows","responses","rows","keys","forEach","code","flags","f","push","key","val","getTitle","split","map","flagToken","trim","flag","help","join","props","title","row","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport _ from 'lodash';\nimport { Responses } from '../../types/Graph';\nimport responseFlags from '../../utils/ResponseFlags';\n\ntype ResponseFlagsTableProps = {\n  responses: Responses;\n  title: string;\n};\n\ninterface Row {\n  code: string;\n  flags: string;\n  key: string;\n  val: string;\n}\n\nexport class ResponseFlagsTable extends React.PureComponent<ResponseFlagsTableProps> {\n  render() {\n    return (\n      <>\n        <strong>{this.props.title}</strong>\n        <table className=\"table\">\n          <thead>\n            <tr key=\"table-header\">\n              <th>Code</th>\n              <th>Flags</th>\n              <th>% Req</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.getRows(this.props.responses).map(row => (\n              <tr key={row.key}>\n                <td>{row.code}</td>\n                <td title={this.getTitle(row.flags)}>{row.flags}</td>\n                <td>{row.val}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  private getRows = (responses: Responses): Row[] => {\n    const rows: Row[] = [];\n    _.keys(responses).forEach(code => {\n      _.keys(responses[code].flags).forEach(f => {\n        rows.push({ key: `${code} ${f}`, code: code, flags: f, val: responses[code].flags[f] });\n      });\n    });\n    return rows;\n  };\n\n  private getTitle = (flags: string): string => {\n    return flags\n      .split(',')\n      .map(flagToken => {\n        flagToken = flagToken.trim();\n        const flag = responseFlags[flagToken];\n        return flagToken === '-' ? '' : `[${flagToken}] ${flag ? flag.help : 'Unknown Flag'}`;\n      })\n      .join('\\n');\n  };\n}\n"]},"metadata":{},"sourceType":"module"}