{"ast":null,"code":"import _slicedToArray from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/pages/IstioConfigNew/AuthorizationPolicyForm/From/SourceBuilder.tsx\";\nimport * as React from 'react';\nimport { cellWidth, Table, TableBody, TableHeader } from '@patternfly/react-table'; // Use TextInputBase like workaround while PF4 team work in https://github.com/patternfly/patternfly-react/issues/4072\n\nimport { Button, FormSelect, FormSelectOption, TextInputBase as TextInput } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { isValidIp } from '../../../../utils/IstioConfigUtils';\nimport { style } from 'typestyle';\nimport { PFColors } from '../../../../components/Pf/PfColors';\nvar INIT_SOURCE_FIELDS = ['principals', 'notPrincipals', 'requestPrincipals', 'notRequestPrincipals', 'namespaces', 'notNamespaces', 'ipBlocks', 'notIpBlocks'].sort();\nvar noSourceStyle = style({\n  color: PFColors.Red100\n});\nvar headerCells = [{\n  title: 'Source Field',\n  transforms: [cellWidth(20)],\n  props: {}\n}, {\n  title: 'Values',\n  transforms: [cellWidth(80)],\n  props: {}\n}, {\n  title: '',\n  props: {}\n}];\n\nvar SourceBuilder = /*#__PURE__*/function (_React$Component) {\n  _inherits(SourceBuilder, _React$Component);\n\n  var _super = _createSuper(SourceBuilder);\n\n  function SourceBuilder(props) {\n    var _this;\n\n    _classCallCheck(this, SourceBuilder);\n\n    _this = _super.call(this, props);\n\n    _this.onAddNewSourceField = function (value, _) {\n      _this.setState({\n        newSourceField: value\n      });\n    };\n\n    _this.onAddNewValues = function (value, _) {\n      _this.setState({\n        newValues: value\n      });\n    };\n\n    _this.onAddSource = function () {\n      _this.setState(function (prevState) {\n        var i = prevState.sourceFields.indexOf(prevState.newSourceField);\n\n        if (i > -1) {\n          prevState.sourceFields.splice(i, 1);\n        }\n\n        prevState.source[prevState.newSourceField] = prevState.newValues.split(',');\n        return {\n          sourceFields: prevState.sourceFields,\n          source: prevState.source,\n          newSourceField: prevState.sourceFields[0],\n          newValues: ''\n        };\n      });\n    };\n\n    _this.onAddSourceFromList = function () {\n      var fromItem = _this.state.source;\n\n      _this.setState({\n        sourceFields: Object.assign([], INIT_SOURCE_FIELDS),\n        source: {},\n        newSourceField: INIT_SOURCE_FIELDS[0],\n        newValues: ''\n      }, function () {\n        _this.props.onAddFrom(fromItem);\n      });\n    };\n\n    _this.isValidSource = function () {\n      if (_this.state.newSourceField === 'ipBlocks' || _this.state.newSourceField === 'notIpBlocks') {\n        var validIp = _this.state.newValues.split(',').every(function (ip) {\n          return isValidIp(ip);\n        });\n\n        if (!validIp) {\n          return [false, 'Not valid IP'];\n        }\n      }\n\n      var emptyValues = _this.state.newValues.split(',').every(function (v) {\n        return v.length === 0;\n      });\n\n      if (emptyValues) {\n        return [false, 'Empty value'];\n      }\n\n      return [true, ''];\n    };\n\n    _this.actionResolver = function (rowData, _ref) {\n      var rowIndex = _ref.rowIndex;\n      var removeAction = {\n        title: 'Remove Field',\n        // @ts-ignore\n        onClick: function onClick(event, rowIndex, rowData, extraData) {\n          // Fetch sourceField from rowData, it's a fixed string on children\n          var removeSourceField = rowData.cells[0].props.children.toString();\n\n          _this.setState(function (prevState) {\n            prevState.sourceFields.push(removeSourceField);\n            delete prevState.source[removeSourceField];\n            var newSourceFields = prevState.sourceFields.sort();\n            return {\n              sourceFields: newSourceFields,\n              source: prevState.source,\n              newSourceField: newSourceFields[0],\n              newValues: ''\n            };\n          });\n        }\n      };\n\n      if (rowIndex < Object.keys(_this.state.source).length) {\n        return [removeAction];\n      }\n\n      return [];\n    };\n\n    _this.rows = function () {\n      var _this$isValidSource = _this.isValidSource(),\n          _this$isValidSource2 = _slicedToArray(_this$isValidSource, 2),\n          isValidSource = _this$isValidSource2[0],\n          invalidText = _this$isValidSource2[1];\n\n      var sourceRows = Object.keys(_this.state.source).map(function (sourceField, i) {\n        return {\n          key: 'sourceKey' + i,\n          cells: [/*#__PURE__*/React.createElement(React.Fragment, null, sourceField), /*#__PURE__*/React.createElement(React.Fragment, null, _this.state.source[sourceField].join(',')), /*#__PURE__*/React.createElement(React.Fragment, null)]\n        };\n      });\n\n      if (_this.state.sourceFields.length > 0) {\n        return sourceRows.concat([{\n          key: 'sourceKeyNew',\n          cells: [/*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormSelect, {\n            value: _this.state.newSourceField,\n            id: \"addNewSourceField\",\n            name: \"addNewSourceField\",\n            onChange: _this.onAddNewSourceField,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }\n          }, _this.state.sourceFields.map(function (option, index) {\n            return /*#__PURE__*/React.createElement(FormSelectOption, {\n              isDisabled: false,\n              key: 'source' + index,\n              value: option,\n              label: option,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }\n            });\n          }))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextInput, {\n            value: _this.state.newValues,\n            type: \"text\",\n            id: \"addNewValues\",\n            key: \"addNewValues\",\n            \"aria-describedby\": \"add new source values\",\n            name: \"addNewValues\",\n            onChange: _this.onAddNewValues,\n            isValid: isValidSource,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }\n          }), !isValidSource && /*#__PURE__*/React.createElement(\"div\", {\n            key: \"hostsHelperText\",\n            className: noSourceStyle,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }\n          }, invalidText)), /*#__PURE__*/React.createElement(React.Fragment, null, _this.state.sourceFields.length > 0 && /*#__PURE__*/React.createElement(Button, {\n            variant: \"link\",\n            icon: /*#__PURE__*/React.createElement(PlusCircleIcon, {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 25\n              }\n            }),\n            onClick: _this.onAddSource,\n            isDisabled: !isValidSource,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }\n          }))]\n        }]);\n      }\n\n      return sourceRows;\n    };\n\n    _this.state = {\n      sourceFields: Object.assign([], INIT_SOURCE_FIELDS),\n      source: {},\n      newSourceField: INIT_SOURCE_FIELDS[0],\n      newValues: ''\n    };\n    return _this;\n  }\n\n  _createClass(SourceBuilder, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n        \"aria-label\": \"Source Builder\",\n        cells: headerCells,\n        rows: this.rows() // @ts-ignore\n        ,\n        actionResolver: this.actionResolver,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        variant: \"link\",\n        icon: /*#__PURE__*/React.createElement(PlusCircleIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }\n        }),\n        isDisabled: Object.keys(this.state.source).length === 0,\n        onClick: this.onAddSourceFromList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }\n      }, \"Add Source to From List\"));\n    }\n  }]);\n\n  return SourceBuilder;\n}(React.Component);\n\nexport default SourceBuilder;","map":{"version":3,"sources":["/root/GraduateProject/src/pages/IstioConfigNew/AuthorizationPolicyForm/From/SourceBuilder.tsx"],"names":["React","cellWidth","Table","TableBody","TableHeader","Button","FormSelect","FormSelectOption","TextInputBase","TextInput","PlusCircleIcon","isValidIp","style","PFColors","INIT_SOURCE_FIELDS","sort","noSourceStyle","color","Red100","headerCells","title","transforms","props","SourceBuilder","onAddNewSourceField","value","_","setState","newSourceField","onAddNewValues","newValues","onAddSource","prevState","i","sourceFields","indexOf","splice","source","split","onAddSourceFromList","fromItem","state","Object","assign","onAddFrom","isValidSource","validIp","every","ip","emptyValues","v","length","actionResolver","rowData","rowIndex","removeAction","onClick","event","extraData","removeSourceField","cells","children","toString","push","newSourceFields","keys","rows","invalidText","sourceRows","map","sourceField","key","join","concat","option","index","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { cellWidth, ICell, Table, TableBody, TableHeader } from '@patternfly/react-table';\n// Use TextInputBase like workaround while PF4 team work in https://github.com/patternfly/patternfly-react/issues/4072\nimport { Button, FormSelect, FormSelectOption, TextInputBase as TextInput } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport { isValidIp } from '../../../../utils/IstioConfigUtils';\nimport { style } from 'typestyle';\nimport { PFColors } from '../../../../components/Pf/PfColors';\n\ntype Props = {\n  onAddFrom: (source: { [key: string]: string[] }) => void;\n};\n\ntype State = {\n  sourceFields: string[];\n  source: {\n    [key: string]: string[];\n  };\n  newSourceField: string;\n  newValues: string;\n};\n\nconst INIT_SOURCE_FIELDS = [\n  'principals',\n  'notPrincipals',\n  'requestPrincipals',\n  'notRequestPrincipals',\n  'namespaces',\n  'notNamespaces',\n  'ipBlocks',\n  'notIpBlocks'\n].sort();\n\nconst noSourceStyle = style({\n  color: PFColors.Red100\n});\n\nconst headerCells: ICell[] = [\n  {\n    title: 'Source Field',\n    transforms: [cellWidth(20) as any],\n    props: {}\n  },\n  {\n    title: 'Values',\n    transforms: [cellWidth(80) as any],\n    props: {}\n  },\n  {\n    title: '',\n    props: {}\n  }\n];\n\nclass SourceBuilder extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      sourceFields: Object.assign([], INIT_SOURCE_FIELDS),\n      source: {},\n      newSourceField: INIT_SOURCE_FIELDS[0],\n      newValues: ''\n    };\n  }\n\n  onAddNewSourceField = (value: string, _) => {\n    this.setState({\n      newSourceField: value\n    });\n  };\n\n  onAddNewValues = (value: string, _) => {\n    this.setState({\n      newValues: value\n    });\n  };\n\n  onAddSource = () => {\n    this.setState(prevState => {\n      const i = prevState.sourceFields.indexOf(prevState.newSourceField);\n      if (i > -1) {\n        prevState.sourceFields.splice(i, 1);\n      }\n      prevState.source[prevState.newSourceField] = prevState.newValues.split(',');\n      return {\n        sourceFields: prevState.sourceFields,\n        source: prevState.source,\n        newSourceField: prevState.sourceFields[0],\n        newValues: ''\n      };\n    });\n  };\n\n  onAddSourceFromList = () => {\n    const fromItem = this.state.source;\n    this.setState(\n      {\n        sourceFields: Object.assign([], INIT_SOURCE_FIELDS),\n        source: {},\n        newSourceField: INIT_SOURCE_FIELDS[0],\n        newValues: ''\n      },\n      () => {\n        this.props.onAddFrom(fromItem);\n      }\n    );\n  };\n\n  // Helper to identify when some values are valid\n  isValidSource = (): [boolean, string] => {\n    if (this.state.newSourceField === 'ipBlocks' || this.state.newSourceField === 'notIpBlocks') {\n      const validIp = this.state.newValues.split(',').every(ip => isValidIp(ip));\n      if (!validIp) {\n        return [false, 'Not valid IP'];\n      }\n    }\n    const emptyValues = this.state.newValues.split(',').every(v => v.length === 0);\n    if (emptyValues) {\n      return [false, 'Empty value'];\n    }\n    return [true, ''];\n  };\n\n  // @ts-ignore\n  actionResolver = (rowData, { rowIndex }) => {\n    const removeAction = {\n      title: 'Remove Field',\n      // @ts-ignore\n      onClick: (event, rowIndex, rowData, extraData) => {\n        // Fetch sourceField from rowData, it's a fixed string on children\n        const removeSourceField = rowData.cells[0].props.children.toString();\n        this.setState(prevState => {\n          prevState.sourceFields.push(removeSourceField);\n          delete prevState.source[removeSourceField];\n          const newSourceFields = prevState.sourceFields.sort();\n          return {\n            sourceFields: newSourceFields,\n            source: prevState.source,\n            newSourceField: newSourceFields[0],\n            newValues: ''\n          };\n        });\n      }\n    };\n    if (rowIndex < Object.keys(this.state.source).length) {\n      return [removeAction];\n    }\n    return [];\n  };\n\n  rows = () => {\n    const [isValidSource, invalidText] = this.isValidSource();\n\n    const sourceRows = Object.keys(this.state.source).map((sourceField, i) => {\n      return {\n        key: 'sourceKey' + i,\n        cells: [<>{sourceField}</>, <>{this.state.source[sourceField].join(',')}</>, <></>]\n      };\n    });\n    if (this.state.sourceFields.length > 0) {\n      return sourceRows.concat([\n        {\n          key: 'sourceKeyNew',\n          cells: [\n            <>\n              <FormSelect\n                value={this.state.newSourceField}\n                id=\"addNewSourceField\"\n                name=\"addNewSourceField\"\n                onChange={this.onAddNewSourceField}\n              >\n                {this.state.sourceFields.map((option, index) => (\n                  <FormSelectOption isDisabled={false} key={'source' + index} value={option} label={option} />\n                ))}\n              </FormSelect>\n            </>,\n            <>\n              <TextInput\n                value={this.state.newValues}\n                type=\"text\"\n                id=\"addNewValues\"\n                key=\"addNewValues\"\n                aria-describedby=\"add new source values\"\n                name=\"addNewValues\"\n                onChange={this.onAddNewValues}\n                isValid={isValidSource}\n              />\n              {!isValidSource && (\n                <div key=\"hostsHelperText\" className={noSourceStyle}>\n                  {invalidText}\n                </div>\n              )}\n            </>,\n            <>\n              {this.state.sourceFields.length > 0 && (\n                <Button\n                  variant=\"link\"\n                  icon={<PlusCircleIcon />}\n                  onClick={this.onAddSource}\n                  isDisabled={!isValidSource}\n                />\n              )}\n            </>\n          ]\n        }\n      ]);\n    }\n    return sourceRows;\n  };\n\n  render() {\n    return (\n      <>\n        <Table\n          aria-label=\"Source Builder\"\n          cells={headerCells}\n          rows={this.rows()}\n          // @ts-ignore\n          actionResolver={this.actionResolver}\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n        <Button\n          variant=\"link\"\n          icon={<PlusCircleIcon />}\n          isDisabled={Object.keys(this.state.source).length === 0}\n          onClick={this.onAddSourceFromList}\n        >\n          Add Source to From List\n        </Button>\n      </>\n    );\n  }\n}\n\nexport default SourceBuilder;\n"]},"metadata":{},"sourceType":"module"}