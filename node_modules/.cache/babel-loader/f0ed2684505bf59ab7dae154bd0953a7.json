{"ast":null,"code":"import _regeneratorRuntime from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/app/StartupInitializer.tsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { LoginActions } from '../actions/LoginActions';\nimport * as API from '../services/Api';\nimport InitializingScreen from './InitializingScreen';\nimport authenticationConfig from '../config/AuthenticationConfig';\nimport { setPFColorVals } from 'components/Pf/PfColors';\n\nvar InitializerComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(InitializerComponent, _React$Component);\n\n  var _super = _createSuper(InitializerComponent);\n\n  function InitializerComponent(props) {\n    var _this;\n\n    _classCallCheck(this, InitializerComponent);\n\n    _this = _super.call(this, props);\n    _this.fetchAuthenticationConfig = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var authConfig, errDetails, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return API.getAuthInfo();\n\n            case 3:\n              authConfig = _context.sent;\n              authenticationConfig.authorizationEndpoint = authConfig.data.authorizationEndpoint;\n              authenticationConfig.logoutEndpoint = authConfig.data.logoutEndpoint;\n              authenticationConfig.logoutRedirect = authConfig.data.logoutRedirect;\n              authenticationConfig.strategy = authConfig.data.strategy;\n\n              if (authConfig.data.sessionInfo.expiresOn && authConfig.data.sessionInfo.username) {\n                _this.props.setInitialAuthentication({\n                  username: authConfig.data.sessionInfo.username,\n                  expiresOn: authConfig.data.sessionInfo.expiresOn\n                });\n              }\n\n              _this.props.onInitializationFinished();\n\n              _context.next = 16;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n\n              if (_context.t0.request) {\n                response = _context.t0.request.responseText;\n\n                if (response.trim().length > 0) {\n                  errDetails = response;\n                }\n              }\n\n              _this.setState({\n                errorMsg: API.getErrorString(_context.t0),\n                errorDetails: errDetails\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(InitializerComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchAuthenticationConfig();\n      setPFColorVals(document.documentElement);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(InitializingScreen, {\n        errorMsg: this.state.errorMsg,\n        errorDetails: this.state.errorDetails,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return InitializerComponent;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setInitialAuthentication: function setInitialAuthentication(session) {\n      return dispatch(LoginActions.loginSuccess(session));\n    }\n  };\n};\n\nvar StartupInitializer = connect(null, mapDispatchToProps)(InitializerComponent);\nexport default StartupInitializer;","map":{"version":3,"sources":["/root/kiali-ui/src/app/StartupInitializer.tsx"],"names":["React","connect","LoginActions","API","InitializingScreen","authenticationConfig","setPFColorVals","InitializerComponent","props","fetchAuthenticationConfig","getAuthInfo","authConfig","authorizationEndpoint","data","logoutEndpoint","logoutRedirect","strategy","sessionInfo","expiresOn","username","setInitialAuthentication","onInitializationFinished","request","response","responseText","trim","length","errDetails","setState","errorMsg","getErrorString","errorDetails","state","document","documentElement","Component","mapDispatchToProps","dispatch","session","loginSuccess","StartupInitializer"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AAGA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;AACA,SAASC,cAAT,QAA+B,wBAA/B;;IAYMC,oB;;;;;AACJ,gCAAYC,KAAZ,EAA8C;AAAA;;AAAA;;AAC5C,8BAAMA,KAAN;AAD4C,UActCC,yBAdsC,yEAcV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEPN,GAAG,CAACO,WAAJ,EAFO;;AAAA;AAE1BC,cAAAA,UAF0B;AAGhCN,cAAAA,oBAAoB,CAACO,qBAArB,GAA6CD,UAAU,CAACE,IAAX,CAAgBD,qBAA7D;AACAP,cAAAA,oBAAoB,CAACS,cAArB,GAAsCH,UAAU,CAACE,IAAX,CAAgBC,cAAtD;AACAT,cAAAA,oBAAoB,CAACU,cAArB,GAAsCJ,UAAU,CAACE,IAAX,CAAgBE,cAAtD;AACAV,cAAAA,oBAAoB,CAACW,QAArB,GAAgCL,UAAU,CAACE,IAAX,CAAgBG,QAAhD;;AAEA,kBAAIL,UAAU,CAACE,IAAX,CAAgBI,WAAhB,CAA4BC,SAA5B,IAAyCP,UAAU,CAACE,IAAX,CAAgBI,WAAhB,CAA4BE,QAAzE,EAAmF;AACjF,sBAAKX,KAAL,CAAWY,wBAAX,CAAoC;AAClCD,kBAAAA,QAAQ,EAAER,UAAU,CAACE,IAAX,CAAgBI,WAAhB,CAA4BE,QADJ;AAElCD,kBAAAA,SAAS,EAAEP,UAAU,CAACE,IAAX,CAAgBI,WAAhB,CAA4BC;AAFL,iBAApC;AAID;;AAED,oBAAKV,KAAL,CAAWa,wBAAX;;AAfgC;AAAA;;AAAA;AAAA;AAAA;;AAkBhC,kBAAI,YAAIC,OAAR,EAAiB;AACTC,gBAAAA,QADS,GACG,YAAID,OAAL,CAAgCE,YADlC;;AAEf,oBAAID,QAAQ,CAACE,IAAT,GAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AAC9BC,kBAAAA,UAAU,GAAGJ,QAAb;AACD;AACF;;AAED,oBAAKK,QAAL,CAAc;AACZC,gBAAAA,QAAQ,EAAE1B,GAAG,CAAC2B,cAAJ,aADE;AAEZC,gBAAAA,YAAY,EAAEJ;AAFF,eAAd;;AAzBgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAdU;AAE5C,UAAKK,KAAL,GAAa,EAAb;AAF4C;AAG7C;;;;WAED,6BAAoB;AAClB,WAAKvB,yBAAL;AACAH,MAAAA,cAAc,CAAC2B,QAAQ,CAACC,eAAV,CAAd;AACD;;;WAED,kBAAS;AACP,0BAAO,oBAAC,kBAAD;AAAoB,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWH,QAAzC;AAAmD,QAAA,YAAY,EAAE,KAAKG,KAAL,CAAWD,YAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAbgC/B,KAAK,CAACmC,S;;AAgDzC,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAA8B;AACvDjB,IAAAA,wBAAwB,EAAE,kCAACkB,OAAD;AAAA,aAA2BD,QAAQ,CAACnC,YAAY,CAACqC,YAAb,CAA0BD,OAA1B,CAAD,CAAnC;AAAA;AAD6B,GAA9B;AAAA,CAA3B;;AAIA,IAAME,kBAAkB,GAAGvC,OAAO,CAAC,IAAD,EAAOmC,kBAAP,CAAP,CAAkC7B,oBAAlC,CAA3B;AACA,eAAeiC,kBAAf","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { LoginActions } from '../actions/LoginActions';\nimport * as API from '../services/Api';\nimport { LoginSession } from '../store/Store';\nimport { KialiDispatch } from '../types/Redux';\nimport InitializingScreen from './InitializingScreen';\nimport authenticationConfig from '../config/AuthenticationConfig';\nimport { setPFColorVals } from 'components/Pf/PfColors';\n\ninterface InitializerComponentProps {\n  setInitialAuthentication: (session: LoginSession) => void;\n  onInitializationFinished: () => void;\n}\n\ninterface InitializerComponentState {\n  errorMsg?: string;\n  errorDetails?: string;\n}\n\nclass InitializerComponent extends React.Component<InitializerComponentProps, InitializerComponentState> {\n  constructor(props: InitializerComponentProps) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.fetchAuthenticationConfig();\n    setPFColorVals(document.documentElement);\n  }\n\n  render() {\n    return <InitializingScreen errorMsg={this.state.errorMsg} errorDetails={this.state.errorDetails} />;\n  }\n\n  private fetchAuthenticationConfig = async () => {\n    try {\n      const authConfig = await API.getAuthInfo();\n      authenticationConfig.authorizationEndpoint = authConfig.data.authorizationEndpoint;\n      authenticationConfig.logoutEndpoint = authConfig.data.logoutEndpoint;\n      authenticationConfig.logoutRedirect = authConfig.data.logoutRedirect;\n      authenticationConfig.strategy = authConfig.data.strategy;\n\n      if (authConfig.data.sessionInfo.expiresOn && authConfig.data.sessionInfo.username) {\n        this.props.setInitialAuthentication({\n          username: authConfig.data.sessionInfo.username,\n          expiresOn: authConfig.data.sessionInfo.expiresOn\n        });\n      }\n\n      this.props.onInitializationFinished();\n    } catch (err) {\n      let errDetails: string | undefined;\n      if (err.request) {\n        const response = (err.request as XMLHttpRequest).responseText;\n        if (response.trim().length > 0) {\n          errDetails = response;\n        }\n      }\n\n      this.setState({\n        errorMsg: API.getErrorString(err),\n        errorDetails: errDetails\n      });\n    }\n  };\n}\n\nconst mapDispatchToProps = (dispatch: KialiDispatch) => ({\n  setInitialAuthentication: (session: LoginSession) => dispatch(LoginActions.loginSuccess(session))\n});\n\nconst StartupInitializer = connect(null, mapDispatchToProps)(InitializerComponent);\nexport default StartupInitializer;\n"]},"metadata":{},"sourceType":"module"}