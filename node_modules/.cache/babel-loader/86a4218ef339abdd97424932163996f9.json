{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/components/Envoy/EnvoyDetails.tsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { namespaceItemsSelector } from 'store/Selectors';\nimport * as API from '../../services/Api';\nimport * as AlertUtils from '../../utils/AlertUtils';\nimport { Button, ButtonVariant, Card, CardBody, Grid, GridItem, Tab, Tabs, TooltipPosition } from '@patternfly/react-core';\nimport { SummaryTableBuilder } from './tables/BaseTable';\nimport { style } from 'typestyle';\nimport AceEditor from 'react-ace';\nimport { PFBadge, PFBadges } from 'components/Pf/PfBadges';\nimport ToolbarDropdown from 'components/ToolbarDropdown/ToolbarDropdown';\nimport { KialiIcon, defaultIconStyle } from 'config/KialiIcon';\nimport { aceOptions } from 'types/IstioConfigDetails';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { RenderComponentScroll } from 'components/Nav/Page';\nimport CustomMetricsContainer from 'components/Metrics/CustomMetrics';\nimport { serverConfig } from 'config';\nimport { FilterSelected } from 'components/Filters/StatefulFilters'; // Enables the search box for the ACEeditor\n\nrequire('ace-builds/src-noconflict/ext-searchbox');\n\nvar resources = ['clusters', 'listeners', 'routes', 'bootstrap', 'config', 'metrics'];\nvar iconStyle = style({\n  display: 'inline-block',\n  paddingTop: '5px'\n});\nvar paramToTab = {\n  clusters: 0,\n  listeners: 1,\n  routes: 2,\n  bootstrap: 3,\n  config: 4,\n  metrics: 5\n};\nvar fullHeightStyle = style({\n  height: '100%'\n});\n\nvar EnvoyDetails = /*#__PURE__*/function (_React$Component) {\n  _inherits(EnvoyDetails, _React$Component);\n\n  var _super = _createSuper(EnvoyDetails);\n\n  function EnvoyDetails(props) {\n    var _this;\n\n    _classCallCheck(this, EnvoyDetails);\n\n    _this = _super.call(this, props);\n    _this.aceEditorRef = void 0;\n\n    _this.envoyHandleTabClick = function (_event, tabIndex) {\n      var resourceIdx = +tabIndex;\n      var targetResource = resources[resourceIdx];\n\n      if (targetResource !== _this.state.resource) {\n        _this.setState({\n          config: {},\n          fetch: true,\n          resource: targetResource,\n          activeKey: tabIndex\n        });\n      }\n    };\n\n    _this.fetchEnvoyProxyResourceEntries = function (resource) {\n      API.getPodEnvoyProxyResourceEntries(_this.props.namespace, _this.state.pod.name, resource).then(function (resultEnvoyProxy) {\n        _this.setState({\n          config: resultEnvoyProxy.data,\n          fetch: false\n        });\n      }).catch(function (error) {\n        AlertUtils.addError(\"Could not fetch envoy config \".concat(resource, \" entries for \").concat(_this.state.pod.name, \".\"), error);\n      });\n    };\n\n    _this.fetchEnvoyProxy = function () {\n      API.getPodEnvoyProxy(_this.props.namespace, _this.state.pod.name).then(function (resultEnvoyProxy) {\n        _this.setState({\n          config: resultEnvoyProxy.data,\n          fetch: false\n        });\n      }).catch(function (error) {\n        AlertUtils.addError(\"Could not fetch envoy config for \".concat(_this.state.pod.name, \".\"), error);\n      });\n    };\n\n    _this.fetchContent = function () {\n      if (_this.state.fetch === true) {\n        if (_this.state.resource === 'config') {\n          _this.fetchEnvoyProxy();\n        } else {\n          _this.fetchEnvoyProxyResourceEntries(_this.state.resource);\n        }\n      }\n    };\n\n    _this.setPod = function (podName) {\n      var podIdx = +podName;\n\n      var targetPod = _this.sortedPods()[podIdx];\n\n      if (targetPod.name !== _this.state.pod.name) {\n        _this.setState({\n          config: {},\n          pod: targetPod,\n          fetch: true\n        });\n      }\n    };\n\n    _this.sortedPods = function () {\n      return _this.props.workload.pods.sort(function (p1, p2) {\n        return p1.name >= p2.name ? 1 : -1;\n      });\n    };\n\n    _this.onSort = function (tab, index, direction) {\n      if (_this.state.tableSortBy[tab].index !== index || _this.state.tableSortBy[tab].direction !== direction) {\n        var tableSortBy = _this.state.tableSortBy;\n        tableSortBy[tab].index = index;\n        tableSortBy[tab].direction = direction;\n\n        _this.setState({\n          tableSortBy: tableSortBy\n        });\n      }\n    };\n\n    _this.editorContent = function () {\n      return JSON.stringify(_this.state.config, null, '  ');\n    };\n\n    _this.onCopyToClipboard = function (_text, _result) {\n      var editor = _this.aceEditorRef.current['editor'];\n\n      if (editor) {\n        editor.selectconfig();\n      }\n    };\n\n    _this.showEditor = function () {\n      return _this.state.resource === 'config' || _this.state.resource === 'bootstrap';\n    };\n\n    _this.showMetrics = function () {\n      return _this.state.resource === 'metrics';\n    };\n\n    _this.getEnvoyMetricsDashboardRef = function () {\n      var envoyDashboardRef = undefined;\n\n      _this.props.workload.runtimes.forEach(function (runtime) {\n        runtime.dashboardRefs.forEach(function (dashboardRef) {\n          if (dashboardRef.template === 'envoy') {\n            envoyDashboardRef = dashboardRef;\n          }\n        });\n      });\n\n      return envoyDashboardRef;\n    };\n\n    _this.isLoadingConfig = function () {\n      return Object.keys(_this.state.config).length < 1;\n    };\n\n    _this.onRouteLinkClick = function () {\n      _this.setState({\n        config: {},\n        fetch: true,\n        resource: 'routes',\n        activeKey: 2 // Routes index\n\n      }); // Forcing to regenerate the active filters\n\n\n      FilterSelected.resetFilters();\n    };\n\n    _this.aceEditorRef = React.createRef();\n    _this.state = {\n      pod: _this.sortedPods()[0],\n      config: {},\n      tabHeight: 300,\n      fetch: true,\n      activeKey: 0,\n      resource: 'clusters',\n      tableSortBy: {\n        clusters: {\n          index: 0,\n          direction: 'asc'\n        },\n        listeners: {\n          index: 0,\n          direction: 'asc'\n        },\n        routes: {\n          index: 0,\n          direction: 'asc'\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(EnvoyDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchContent();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_prevProps, prevState) {\n      if (this.state.pod.name !== prevState.pod.name || this.state.resource !== prevState.resource) {\n        this.fetchContent();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var builder = SummaryTableBuilder(this.state.resource, this.state.config, this.state.tableSortBy, this.props.namespaces, this.props.namespace, this.onRouteLinkClick, this.props.workload.name);\n      var SummaryWriterComp = builder[0];\n      var summaryWriter = builder[1];\n      var height = this.state.tabHeight - 226;\n      var app = this.props.workload.labels[serverConfig.istioLabels.appLabelName];\n      var version = this.props.workload.labels[serverConfig.istioLabels.versionLabelName];\n      var envoyMetricsDashboardRef = this.getEnvoyMetricsDashboardRef();\n      var tabs = Object.keys(paramToTab).map(function (value, index) {\n        var title = value.charAt(0).toUpperCase() + value.slice(1);\n        return /*#__PURE__*/React.createElement(Tab, {\n          style: {\n            backgroundColor: 'white'\n          },\n          key: 'tab_' + title,\n          eventKey: index,\n          title: title,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          className: fullHeightStyle,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(CardBody, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }\n        }, _this2.showEditor() ? /*#__PURE__*/React.createElement(\"div\", {\n          className: fullHeightStyle,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          key: \"service-icon\",\n          className: iconStyle,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(PFBadge, {\n          badge: PFBadges.Pod,\n          position: TooltipPosition.top,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 23\n          }\n        })), /*#__PURE__*/React.createElement(ToolbarDropdown, {\n          id: \"envoy_pods_list\",\n          tooltip: \"Display envoy config for the selected pod\",\n          handleSelect: function handleSelect(key) {\n            return _this2.setPod(key);\n          },\n          value: _this2.state.pod.name,\n          label: _this2.state.pod.name,\n          options: _this2.props.workload.pods.map(function (pod) {\n            return pod.name;\n          }).sort(),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            float: 'right'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CopyToClipboard, {\n          onCopy: _this2.onCopyToClipboard,\n          text: _this2.editorContent(),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: ButtonVariant.link,\n          isInline: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(KialiIcon.Copy, {\n          className: defaultIconStyle,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 27\n          }\n        }))))), /*#__PURE__*/React.createElement(AceEditor, {\n          ref: _this2.aceEditorRef,\n          mode: \"yaml\",\n          theme: \"eclipse\",\n          width: '100%',\n          height: height.toString() + 'px',\n          className: 'istio-ace-editor',\n          wrapEnabled: true,\n          readOnly: true,\n          setOptions: aceOptions || {\n            foldStyle: 'markbegin'\n          },\n          value: _this2.editorContent(),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 19\n          }\n        })) : _this2.showMetrics() && envoyMetricsDashboardRef ? /*#__PURE__*/React.createElement(CustomMetricsContainer, {\n          namespace: _this2.props.namespace,\n          app: app,\n          version: version,\n          workload: _this2.props.workload.name,\n          template: envoyMetricsDashboardRef.template,\n          embedded: true,\n          height: _this2.state.tabHeight - 40 - 24 + 13,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }\n        }) : /*#__PURE__*/React.createElement(SummaryWriterComp, {\n          writer: summaryWriter,\n          sortBy: _this2.state.tableSortBy,\n          onSort: _this2.onSort,\n          pod: _this2.state.pod.name,\n          pods: _this2.props.workload.pods.map(function (pod) {\n            return pod.name;\n          }),\n          setPod: _this2.setPod,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }\n        }))));\n      });\n      return /*#__PURE__*/React.createElement(RenderComponentScroll, {\n        onResize: function onResize(height) {\n          return _this2.setState({\n            tabHeight: height\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        span: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Tabs, {\n        id: \"envoy-details\",\n        activeKey: this.state.activeKey,\n        onSelect: this.envoyHandleTabClick,\n        mountOnEnter: true,\n        unmountOnExit: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }\n      }, tabs))));\n    }\n  }]);\n\n  return EnvoyDetails;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    namespaces: namespaceItemsSelector(state)\n  };\n};\n\nvar EnvoyDetailsContainer = connect(mapStateToProps)(EnvoyDetails);\nexport default EnvoyDetailsContainer;","map":{"version":3,"sources":["/root/kiali-ui/src/components/Envoy/EnvoyDetails.tsx"],"names":["React","connect","namespaceItemsSelector","API","AlertUtils","Button","ButtonVariant","Card","CardBody","Grid","GridItem","Tab","Tabs","TooltipPosition","SummaryTableBuilder","style","AceEditor","PFBadge","PFBadges","ToolbarDropdown","KialiIcon","defaultIconStyle","aceOptions","CopyToClipboard","RenderComponentScroll","CustomMetricsContainer","serverConfig","FilterSelected","require","resources","iconStyle","display","paddingTop","paramToTab","clusters","listeners","routes","bootstrap","config","metrics","fullHeightStyle","height","EnvoyDetails","props","aceEditorRef","envoyHandleTabClick","_event","tabIndex","resourceIdx","targetResource","state","resource","setState","fetch","activeKey","fetchEnvoyProxyResourceEntries","getPodEnvoyProxyResourceEntries","namespace","pod","name","then","resultEnvoyProxy","data","catch","error","addError","fetchEnvoyProxy","getPodEnvoyProxy","fetchContent","setPod","podName","podIdx","targetPod","sortedPods","workload","pods","sort","p1","p2","onSort","tab","index","direction","tableSortBy","editorContent","JSON","stringify","onCopyToClipboard","_text","_result","editor","current","selectconfig","showEditor","showMetrics","getEnvoyMetricsDashboardRef","envoyDashboardRef","undefined","runtimes","forEach","runtime","dashboardRefs","dashboardRef","template","isLoadingConfig","Object","keys","length","onRouteLinkClick","resetFilters","createRef","tabHeight","_prevProps","prevState","builder","namespaces","SummaryWriterComp","summaryWriter","app","labels","istioLabels","appLabelName","version","versionLabelName","envoyMetricsDashboardRef","tabs","map","value","title","charAt","toUpperCase","slice","backgroundColor","marginBottom","Pod","top","key","float","link","toString","foldStyle","Component","mapStateToProps","EnvoyDetailsContainer"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { KialiAppState } from 'store/Store';\nimport { namespaceItemsSelector } from 'store/Selectors';\nimport { ISortBy, SortByDirection } from '@patternfly/react-table';\nimport { Workload } from 'types/Workload';\nimport { EnvoyProxyDump, Pod } from 'types/IstioObjects';\nimport * as API from '../../services/Api';\nimport * as AlertUtils from '../../utils/AlertUtils';\nimport {\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Grid,\n  GridItem,\n  Tab,\n  Tabs,\n  TooltipPosition\n} from '@patternfly/react-core';\nimport { SummaryTableBuilder } from './tables/BaseTable';\nimport Namespace from 'types/Namespace';\nimport { style } from 'typestyle';\nimport AceEditor from 'react-ace';\nimport { PFBadge, PFBadges } from 'components/Pf/PfBadges';\nimport ToolbarDropdown from 'components/ToolbarDropdown/ToolbarDropdown';\nimport { KialiIcon, defaultIconStyle } from 'config/KialiIcon';\nimport { aceOptions } from 'types/IstioConfigDetails';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { RenderComponentScroll } from 'components/Nav/Page';\nimport { DashboardRef } from 'types/Runtimes';\nimport CustomMetricsContainer from 'components/Metrics/CustomMetrics';\nimport { serverConfig } from 'config';\nimport { FilterSelected } from 'components/Filters/StatefulFilters';\n\n// Enables the search box for the ACEeditor\nrequire('ace-builds/src-noconflict/ext-searchbox');\n\nconst resources: string[] = ['clusters', 'listeners', 'routes', 'bootstrap', 'config', 'metrics'];\n\nconst iconStyle = style({\n  display: 'inline-block',\n  paddingTop: '5px'\n});\n\nconst paramToTab: { [key: string]: number } = {\n  clusters: 0,\n  listeners: 1,\n  routes: 2,\n  bootstrap: 3,\n  config: 4,\n  metrics: 5\n};\n\nexport type ResourceSorts = { [resource: string]: ISortBy };\n\ntype ReduxProps = {\n  namespaces: Namespace[];\n};\n\ntype EnvoyDetailsProps = ReduxProps & {\n  namespace: string;\n  workload: Workload;\n};\n\ntype EnvoyDetailsState = {\n  config: EnvoyProxyDump;\n  pod: Pod;\n  tableSortBy: ResourceSorts;\n  fetch: boolean;\n  tabHeight: number;\n  activeKey: number;\n  resource: string;\n};\n\nconst fullHeightStyle = style({\n  height: '100%'\n});\n\nclass EnvoyDetails extends React.Component<EnvoyDetailsProps, EnvoyDetailsState> {\n  aceEditorRef: React.RefObject<AceEditor>;\n\n  constructor(props: EnvoyDetailsProps) {\n    super(props);\n\n    this.aceEditorRef = React.createRef();\n\n    this.state = {\n      pod: this.sortedPods()[0],\n      config: {},\n      tabHeight: 300,\n      fetch: true,\n      activeKey: 0,\n      resource: 'clusters',\n      tableSortBy: {\n        clusters: {\n          index: 0,\n          direction: 'asc'\n        },\n        listeners: {\n          index: 0,\n          direction: 'asc'\n        },\n        routes: {\n          index: 0,\n          direction: 'asc'\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetchContent();\n  }\n\n  componentDidUpdate(_prevProps: EnvoyDetailsProps, prevState: EnvoyDetailsState) {\n    if (this.state.pod.name !== prevState.pod.name || this.state.resource !== prevState.resource) {\n      this.fetchContent();\n    }\n  }\n\n  envoyHandleTabClick = (_event, tabIndex) => {\n    const resourceIdx: number = +tabIndex;\n    const targetResource: string = resources[resourceIdx];\n    if (targetResource !== this.state.resource) {\n      this.setState({\n        config: {},\n        fetch: true,\n        resource: targetResource,\n        activeKey: tabIndex\n      });\n    }\n  };\n\n  fetchEnvoyProxyResourceEntries = (resource: string) => {\n    API.getPodEnvoyProxyResourceEntries(this.props.namespace, this.state.pod.name, resource)\n      .then(resultEnvoyProxy => {\n        this.setState({\n          config: resultEnvoyProxy.data,\n          fetch: false\n        });\n      })\n      .catch(error => {\n        AlertUtils.addError(`Could not fetch envoy config ${resource} entries for ${this.state.pod.name}.`, error);\n      });\n  };\n\n  fetchEnvoyProxy = () => {\n    API.getPodEnvoyProxy(this.props.namespace, this.state.pod.name)\n      .then(resultEnvoyProxy => {\n        this.setState({\n          config: resultEnvoyProxy.data,\n          fetch: false\n        });\n      })\n      .catch(error => {\n        AlertUtils.addError(`Could not fetch envoy config for ${this.state.pod.name}.`, error);\n      });\n  };\n\n  fetchContent = () => {\n    if (this.state.fetch === true) {\n      if (this.state.resource === 'config') {\n        this.fetchEnvoyProxy();\n      } else {\n        this.fetchEnvoyProxyResourceEntries(this.state.resource);\n      }\n    }\n  };\n\n  setPod = (podName: string) => {\n    const podIdx: number = +podName;\n    const targetPod: Pod = this.sortedPods()[podIdx];\n    if (targetPod.name !== this.state.pod.name) {\n      this.setState({\n        config: {},\n        pod: targetPod,\n        fetch: true\n      });\n    }\n  };\n\n  sortedPods = (): Pod[] => {\n    return this.props.workload.pods.sort((p1: Pod, p2: Pod) => (p1.name >= p2.name ? 1 : -1));\n  };\n\n  onSort = (tab: string, index: number, direction: SortByDirection) => {\n    if (this.state.tableSortBy[tab].index !== index || this.state.tableSortBy[tab].direction !== direction) {\n      let tableSortBy = this.state.tableSortBy;\n      tableSortBy[tab].index = index;\n      tableSortBy[tab].direction = direction;\n      this.setState({\n        tableSortBy: tableSortBy\n      });\n    }\n  };\n\n  editorContent = () => JSON.stringify(this.state.config, null, '  ');\n\n  onCopyToClipboard = (_text: string, _result: boolean) => {\n    const editor = this.aceEditorRef.current!['editor'];\n    if (editor) {\n      editor.selectconfig();\n    }\n  };\n\n  showEditor = () => {\n    return this.state.resource === 'config' || this.state.resource === 'bootstrap';\n  };\n\n  showMetrics = () => {\n    return this.state.resource === 'metrics';\n  };\n\n  getEnvoyMetricsDashboardRef = (): DashboardRef | undefined => {\n    var envoyDashboardRef: DashboardRef | undefined = undefined;\n    this.props.workload.runtimes.forEach(runtime => {\n      runtime.dashboardRefs.forEach(dashboardRef => {\n        if (dashboardRef.template === 'envoy') {\n          envoyDashboardRef = dashboardRef;\n        }\n      });\n    });\n    return envoyDashboardRef;\n  };\n\n  isLoadingConfig = () => {\n    return Object.keys(this.state.config).length < 1;\n  };\n\n  onRouteLinkClick = () => {\n    this.setState({\n      config: {},\n      fetch: true,\n      resource: 'routes',\n      activeKey: 2 // Routes index\n    });\n\n    // Forcing to regenerate the active filters\n    FilterSelected.resetFilters();\n  };\n\n  render() {\n    const builder = SummaryTableBuilder(\n      this.state.resource,\n      this.state.config,\n      this.state.tableSortBy,\n      this.props.namespaces,\n      this.props.namespace,\n      this.onRouteLinkClick,\n      this.props.workload.name\n    );\n    const SummaryWriterComp = builder[0];\n    const summaryWriter = builder[1];\n    const height = this.state.tabHeight - 226;\n    const app = this.props.workload.labels[serverConfig.istioLabels.appLabelName];\n    const version = this.props.workload.labels[serverConfig.istioLabels.versionLabelName];\n    const envoyMetricsDashboardRef = this.getEnvoyMetricsDashboardRef();\n\n    const tabs = Object.keys(paramToTab).map((value, index) => {\n      const title = value.charAt(0).toUpperCase() + value.slice(1);\n      return (\n        <Tab style={{ backgroundColor: 'white' }} key={'tab_' + title} eventKey={index} title={title}>\n          <Card className={fullHeightStyle}>\n            <CardBody>\n              {this.showEditor() ? (\n                <div className={fullHeightStyle}>\n                  <div style={{ marginBottom: '20px' }}>\n                    <div key=\"service-icon\" className={iconStyle}>\n                      <PFBadge badge={PFBadges.Pod} position={TooltipPosition.top} />\n                    </div>\n                    <ToolbarDropdown\n                      id=\"envoy_pods_list\"\n                      tooltip=\"Display envoy config for the selected pod\"\n                      handleSelect={key => this.setPod(key)}\n                      value={this.state.pod.name}\n                      label={this.state.pod.name}\n                      options={this.props.workload.pods.map((pod: Pod) => pod.name).sort()}\n                    />\n                    <span style={{ float: 'right' }}>\n                      <CopyToClipboard onCopy={this.onCopyToClipboard} text={this.editorContent()}>\n                        <Button variant={ButtonVariant.link} isInline>\n                          <KialiIcon.Copy className={defaultIconStyle} />\n                        </Button>\n                      </CopyToClipboard>\n                    </span>\n                  </div>\n                  <AceEditor\n                    ref={this.aceEditorRef}\n                    mode=\"yaml\"\n                    theme=\"eclipse\"\n                    width={'100%'}\n                    height={height.toString() + 'px'}\n                    className={'istio-ace-editor'}\n                    wrapEnabled={true}\n                    readOnly={true}\n                    setOptions={aceOptions || { foldStyle: 'markbegin' }}\n                    value={this.editorContent()}\n                  />\n                </div>\n              ) : this.showMetrics() && envoyMetricsDashboardRef ? (\n                <CustomMetricsContainer\n                  namespace={this.props.namespace}\n                  app={app}\n                  version={version}\n                  workload={this.props.workload!.name}\n                  template={envoyMetricsDashboardRef.template}\n                  embedded={true}\n                  height={this.state.tabHeight - 40 - 24 + 13}\n                />\n              ) : (\n                <SummaryWriterComp\n                  writer={summaryWriter}\n                  sortBy={this.state.tableSortBy}\n                  onSort={this.onSort}\n                  pod={this.state.pod.name}\n                  pods={this.props.workload.pods.map(pod => pod.name)}\n                  setPod={this.setPod}\n                />\n              )}\n            </CardBody>\n          </Card>\n        </Tab>\n      );\n    });\n\n    return (\n      <RenderComponentScroll onResize={height => this.setState({ tabHeight: height })}>\n        <Grid>\n          <GridItem span={12}>\n            <Tabs\n              id=\"envoy-details\"\n              activeKey={this.state.activeKey}\n              onSelect={this.envoyHandleTabClick}\n              mountOnEnter={true}\n              unmountOnExit={true}\n            >\n              {tabs}\n            </Tabs>\n          </GridItem>\n        </Grid>\n      </RenderComponentScroll>\n    );\n  }\n}\n\nconst mapStateToProps = (state: KialiAppState) => ({\n  namespaces: namespaceItemsSelector(state)!\n});\n\nconst EnvoyDetailsContainer = connect(mapStateToProps)(EnvoyDetails);\n\nexport default EnvoyDetailsContainer;\n"]},"metadata":{},"sourceType":"module"}