{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar vpsc_1 = require(\"./vpsc\");\n\nvar rbtree_1 = require(\"./rbtree\");\n\nfunction computeGroupBounds(g) {\n  g.bounds = typeof g.leaves !== \"undefined\" ? g.leaves.reduce(function (r, c) {\n    return c.bounds.union(r);\n  }, Rectangle.empty()) : Rectangle.empty();\n  if (typeof g.groups !== \"undefined\") g.bounds = g.groups.reduce(function (r, c) {\n    return computeGroupBounds(c).union(r);\n  }, g.bounds);\n  g.bounds = g.bounds.inflate(g.padding);\n  return g.bounds;\n}\n\nexports.computeGroupBounds = computeGroupBounds;\n\nvar Rectangle = function () {\n  function Rectangle(x, X, y, Y) {\n    this.x = x;\n    this.X = X;\n    this.y = y;\n    this.Y = Y;\n  }\n\n  Rectangle.empty = function () {\n    return new Rectangle(Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY);\n  };\n\n  Rectangle.prototype.cx = function () {\n    return (this.x + this.X) / 2;\n  };\n\n  Rectangle.prototype.cy = function () {\n    return (this.y + this.Y) / 2;\n  };\n\n  Rectangle.prototype.overlapX = function (r) {\n    var ux = this.cx(),\n        vx = r.cx();\n    if (ux <= vx && r.x < this.X) return this.X - r.x;\n    if (vx <= ux && this.x < r.X) return r.X - this.x;\n    return 0;\n  };\n\n  Rectangle.prototype.overlapY = function (r) {\n    var uy = this.cy(),\n        vy = r.cy();\n    if (uy <= vy && r.y < this.Y) return this.Y - r.y;\n    if (vy <= uy && this.y < r.Y) return r.Y - this.y;\n    return 0;\n  };\n\n  Rectangle.prototype.setXCentre = function (cx) {\n    var dx = cx - this.cx();\n    this.x += dx;\n    this.X += dx;\n  };\n\n  Rectangle.prototype.setYCentre = function (cy) {\n    var dy = cy - this.cy();\n    this.y += dy;\n    this.Y += dy;\n  };\n\n  Rectangle.prototype.width = function () {\n    return this.X - this.x;\n  };\n\n  Rectangle.prototype.height = function () {\n    return this.Y - this.y;\n  };\n\n  Rectangle.prototype.union = function (r) {\n    return new Rectangle(Math.min(this.x, r.x), Math.max(this.X, r.X), Math.min(this.y, r.y), Math.max(this.Y, r.Y));\n  };\n\n  Rectangle.prototype.lineIntersections = function (x1, y1, x2, y2) {\n    var sides = [[this.x, this.y, this.X, this.y], [this.X, this.y, this.X, this.Y], [this.X, this.Y, this.x, this.Y], [this.x, this.Y, this.x, this.y]];\n    var intersections = [];\n\n    for (var i = 0; i < 4; ++i) {\n      var r = Rectangle.lineIntersection(x1, y1, x2, y2, sides[i][0], sides[i][1], sides[i][2], sides[i][3]);\n      if (r !== null) intersections.push({\n        x: r.x,\n        y: r.y\n      });\n    }\n\n    return intersections;\n  };\n\n  Rectangle.prototype.rayIntersection = function (x2, y2) {\n    var ints = this.lineIntersections(this.cx(), this.cy(), x2, y2);\n    return ints.length > 0 ? ints[0] : null;\n  };\n\n  Rectangle.prototype.vertices = function () {\n    return [{\n      x: this.x,\n      y: this.y\n    }, {\n      x: this.X,\n      y: this.y\n    }, {\n      x: this.X,\n      y: this.Y\n    }, {\n      x: this.x,\n      y: this.Y\n    }];\n  };\n\n  Rectangle.lineIntersection = function (x1, y1, x2, y2, x3, y3, x4, y4) {\n    var dx12 = x2 - x1,\n        dx34 = x4 - x3,\n        dy12 = y2 - y1,\n        dy34 = y4 - y3,\n        denominator = dy34 * dx12 - dx34 * dy12;\n    if (denominator == 0) return null;\n    var dx31 = x1 - x3,\n        dy31 = y1 - y3,\n        numa = dx34 * dy31 - dy34 * dx31,\n        a = numa / denominator,\n        numb = dx12 * dy31 - dy12 * dx31,\n        b = numb / denominator;\n\n    if (a >= 0 && a <= 1 && b >= 0 && b <= 1) {\n      return {\n        x: x1 + a * dx12,\n        y: y1 + a * dy12\n      };\n    }\n\n    return null;\n  };\n\n  Rectangle.prototype.inflate = function (pad) {\n    return new Rectangle(this.x - pad, this.X + pad, this.y - pad, this.Y + pad);\n  };\n\n  return Rectangle;\n}();\n\nexports.Rectangle = Rectangle;\n\nfunction makeEdgeBetween(source, target, ah) {\n  var si = source.rayIntersection(target.cx(), target.cy()) || {\n    x: source.cx(),\n    y: source.cy()\n  },\n      ti = target.rayIntersection(source.cx(), source.cy()) || {\n    x: target.cx(),\n    y: target.cy()\n  },\n      dx = ti.x - si.x,\n      dy = ti.y - si.y,\n      l = Math.sqrt(dx * dx + dy * dy),\n      al = l - ah;\n  return {\n    sourceIntersection: si,\n    targetIntersection: ti,\n    arrowStart: {\n      x: si.x + al * dx / l,\n      y: si.y + al * dy / l\n    }\n  };\n}\n\nexports.makeEdgeBetween = makeEdgeBetween;\n\nfunction makeEdgeTo(s, target, ah) {\n  var ti = target.rayIntersection(s.x, s.y);\n  if (!ti) ti = {\n    x: target.cx(),\n    y: target.cy()\n  };\n  var dx = ti.x - s.x,\n      dy = ti.y - s.y,\n      l = Math.sqrt(dx * dx + dy * dy);\n  return {\n    x: ti.x - ah * dx / l,\n    y: ti.y - ah * dy / l\n  };\n}\n\nexports.makeEdgeTo = makeEdgeTo;\n\nvar Node = function () {\n  function Node(v, r, pos) {\n    this.v = v;\n    this.r = r;\n    this.pos = pos;\n    this.prev = makeRBTree();\n    this.next = makeRBTree();\n  }\n\n  return Node;\n}();\n\nvar Event = function () {\n  function Event(isOpen, v, pos) {\n    this.isOpen = isOpen;\n    this.v = v;\n    this.pos = pos;\n  }\n\n  return Event;\n}();\n\nfunction compareEvents(a, b) {\n  if (a.pos > b.pos) {\n    return 1;\n  }\n\n  if (a.pos < b.pos) {\n    return -1;\n  }\n\n  if (a.isOpen) {\n    return -1;\n  }\n\n  if (b.isOpen) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction makeRBTree() {\n  return new rbtree_1.RBTree(function (a, b) {\n    return a.pos - b.pos;\n  });\n}\n\nvar xRect = {\n  getCentre: function getCentre(r) {\n    return r.cx();\n  },\n  getOpen: function getOpen(r) {\n    return r.y;\n  },\n  getClose: function getClose(r) {\n    return r.Y;\n  },\n  getSize: function getSize(r) {\n    return r.width();\n  },\n  makeRect: function makeRect(open, close, center, size) {\n    return new Rectangle(center - size / 2, center + size / 2, open, close);\n  },\n  findNeighbours: findXNeighbours\n};\nvar yRect = {\n  getCentre: function getCentre(r) {\n    return r.cy();\n  },\n  getOpen: function getOpen(r) {\n    return r.x;\n  },\n  getClose: function getClose(r) {\n    return r.X;\n  },\n  getSize: function getSize(r) {\n    return r.height();\n  },\n  makeRect: function makeRect(open, close, center, size) {\n    return new Rectangle(open, close, center - size / 2, center + size / 2);\n  },\n  findNeighbours: findYNeighbours\n};\n\nfunction generateGroupConstraints(root, f, minSep, isContained) {\n  if (isContained === void 0) {\n    isContained = false;\n  }\n\n  var padding = root.padding,\n      gn = typeof root.groups !== 'undefined' ? root.groups.length : 0,\n      ln = typeof root.leaves !== 'undefined' ? root.leaves.length : 0,\n      childConstraints = !gn ? [] : root.groups.reduce(function (ccs, g) {\n    return ccs.concat(generateGroupConstraints(g, f, minSep, true));\n  }, []),\n      n = (isContained ? 2 : 0) + ln + gn,\n      vs = new Array(n),\n      rs = new Array(n),\n      i = 0,\n      add = function add(r, v) {\n    rs[i] = r;\n    vs[i++] = v;\n  };\n\n  if (isContained) {\n    var b = root.bounds,\n        c = f.getCentre(b),\n        s = f.getSize(b) / 2,\n        open = f.getOpen(b),\n        close = f.getClose(b),\n        min = c - s + padding / 2,\n        max = c + s - padding / 2;\n    root.minVar.desiredPosition = min;\n    add(f.makeRect(open, close, min, padding), root.minVar);\n    root.maxVar.desiredPosition = max;\n    add(f.makeRect(open, close, max, padding), root.maxVar);\n  }\n\n  if (ln) root.leaves.forEach(function (l) {\n    return add(l.bounds, l.variable);\n  });\n  if (gn) root.groups.forEach(function (g) {\n    var b = g.bounds;\n    add(f.makeRect(f.getOpen(b), f.getClose(b), f.getCentre(b), f.getSize(b)), g.minVar);\n  });\n  var cs = generateConstraints(rs, vs, f, minSep);\n\n  if (gn) {\n    vs.forEach(function (v) {\n      v.cOut = [], v.cIn = [];\n    });\n    cs.forEach(function (c) {\n      c.left.cOut.push(c), c.right.cIn.push(c);\n    });\n    root.groups.forEach(function (g) {\n      var gapAdjustment = (g.padding - f.getSize(g.bounds)) / 2;\n      g.minVar.cIn.forEach(function (c) {\n        return c.gap += gapAdjustment;\n      });\n      g.minVar.cOut.forEach(function (c) {\n        c.left = g.maxVar;\n        c.gap += gapAdjustment;\n      });\n    });\n  }\n\n  return childConstraints.concat(cs);\n}\n\nfunction generateConstraints(rs, vars, rect, minSep) {\n  var i,\n      n = rs.length;\n  var N = 2 * n;\n  console.assert(vars.length >= n);\n  var events = new Array(N);\n\n  for (i = 0; i < n; ++i) {\n    var r = rs[i];\n    var v = new Node(vars[i], r, rect.getCentre(r));\n    events[i] = new Event(true, v, rect.getOpen(r));\n    events[i + n] = new Event(false, v, rect.getClose(r));\n  }\n\n  events.sort(compareEvents);\n  var cs = new Array();\n  var scanline = makeRBTree();\n\n  for (i = 0; i < N; ++i) {\n    var e = events[i];\n    var v = e.v;\n\n    if (e.isOpen) {\n      scanline.insert(v);\n      rect.findNeighbours(v, scanline);\n    } else {\n      scanline.remove(v);\n\n      var makeConstraint = function makeConstraint(l, r) {\n        var sep = (rect.getSize(l.r) + rect.getSize(r.r)) / 2 + minSep;\n        cs.push(new vpsc_1.Constraint(l.v, r.v, sep));\n      };\n\n      var visitNeighbours = function visitNeighbours(forward, reverse, mkcon) {\n        var u,\n            it = v[forward].iterator();\n\n        while ((u = it[forward]()) !== null) {\n          mkcon(u, v);\n          u[reverse].remove(v);\n        }\n      };\n\n      visitNeighbours(\"prev\", \"next\", function (u, v) {\n        return makeConstraint(u, v);\n      });\n      visitNeighbours(\"next\", \"prev\", function (u, v) {\n        return makeConstraint(v, u);\n      });\n    }\n  }\n\n  console.assert(scanline.size === 0);\n  return cs;\n}\n\nfunction findXNeighbours(v, scanline) {\n  var f = function f(forward, reverse) {\n    var it = scanline.findIter(v);\n    var u;\n\n    while ((u = it[forward]()) !== null) {\n      var uovervX = u.r.overlapX(v.r);\n\n      if (uovervX <= 0 || uovervX <= u.r.overlapY(v.r)) {\n        v[forward].insert(u);\n        u[reverse].insert(v);\n      }\n\n      if (uovervX <= 0) {\n        break;\n      }\n    }\n  };\n\n  f(\"next\", \"prev\");\n  f(\"prev\", \"next\");\n}\n\nfunction findYNeighbours(v, scanline) {\n  var f = function f(forward, reverse) {\n    var u = scanline.findIter(v)[forward]();\n\n    if (u !== null && u.r.overlapX(v.r) > 0) {\n      v[forward].insert(u);\n      u[reverse].insert(v);\n    }\n  };\n\n  f(\"next\", \"prev\");\n  f(\"prev\", \"next\");\n}\n\nfunction generateXConstraints(rs, vars) {\n  return generateConstraints(rs, vars, xRect, 1e-6);\n}\n\nexports.generateXConstraints = generateXConstraints;\n\nfunction generateYConstraints(rs, vars) {\n  return generateConstraints(rs, vars, yRect, 1e-6);\n}\n\nexports.generateYConstraints = generateYConstraints;\n\nfunction generateXGroupConstraints(root) {\n  return generateGroupConstraints(root, xRect, 1e-6);\n}\n\nexports.generateXGroupConstraints = generateXGroupConstraints;\n\nfunction generateYGroupConstraints(root) {\n  return generateGroupConstraints(root, yRect, 1e-6);\n}\n\nexports.generateYGroupConstraints = generateYGroupConstraints;\n\nfunction removeOverlaps(rs) {\n  var vs = rs.map(function (r) {\n    return new vpsc_1.Variable(r.cx());\n  });\n  var cs = generateXConstraints(rs, vs);\n  var solver = new vpsc_1.Solver(vs, cs);\n  solver.solve();\n  vs.forEach(function (v, i) {\n    return rs[i].setXCentre(v.position());\n  });\n  vs = rs.map(function (r) {\n    return new vpsc_1.Variable(r.cy());\n  });\n  cs = generateYConstraints(rs, vs);\n  solver = new vpsc_1.Solver(vs, cs);\n  solver.solve();\n  vs.forEach(function (v, i) {\n    return rs[i].setYCentre(v.position());\n  });\n}\n\nexports.removeOverlaps = removeOverlaps;\n\nvar IndexedVariable = function (_super) {\n  __extends(IndexedVariable, _super);\n\n  function IndexedVariable(index, w) {\n    var _this = _super.call(this, 0, w) || this;\n\n    _this.index = index;\n    return _this;\n  }\n\n  return IndexedVariable;\n}(vpsc_1.Variable);\n\nexports.IndexedVariable = IndexedVariable;\n\nvar Projection = function () {\n  function Projection(nodes, groups, rootGroup, constraints, avoidOverlaps) {\n    var _this = this;\n\n    if (rootGroup === void 0) {\n      rootGroup = null;\n    }\n\n    if (constraints === void 0) {\n      constraints = null;\n    }\n\n    if (avoidOverlaps === void 0) {\n      avoidOverlaps = false;\n    }\n\n    this.nodes = nodes;\n    this.groups = groups;\n    this.rootGroup = rootGroup;\n    this.avoidOverlaps = avoidOverlaps;\n    this.variables = nodes.map(function (v, i) {\n      return v.variable = new IndexedVariable(i, 1);\n    });\n    if (constraints) this.createConstraints(constraints);\n\n    if (avoidOverlaps && rootGroup && typeof rootGroup.groups !== 'undefined') {\n      nodes.forEach(function (v) {\n        if (!v.width || !v.height) {\n          v.bounds = new Rectangle(v.x, v.x, v.y, v.y);\n          return;\n        }\n\n        var w2 = v.width / 2,\n            h2 = v.height / 2;\n        v.bounds = new Rectangle(v.x - w2, v.x + w2, v.y - h2, v.y + h2);\n      });\n      computeGroupBounds(rootGroup);\n      var i = nodes.length;\n      groups.forEach(function (g) {\n        _this.variables[i] = g.minVar = new IndexedVariable(i++, typeof g.stiffness !== \"undefined\" ? g.stiffness : 0.01);\n        _this.variables[i] = g.maxVar = new IndexedVariable(i++, typeof g.stiffness !== \"undefined\" ? g.stiffness : 0.01);\n      });\n    }\n  }\n\n  Projection.prototype.createSeparation = function (c) {\n    return new vpsc_1.Constraint(this.nodes[c.left].variable, this.nodes[c.right].variable, c.gap, typeof c.equality !== \"undefined\" ? c.equality : false);\n  };\n\n  Projection.prototype.makeFeasible = function (c) {\n    var _this = this;\n\n    if (!this.avoidOverlaps) return;\n    var axis = 'x',\n        dim = 'width';\n    if (c.axis === 'x') axis = 'y', dim = 'height';\n    var vs = c.offsets.map(function (o) {\n      return _this.nodes[o.node];\n    }).sort(function (a, b) {\n      return a[axis] - b[axis];\n    });\n    var p = null;\n    vs.forEach(function (v) {\n      if (p) {\n        var nextPos = p[axis] + p[dim];\n\n        if (nextPos > v[axis]) {\n          v[axis] = nextPos;\n        }\n      }\n\n      p = v;\n    });\n  };\n\n  Projection.prototype.createAlignment = function (c) {\n    var _this = this;\n\n    var u = this.nodes[c.offsets[0].node].variable;\n    this.makeFeasible(c);\n    var cs = c.axis === 'x' ? this.xConstraints : this.yConstraints;\n    c.offsets.slice(1).forEach(function (o) {\n      var v = _this.nodes[o.node].variable;\n      cs.push(new vpsc_1.Constraint(u, v, o.offset, true));\n    });\n  };\n\n  Projection.prototype.createConstraints = function (constraints) {\n    var _this = this;\n\n    var isSep = function isSep(c) {\n      return typeof c.type === 'undefined' || c.type === 'separation';\n    };\n\n    this.xConstraints = constraints.filter(function (c) {\n      return c.axis === \"x\" && isSep(c);\n    }).map(function (c) {\n      return _this.createSeparation(c);\n    });\n    this.yConstraints = constraints.filter(function (c) {\n      return c.axis === \"y\" && isSep(c);\n    }).map(function (c) {\n      return _this.createSeparation(c);\n    });\n    constraints.filter(function (c) {\n      return c.type === 'alignment';\n    }).forEach(function (c) {\n      return _this.createAlignment(c);\n    });\n  };\n\n  Projection.prototype.setupVariablesAndBounds = function (x0, y0, desired, getDesired) {\n    this.nodes.forEach(function (v, i) {\n      if (v.fixed) {\n        v.variable.weight = v.fixedWeight ? v.fixedWeight : 1000;\n        desired[i] = getDesired(v);\n      } else {\n        v.variable.weight = 1;\n      }\n\n      var w = (v.width || 0) / 2,\n          h = (v.height || 0) / 2;\n      var ix = x0[i],\n          iy = y0[i];\n      v.bounds = new Rectangle(ix - w, ix + w, iy - h, iy + h);\n    });\n  };\n\n  Projection.prototype.xProject = function (x0, y0, x) {\n    if (!this.rootGroup && !(this.avoidOverlaps || this.xConstraints)) return;\n    this.project(x0, y0, x0, x, function (v) {\n      return v.px;\n    }, this.xConstraints, generateXGroupConstraints, function (v) {\n      return v.bounds.setXCentre(x[v.variable.index] = v.variable.position());\n    }, function (g) {\n      var xmin = x[g.minVar.index] = g.minVar.position();\n      var xmax = x[g.maxVar.index] = g.maxVar.position();\n      var p2 = g.padding / 2;\n      g.bounds.x = xmin - p2;\n      g.bounds.X = xmax + p2;\n    });\n  };\n\n  Projection.prototype.yProject = function (x0, y0, y) {\n    if (!this.rootGroup && !this.yConstraints) return;\n    this.project(x0, y0, y0, y, function (v) {\n      return v.py;\n    }, this.yConstraints, generateYGroupConstraints, function (v) {\n      return v.bounds.setYCentre(y[v.variable.index] = v.variable.position());\n    }, function (g) {\n      var ymin = y[g.minVar.index] = g.minVar.position();\n      var ymax = y[g.maxVar.index] = g.maxVar.position();\n      var p2 = g.padding / 2;\n      g.bounds.y = ymin - p2;\n      ;\n      g.bounds.Y = ymax + p2;\n    });\n  };\n\n  Projection.prototype.projectFunctions = function () {\n    var _this = this;\n\n    return [function (x0, y0, x) {\n      return _this.xProject(x0, y0, x);\n    }, function (x0, y0, y) {\n      return _this.yProject(x0, y0, y);\n    }];\n  };\n\n  Projection.prototype.project = function (x0, y0, start, desired, getDesired, cs, generateConstraints, updateNodeBounds, updateGroupBounds) {\n    this.setupVariablesAndBounds(x0, y0, desired, getDesired);\n\n    if (this.rootGroup && this.avoidOverlaps) {\n      computeGroupBounds(this.rootGroup);\n      cs = cs.concat(generateConstraints(this.rootGroup));\n    }\n\n    this.solve(this.variables, cs, start, desired);\n    this.nodes.forEach(updateNodeBounds);\n\n    if (this.rootGroup && this.avoidOverlaps) {\n      this.groups.forEach(updateGroupBounds);\n      computeGroupBounds(this.rootGroup);\n    }\n  };\n\n  Projection.prototype.solve = function (vs, cs, starting, desired) {\n    var solver = new vpsc_1.Solver(vs, cs);\n    solver.setStartingPositions(starting);\n    solver.setDesiredPositions(desired);\n    solver.solve();\n  };\n\n  return Projection;\n}();\n\nexports.Projection = Projection;","map":{"version":3,"sources":["../../WebCola/src/rectangle.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar vpsc_1 = require(\"./vpsc\");\r\nvar rbtree_1 = require(\"./rbtree\");\r\nfunction computeGroupBounds(g) {\r\n    g.bounds = typeof g.leaves !== \"undefined\" ?\r\n        g.leaves.reduce(function (r, c) { return c.bounds.union(r); }, Rectangle.empty()) :\r\n        Rectangle.empty();\r\n    if (typeof g.groups !== \"undefined\")\r\n        g.bounds = g.groups.reduce(function (r, c) { return computeGroupBounds(c).union(r); }, g.bounds);\r\n    g.bounds = g.bounds.inflate(g.padding);\r\n    return g.bounds;\r\n}\r\nexports.computeGroupBounds = computeGroupBounds;\r\nvar Rectangle = (function () {\r\n    function Rectangle(x, X, y, Y) {\r\n        this.x = x;\r\n        this.X = X;\r\n        this.y = y;\r\n        this.Y = Y;\r\n    }\r\n    Rectangle.empty = function () { return new Rectangle(Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY); };\r\n    Rectangle.prototype.cx = function () { return (this.x + this.X) / 2; };\r\n    Rectangle.prototype.cy = function () { return (this.y + this.Y) / 2; };\r\n    Rectangle.prototype.overlapX = function (r) {\r\n        var ux = this.cx(), vx = r.cx();\r\n        if (ux <= vx && r.x < this.X)\r\n            return this.X - r.x;\r\n        if (vx <= ux && this.x < r.X)\r\n            return r.X - this.x;\r\n        return 0;\r\n    };\r\n    Rectangle.prototype.overlapY = function (r) {\r\n        var uy = this.cy(), vy = r.cy();\r\n        if (uy <= vy && r.y < this.Y)\r\n            return this.Y - r.y;\r\n        if (vy <= uy && this.y < r.Y)\r\n            return r.Y - this.y;\r\n        return 0;\r\n    };\r\n    Rectangle.prototype.setXCentre = function (cx) {\r\n        var dx = cx - this.cx();\r\n        this.x += dx;\r\n        this.X += dx;\r\n    };\r\n    Rectangle.prototype.setYCentre = function (cy) {\r\n        var dy = cy - this.cy();\r\n        this.y += dy;\r\n        this.Y += dy;\r\n    };\r\n    Rectangle.prototype.width = function () {\r\n        return this.X - this.x;\r\n    };\r\n    Rectangle.prototype.height = function () {\r\n        return this.Y - this.y;\r\n    };\r\n    Rectangle.prototype.union = function (r) {\r\n        return new Rectangle(Math.min(this.x, r.x), Math.max(this.X, r.X), Math.min(this.y, r.y), Math.max(this.Y, r.Y));\r\n    };\r\n    Rectangle.prototype.lineIntersections = function (x1, y1, x2, y2) {\r\n        var sides = [[this.x, this.y, this.X, this.y],\r\n            [this.X, this.y, this.X, this.Y],\r\n            [this.X, this.Y, this.x, this.Y],\r\n            [this.x, this.Y, this.x, this.y]];\r\n        var intersections = [];\r\n        for (var i = 0; i < 4; ++i) {\r\n            var r = Rectangle.lineIntersection(x1, y1, x2, y2, sides[i][0], sides[i][1], sides[i][2], sides[i][3]);\r\n            if (r !== null)\r\n                intersections.push({ x: r.x, y: r.y });\r\n        }\r\n        return intersections;\r\n    };\r\n    Rectangle.prototype.rayIntersection = function (x2, y2) {\r\n        var ints = this.lineIntersections(this.cx(), this.cy(), x2, y2);\r\n        return ints.length > 0 ? ints[0] : null;\r\n    };\r\n    Rectangle.prototype.vertices = function () {\r\n        return [\r\n            { x: this.x, y: this.y },\r\n            { x: this.X, y: this.y },\r\n            { x: this.X, y: this.Y },\r\n            { x: this.x, y: this.Y }\r\n        ];\r\n    };\r\n    Rectangle.lineIntersection = function (x1, y1, x2, y2, x3, y3, x4, y4) {\r\n        var dx12 = x2 - x1, dx34 = x4 - x3, dy12 = y2 - y1, dy34 = y4 - y3, denominator = dy34 * dx12 - dx34 * dy12;\r\n        if (denominator == 0)\r\n            return null;\r\n        var dx31 = x1 - x3, dy31 = y1 - y3, numa = dx34 * dy31 - dy34 * dx31, a = numa / denominator, numb = dx12 * dy31 - dy12 * dx31, b = numb / denominator;\r\n        if (a >= 0 && a <= 1 && b >= 0 && b <= 1) {\r\n            return {\r\n                x: x1 + a * dx12,\r\n                y: y1 + a * dy12\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n    Rectangle.prototype.inflate = function (pad) {\r\n        return new Rectangle(this.x - pad, this.X + pad, this.y - pad, this.Y + pad);\r\n    };\r\n    return Rectangle;\r\n}());\r\nexports.Rectangle = Rectangle;\r\nfunction makeEdgeBetween(source, target, ah) {\r\n    var si = source.rayIntersection(target.cx(), target.cy()) || { x: source.cx(), y: source.cy() }, ti = target.rayIntersection(source.cx(), source.cy()) || { x: target.cx(), y: target.cy() }, dx = ti.x - si.x, dy = ti.y - si.y, l = Math.sqrt(dx * dx + dy * dy), al = l - ah;\r\n    return {\r\n        sourceIntersection: si,\r\n        targetIntersection: ti,\r\n        arrowStart: { x: si.x + al * dx / l, y: si.y + al * dy / l }\r\n    };\r\n}\r\nexports.makeEdgeBetween = makeEdgeBetween;\r\nfunction makeEdgeTo(s, target, ah) {\r\n    var ti = target.rayIntersection(s.x, s.y);\r\n    if (!ti)\r\n        ti = { x: target.cx(), y: target.cy() };\r\n    var dx = ti.x - s.x, dy = ti.y - s.y, l = Math.sqrt(dx * dx + dy * dy);\r\n    return { x: ti.x - ah * dx / l, y: ti.y - ah * dy / l };\r\n}\r\nexports.makeEdgeTo = makeEdgeTo;\r\nvar Node = (function () {\r\n    function Node(v, r, pos) {\r\n        this.v = v;\r\n        this.r = r;\r\n        this.pos = pos;\r\n        this.prev = makeRBTree();\r\n        this.next = makeRBTree();\r\n    }\r\n    return Node;\r\n}());\r\nvar Event = (function () {\r\n    function Event(isOpen, v, pos) {\r\n        this.isOpen = isOpen;\r\n        this.v = v;\r\n        this.pos = pos;\r\n    }\r\n    return Event;\r\n}());\r\nfunction compareEvents(a, b) {\r\n    if (a.pos > b.pos) {\r\n        return 1;\r\n    }\r\n    if (a.pos < b.pos) {\r\n        return -1;\r\n    }\r\n    if (a.isOpen) {\r\n        return -1;\r\n    }\r\n    if (b.isOpen) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nfunction makeRBTree() {\r\n    return new rbtree_1.RBTree(function (a, b) { return a.pos - b.pos; });\r\n}\r\nvar xRect = {\r\n    getCentre: function (r) { return r.cx(); },\r\n    getOpen: function (r) { return r.y; },\r\n    getClose: function (r) { return r.Y; },\r\n    getSize: function (r) { return r.width(); },\r\n    makeRect: function (open, close, center, size) { return new Rectangle(center - size / 2, center + size / 2, open, close); },\r\n    findNeighbours: findXNeighbours\r\n};\r\nvar yRect = {\r\n    getCentre: function (r) { return r.cy(); },\r\n    getOpen: function (r) { return r.x; },\r\n    getClose: function (r) { return r.X; },\r\n    getSize: function (r) { return r.height(); },\r\n    makeRect: function (open, close, center, size) { return new Rectangle(open, close, center - size / 2, center + size / 2); },\r\n    findNeighbours: findYNeighbours\r\n};\r\nfunction generateGroupConstraints(root, f, minSep, isContained) {\r\n    if (isContained === void 0) { isContained = false; }\r\n    var padding = root.padding, gn = typeof root.groups !== 'undefined' ? root.groups.length : 0, ln = typeof root.leaves !== 'undefined' ? root.leaves.length : 0, childConstraints = !gn ? []\r\n        : root.groups.reduce(function (ccs, g) { return ccs.concat(generateGroupConstraints(g, f, minSep, true)); }, []), n = (isContained ? 2 : 0) + ln + gn, vs = new Array(n), rs = new Array(n), i = 0, add = function (r, v) { rs[i] = r; vs[i++] = v; };\r\n    if (isContained) {\r\n        var b = root.bounds, c = f.getCentre(b), s = f.getSize(b) / 2, open = f.getOpen(b), close = f.getClose(b), min = c - s + padding / 2, max = c + s - padding / 2;\r\n        root.minVar.desiredPosition = min;\r\n        add(f.makeRect(open, close, min, padding), root.minVar);\r\n        root.maxVar.desiredPosition = max;\r\n        add(f.makeRect(open, close, max, padding), root.maxVar);\r\n    }\r\n    if (ln)\r\n        root.leaves.forEach(function (l) { return add(l.bounds, l.variable); });\r\n    if (gn)\r\n        root.groups.forEach(function (g) {\r\n            var b = g.bounds;\r\n            add(f.makeRect(f.getOpen(b), f.getClose(b), f.getCentre(b), f.getSize(b)), g.minVar);\r\n        });\r\n    var cs = generateConstraints(rs, vs, f, minSep);\r\n    if (gn) {\r\n        vs.forEach(function (v) { v.cOut = [], v.cIn = []; });\r\n        cs.forEach(function (c) { c.left.cOut.push(c), c.right.cIn.push(c); });\r\n        root.groups.forEach(function (g) {\r\n            var gapAdjustment = (g.padding - f.getSize(g.bounds)) / 2;\r\n            g.minVar.cIn.forEach(function (c) { return c.gap += gapAdjustment; });\r\n            g.minVar.cOut.forEach(function (c) { c.left = g.maxVar; c.gap += gapAdjustment; });\r\n        });\r\n    }\r\n    return childConstraints.concat(cs);\r\n}\r\nfunction generateConstraints(rs, vars, rect, minSep) {\r\n    var i, n = rs.length;\r\n    var N = 2 * n;\r\n    console.assert(vars.length >= n);\r\n    var events = new Array(N);\r\n    for (i = 0; i < n; ++i) {\r\n        var r = rs[i];\r\n        var v = new Node(vars[i], r, rect.getCentre(r));\r\n        events[i] = new Event(true, v, rect.getOpen(r));\r\n        events[i + n] = new Event(false, v, rect.getClose(r));\r\n    }\r\n    events.sort(compareEvents);\r\n    var cs = new Array();\r\n    var scanline = makeRBTree();\r\n    for (i = 0; i < N; ++i) {\r\n        var e = events[i];\r\n        var v = e.v;\r\n        if (e.isOpen) {\r\n            scanline.insert(v);\r\n            rect.findNeighbours(v, scanline);\r\n        }\r\n        else {\r\n            scanline.remove(v);\r\n            var makeConstraint = function (l, r) {\r\n                var sep = (rect.getSize(l.r) + rect.getSize(r.r)) / 2 + minSep;\r\n                cs.push(new vpsc_1.Constraint(l.v, r.v, sep));\r\n            };\r\n            var visitNeighbours = function (forward, reverse, mkcon) {\r\n                var u, it = v[forward].iterator();\r\n                while ((u = it[forward]()) !== null) {\r\n                    mkcon(u, v);\r\n                    u[reverse].remove(v);\r\n                }\r\n            };\r\n            visitNeighbours(\"prev\", \"next\", function (u, v) { return makeConstraint(u, v); });\r\n            visitNeighbours(\"next\", \"prev\", function (u, v) { return makeConstraint(v, u); });\r\n        }\r\n    }\r\n    console.assert(scanline.size === 0);\r\n    return cs;\r\n}\r\nfunction findXNeighbours(v, scanline) {\r\n    var f = function (forward, reverse) {\r\n        var it = scanline.findIter(v);\r\n        var u;\r\n        while ((u = it[forward]()) !== null) {\r\n            var uovervX = u.r.overlapX(v.r);\r\n            if (uovervX <= 0 || uovervX <= u.r.overlapY(v.r)) {\r\n                v[forward].insert(u);\r\n                u[reverse].insert(v);\r\n            }\r\n            if (uovervX <= 0) {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    f(\"next\", \"prev\");\r\n    f(\"prev\", \"next\");\r\n}\r\nfunction findYNeighbours(v, scanline) {\r\n    var f = function (forward, reverse) {\r\n        var u = scanline.findIter(v)[forward]();\r\n        if (u !== null && u.r.overlapX(v.r) > 0) {\r\n            v[forward].insert(u);\r\n            u[reverse].insert(v);\r\n        }\r\n    };\r\n    f(\"next\", \"prev\");\r\n    f(\"prev\", \"next\");\r\n}\r\nfunction generateXConstraints(rs, vars) {\r\n    return generateConstraints(rs, vars, xRect, 1e-6);\r\n}\r\nexports.generateXConstraints = generateXConstraints;\r\nfunction generateYConstraints(rs, vars) {\r\n    return generateConstraints(rs, vars, yRect, 1e-6);\r\n}\r\nexports.generateYConstraints = generateYConstraints;\r\nfunction generateXGroupConstraints(root) {\r\n    return generateGroupConstraints(root, xRect, 1e-6);\r\n}\r\nexports.generateXGroupConstraints = generateXGroupConstraints;\r\nfunction generateYGroupConstraints(root) {\r\n    return generateGroupConstraints(root, yRect, 1e-6);\r\n}\r\nexports.generateYGroupConstraints = generateYGroupConstraints;\r\nfunction removeOverlaps(rs) {\r\n    var vs = rs.map(function (r) { return new vpsc_1.Variable(r.cx()); });\r\n    var cs = generateXConstraints(rs, vs);\r\n    var solver = new vpsc_1.Solver(vs, cs);\r\n    solver.solve();\r\n    vs.forEach(function (v, i) { return rs[i].setXCentre(v.position()); });\r\n    vs = rs.map(function (r) { return new vpsc_1.Variable(r.cy()); });\r\n    cs = generateYConstraints(rs, vs);\r\n    solver = new vpsc_1.Solver(vs, cs);\r\n    solver.solve();\r\n    vs.forEach(function (v, i) { return rs[i].setYCentre(v.position()); });\r\n}\r\nexports.removeOverlaps = removeOverlaps;\r\nvar IndexedVariable = (function (_super) {\r\n    __extends(IndexedVariable, _super);\r\n    function IndexedVariable(index, w) {\r\n        var _this = _super.call(this, 0, w) || this;\r\n        _this.index = index;\r\n        return _this;\r\n    }\r\n    return IndexedVariable;\r\n}(vpsc_1.Variable));\r\nexports.IndexedVariable = IndexedVariable;\r\nvar Projection = (function () {\r\n    function Projection(nodes, groups, rootGroup, constraints, avoidOverlaps) {\r\n        var _this = this;\r\n        if (rootGroup === void 0) { rootGroup = null; }\r\n        if (constraints === void 0) { constraints = null; }\r\n        if (avoidOverlaps === void 0) { avoidOverlaps = false; }\r\n        this.nodes = nodes;\r\n        this.groups = groups;\r\n        this.rootGroup = rootGroup;\r\n        this.avoidOverlaps = avoidOverlaps;\r\n        this.variables = nodes.map(function (v, i) {\r\n            return v.variable = new IndexedVariable(i, 1);\r\n        });\r\n        if (constraints)\r\n            this.createConstraints(constraints);\r\n        if (avoidOverlaps && rootGroup && typeof rootGroup.groups !== 'undefined') {\r\n            nodes.forEach(function (v) {\r\n                if (!v.width || !v.height) {\r\n                    v.bounds = new Rectangle(v.x, v.x, v.y, v.y);\r\n                    return;\r\n                }\r\n                var w2 = v.width / 2, h2 = v.height / 2;\r\n                v.bounds = new Rectangle(v.x - w2, v.x + w2, v.y - h2, v.y + h2);\r\n            });\r\n            computeGroupBounds(rootGroup);\r\n            var i = nodes.length;\r\n            groups.forEach(function (g) {\r\n                _this.variables[i] = g.minVar = new IndexedVariable(i++, typeof g.stiffness !== \"undefined\" ? g.stiffness : 0.01);\r\n                _this.variables[i] = g.maxVar = new IndexedVariable(i++, typeof g.stiffness !== \"undefined\" ? g.stiffness : 0.01);\r\n            });\r\n        }\r\n    }\r\n    Projection.prototype.createSeparation = function (c) {\r\n        return new vpsc_1.Constraint(this.nodes[c.left].variable, this.nodes[c.right].variable, c.gap, typeof c.equality !== \"undefined\" ? c.equality : false);\r\n    };\r\n    Projection.prototype.makeFeasible = function (c) {\r\n        var _this = this;\r\n        if (!this.avoidOverlaps)\r\n            return;\r\n        var axis = 'x', dim = 'width';\r\n        if (c.axis === 'x')\r\n            axis = 'y', dim = 'height';\r\n        var vs = c.offsets.map(function (o) { return _this.nodes[o.node]; }).sort(function (a, b) { return a[axis] - b[axis]; });\r\n        var p = null;\r\n        vs.forEach(function (v) {\r\n            if (p) {\r\n                var nextPos = p[axis] + p[dim];\r\n                if (nextPos > v[axis]) {\r\n                    v[axis] = nextPos;\r\n                }\r\n            }\r\n            p = v;\r\n        });\r\n    };\r\n    Projection.prototype.createAlignment = function (c) {\r\n        var _this = this;\r\n        var u = this.nodes[c.offsets[0].node].variable;\r\n        this.makeFeasible(c);\r\n        var cs = c.axis === 'x' ? this.xConstraints : this.yConstraints;\r\n        c.offsets.slice(1).forEach(function (o) {\r\n            var v = _this.nodes[o.node].variable;\r\n            cs.push(new vpsc_1.Constraint(u, v, o.offset, true));\r\n        });\r\n    };\r\n    Projection.prototype.createConstraints = function (constraints) {\r\n        var _this = this;\r\n        var isSep = function (c) { return typeof c.type === 'undefined' || c.type === 'separation'; };\r\n        this.xConstraints = constraints\r\n            .filter(function (c) { return c.axis === \"x\" && isSep(c); })\r\n            .map(function (c) { return _this.createSeparation(c); });\r\n        this.yConstraints = constraints\r\n            .filter(function (c) { return c.axis === \"y\" && isSep(c); })\r\n            .map(function (c) { return _this.createSeparation(c); });\r\n        constraints\r\n            .filter(function (c) { return c.type === 'alignment'; })\r\n            .forEach(function (c) { return _this.createAlignment(c); });\r\n    };\r\n    Projection.prototype.setupVariablesAndBounds = function (x0, y0, desired, getDesired) {\r\n        this.nodes.forEach(function (v, i) {\r\n            if (v.fixed) {\r\n                v.variable.weight = v.fixedWeight ? v.fixedWeight : 1000;\r\n                desired[i] = getDesired(v);\r\n            }\r\n            else {\r\n                v.variable.weight = 1;\r\n            }\r\n            var w = (v.width || 0) / 2, h = (v.height || 0) / 2;\r\n            var ix = x0[i], iy = y0[i];\r\n            v.bounds = new Rectangle(ix - w, ix + w, iy - h, iy + h);\r\n        });\r\n    };\r\n    Projection.prototype.xProject = function (x0, y0, x) {\r\n        if (!this.rootGroup && !(this.avoidOverlaps || this.xConstraints))\r\n            return;\r\n        this.project(x0, y0, x0, x, function (v) { return v.px; }, this.xConstraints, generateXGroupConstraints, function (v) { return v.bounds.setXCentre(x[v.variable.index] = v.variable.position()); }, function (g) {\r\n            var xmin = x[g.minVar.index] = g.minVar.position();\r\n            var xmax = x[g.maxVar.index] = g.maxVar.position();\r\n            var p2 = g.padding / 2;\r\n            g.bounds.x = xmin - p2;\r\n            g.bounds.X = xmax + p2;\r\n        });\r\n    };\r\n    Projection.prototype.yProject = function (x0, y0, y) {\r\n        if (!this.rootGroup && !this.yConstraints)\r\n            return;\r\n        this.project(x0, y0, y0, y, function (v) { return v.py; }, this.yConstraints, generateYGroupConstraints, function (v) { return v.bounds.setYCentre(y[v.variable.index] = v.variable.position()); }, function (g) {\r\n            var ymin = y[g.minVar.index] = g.minVar.position();\r\n            var ymax = y[g.maxVar.index] = g.maxVar.position();\r\n            var p2 = g.padding / 2;\r\n            g.bounds.y = ymin - p2;\r\n            ;\r\n            g.bounds.Y = ymax + p2;\r\n        });\r\n    };\r\n    Projection.prototype.projectFunctions = function () {\r\n        var _this = this;\r\n        return [\r\n            function (x0, y0, x) { return _this.xProject(x0, y0, x); },\r\n            function (x0, y0, y) { return _this.yProject(x0, y0, y); }\r\n        ];\r\n    };\r\n    Projection.prototype.project = function (x0, y0, start, desired, getDesired, cs, generateConstraints, updateNodeBounds, updateGroupBounds) {\r\n        this.setupVariablesAndBounds(x0, y0, desired, getDesired);\r\n        if (this.rootGroup && this.avoidOverlaps) {\r\n            computeGroupBounds(this.rootGroup);\r\n            cs = cs.concat(generateConstraints(this.rootGroup));\r\n        }\r\n        this.solve(this.variables, cs, start, desired);\r\n        this.nodes.forEach(updateNodeBounds);\r\n        if (this.rootGroup && this.avoidOverlaps) {\r\n            this.groups.forEach(updateGroupBounds);\r\n            computeGroupBounds(this.rootGroup);\r\n        }\r\n    };\r\n    Projection.prototype.solve = function (vs, cs, starting, desired) {\r\n        var solver = new vpsc_1.Solver(vs, cs);\r\n        solver.setStartingPositions(starting);\r\n        solver.setDesiredPositions(desired);\r\n        solver.solve();\r\n    };\r\n    return Projection;\r\n}());\r\nexports.Projection = Projection;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVjdGFuZ2xlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vV2ViQ29sYS9zcmMvcmVjdGFuZ2xlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLCtCQUFtRDtBQUNuRCxtQ0FBK0I7QUFrQjNCLFNBQWdCLGtCQUFrQixDQUFDLENBQWtCO0lBQ2pELENBQUMsQ0FBQyxNQUFNLEdBQUcsT0FBTyxDQUFDLENBQUMsTUFBTSxLQUFLLFdBQVcsQ0FBQyxDQUFDO1FBQ3hDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFVBQUMsQ0FBWSxFQUFFLENBQUMsSUFBSyxPQUFBLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFqQixDQUFpQixFQUFFLFNBQVMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDNUUsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3RCLElBQUksT0FBTyxDQUFDLENBQUMsTUFBTSxLQUFLLFdBQVc7UUFDL0IsQ0FBQyxDQUFDLE1BQU0sR0FBYyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFDLENBQVksRUFBRSxDQUFDLElBQUssT0FBQSxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQTlCLENBQThCLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3pHLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3ZDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQztBQUNwQixDQUFDO0FBUkQsZ0RBUUM7QUFFRDtJQUNJLG1CQUNXLENBQVMsRUFDVCxDQUFTLEVBQ1QsQ0FBUyxFQUNULENBQVM7UUFIVCxNQUFDLEdBQUQsQ0FBQyxDQUFRO1FBQ1QsTUFBQyxHQUFELENBQUMsQ0FBUTtRQUNU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QUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNySCxDQUFDO0lBV0QscUNBQWlCLEdBQWpCLFVBQWtCLEVBQVUsRUFBRSxFQUFVLEVBQUUsRUFBVSxFQUFFLEVBQVU7UUFDNUQsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDckMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ2hDLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNwQyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3RDLElBQUksYUFBYSxHQUFHLEVBQUUsQ0FBQztRQUN2QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFO1lBQ3hCLElBQUksQ0FBQyxHQUFHLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVB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QUcsRUFBRSxDQUFDLE1BQU0sQ0FBQztJQUNyQixJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2QsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ2pDLElBQUksTUFBTSxHQUFHLElBQUksS0FBSyxDQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ2pDLEtBQUssQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFO1FBQ3BCLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNkLElBQUksQ0FBQyxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2hELE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNoRCxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ3pEO0lBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUMzQixJQUFJLEVBQUUsR0FBRyxJQUFJLEtBQUssRUFBYyxDQUFDO0lBQ2pDLElBQUksUUFBUSxHQUFHLFVBQVUsRUFBRSxDQUFDO0lBQzVCLEtBQUssQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFO1FBQ3BCLElBQUksQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNsQixJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ1os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"]},"metadata":{},"sourceType":"script"}