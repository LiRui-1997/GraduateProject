{"ast":null,"code":"import * as FreeStyle from 'free-style';\n/**\n * We need to do the following to *our* objects before passing to freestyle:\n * - For any `$nest` directive move up to FreeStyle style nesting\n * - For any `$unique` directive map to FreeStyle Unique\n * - For any `$debugName` directive return the debug name\n */\n\nexport function ensureStringObj(object) {\n  /** The final result we will return */\n  var result = {};\n  var debugName = '';\n\n  for (var key in object) {\n    /** Grab the value upfront */\n    var val = object[key];\n    /** TypeStyle configuration options */\n\n    if (key === '$unique') {\n      result[FreeStyle.IS_UNIQUE] = val;\n    } else if (key === '$nest') {\n      var nested = val;\n\n      for (var selector in nested) {\n        var subproperties = nested[selector];\n        result[selector] = ensureStringObj(subproperties).result;\n      }\n    } else if (key === '$debugName') {\n      debugName = val;\n    } else {\n      result[key] = val;\n    }\n  }\n\n  return {\n    result: result,\n    debugName: debugName\n  };\n} // todo: better name here\n\nexport function explodeKeyframes(frames) {\n  var result = {\n    $debugName: undefined,\n    keyframes: {}\n  };\n\n  for (var offset in frames) {\n    var val = frames[offset];\n\n    if (offset === '$debugName') {\n      result.$debugName = val;\n    } else {\n      result.keyframes[offset] = val;\n    }\n  }\n\n  return result;\n}","map":null,"metadata":{},"sourceType":"module"}