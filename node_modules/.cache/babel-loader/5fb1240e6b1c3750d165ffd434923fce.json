{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/pages/IstioConfigNew/AuthorizationPolicyForm/From/SourceList.tsx\";\nimport * as React from 'react';\nimport { cellWidth, Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { style } from 'typestyle';\nimport { PFColors } from '../../../../components/Pf/PfColors';\nvar headerCells = [{\n  title: 'Source Matches of a Request',\n  transforms: [cellWidth(100)],\n  props: {}\n}, {\n  title: '',\n  props: {}\n}];\nvar noSourceStyle = style({\n  marginTop: 10,\n  color: PFColors.Red100,\n  textAlign: 'center',\n  width: '100%'\n});\n\nvar SourceList = /*#__PURE__*/function (_React$Component) {\n  _inherits(SourceList, _React$Component);\n\n  var _super = _createSuper(SourceList);\n\n  function SourceList() {\n    var _this;\n\n    _classCallCheck(this, SourceList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.rows = function () {\n      return _this.props.fromList.map(function (source, i) {\n        return {\n          key: 'fromSource' + i,\n          cells: [/*#__PURE__*/React.createElement(React.Fragment, null, \"Rules\", Object.keys(source).map(function (field, j) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              key: 'sourceField_' + field + '_' + i + '_' + j,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }\n            }, field), \": [\", source[field].join(','), \"]\", /*#__PURE__*/React.createElement(\"br\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 62\n              }\n            }));\n          })), /*#__PURE__*/React.createElement(React.Fragment, null)]\n        };\n      });\n    };\n\n    _this.actionResolver = function (rowData, _ref) {\n      var rowIndex = _ref.rowIndex;\n      var removeAction = {\n        title: 'Remove From',\n        // @ts-ignore\n        onClick: function onClick(event, rowIndex, rowData, extraData) {\n          _this.props.onRemoveFrom(rowIndex);\n        }\n      };\n      return [removeAction];\n    };\n\n    return _this;\n  }\n\n  _createClass(SourceList, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n        \"aria-label\": \"Source Builder\",\n        cells: headerCells,\n        rows: this.rows() // @ts-ignore\n        ,\n        actionResolver: this.actionResolver,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      })), this.props.fromList.length === 0 && /*#__PURE__*/React.createElement(\"div\", {\n        className: noSourceStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 46\n        }\n      }, \"No Source Matches Defined\"));\n    }\n  }]);\n\n  return SourceList;\n}(React.Component);\n\nexport default SourceList;","map":{"version":3,"sources":["/root/kiali-ui/src/pages/IstioConfigNew/AuthorizationPolicyForm/From/SourceList.tsx"],"names":["React","cellWidth","Table","TableBody","TableHeader","style","PFColors","headerCells","title","transforms","props","noSourceStyle","marginTop","color","Red100","textAlign","width","SourceList","rows","fromList","map","source","i","key","cells","Object","keys","field","j","join","actionResolver","rowData","rowIndex","removeAction","onClick","event","extraData","onRemoveFrom","length","Component"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAA2BC,KAA3B,EAAkCC,SAAlC,EAA6CC,WAA7C,QAAgE,yBAAhE;AACA,SAASC,KAAT,QAAsB,WAAtB;AACA,SAASC,QAAT,QAAyB,oCAAzB;AAOA,IAAMC,WAAoB,GAAG,CAC3B;AACEC,EAAAA,KAAK,EAAE,6BADT;AAEEC,EAAAA,UAAU,EAAE,CAACR,SAAS,CAAC,GAAD,CAAV,CAFd;AAGES,EAAAA,KAAK,EAAE;AAHT,CAD2B,EAM3B;AACEF,EAAAA,KAAK,EAAE,EADT;AAEEE,EAAAA,KAAK,EAAE;AAFT,CAN2B,CAA7B;AAYA,IAAMC,aAAa,GAAGN,KAAK,CAAC;AAC1BO,EAAAA,SAAS,EAAE,EADe;AAE1BC,EAAAA,KAAK,EAAEP,QAAQ,CAACQ,MAFU;AAG1BC,EAAAA,SAAS,EAAE,QAHe;AAI1BC,EAAAA,KAAK,EAAE;AAJmB,CAAD,CAA3B;;IAOMC,U;;;;;;;;;;;;;;;;UACJC,I,GAAO,YAAM;AACX,aAAO,MAAKR,KAAL,CAAWS,QAAX,CAAoBC,GAApB,CAAwB,UAACC,MAAD,EAASC,CAAT,EAAe;AAC5C,eAAO;AACLC,UAAAA,GAAG,EAAE,eAAeD,CADf;AAELE,UAAAA,KAAK,EAAE,cACL,mDAEGC,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBD,GAApB,CAAwB,UAACO,KAAD,EAAQC,CAAR,EAAc;AACrC,gCACE;AAAK,cAAA,GAAG,EAAE,iBAAiBD,KAAjB,GAAyB,GAAzB,GAA+BL,CAA/B,GAAmC,GAAnC,GAAyCM,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAID,KAAJ,CADF,SACoBN,MAAM,CAACM,KAAD,CAAN,CAAcE,IAAd,CAAmB,GAAnB,CADpB,oBAC6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD7C,CADF;AAKD,WANA,CAFH,CADK,eAWL,yCAXK;AAFF,SAAP;AAgBD,OAjBM,CAAP;AAkBD,K;;UAGDC,c,GAAiB,UAACC,OAAD,QAA2B;AAAA,UAAfC,QAAe,QAAfA,QAAe;AAC1C,UAAMC,YAAY,GAAG;AACnBzB,QAAAA,KAAK,EAAE,aADY;AAEnB;AACA0B,QAAAA,OAAO,EAAE,iBAACC,KAAD,EAAQH,QAAR,EAAkBD,OAAlB,EAA2BK,SAA3B,EAAyC;AAChD,gBAAK1B,KAAL,CAAW2B,YAAX,CAAwBL,QAAxB;AACD;AALkB,OAArB;AAOA,aAAO,CAACC,YAAD,CAAP;AACD,K;;;;;;;WAED,kBAAS;AACP,0BACE,uDACE,oBAAC,KAAD;AACE,sBAAW,gBADb;AAEE,QAAA,KAAK,EAAE1B,WAFT;AAGE,QAAA,IAAI,EAAE,KAAKW,IAAL,EAHR,CAIE;AAJF;AAKE,QAAA,cAAc,EAAE,KAAKY,cALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,eAQE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF,EAWG,KAAKpB,KAAL,CAAWS,QAAX,CAAoBmB,MAApB,KAA+B,CAA/B,iBAAoC;AAAK,QAAA,SAAS,EAAE3B,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAXvC,CADF;AAeD;;;;EAlDsBX,KAAK,CAACuC,S;;AAqD/B,eAAetB,UAAf","sourcesContent":["import * as React from 'react';\nimport { cellWidth, ICell, Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { style } from 'typestyle';\nimport { PFColors } from '../../../../components/Pf/PfColors';\n\ntype Props = {\n  fromList: { [key: string]: string[] }[];\n  onRemoveFrom: (index: number) => void;\n};\n\nconst headerCells: ICell[] = [\n  {\n    title: 'Source Matches of a Request',\n    transforms: [cellWidth(100) as any],\n    props: {}\n  },\n  {\n    title: '',\n    props: {}\n  }\n];\n\nconst noSourceStyle = style({\n  marginTop: 10,\n  color: PFColors.Red100,\n  textAlign: 'center',\n  width: '100%'\n});\n\nclass SourceList extends React.Component<Props> {\n  rows = () => {\n    return this.props.fromList.map((source, i) => {\n      return {\n        key: 'fromSource' + i,\n        cells: [\n          <>\n            Rules\n            {Object.keys(source).map((field, j) => {\n              return (\n                <div key={'sourceField_' + field + '_' + i + '_' + j}>\n                  <b>{field}</b>: [{source[field].join(',')}]<br />\n                </div>\n              );\n            })}\n          </>,\n          <></>\n        ]\n      };\n    });\n  };\n\n  // @ts-ignore\n  actionResolver = (rowData, { rowIndex }) => {\n    const removeAction = {\n      title: 'Remove From',\n      // @ts-ignore\n      onClick: (event, rowIndex, rowData, extraData) => {\n        this.props.onRemoveFrom(rowIndex);\n      }\n    };\n    return [removeAction];\n  };\n\n  render() {\n    return (\n      <>\n        <Table\n          aria-label=\"Source Builder\"\n          cells={headerCells}\n          rows={this.rows()}\n          // @ts-ignore\n          actionResolver={this.actionResolver}\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n        {this.props.fromList.length === 0 && <div className={noSourceStyle}>No Source Matches Defined</div>}\n      </>\n    );\n  }\n}\n\nexport default SourceList;\n"]},"metadata":{},"sourceType":"module"}