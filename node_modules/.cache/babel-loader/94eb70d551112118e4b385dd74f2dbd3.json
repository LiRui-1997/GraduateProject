{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/components/IstioWizards/FaultInjection/DelayFault.tsx\";\nimport * as React from 'react';\nimport { FormGroup, Switch, TextInput } from '@patternfly/react-core';\nimport { HTTP_DELAY_TOOLTIP, wizardTooltip } from '../WizardHelp';\nvar fixedDelayedMsg = 'Add a fixed delay before forwarding the request. Format: 1h/1m/1s/1ms. MUST be >=1ms.';\n\nvar DelayFault = /*#__PURE__*/function (_React$Component) {\n  _inherits(DelayFault, _React$Component);\n\n  var _super = _createSuper(DelayFault);\n\n  function DelayFault() {\n    _classCallCheck(this, DelayFault);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DelayFault, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this,\n          _this$props$delay$per;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"Add HTTP Delay\",\n        fieldId: \"delaySwitch\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        id: \"delaySwitch\",\n        label: ' ',\n        labelOff: ' ',\n        isChecked: this.props.delayed,\n        onChange: function onChange() {\n          return _this.props.onDelay(!_this.props.delayed, _this.props.delay);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, wizardTooltip(HTTP_DELAY_TOOLTIP))), this.props.delayed && /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"Delay Percentage\",\n        fieldId: \"delay-percentage\",\n        helperText: \"Percentage of requests on which the delay will be injected.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TextInput, {\n        value: (_this$props$delay$per = this.props.delay.percentage) === null || _this$props$delay$per === void 0 ? void 0 : _this$props$delay$per.value,\n        type: \"text\",\n        id: \"delay-percentage\",\n        name: \"delay-percentage\",\n        onChange: function onChange(value) {\n          var newValue = Number(value || 0);\n          newValue = Number.isNaN(newValue) ? 0 : newValue;\n          newValue = newValue < 0 ? 0 : newValue > 100 ? 100 : newValue;\n\n          _this.props.onDelay(_this.props.delayed, {\n            percentage: {\n              value: newValue\n            },\n            fixedDelay: _this.props.delay.fixedDelay\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      })), this.props.delayed && /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"Fixed Delay\",\n        fieldId: \"fixed-delay\",\n        helperText: fixedDelayedMsg,\n        helperTextInvalid: fixedDelayedMsg,\n        isValid: this.props.isValid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TextInput, {\n        value: this.props.delay.fixedDelay,\n        id: \"fixed-delay\",\n        name: \"fixed-delay\",\n        isValid: this.props.isValid,\n        onChange: function onChange(value) {\n          return _this.props.onDelay(_this.props.delayed, {\n            percentage: _this.props.delay.percentage,\n            fixedDelay: value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return DelayFault;\n}(React.Component);\n\nexport default DelayFault;","map":{"version":3,"sources":["/root/GraduateProject/src/components/IstioWizards/FaultInjection/DelayFault.tsx"],"names":["React","FormGroup","Switch","TextInput","HTTP_DELAY_TOOLTIP","wizardTooltip","fixedDelayedMsg","DelayFault","props","delayed","onDelay","delay","percentage","value","newValue","Number","isNaN","fixedDelay","isValid","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { FormGroup, Switch, TextInput } from '@patternfly/react-core';\nimport { Delay } from '../../../types/IstioObjects';\nimport { HTTP_DELAY_TOOLTIP, wizardTooltip } from '../WizardHelp';\n\nexport type DelayFaultProps = {\n  delayed: boolean;\n  delay: Delay;\n  isValid: boolean;\n  onDelay: (delayed: boolean, delay: Delay) => void;\n};\n\nconst fixedDelayedMsg = 'Add a fixed delay before forwarding the request. Format: 1h/1m/1s/1ms. MUST be >=1ms.';\n\nclass DelayFault extends React.Component<DelayFaultProps> {\n  render() {\n    return (\n      <>\n        <FormGroup label=\"Add HTTP Delay\" fieldId=\"delaySwitch\">\n          <Switch\n            id=\"delaySwitch\"\n            label={' '}\n            labelOff={' '}\n            isChecked={this.props.delayed}\n            onChange={() => this.props.onDelay(!this.props.delayed, this.props.delay)}\n          />\n          <span>{wizardTooltip(HTTP_DELAY_TOOLTIP)}</span>\n        </FormGroup>\n        {this.props.delayed && (\n          <FormGroup\n            label=\"Delay Percentage\"\n            fieldId=\"delay-percentage\"\n            helperText=\"Percentage of requests on which the delay will be injected.\"\n          >\n            <TextInput\n              value={this.props.delay.percentage?.value}\n              type=\"text\"\n              id=\"delay-percentage\"\n              name=\"delay-percentage\"\n              onChange={value => {\n                let newValue = Number(value || 0);\n                newValue = Number.isNaN(newValue) ? 0 : newValue;\n                newValue = newValue < 0 ? 0 : newValue > 100 ? 100 : newValue;\n                this.props.onDelay(this.props.delayed, {\n                  percentage: {\n                    value: newValue\n                  },\n                  fixedDelay: this.props.delay.fixedDelay\n                });\n              }}\n            />\n          </FormGroup>\n        )}\n        {this.props.delayed && (\n          <FormGroup\n            label=\"Fixed Delay\"\n            fieldId=\"fixed-delay\"\n            helperText={fixedDelayedMsg}\n            helperTextInvalid={fixedDelayedMsg}\n            isValid={this.props.isValid}\n          >\n            <TextInput\n              value={this.props.delay.fixedDelay}\n              id=\"fixed-delay\"\n              name=\"fixed-delay\"\n              isValid={this.props.isValid}\n              onChange={value =>\n                this.props.onDelay(this.props.delayed, {\n                  percentage: this.props.delay.percentage,\n                  fixedDelay: value\n                })\n              }\n            />\n          </FormGroup>\n        )}\n      </>\n    );\n  }\n}\n\nexport default DelayFault;\n"]},"metadata":{},"sourceType":"module"}