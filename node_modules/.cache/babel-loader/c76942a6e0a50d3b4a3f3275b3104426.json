{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { SummaryTableRenderer } from './BaseTable';\nimport { sortable } from '@patternfly/react-table';\nimport { ActiveFilter, FILTER_ACTION_APPEND, FilterTypes } from '../../../types/Filters';\nimport { defaultFilter, istioConfigLink, serviceLink } from '../../../helpers/EnvoyHelpers';\nexport var RouteTable = /*#__PURE__*/function () {\n  function RouteTable(summaries, sortBy, namespaces, namespace) {\n    var _this = this;\n\n    _classCallCheck(this, RouteTable);\n\n    this.summaries = void 0;\n    this.sortingIndex = void 0;\n    this.sortingDirection = void 0;\n    this.namespaces = void 0;\n    this.namespace = void 0;\n\n    this.availableFilters = function () {\n      return [{\n        id: 'name',\n        title: 'Name',\n        placeholder: 'Name',\n        filterType: FilterTypes.text,\n        action: FILTER_ACTION_APPEND,\n        filterValues: []\n      }, {\n        id: 'domains',\n        title: 'Domains',\n        placeholder: 'Domains',\n        filterType: FilterTypes.text,\n        action: FILTER_ACTION_APPEND,\n        filterValues: []\n      }];\n    };\n\n    this.filterMethods = function () {\n      return {\n        name: function name(entry, filter) {\n          return entry.name.toString().includes(filter.value);\n        },\n        domains: function domains(entry, filter) {\n          return [entry.domains.service, entry.domains.namespace, entry.domains.cluster].join('.').includes(filter.value);\n        }\n      };\n    };\n\n    this.sortFields = function () {\n      return [{\n        id: 'name',\n        title: 'Name',\n        isNumeric: false,\n        param: 'name',\n        compare: function compare(a, b) {\n          return a.name.localeCompare(b.name);\n        }\n      }, {\n        id: 'domains',\n        title: 'Domains',\n        isNumeric: false,\n        param: 'doms',\n        compare: function compare(a, b) {\n          return [a.domains.service, a.domains.namespace, a.domains.cluster].join('.').localeCompare([b.domains.service, b.domains.namespace, b.domains.cluster].join('.'));\n        }\n      }, {\n        id: 'match',\n        title: 'Match',\n        isNumeric: false,\n        param: 'match',\n        compare: function compare(a, b) {\n          return a.match.localeCompare(b.match);\n        }\n      }, {\n        id: 'vs',\n        title: 'Virtual Service',\n        isNumeric: false,\n        param: 'vs',\n        compare: function compare(a, b) {\n          return a.virtual_service.localeCompare(b.virtual_service);\n        }\n      }];\n    };\n\n    this.resource = function () {\n      return 'routes';\n    };\n\n    this.setSorting = function (columnIndex, direction) {\n      _this.sortingDirection = direction;\n      _this.sortingIndex = columnIndex;\n    };\n\n    this.sortBy = function () {\n      return {\n        index: _this.sortingIndex,\n        direction: _this.sortingDirection\n      };\n    };\n\n    this.summaries = summaries;\n    this.sortingIndex = sortBy.index || 0;\n    this.sortingDirection = sortBy.direction || 'asc';\n    this.namespaces = namespaces;\n    this.namespace = namespace;\n  }\n\n  _createClass(RouteTable, [{\n    key: \"head\",\n    value: function head() {\n      return [{\n        title: 'Name',\n        transforms: [sortable]\n      }, {\n        title: 'Domains',\n        transforms: [sortable]\n      }, {\n        title: 'Match',\n        transforms: [sortable]\n      }, {\n        title: 'Virtual Service',\n        transforms: [sortable]\n      }];\n    }\n  }, {\n    key: \"rows\",\n    value: function rows() {\n      var _this2 = this;\n\n      return this.summaries.filter(function (value) {\n        return defaultFilter(value, _this2.filterMethods());\n      }).sort(function (a, b) {\n        var sortField = _this2.sortFields().find(function (value) {\n          return value.id === _this2.sortFields()[_this2.sortingIndex].id;\n        });\n\n        return _this2.sortingDirection === 'asc' ? sortField.compare(a, b) : sortField.compare(b, a);\n      }).map(function (summary) {\n        return [summary.name, serviceLink(summary.domains, _this2.namespaces, _this2.namespace, true), summary.match, istioConfigLink(summary.virtual_service, 'virtualservice')];\n      });\n    }\n  }]);\n\n  return RouteTable;\n}();\nexport var RouteSummaryTable = SummaryTableRenderer();","map":{"version":3,"sources":["/root/GraduateProject/src/components/Envoy/tables/RouteTable.ts"],"names":["SummaryTableRenderer","sortable","ActiveFilter","FILTER_ACTION_APPEND","FilterTypes","defaultFilter","istioConfigLink","serviceLink","RouteTable","summaries","sortBy","namespaces","namespace","sortingIndex","sortingDirection","availableFilters","id","title","placeholder","filterType","text","action","filterValues","filterMethods","name","entry","filter","toString","includes","value","domains","service","cluster","join","sortFields","isNumeric","param","compare","a","b","localeCompare","match","virtual_service","resource","setSorting","columnIndex","direction","index","transforms","sort","sortField","find","map","summary","RouteSummaryTable"],"mappings":"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","sourcesContent":["import { SummaryTable, SummaryTableRenderer } from './BaseTable';\nimport { ICell, ISortBy, sortable } from '@patternfly/react-table';\nimport { RouteSummary } from '../../../types/IstioObjects';\nimport { ActiveFilter, FILTER_ACTION_APPEND, FilterType, FilterTypes } from '../../../types/Filters';\nimport { SortField } from '../../../types/SortFilters';\nimport Namespace from '../../../types/Namespace';\nimport { defaultFilter, istioConfigLink, serviceLink } from '../../../helpers/EnvoyHelpers';\n\nexport class RouteTable implements SummaryTable {\n  summaries: RouteSummary[];\n  sortingIndex: number;\n  sortingDirection: 'asc' | 'desc';\n  namespaces: Namespace[];\n  namespace: string;\n\n  constructor(summaries: RouteSummary[], sortBy: ISortBy, namespaces: Namespace[], namespace: string) {\n    this.summaries = summaries;\n    this.sortingIndex = sortBy.index || 0;\n    this.sortingDirection = sortBy.direction || 'asc';\n    this.namespaces = namespaces;\n    this.namespace = namespace;\n  }\n\n  availableFilters = (): FilterType[] => {\n    return [\n      {\n        id: 'name',\n        title: 'Name',\n        placeholder: 'Name',\n        filterType: FilterTypes.text,\n        action: FILTER_ACTION_APPEND,\n        filterValues: []\n      },\n      {\n        id: 'domains',\n        title: 'Domains',\n        placeholder: 'Domains',\n        filterType: FilterTypes.text,\n        action: FILTER_ACTION_APPEND,\n        filterValues: []\n      }\n    ];\n  };\n\n  filterMethods = (): { [filter_id: string]: (ClusterSummary, ActiveFilter) => boolean } => {\n    return {\n      name: (entry: RouteSummary, filter: ActiveFilter): boolean => {\n        return entry.name.toString().includes(filter.value);\n      },\n      domains: (entry: RouteSummary, filter: ActiveFilter): boolean => {\n        return [entry.domains.service, entry.domains.namespace, entry.domains.cluster].join('.').includes(filter.value);\n      }\n    };\n  };\n\n  sortFields = (): SortField<RouteSummary>[] => {\n    return [\n      {\n        id: 'name',\n        title: 'Name',\n        isNumeric: false,\n        param: 'name',\n        compare: (a, b) => {\n          return a.name.localeCompare(b.name);\n        }\n      },\n      {\n        id: 'domains',\n        title: 'Domains',\n        isNumeric: false,\n        param: 'doms',\n        compare: (a, b) => {\n          return [a.domains.service, a.domains.namespace, a.domains.cluster]\n            .join('.')\n            .localeCompare([b.domains.service, b.domains.namespace, b.domains.cluster].join('.'));\n        }\n      },\n      {\n        id: 'match',\n        title: 'Match',\n        isNumeric: false,\n        param: 'match',\n        compare: (a, b) => {\n          return a.match.localeCompare(b.match);\n        }\n      },\n      {\n        id: 'vs',\n        title: 'Virtual Service',\n        isNumeric: false,\n        param: 'vs',\n        compare: (a, b) => {\n          return a.virtual_service.localeCompare(b.virtual_service);\n        }\n      }\n    ];\n  };\n\n  head(): ICell[] {\n    return [\n      { title: 'Name', transforms: [sortable] },\n      { title: 'Domains', transforms: [sortable] },\n      { title: 'Match', transforms: [sortable] },\n      { title: 'Virtual Service', transforms: [sortable] }\n    ];\n  }\n\n  resource = (): string => 'routes';\n\n  setSorting = (columnIndex: number, direction: 'asc' | 'desc') => {\n    this.sortingDirection = direction;\n    this.sortingIndex = columnIndex;\n  };\n\n  sortBy = (): ISortBy => {\n    return {\n      index: this.sortingIndex,\n      direction: this.sortingDirection\n    };\n  };\n\n  rows(): (string | number | JSX.Element)[][] {\n    return this.summaries\n      .filter((value: RouteSummary) => {\n        return defaultFilter(value, this.filterMethods());\n      })\n      .sort((a: RouteSummary, b: RouteSummary) => {\n        const sortField = this.sortFields().find((value: SortField<RouteSummary>): boolean => {\n          return value.id === this.sortFields()[this.sortingIndex].id;\n        });\n        return this.sortingDirection === 'asc' ? sortField!.compare(a, b) : sortField!.compare(b, a);\n      })\n      .map((summary: RouteSummary): (string | number | JSX.Element)[] => {\n        return [\n          summary.name,\n          serviceLink(summary.domains, this.namespaces, this.namespace, true),\n          summary.match,\n          istioConfigLink(summary.virtual_service, 'virtualservice')\n        ];\n      });\n  }\n}\n\nexport const RouteSummaryTable = SummaryTableRenderer<RouteTable>();\n"]},"metadata":{},"sourceType":"module"}