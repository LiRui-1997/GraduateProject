{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/pages/extensions/iter8/Iter8ExperimentDetails/ExperimentCriteriaForm.tsx\";\nimport { cellWidth, Table, TableBody, TableHeader, wrappable } from '@patternfly/react-table';\nimport { initCriteria } from '../../../../types/Iter8';\nimport * as React from 'react';\nimport { Button, Checkbox, Form, FormGroup, FormSelect, FormSelectOption, TextInputBase as TextInput } from '@patternfly/react-core';\nimport { style } from 'typestyle';\nimport { PFColors } from '../../../../components/Pf/PfColors';\nimport history from '../../../../app/History';\nimport { OnRemoveFromListOptions } from './ExperimentCreatePage';\nvar headerCells = [{\n  title: '指标名称',\n  transforms: [cellWidth(30)],\n  props: {}\n}, {\n  title: '指标阈值',\n  transforms: [wrappable, cellWidth(10)],\n  props: {}\n}, {\n  title: '指标类型',\n  transforms: [wrappable, cellWidth(15)],\n  props: {}\n}, {\n  title: '出错时停止',\n  transforms: [wrappable],\n  props: {}\n}, {\n  title: '设置为奖励指标',\n  transforms: [wrappable],\n  props: {}\n}, {\n  title: '',\n  props: {}\n}];\nvar toleranceType = [{\n  name: 'absolute',\n  value: '绝对度量'\n}, {\n  name: 'relative',\n  value: '相对度量'\n}];\nvar noCriteriaStyle = style({\n  marginTop: 15,\n  marginBottom: 15,\n  color: PFColors.Blue400,\n  fontSize: '1.2em'\n});\n\n// Create Success Criteria, can be multiple with same metric, but different sampleSize, etc...\nvar ExperimentCriteriaForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(ExperimentCriteriaForm, _React$Component);\n\n  var _super = _createSuper(ExperimentCriteriaForm);\n\n  function ExperimentCriteriaForm(props) {\n    var _this;\n\n    _classCallCheck(this, ExperimentCriteriaForm);\n\n    _this = _super.call(this, props);\n\n    _this.actionResolver = function (rowData, _ref) {\n      var rowIndex = _ref.rowIndex;\n      var removeAction = {\n        title: 'Remove Criteria',\n        onClick: function onClick(_, rowIndex) {\n          _this.props.onRemove(OnRemoveFromListOptions.Criteria, rowIndex);\n        }\n      };\n\n      if (rowIndex < _this.props.criterias.length) {\n        return [removeAction];\n      }\n\n      return [];\n    };\n\n    _this.onAddMetricName = function (value) {\n      _this.setState(function (prevState) {\n        return {\n          addCriteria: {\n            metric: value.trim(),\n            tolerance: prevState.addCriteria.tolerance,\n            toleranceType: prevState.addCriteria.toleranceType,\n            stopOnFailure: prevState.addCriteria.stopOnFailure,\n            isReward: prevState.addCriteria.isReward\n          },\n          validName: true\n        };\n      });\n    };\n\n    _this.onAddTolerance = function (value, _) {\n      _this.setState(function (prevState) {\n        return {\n          addCriteria: {\n            metric: prevState.addCriteria.metric,\n            tolerance: parseFloat(value.trim()),\n            toleranceType: prevState.addCriteria.toleranceType,\n            stopOnFailure: prevState.addCriteria.stopOnFailure,\n            isReward: prevState.addCriteria.isReward\n          },\n          validName: true\n        };\n      });\n    };\n\n    _this.onAddToleranceType = function (value, _) {\n      _this.setState(function (prevState) {\n        return {\n          addCriteria: {\n            metric: prevState.addCriteria.metric,\n            tolerance: prevState.addCriteria.tolerance,\n            toleranceType: value.trim(),\n            stopOnFailure: prevState.addCriteria.stopOnFailure,\n            isReward: prevState.addCriteria.isReward\n          },\n          validName: true\n        };\n      });\n    };\n\n    _this.onAddStopOnFailure = function () {\n      _this.setState(function (prevState) {\n        return {\n          addCriteria: {\n            metric: prevState.addCriteria.metric,\n            tolerance: prevState.addCriteria.tolerance,\n            toleranceType: prevState.addCriteria.toleranceType,\n            stopOnFailure: !prevState.addCriteria.stopOnFailure,\n            isReward: prevState.addCriteria.isReward\n          },\n          validName: true\n        };\n      });\n    };\n\n    _this.onIsReward = function () {\n      _this.setState(function (prevState) {\n        return {\n          addCriteria: {\n            metric: prevState.addCriteria.metric,\n            tolerance: prevState.addCriteria.tolerance,\n            toleranceType: prevState.addCriteria.toleranceType,\n            stopOnFailure: prevState.addCriteria.stopOnFailure,\n            isReward: !prevState.addCriteria.isReward\n          },\n          validName: true\n        };\n      });\n    };\n\n    _this.onAddCriteria = function () {\n      var NULL = null;\n\n      _this.props.onAdd(_this.state.addCriteria, {\n        name: '',\n        gateway: ''\n      }, NULL);\n\n      _this.setState({\n        addCriteria: initCriteria()\n      });\n    };\n\n    _this.state = {\n      addCriteria: initCriteria(),\n      validName: false\n    };\n    return _this;\n  } // @ts-ignore\n\n\n  _createClass(ExperimentCriteriaForm, [{\n    key: \"rows\",\n    value: function rows() {\n      var _this2 = this;\n\n      if (history.location.pathname.endsWith('/new')) {\n        return this.props.criterias.map(function (gw, i) {\n          return {\n            key: 'criteria' + i,\n            cells: [/*#__PURE__*/React.createElement(React.Fragment, null, gw.metric), /*#__PURE__*/React.createElement(React.Fragment, null, gw.tolerance), /*#__PURE__*/React.createElement(React.Fragment, null, gw.toleranceType), /*#__PURE__*/React.createElement(React.Fragment, null, gw.stopOnFailure ? 'true' : 'false'), /*#__PURE__*/React.createElement(React.Fragment, null, gw.isReward ? 'true' : 'false')]\n          };\n        }).concat([{\n          key: 'gwNew',\n          cells: [/*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormSelect, {\n            value: this.state.addCriteria.metric,\n            id: \"addMetricName\",\n            name: \"addMetricName\",\n            onChange: this.onAddMetricName,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }\n          }, this.props.metricNames.map(function (option, index) {\n            return /*#__PURE__*/React.createElement(FormSelectOption, {\n              isDisabled: false,\n              key: 'p' + index,\n              value: option,\n              label: option,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }\n            });\n          }))), /*#__PURE__*/React.createElement(FormGroup, {\n            fieldId: \"addTolerance\",\n            isValid: this.state.addCriteria.tolerance > 0,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(TextInput, {\n            id: \"addTolerance\",\n            type: \"number\",\n            value: this.state.addCriteria.tolerance,\n            placeholder: \"Tolerance\",\n            onChange: function onChange(value) {\n              return _this2.onAddTolerance(value, '');\n            },\n            isValid: !isNaN(Number(this.state.addCriteria.tolerance)),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }\n          })), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormSelect, {\n            value: this.state.addCriteria.toleranceType,\n            id: \"addPortProtocol\",\n            name: \"addPortProtocol\",\n            onChange: this.onAddToleranceType,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }\n          }, toleranceType.map(function (option, index) {\n            return /*#__PURE__*/React.createElement(FormSelectOption, {\n              isDisabled: false,\n              key: 'p' + index,\n              value: option.name,\n              label: option.value,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }\n            });\n          }))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Checkbox, {\n            label: \"YES\",\n            id: \"stopOnFailure\",\n            name: \"stopOnFailure\",\n            \"aria-label\": \"Stop On Failure\",\n            isChecked: this.state.addCriteria.stopOnFailure,\n            onChange: this.onAddStopOnFailure,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }\n          })), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Checkbox, {\n            label: \"YES\",\n            id: \"isReward\",\n            name: \"isReward\",\n            \"aria-label\": \"Reward\",\n            isChecked: this.state.addCriteria.isReward,\n            onChange: this.onIsReward,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }\n          })), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n            id: \"addServerBtn\",\n            variant: \"secondary\",\n            isDisabled: this.state.addCriteria.metric.length === 0,\n            onClick: this.onAddCriteria,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }\n          }, \"Add this Criteria\"))]\n        }]);\n      } else {\n        return this.props.criterias.map(function (gw, i) {\n          return {\n            key: 'criteria' + i,\n            cells: [/*#__PURE__*/React.createElement(React.Fragment, null, gw.metric), /*#__PURE__*/React.createElement(React.Fragment, null, gw.tolerance), /*#__PURE__*/React.createElement(React.Fragment, null, gw.toleranceType), /*#__PURE__*/React.createElement(React.Fragment, null, gw.stopOnFailure ? 'true' : 'false')]\n          };\n        });\n      }\n    }\n  }, {\n    key: \"renderCriteriaForm\",\n    value: function renderCriteriaForm() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 9\n        }\n      }, this.props.criterias.length === 0 && /*#__PURE__*/React.createElement(\"span\", {\n        className: noCriteriaStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }\n      }, \"(At least one criteria is needed)\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }\n      }, \"\\xA0\\xA0\"), /*#__PURE__*/React.createElement(Form, {\n        isHorizontal: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        fieldId: \"name\",\n        label: \"Metric\",\n        isRequired: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormSelect, {\n        value: this.state.addCriteria.metric,\n        id: \"addMetricName\",\n        name: \"addMetricName\",\n        onChange: this.onAddMetricName,\n        style: {\n          width: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 15\n        }\n      }, this.props.metricNames.map(function (option, index) {\n        return /*#__PURE__*/React.createElement(FormSelectOption, {\n          isDisabled: false,\n          key: 'p' + index,\n          value: option,\n          label: option,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 19\n          }\n        });\n      }))), /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"Tolerance\",\n        fieldId: \"addTolerancef\",\n        isValid: this.state.addCriteria.tolerance > 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextInput, {\n        id: \"addTolerance\",\n        type: \"number\",\n        value: this.state.addCriteria.tolerance,\n        placeholder: \"Tolerance\",\n        onChange: function onChange(value) {\n          return _this3.onAddTolerance(value, '');\n        },\n        isValid: !isNaN(Number(this.state.addCriteria.tolerance)),\n        style: {\n          width: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"Protocol\",\n        fieldId: \"addPortProtocol\",\n        isValid: this.state.addCriteria.tolerance > 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormSelect, {\n        value: this.state.addCriteria.toleranceType,\n        id: \"addPortProtocol\",\n        name: \"addPortProtocol\",\n        onChange: this.onAddToleranceType,\n        style: {\n          width: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 15\n        }\n      }, toleranceType.map(function (option, index) {\n        return /*#__PURE__*/React.createElement(FormSelectOption, {\n          isDisabled: false,\n          key: 'p' + index,\n          value: option.name,\n          label: option.value,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 19\n          }\n        });\n      }))), /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"Protocol\",\n        fieldId: \"addPortProtocol\",\n        isValid: this.state.addCriteria.tolerance > 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        label: \"Stop On Failure\",\n        id: \"stopOnFailure\",\n        name: \"stopOnFailure\",\n        \"aria-label\": \"Stop On Failure\",\n        isChecked: this.state.addCriteria.stopOnFailure,\n        onChange: this.onAddStopOnFailure,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        style: {\n          paddingLeft: '6px'\n        },\n        id: \"addServerBtn\",\n        variant: \"primary\",\n        isDisabled: this.state.addCriteria.metric.length === 0,\n        onClick: this.onAddCriteria,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 15\n        }\n      }, \"Add this Criteria\")))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n        \"aria-label\": \"Success Criterias\",\n        cells: headerCells,\n        rows: this.rows() // @ts-ignore\n        ,\n        actionResolver: this.actionResolver,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }\n      })), history.location.pathname.endsWith('/new') ? '' : this.renderCriteriaForm());\n    }\n  }]);\n\n  return ExperimentCriteriaForm;\n}(React.Component);\n\nexport default ExperimentCriteriaForm;","map":{"version":3,"sources":["/root/GraduateProject/src/pages/extensions/iter8/Iter8ExperimentDetails/ExperimentCriteriaForm.tsx"],"names":["cellWidth","Table","TableBody","TableHeader","wrappable","initCriteria","React","Button","Checkbox","Form","FormGroup","FormSelect","FormSelectOption","TextInputBase","TextInput","style","PFColors","history","OnRemoveFromListOptions","headerCells","title","transforms","props","toleranceType","name","value","noCriteriaStyle","marginTop","marginBottom","color","Blue400","fontSize","ExperimentCriteriaForm","actionResolver","rowData","rowIndex","removeAction","onClick","_","onRemove","Criteria","criterias","length","onAddMetricName","setState","prevState","addCriteria","metric","trim","tolerance","stopOnFailure","isReward","validName","onAddTolerance","parseFloat","onAddToleranceType","onAddStopOnFailure","onIsReward","onAddCriteria","NULL","onAdd","state","gateway","location","pathname","endsWith","map","gw","i","key","cells","concat","metricNames","option","index","isNaN","Number","width","paddingLeft","rows","renderCriteriaForm","Component"],"mappings":"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","sourcesContent":["import { cellWidth, ICell, Table, TableBody, TableHeader, wrappable } from '@patternfly/react-table';\nimport { Criteria, Host, initCriteria, Iter8Info, NameValuePair } from '../../../../types/Iter8';\nimport * as React from 'react';\nimport {\n  Button,\n  Checkbox,\n  Form,\n  FormGroup,\n  FormSelect,\n  FormSelectOption,\n  TextInputBase as TextInput\n} from '@patternfly/react-core';\nimport { style } from 'typestyle';\nimport { PFColors } from '../../../../components/Pf/PfColors';\nimport history from '../../../../app/History';\nimport { OnRemoveFromListOptions } from './ExperimentCreatePage';\n\nconst headerCells: ICell[] = [\n  {\n    title: '指标名称',\n    transforms: [cellWidth(30) as any],\n    props: {}\n  },\n  {\n    title: '指标阈值',\n    transforms: [wrappable, cellWidth(10) as any],\n    props: {}\n  },\n  {\n    title: '指标类型',\n    transforms: [wrappable, cellWidth(15) as any],\n    props: {}\n  },\n  {\n    title: '出错时停止',\n    transforms: [wrappable],\n    props: {}\n  },\n  {\n    title: '设置为奖励指标',\n    transforms: [wrappable],\n    props: {}\n  },\n  {\n    title: '',\n    props: {}\n  }\n];\n\nconst toleranceType: NameValuePair[] = [\n  {\n    name: 'absolute',\n    value: '绝对度量'\n  },\n  {\n    name: 'relative',\n    value: '相对度量'\n  }\n];\n\nconst noCriteriaStyle = style({\n  marginTop: 15,\n  marginBottom: 15,\n  color: PFColors.Blue400,\n  fontSize: '1.2em'\n});\n\ntype Props = {\n  iter8Info: Iter8Info;\n  criterias: Criteria[];\n  metricNames: string[];\n  onAdd: (criteria: Criteria, host: Host, match: any) => void;\n  onRemove: (type: OnRemoveFromListOptions, index: number) => void;\n};\n\ntype State = {\n  addCriteria: Criteria;\n  validName: boolean;\n};\n\n// Create Success Criteria, can be multiple with same metric, but different sampleSize, etc...\nclass ExperimentCriteriaForm extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      addCriteria: initCriteria(),\n      validName: false\n    };\n  }\n\n  // @ts-ignore\n  actionResolver = (rowData, { rowIndex }) => {\n    const removeAction = {\n      title: 'Remove Criteria',\n      onClick: (_, rowIndex) => {\n        this.props.onRemove(OnRemoveFromListOptions.Criteria, rowIndex);\n      }\n    };\n    if (rowIndex < this.props.criterias.length) {\n      return [removeAction];\n    }\n    return [];\n  };\n\n  onAddMetricName = (value: string) => {\n    this.setState(prevState => ({\n      addCriteria: {\n        metric: value.trim(),\n        tolerance: prevState.addCriteria.tolerance,\n        toleranceType: prevState.addCriteria.toleranceType,\n        stopOnFailure: prevState.addCriteria.stopOnFailure,\n        isReward: prevState.addCriteria.isReward\n      },\n      validName: true\n    }));\n  };\n\n  onAddTolerance = (value: string, _) => {\n    this.setState(prevState => ({\n      addCriteria: {\n        metric: prevState.addCriteria.metric,\n        tolerance: parseFloat(value.trim()),\n        toleranceType: prevState.addCriteria.toleranceType,\n        stopOnFailure: prevState.addCriteria.stopOnFailure,\n        isReward: prevState.addCriteria.isReward\n      },\n      validName: true\n    }));\n  };\n  onAddToleranceType = (value: string, _) => {\n    this.setState(prevState => ({\n      addCriteria: {\n        metric: prevState.addCriteria.metric,\n        tolerance: prevState.addCriteria.tolerance,\n        toleranceType: value.trim(),\n        stopOnFailure: prevState.addCriteria.stopOnFailure,\n        isReward: prevState.addCriteria.isReward\n      },\n      validName: true\n    }));\n  };\n\n  onAddStopOnFailure = () => {\n    this.setState(prevState => ({\n      addCriteria: {\n        metric: prevState.addCriteria.metric,\n        tolerance: prevState.addCriteria.tolerance,\n        toleranceType: prevState.addCriteria.toleranceType,\n        stopOnFailure: !prevState.addCriteria.stopOnFailure,\n        isReward: prevState.addCriteria.isReward\n      },\n      validName: true\n    }));\n  };\n\n  onIsReward = () => {\n    this.setState(prevState => ({\n      addCriteria: {\n        metric: prevState.addCriteria.metric,\n        tolerance: prevState.addCriteria.tolerance,\n        toleranceType: prevState.addCriteria.toleranceType,\n        stopOnFailure: prevState.addCriteria.stopOnFailure,\n        isReward: !prevState.addCriteria.isReward\n      },\n      validName: true\n    }));\n  };\n\n  onAddCriteria = () => {\n    var NULL = null;\n    this.props.onAdd(this.state.addCriteria, { name: '', gateway: '' }, NULL);\n    this.setState({\n      addCriteria: initCriteria()\n    });\n  };\n\n  rows() {\n    if (history.location.pathname.endsWith('/new')) {\n      return this.props.criterias\n        .map((gw, i) => ({\n          key: 'criteria' + i,\n          cells: [\n            <>{gw.metric}</>,\n            <>{gw.tolerance}</>,\n            <>{gw.toleranceType}</>,\n            <>{gw.stopOnFailure ? 'true' : 'false'}</>,\n            <>{gw.isReward ? 'true' : 'false'}</>\n          ]\n        }))\n        .concat([\n          {\n            key: 'gwNew',\n            cells: [\n              <>\n                <FormSelect\n                  value={this.state.addCriteria.metric}\n                  id=\"addMetricName\"\n                  name=\"addMetricName\"\n                  onChange={this.onAddMetricName}\n                >\n                  {this.props.metricNames.map((option, index) => (\n                    <FormSelectOption isDisabled={false} key={'p' + index} value={option} label={option} />\n                  ))}\n                </FormSelect>\n              </>,\n\n              <FormGroup fieldId=\"addTolerance\" isValid={this.state.addCriteria.tolerance > 0}>\n                <TextInput\n                  id=\"addTolerance\"\n                  type=\"number\"\n                  value={this.state.addCriteria.tolerance}\n                  placeholder=\"Tolerance\"\n                  onChange={value => this.onAddTolerance(value, '')}\n                  isValid={!isNaN(Number(this.state.addCriteria.tolerance))}\n                />\n              </FormGroup>,\n              <>\n                <FormSelect\n                  value={this.state.addCriteria.toleranceType}\n                  id=\"addPortProtocol\"\n                  name=\"addPortProtocol\"\n                  onChange={this.onAddToleranceType}\n                >\n                  {toleranceType.map((option, index) => (\n                    <FormSelectOption isDisabled={false} key={'p' + index} value={option.name} label={option.value} />\n                  ))}\n                </FormSelect>\n              </>,\n              <>\n                <Checkbox\n                  label=\"YES\"\n                  id=\"stopOnFailure\"\n                  name=\"stopOnFailure\"\n                  aria-label=\"Stop On Failure\"\n                  isChecked={this.state.addCriteria.stopOnFailure}\n                  onChange={this.onAddStopOnFailure}\n                />\n              </>,\n              <>\n                <Checkbox\n                  label=\"YES\"\n                  id=\"isReward\"\n                  name=\"isReward\"\n                  aria-label=\"Reward\"\n                  isChecked={this.state.addCriteria.isReward}\n                  onChange={this.onIsReward}\n                />\n              </>,\n              <>\n                <Button\n                  id=\"addServerBtn\"\n                  variant=\"secondary\"\n                  isDisabled={this.state.addCriteria.metric.length === 0}\n                  onClick={this.onAddCriteria}\n                >\n                  Add this Criteria\n                </Button>\n              </>\n            ]\n          }\n        ]);\n    } else {\n      return this.props.criterias.map((gw, i) => ({\n        key: 'criteria' + i,\n        cells: [\n          <>{gw.metric}</>,\n          <>{gw.tolerance}</>,\n          <>{gw.toleranceType}</>,\n          <>{gw.stopOnFailure ? 'true' : 'false'}</>\n        ]\n      }));\n    }\n  }\n\n  renderCriteriaForm() {\n    return (\n      <>\n        <div>\n          {this.props.criterias.length === 0 && (\n            <span className={noCriteriaStyle}>(At least one criteria is needed)</span>\n          )}\n          <p>&nbsp;&nbsp;</p>\n          <Form isHorizontal={true}>\n            <FormGroup fieldId=\"name\" label=\"Metric\" isRequired={true}>\n              <FormSelect\n                value={this.state.addCriteria.metric}\n                id=\"addMetricName\"\n                name=\"addMetricName\"\n                onChange={this.onAddMetricName}\n                style={{ width: 'auto' }}\n              >\n                {this.props.metricNames.map((option, index) => (\n                  <FormSelectOption isDisabled={false} key={'p' + index} value={option} label={option} />\n                ))}\n              </FormSelect>\n            </FormGroup>\n\n            <FormGroup label=\"Tolerance\" fieldId=\"addTolerancef\" isValid={this.state.addCriteria.tolerance > 0}>\n              <TextInput\n                id=\"addTolerance\"\n                type=\"number\"\n                value={this.state.addCriteria.tolerance}\n                placeholder=\"Tolerance\"\n                onChange={value => this.onAddTolerance(value, '')}\n                isValid={!isNaN(Number(this.state.addCriteria.tolerance))}\n                style={{ width: 'auto' }}\n              />\n            </FormGroup>\n            <FormGroup label=\"Protocol\" fieldId=\"addPortProtocol\" isValid={this.state.addCriteria.tolerance > 0}>\n              <FormSelect\n                value={this.state.addCriteria.toleranceType}\n                id=\"addPortProtocol\"\n                name=\"addPortProtocol\"\n                onChange={this.onAddToleranceType}\n                style={{ width: 'auto' }}\n              >\n                {toleranceType.map((option, index) => (\n                  <FormSelectOption isDisabled={false} key={'p' + index} value={option.name} label={option.value} />\n                ))}\n              </FormSelect>\n            </FormGroup>\n            <FormGroup label=\"Protocol\" fieldId=\"addPortProtocol\" isValid={this.state.addCriteria.tolerance > 0}>\n              <Checkbox\n                label=\"Stop On Failure\"\n                id=\"stopOnFailure\"\n                name=\"stopOnFailure\"\n                aria-label=\"Stop On Failure\"\n                isChecked={this.state.addCriteria.stopOnFailure}\n                onChange={this.onAddStopOnFailure}\n              />\n            </FormGroup>\n\n            <>\n              <Button\n                style={{ paddingLeft: '6px' }}\n                id=\"addServerBtn\"\n                variant=\"primary\"\n                isDisabled={this.state.addCriteria.metric.length === 0}\n                onClick={this.onAddCriteria}\n              >\n                Add this Criteria\n              </Button>\n            </>\n          </Form>\n        </div>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Table\n          aria-label=\"Success Criterias\"\n          cells={headerCells}\n          rows={this.rows()}\n          // @ts-ignore\n          actionResolver={this.actionResolver}\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n        {history.location.pathname.endsWith('/new') ? '' : this.renderCriteriaForm()}\n      </>\n    );\n  }\n}\n\nexport default ExperimentCriteriaForm;\n"]},"metadata":{},"sourceType":"module"}