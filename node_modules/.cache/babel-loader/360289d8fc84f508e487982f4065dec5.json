{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/components/IstioWizards/RequestTimeouts.tsx\";\nimport * as React from 'react';\nimport { Form } from '@patternfly/react-core';\nimport { isValidDuration } from '../../utils/IstioConfigUtils';\nimport RouteTimeout from './RequestTimeouts/RouteTimeout';\nimport RouteRetry from './RequestTimeouts/RouteRetry';\n\nvar RequestTimeouts = /*#__PURE__*/function (_React$Component) {\n  _inherits(RequestTimeouts, _React$Component);\n\n  var _super = _createSuper(RequestTimeouts);\n\n  function RequestTimeouts(props) {\n    var _this;\n\n    _classCallCheck(this, RequestTimeouts);\n\n    _this = _super.call(this, props);\n\n    _this.resetState = function () {\n      _this.setState({\n        timeoutRetryRoute: {\n          workloads: _this.props.initTimeoutRetry.workloads,\n          isTimeout: _this.props.initTimeoutRetry.isTimeout,\n          timeout: _this.props.initTimeoutRetry.timeout,\n          isValidTimeout: _this.props.initTimeoutRetry.isTimeout ? isValidDuration(_this.props.initTimeoutRetry.timeout) : true,\n          isRetry: _this.props.initTimeoutRetry.isRetry,\n          retries: _this.props.initTimeoutRetry.retries,\n          isValidRetry: _this.props.initTimeoutRetry.isRetry ? _this.props.initTimeoutRetry.retries.perTryTimeout ? isValidDuration(_this.props.initTimeoutRetry.retries.perTryTimeout) : false : true\n        }\n      }, function () {\n        return _this.props.onChange(_this.state.timeoutRetryRoute.isValidTimeout && _this.state.timeoutRetryRoute.isValidRetry, _this.state.timeoutRetryRoute);\n      });\n    };\n\n    _this.updateTimeout = function (isTimeout, timeout) {\n      _this.setState(function (prevState) {\n        return {\n          timeoutRetryRoute: {\n            workloads: prevState.timeoutRetryRoute.workloads,\n            isTimeout: isTimeout,\n            timeout: timeout,\n            isValidTimeout: isTimeout ? isValidDuration(timeout) : true,\n            isRetry: prevState.timeoutRetryRoute.isRetry,\n            retries: prevState.timeoutRetryRoute.retries,\n            isValidRetry: prevState.timeoutRetryRoute.isValidRetry\n          }\n        };\n      }, function () {\n        return _this.props.onChange(_this.state.timeoutRetryRoute.isValidTimeout && _this.state.timeoutRetryRoute.isValidRetry, _this.state.timeoutRetryRoute);\n      });\n    };\n\n    _this.updateRetry = function (isRetry, retries) {\n      _this.setState(function (prevState) {\n        return {\n          timeoutRetryRoute: {\n            workloads: prevState.timeoutRetryRoute.workloads,\n            isTimeout: prevState.timeoutRetryRoute.isTimeout,\n            timeout: prevState.timeoutRetryRoute.timeout,\n            isValidTimeout: prevState.timeoutRetryRoute.isValidTimeout,\n            isRetry: isRetry,\n            retries: retries,\n            isValidRetry: isRetry ? retries.perTryTimeout ? isValidDuration(retries.perTryTimeout) : false : true\n          }\n        };\n      }, function () {\n        _this.props.onChange(_this.state.timeoutRetryRoute.isValidTimeout && _this.state.timeoutRetryRoute.isValidRetry, _this.state.timeoutRetryRoute);\n      });\n    };\n\n    _this.state = {\n      timeoutRetryRoute: {\n        workloads: _this.props.initTimeoutRetry.workloads,\n        isTimeout: _this.props.initTimeoutRetry.isTimeout,\n        timeout: _this.props.initTimeoutRetry.timeout,\n        isValidTimeout: isValidDuration(_this.props.initTimeoutRetry.timeout),\n        isRetry: _this.props.initTimeoutRetry.isRetry,\n        retries: _this.props.initTimeoutRetry.retries,\n        isValidRetry: _this.props.initTimeoutRetry.retries.perTryTimeout ? isValidDuration(_this.props.initTimeoutRetry.retries.perTryTimeout) : false\n      }\n    };\n    return _this;\n  }\n\n  _createClass(RequestTimeouts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.resetState();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n        isHorizontal: true,\n        style: {\n          paddingTop: 10,\n          paddingBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(RouteTimeout, {\n        isTimeout: this.state.timeoutRetryRoute.isTimeout,\n        timeout: this.state.timeoutRetryRoute.timeout,\n        isValid: this.state.timeoutRetryRoute.isValidTimeout,\n        onTimeout: function onTimeout(isTimeout, timeout) {\n          return _this2.updateTimeout(isTimeout, timeout);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(RouteRetry, {\n        isRetry: this.state.timeoutRetryRoute.isRetry,\n        retries: this.state.timeoutRetryRoute.retries,\n        isValidRetry: this.state.timeoutRetryRoute.isValidRetry,\n        onRetry: function onRetry(isRetry, retries) {\n          return _this2.updateRetry(isRetry, retries);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return RequestTimeouts;\n}(React.Component);\n\nexport default RequestTimeouts;","map":{"version":3,"sources":["/root/GraduateProject/src/components/IstioWizards/RequestTimeouts.tsx"],"names":["React","Form","isValidDuration","RouteTimeout","RouteRetry","RequestTimeouts","props","resetState","setState","timeoutRetryRoute","workloads","initTimeoutRetry","isTimeout","timeout","isValidTimeout","isRetry","retries","isValidRetry","perTryTimeout","onChange","state","updateTimeout","prevState","updateRetry","paddingTop","paddingBottom","Component"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,eAAT,QAAgC,8BAAhC;AAEA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;IAsBMC,e;;;;;AACJ,2BAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AACxB,8BAAMA,KAAN;;AADwB,UAiB1BC,UAjB0B,GAiBb,YAAM;AACjB,YAAKC,QAAL,CACE;AACEC,QAAAA,iBAAiB,EAAE;AACjBC,UAAAA,SAAS,EAAE,MAAKJ,KAAL,CAAWK,gBAAX,CAA4BD,SADtB;AAEjBE,UAAAA,SAAS,EAAE,MAAKN,KAAL,CAAWK,gBAAX,CAA4BC,SAFtB;AAGjBC,UAAAA,OAAO,EAAE,MAAKP,KAAL,CAAWK,gBAAX,CAA4BE,OAHpB;AAIjBC,UAAAA,cAAc,EAAE,MAAKR,KAAL,CAAWK,gBAAX,CAA4BC,SAA5B,GACZV,eAAe,CAAC,MAAKI,KAAL,CAAWK,gBAAX,CAA4BE,OAA7B,CADH,GAEZ,IANa;AAOjBE,UAAAA,OAAO,EAAE,MAAKT,KAAL,CAAWK,gBAAX,CAA4BI,OAPpB;AAQjBC,UAAAA,OAAO,EAAE,MAAKV,KAAL,CAAWK,gBAAX,CAA4BK,OARpB;AASjBC,UAAAA,YAAY,EAAE,MAAKX,KAAL,CAAWK,gBAAX,CAA4BI,OAA5B,GACV,MAAKT,KAAL,CAAWK,gBAAX,CAA4BK,OAA5B,CAAoCE,aAApC,GACEhB,eAAe,CAAC,MAAKI,KAAL,CAAWK,gBAAX,CAA4BK,OAA5B,CAAoCE,aAArC,CADjB,GAEE,KAHQ,GAIV;AAba;AADrB,OADF,EAkBE;AAAA,eACE,MAAKZ,KAAL,CAAWa,QAAX,CACE,MAAKC,KAAL,CAAWX,iBAAX,CAA6BK,cAA7B,IAA+C,MAAKM,KAAL,CAAWX,iBAAX,CAA6BQ,YAD9E,EAEE,MAAKG,KAAL,CAAWX,iBAFb,CADF;AAAA,OAlBF;AAwBD,KA1CyB;;AAAA,UAgD1BY,aAhD0B,GAgDV,UAACT,SAAD,EAAqBC,OAArB,EAAyC;AACvD,YAAKL,QAAL,CACE,UAAAc,SAAS,EAAI;AACX,eAAO;AACLb,UAAAA,iBAAiB,EAAE;AACjBC,YAAAA,SAAS,EAAEY,SAAS,CAACb,iBAAV,CAA4BC,SADtB;AAEjBE,YAAAA,SAAS,EAAEA,SAFM;AAGjBC,YAAAA,OAAO,EAAEA,OAHQ;AAIjBC,YAAAA,cAAc,EAAEF,SAAS,GAAGV,eAAe,CAACW,OAAD,CAAlB,GAA8B,IAJtC;AAKjBE,YAAAA,OAAO,EAAEO,SAAS,CAACb,iBAAV,CAA4BM,OALpB;AAMjBC,YAAAA,OAAO,EAAEM,SAAS,CAACb,iBAAV,CAA4BO,OANpB;AAOjBC,YAAAA,YAAY,EAAEK,SAAS,CAACb,iBAAV,CAA4BQ;AAPzB;AADd,SAAP;AAWD,OAbH,EAcE;AAAA,eACE,MAAKX,KAAL,CAAWa,QAAX,CACE,MAAKC,KAAL,CAAWX,iBAAX,CAA6BK,cAA7B,IAA+C,MAAKM,KAAL,CAAWX,iBAAX,CAA6BQ,YAD9E,EAEE,MAAKG,KAAL,CAAWX,iBAFb,CADF;AAAA,OAdF;AAoBD,KArEyB;;AAAA,UAuE1Bc,WAvE0B,GAuEZ,UAACR,OAAD,EAAmBC,OAAnB,EAA0C;AACtD,YAAKR,QAAL,CACE,UAAAc,SAAS,EAAI;AACX,eAAO;AACLb,UAAAA,iBAAiB,EAAE;AACjBC,YAAAA,SAAS,EAAEY,SAAS,CAACb,iBAAV,CAA4BC,SADtB;AAEjBE,YAAAA,SAAS,EAAEU,SAAS,CAACb,iBAAV,CAA4BG,SAFtB;AAGjBC,YAAAA,OAAO,EAAES,SAAS,CAACb,iBAAV,CAA4BI,OAHpB;AAIjBC,YAAAA,cAAc,EAAEQ,SAAS,CAACb,iBAAV,CAA4BK,cAJ3B;AAKjBC,YAAAA,OAAO,EAAEA,OALQ;AAMjBC,YAAAA,OAAO,EAAEA,OANQ;AAOjBC,YAAAA,YAAY,EAAEF,OAAO,GAAIC,OAAO,CAACE,aAAR,GAAwBhB,eAAe,CAACc,OAAO,CAACE,aAAT,CAAvC,GAAiE,KAArE,GAA8E;AAPlF;AADd,SAAP;AAWD,OAbH,EAcE,YAAM;AACJ,cAAKZ,KAAL,CAAWa,QAAX,CACE,MAAKC,KAAL,CAAWX,iBAAX,CAA6BK,cAA7B,IAA+C,MAAKM,KAAL,CAAWX,iBAAX,CAA6BQ,YAD9E,EAEE,MAAKG,KAAL,CAAWX,iBAFb;AAID,OAnBH;AAqBD,KA7FyB;;AAExB,UAAKW,KAAL,GAAa;AACXX,MAAAA,iBAAiB,EAAE;AACjBC,QAAAA,SAAS,EAAE,MAAKJ,KAAL,CAAWK,gBAAX,CAA4BD,SADtB;AAEjBE,QAAAA,SAAS,EAAE,MAAKN,KAAL,CAAWK,gBAAX,CAA4BC,SAFtB;AAGjBC,QAAAA,OAAO,EAAE,MAAKP,KAAL,CAAWK,gBAAX,CAA4BE,OAHpB;AAIjBC,QAAAA,cAAc,EAAEZ,eAAe,CAAC,MAAKI,KAAL,CAAWK,gBAAX,CAA4BE,OAA7B,CAJd;AAKjBE,QAAAA,OAAO,EAAE,MAAKT,KAAL,CAAWK,gBAAX,CAA4BI,OALpB;AAMjBC,QAAAA,OAAO,EAAE,MAAKV,KAAL,CAAWK,gBAAX,CAA4BK,OANpB;AAOjBC,QAAAA,YAAY,EAAE,MAAKX,KAAL,CAAWK,gBAAX,CAA4BK,OAA5B,CAAoCE,aAApC,GACVhB,eAAe,CAAC,MAAKI,KAAL,CAAWK,gBAAX,CAA4BK,OAA5B,CAAoCE,aAArC,CADL,GAEV;AATa;AADR,KAAb;AAFwB;AAezB;;;;WA6BD,6BAA0B;AACxB,WAAKX,UAAL;AACD;;;WAiDD,kBAAS;AAAA;;AACP,0BACE,uDACE,oBAAC,IAAD;AACE,QAAA,YAAY,EAAE,IADhB;AAEE,QAAA,KAAK,EAAE;AACLiB,UAAAA,UAAU,EAAE,EADP;AAELC,UAAAA,aAAa,EAAE;AAFV,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE,oBAAC,YAAD;AACE,QAAA,SAAS,EAAE,KAAKL,KAAL,CAAWX,iBAAX,CAA6BG,SAD1C;AAEE,QAAA,OAAO,EAAE,KAAKQ,KAAL,CAAWX,iBAAX,CAA6BI,OAFxC;AAGE,QAAA,OAAO,EAAE,KAAKO,KAAL,CAAWX,iBAAX,CAA6BK,cAHxC;AAIE,QAAA,SAAS,EAAE,mBAACF,SAAD,EAAYC,OAAZ;AAAA,iBAAwB,MAAI,CAACQ,aAAL,CAAmBT,SAAnB,EAA8BC,OAA9B,CAAxB;AAAA,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,eAaE,oBAAC,UAAD;AACE,QAAA,OAAO,EAAE,KAAKO,KAAL,CAAWX,iBAAX,CAA6BM,OADxC;AAEE,QAAA,OAAO,EAAE,KAAKK,KAAL,CAAWX,iBAAX,CAA6BO,OAFxC;AAGE,QAAA,YAAY,EAAE,KAAKI,KAAL,CAAWX,iBAAX,CAA6BQ,YAH7C;AAIE,QAAA,OAAO,EAAE,iBAACF,OAAD,EAAUC,OAAV;AAAA,iBAAsB,MAAI,CAACO,WAAL,CAAiBR,OAAjB,EAA0BC,OAA1B,CAAtB;AAAA,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,CADF,CADF;AAwBD;;;;EAzH2BhB,KAAK,CAAC0B,S;;AA4HpC,eAAerB,eAAf","sourcesContent":["import * as React from 'react';\nimport { HTTPRetry } from '../../types/IstioObjects';\nimport { Form } from '@patternfly/react-core';\nimport { isValidDuration } from '../../utils/IstioConfigUtils';\nimport { WorkloadWeight } from './TrafficShifting';\nimport RouteTimeout from './RequestTimeouts/RouteTimeout';\nimport RouteRetry from './RequestTimeouts/RouteRetry';\n\ntype Props = {\n  initTimeoutRetry: TimeoutRetryRoute;\n  onChange: (valid: boolean, timeoutRetryRoute: TimeoutRetryRoute) => void;\n};\n\n// Used in the scenario of a single route\nexport type TimeoutRetryRoute = {\n  workloads: WorkloadWeight[];\n  isTimeout: boolean;\n  timeout: string;\n  isValidTimeout: boolean;\n  isRetry: boolean;\n  retries: HTTPRetry;\n  isValidRetry: boolean;\n};\n\ntype State = {\n  timeoutRetryRoute: TimeoutRetryRoute;\n};\n\nclass RequestTimeouts extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      timeoutRetryRoute: {\n        workloads: this.props.initTimeoutRetry.workloads,\n        isTimeout: this.props.initTimeoutRetry.isTimeout,\n        timeout: this.props.initTimeoutRetry.timeout,\n        isValidTimeout: isValidDuration(this.props.initTimeoutRetry.timeout),\n        isRetry: this.props.initTimeoutRetry.isRetry,\n        retries: this.props.initTimeoutRetry.retries,\n        isValidRetry: this.props.initTimeoutRetry.retries.perTryTimeout\n          ? isValidDuration(this.props.initTimeoutRetry.retries.perTryTimeout)\n          : false\n      }\n    };\n  }\n\n  resetState = () => {\n    this.setState(\n      {\n        timeoutRetryRoute: {\n          workloads: this.props.initTimeoutRetry.workloads,\n          isTimeout: this.props.initTimeoutRetry.isTimeout,\n          timeout: this.props.initTimeoutRetry.timeout,\n          isValidTimeout: this.props.initTimeoutRetry.isTimeout\n            ? isValidDuration(this.props.initTimeoutRetry.timeout)\n            : true,\n          isRetry: this.props.initTimeoutRetry.isRetry,\n          retries: this.props.initTimeoutRetry.retries,\n          isValidRetry: this.props.initTimeoutRetry.isRetry\n            ? this.props.initTimeoutRetry.retries.perTryTimeout\n              ? isValidDuration(this.props.initTimeoutRetry.retries.perTryTimeout)\n              : false\n            : true\n        }\n      },\n      () =>\n        this.props.onChange(\n          this.state.timeoutRetryRoute.isValidTimeout && this.state.timeoutRetryRoute.isValidRetry,\n          this.state.timeoutRetryRoute\n        )\n    );\n  };\n\n  componentDidMount(): void {\n    this.resetState();\n  }\n\n  updateTimeout = (isTimeout: boolean, timeout: string) => {\n    this.setState(\n      prevState => {\n        return {\n          timeoutRetryRoute: {\n            workloads: prevState.timeoutRetryRoute.workloads,\n            isTimeout: isTimeout,\n            timeout: timeout,\n            isValidTimeout: isTimeout ? isValidDuration(timeout) : true,\n            isRetry: prevState.timeoutRetryRoute.isRetry,\n            retries: prevState.timeoutRetryRoute.retries,\n            isValidRetry: prevState.timeoutRetryRoute.isValidRetry\n          }\n        };\n      },\n      () =>\n        this.props.onChange(\n          this.state.timeoutRetryRoute.isValidTimeout && this.state.timeoutRetryRoute.isValidRetry,\n          this.state.timeoutRetryRoute\n        )\n    );\n  };\n\n  updateRetry = (isRetry: boolean, retries: HTTPRetry) => {\n    this.setState(\n      prevState => {\n        return {\n          timeoutRetryRoute: {\n            workloads: prevState.timeoutRetryRoute.workloads,\n            isTimeout: prevState.timeoutRetryRoute.isTimeout,\n            timeout: prevState.timeoutRetryRoute.timeout,\n            isValidTimeout: prevState.timeoutRetryRoute.isValidTimeout,\n            isRetry: isRetry,\n            retries: retries,\n            isValidRetry: isRetry ? (retries.perTryTimeout ? isValidDuration(retries.perTryTimeout) : false) : true\n          }\n        };\n      },\n      () => {\n        this.props.onChange(\n          this.state.timeoutRetryRoute.isValidTimeout && this.state.timeoutRetryRoute.isValidRetry,\n          this.state.timeoutRetryRoute\n        );\n      }\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <Form\n          isHorizontal={true}\n          style={{\n            paddingTop: 10,\n            paddingBottom: 10\n          }}\n        >\n          <RouteTimeout\n            isTimeout={this.state.timeoutRetryRoute.isTimeout}\n            timeout={this.state.timeoutRetryRoute.timeout}\n            isValid={this.state.timeoutRetryRoute.isValidTimeout}\n            onTimeout={(isTimeout, timeout) => this.updateTimeout(isTimeout, timeout)}\n          />\n          <RouteRetry\n            isRetry={this.state.timeoutRetryRoute.isRetry}\n            retries={this.state.timeoutRetryRoute.retries}\n            isValidRetry={this.state.timeoutRetryRoute.isValidRetry}\n            onRetry={(isRetry, retries) => this.updateRetry(isRetry, retries)}\n          />\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default RequestTimeouts;\n"]},"metadata":{},"sourceType":"module"}