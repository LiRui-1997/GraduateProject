{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/pages/WorkloadDetails/PodStatus.tsx\";\nimport React from 'react';\nimport { ValidationTypes } from '../../types/IstioObjects';\nimport { DEGRADED, HEALTHY, isProxyStatusSynced, mergeStatus } from '../../types/Health';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { createIcon } from '../../components/Health/Helper';\nimport ProxyStatusList from './ProxyStatusList';\nimport { highestSeverity, validationToHealth } from '../../types/ServiceInfo';\nimport ValidationStack from '../../components/Validations/ValidationStack';\n\nvar PodStatus = /*#__PURE__*/function (_React$Component) {\n  _inherits(PodStatus, _React$Component);\n\n  var _super = _createSuper(PodStatus);\n\n  function PodStatus() {\n    var _this;\n\n    _classCallCheck(this, PodStatus);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.proxyStatusSeverity = function () {\n      return _this.props.proxyStatus && !isProxyStatusSynced(_this.props.proxyStatus) ? DEGRADED : HEALTHY;\n    };\n\n    _this.severityIcon = function () {\n      var proxyStatusSeverity = _this.proxyStatusSeverity();\n\n      var validationSeverity = validationToHealth(highestSeverity(_this.props.checks || []));\n      return mergeStatus(proxyStatusSeverity, validationSeverity);\n    };\n\n    _this.showTooltip = function () {\n      var proxyStatusSeverity = _this.proxyStatusSeverity();\n\n      var validationSeverity = highestSeverity(_this.props.checks || []);\n      return proxyStatusSeverity.name !== HEALTHY.name || validationSeverity !== ValidationTypes.Correct;\n    };\n\n    _this.content = function () {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProxyStatusList, {\n        status: _this.props.proxyStatus,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ValidationStack, {\n        checks: _this.props.checks,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(PodStatus, [{\n    key: \"render\",\n    value: function render() {\n      if (this.showTooltip()) {\n        return /*#__PURE__*/React.createElement(Tooltip, {\n          \"aria-label\": 'Pod Status',\n          position: TooltipPosition.auto,\n          enableFlip: true,\n          content: this.content(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }\n        }, createIcon(this.severityIcon(), 'sm')));\n      } else {\n        return createIcon(HEALTHY, 'sm');\n      }\n    }\n  }]);\n\n  return PodStatus;\n}(React.Component);\n\nexport default PodStatus;","map":{"version":3,"sources":["/root/kiali-ui/src/pages/WorkloadDetails/PodStatus.tsx"],"names":["React","ValidationTypes","DEGRADED","HEALTHY","isProxyStatusSynced","mergeStatus","Tooltip","TooltipPosition","createIcon","ProxyStatusList","highestSeverity","validationToHealth","ValidationStack","PodStatus","proxyStatusSeverity","props","proxyStatus","severityIcon","validationSeverity","checks","showTooltip","name","Correct","content","auto","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAsBC,eAAtB,QAA6C,0BAA7C;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,mBAA5B,EAAiDC,WAAjD,QAAyF,oBAAzF;AACA,SAASC,OAAT,EAAkBC,eAAlB,QAAyC,wBAAzC;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,yBAApD;AACA,OAAOC,eAAP,MAA4B,8CAA5B;;IAOMC,S;;;;;;;;;;;;;;;;UACJC,mB,GAAsB,YAAc;AAClC,aAAO,MAAKC,KAAL,CAAWC,WAAX,IAA0B,CAACZ,mBAAmB,CAAC,MAAKW,KAAL,CAAWC,WAAZ,CAA9C,GAAyEd,QAAzE,GAAoFC,OAA3F;AACD,K;;UAEDc,Y,GAAe,YAAM;AACnB,UAAMH,mBAA2B,GAAG,MAAKA,mBAAL,EAApC;;AACA,UAAMI,kBAA0B,GAAGP,kBAAkB,CAACD,eAAe,CAAC,MAAKK,KAAL,CAAWI,MAAX,IAAqB,EAAtB,CAAhB,CAArD;AACA,aAAOd,WAAW,CAACS,mBAAD,EAAsBI,kBAAtB,CAAlB;AACD,K;;UAEDE,W,GAAc,YAAe;AAC3B,UAAMN,mBAA2B,GAAG,MAAKA,mBAAL,EAApC;;AACA,UAAMI,kBAAmC,GAAGR,eAAe,CAAC,MAAKK,KAAL,CAAWI,MAAX,IAAqB,EAAtB,CAA3D;AACA,aAAOL,mBAAmB,CAACO,IAApB,KAA6BlB,OAAO,CAACkB,IAArC,IAA6CH,kBAAkB,KAAKjB,eAAe,CAACqB,OAA3F;AACD,K;;UAEDC,O,GAAU,YAAM;AACd,0BACE,uDACE,oBAAC,eAAD;AAAiB,QAAA,MAAM,EAAE,MAAKR,KAAL,CAAWC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,eAAD;AAAiB,QAAA,MAAM,EAAE,MAAKD,KAAL,CAAWI,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD,K;;;;;;;WAED,kBAAS;AACP,UAAI,KAAKC,WAAL,EAAJ,EAAwB;AACtB,4BACE,oBAAC,OAAD;AAAS,wBAAY,YAArB;AAAmC,UAAA,QAAQ,EAAEb,eAAe,CAACiB,IAA7D;AAAmE,UAAA,UAAU,EAAE,IAA/E;AAAqF,UAAA,OAAO,EAAE,KAAKD,OAAL,EAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOf,UAAU,CAAC,KAAKS,YAAL,EAAD,EAAsB,IAAtB,CAAjB,CADF,CADF;AAKD,OAND,MAMO;AACL,eAAOT,UAAU,CAACL,OAAD,EAAU,IAAV,CAAjB;AACD;AACF;;;;EApCqBH,KAAK,CAACyB,S;;AAsC9B,eAAeZ,SAAf","sourcesContent":["import React from 'react';\nimport { ObjectCheck, ValidationTypes } from '../../types/IstioObjects';\nimport { DEGRADED, HEALTHY, isProxyStatusSynced, mergeStatus, ProxyStatus, Status } from '../../types/Health';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { createIcon } from '../../components/Health/Helper';\nimport ProxyStatusList from './ProxyStatusList';\nimport { highestSeverity, validationToHealth } from '../../types/ServiceInfo';\nimport ValidationStack from '../../components/Validations/ValidationStack';\n\ntype Props = {\n  checks?: ObjectCheck[];\n  proxyStatus?: ProxyStatus;\n};\n\nclass PodStatus extends React.Component<Props> {\n  proxyStatusSeverity = (): Status => {\n    return this.props.proxyStatus && !isProxyStatusSynced(this.props.proxyStatus) ? DEGRADED : HEALTHY;\n  };\n\n  severityIcon = () => {\n    const proxyStatusSeverity: Status = this.proxyStatusSeverity();\n    const validationSeverity: Status = validationToHealth(highestSeverity(this.props.checks || []));\n    return mergeStatus(proxyStatusSeverity, validationSeverity);\n  };\n\n  showTooltip = (): boolean => {\n    const proxyStatusSeverity: Status = this.proxyStatusSeverity();\n    const validationSeverity: ValidationTypes = highestSeverity(this.props.checks || []);\n    return proxyStatusSeverity.name !== HEALTHY.name || validationSeverity !== ValidationTypes.Correct;\n  };\n\n  content = () => {\n    return (\n      <>\n        <ProxyStatusList status={this.props.proxyStatus} />\n        <ValidationStack checks={this.props.checks} />\n      </>\n    );\n  };\n\n  render() {\n    if (this.showTooltip()) {\n      return (\n        <Tooltip aria-label={'Pod Status'} position={TooltipPosition.auto} enableFlip={true} content={this.content()}>\n          <span>{createIcon(this.severityIcon(), 'sm')}</span>\n        </Tooltip>\n      );\n    } else {\n      return createIcon(HEALTHY, 'sm');\n    }\n  }\n}\nexport default PodStatus;\n"]},"metadata":{},"sourceType":"module"}