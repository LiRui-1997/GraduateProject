{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/components/Health/HealthIndicator.tsx\";\nimport * as React from 'react';\nimport { PopoverPosition, Tooltip } from '@patternfly/react-core';\nimport { HealthDetails } from './HealthDetails';\nimport * as H from '../../types/Health';\nimport { createIcon } from './Helper';\nimport { createTooltipIcon } from '../../config/KialiIcon';\nimport './Health.css';\nexport var HealthIndicator = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(HealthIndicator, _React$PureComponent);\n\n  var _super = _createSuper(HealthIndicator);\n\n  function HealthIndicator(props) {\n    var _this;\n\n    _classCallCheck(this, HealthIndicator);\n\n    _this = _super.call(this, props);\n    _this.state = HealthIndicator.getDerivedStateFromProps(props);\n    return _this;\n  }\n\n  _createClass(HealthIndicator, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.health) {\n        // HealthIndicator will render always in SMALL mode\n        var icon = createIcon(this.state.globalStatus, 'sm');\n        return /*#__PURE__*/React.createElement(Tooltip, {\n          \"aria-label\": 'Health indicator',\n          content: /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"strong\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }\n          }, this.state.globalStatus.name), /*#__PURE__*/React.createElement(HealthDetails, {\n            health: this.props.health,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }\n          })),\n          position: PopoverPosition.auto,\n          className: 'health_indicator',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 9\n          }\n        }, createTooltipIcon(icon));\n      }\n\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 12\n        }\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props) {\n      return {\n        globalStatus: props.health ? props.health.getGlobalStatus() : H.NA\n      };\n    }\n  }]);\n\n  return HealthIndicator;\n}(React.PureComponent);","map":{"version":3,"sources":["/root/GraduateProject/src/components/Health/HealthIndicator.tsx"],"names":["React","PopoverPosition","Tooltip","HealthDetails","H","createIcon","createTooltipIcon","HealthIndicator","props","state","getDerivedStateFromProps","health","icon","globalStatus","name","auto","getGlobalStatus","NA","PureComponent"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,eAAT,EAA0BC,OAA1B,QAAyC,wBAAzC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAO,KAAKC,CAAZ,MAAmB,oBAAnB;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,OAAO,cAAP;AAYA,WAAaC,eAAb;AAAA;;AAAA;;AAOE,2BAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AACxB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAaF,eAAe,CAACG,wBAAhB,CAAyCF,KAAzC,CAAb;AAFwB;AAGzB;;AAVH;AAAA;AAAA,WAYE,kBAAS;AACP,UAAI,KAAKA,KAAL,CAAWG,MAAf,EAAuB;AACrB;AACA,YAAMC,IAAI,GAAGP,UAAU,CAAC,KAAKI,KAAL,CAAWI,YAAZ,EAA0B,IAA1B,CAAvB;AACA,4BACE,oBAAC,OAAD;AACE,wBAAY,kBADd;AAEE,UAAA,OAAO,eACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAS,KAAKJ,KAAL,CAAWI,YAAX,CAAwBC,IAAjC,CADF,eAEE,oBAAC,aAAD;AAAe,YAAA,MAAM,EAAE,KAAKN,KAAL,CAAWG,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CAHJ;AAQE,UAAA,QAAQ,EAAEV,eAAe,CAACc,IAR5B;AASE,UAAA,SAAS,EAAE,kBATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAWGT,iBAAiB,CAACM,IAAD,CAXpB,CADF;AAeD;;AACD,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AAjCH;AAAA;AAAA,WACE,kCAAgCJ,KAAhC,EAA8C;AAC5C,aAAO;AACLK,QAAAA,YAAY,EAAEL,KAAK,CAACG,MAAN,GAAeH,KAAK,CAACG,MAAN,CAAaK,eAAb,EAAf,GAAgDZ,CAAC,CAACa;AAD3D,OAAP;AAGD;AALH;;AAAA;AAAA,EAAqCjB,KAAK,CAACkB,aAA3C","sourcesContent":["import * as React from 'react';\nimport { PopoverPosition, Tooltip } from '@patternfly/react-core';\nimport { HealthDetails } from './HealthDetails';\nimport * as H from '../../types/Health';\nimport { createIcon } from './Helper';\nimport { createTooltipIcon } from '../../config/KialiIcon';\nimport './Health.css';\n\ninterface Props {\n  id: string;\n  health?: H.Health;\n  tooltipPlacement?: PopoverPosition;\n}\n\ninterface HealthState {\n  globalStatus: H.Status;\n}\n\nexport class HealthIndicator extends React.PureComponent<Props, HealthState> {\n  static getDerivedStateFromProps(props: Props) {\n    return {\n      globalStatus: props.health ? props.health.getGlobalStatus() : H.NA\n    };\n  }\n\n  constructor(props: Props) {\n    super(props);\n    this.state = HealthIndicator.getDerivedStateFromProps(props);\n  }\n\n  render() {\n    if (this.props.health) {\n      // HealthIndicator will render always in SMALL mode\n      const icon = createIcon(this.state.globalStatus, 'sm');\n      return (\n        <Tooltip\n          aria-label={'Health indicator'}\n          content={\n            <div>\n              <strong>{this.state.globalStatus.name}</strong>\n              <HealthDetails health={this.props.health} />\n            </div>\n          }\n          position={PopoverPosition.auto}\n          className={'health_indicator'}\n        >\n          {createTooltipIcon(icon)}\n        </Tooltip>\n      );\n    }\n    return <span />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}