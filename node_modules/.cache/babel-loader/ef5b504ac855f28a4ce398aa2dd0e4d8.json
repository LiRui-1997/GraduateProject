{"ast":null,"code":"import _pt from \"prop-types\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * header-row.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\n\n\nimport * as React from 'react';\nimport { evaluateFormatters } from './evaluate-formatters';\nimport { evaluateTransforms } from './evaluate-transforms';\nimport { mergeProps } from './merge-props';\nexport var HeaderRow = function HeaderRow(_ref) {\n  var rowData = _ref.rowData,\n      rowIndex = _ref.rowIndex,\n      renderers = _ref.renderers,\n      _ref$onRow = _ref.onRow,\n      onRow = _ref$onRow === void 0 ? function () {\n    return Object;\n  } : _ref$onRow;\n  return React.createElement(renderers.row, onRow(rowData, {\n    rowIndex: rowIndex\n  }), rowData.map(function (column, columnIndex) {\n    var property = column.property,\n        _column$header = column.header,\n        header = _column$header === void 0 ? {} : _column$header,\n        _column$props = column.props,\n        props = _column$props === void 0 ? {} : _column$props;\n    var evaluatedProperty = property || header && header.property;\n    var label = header.label,\n        _header$transforms = header.transforms,\n        transforms = _header$transforms === void 0 ? [] : _header$transforms,\n        _header$formatters = header.formatters,\n        formatters = _header$formatters === void 0 ? [] : _header$formatters;\n    var extraParameters = {\n      columnIndex: columnIndex,\n      property: evaluatedProperty,\n      column: column\n    };\n    var transformedProps = evaluateTransforms(transforms, label, extraParameters);\n\n    if (!transformedProps) {\n      // tslint:disable-next-line:no-console\n      console.warn('Table.Header - Failed to receive a transformed result'); // eslint-disable-line max-len, no-console\n    }\n\n    return React.createElement(renderers.cell, _objectSpread({\n      key: \"\".concat(columnIndex, \"-header\")\n    }, mergeProps(props, header && header.props, transformedProps)), transformedProps.children || evaluateFormatters(formatters)(label, extraParameters));\n  }));\n};\nHeaderRow.propTypes = {\n  rowData: _pt.any.isRequired,\n  rowIndex: _pt.number.isRequired,\n  renderers: _pt.any.isRequired,\n  onRow: _pt.any\n};","map":{"version":3,"sources":["/root/kiali-ui/node_modules/@patternfly/react-table/dist/esm/components/Table/base/header-row.js"],"names":["_pt","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","React","evaluateFormatters","evaluateTransforms","mergeProps","HeaderRow","rowData","rowIndex","renderers","onRow","createElement","row","map","column","columnIndex","property","header","props","evaluatedProperty","label","transforms","formatters","extraParameters","transformedProps","console","warn","cell","children","propTypes","any","isRequired","number"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * header-row.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport * as React from 'react';\nimport { evaluateFormatters } from './evaluate-formatters';\nimport { evaluateTransforms } from './evaluate-transforms';\nimport { mergeProps } from './merge-props';\nexport const HeaderRow = ({\n  rowData,\n  rowIndex,\n  renderers,\n  onRow = () => Object\n}) => React.createElement(renderers.row, onRow(rowData, {\n  rowIndex\n}), rowData.map((column, columnIndex) => {\n  const {\n    property,\n    header = {},\n    props = {}\n  } = column;\n  const evaluatedProperty = property || header && header.property;\n  const {\n    label,\n    transforms = [],\n    formatters = []\n  } = header;\n  const extraParameters = {\n    columnIndex,\n    property: evaluatedProperty,\n    column\n  };\n  const transformedProps = evaluateTransforms(transforms, label, extraParameters);\n\n  if (!transformedProps) {\n    // tslint:disable-next-line:no-console\n    console.warn('Table.Header - Failed to receive a transformed result'); // eslint-disable-line max-len, no-console\n  }\n\n  return React.createElement(renderers.cell, _objectSpread({\n    key: `${columnIndex}-header`\n  }, mergeProps(props, header && header.props, transformedProps)), transformedProps.children || evaluateFormatters(formatters)(label, extraParameters));\n}));\nHeaderRow.propTypes = {\n  rowData: _pt.any.isRequired,\n  rowIndex: _pt.number.isRequired,\n  renderers: _pt.any.isRequired,\n  onRow: _pt.any\n};\n//# sourceMappingURL=header-row.js.map"]},"metadata":{},"sourceType":"module"}