{"ast":null,"code":"import _toConsumableArray from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _this = this,\n    _jsxFileName = \"/root/GraduateProject/src/components/Charts/CustomTooltip.tsx\";\n\nimport * as React from 'react';\nimport { ChartTooltip } from '@patternfly/react-charts';\nimport { Flyout, Point, VictoryLabel } from 'victory';\nvar dy = 15;\nvar headSize = 2 * dy;\nvar yMargin = 8; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar canvasContext = document.createElement('canvas').getContext('2d'); // TODO: safe way to get this programmatically?\n\ncanvasContext.font = '14px overpass'; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar CustomLabel = function CustomLabel(props) {\n  var x = props.x - 11 - props.textWidth / 2;\n  var textsWithHead = props.head ? [props.head, ' '].concat(props.text) : props.text;\n  var headSize = props.head ? 2 * dy : 0;\n  var startY = yMargin + props.y - textsWithHead.length * dy / 2 + headSize;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.activePoints && props.activePoints.filter(function (pt) {\n    return pt.color && !pt.hideLabel;\n  }).map(function (pt, idx) {\n    var symbol = pt.symbol || 'square';\n    return /*#__PURE__*/React.createElement(Point, {\n      key: 'item-' + idx,\n      style: {\n        fill: pt.color,\n        type: symbol\n      },\n      x: x,\n      y: startY + dy * idx,\n      symbol: symbol,\n      size: 5.5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    });\n  }), /*#__PURE__*/React.createElement(VictoryLabel, Object.assign({}, props, {\n    text: textsWithHead,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  })));\n};\n\nvar getHeader = function getHeader(activePoints) {\n  if (activePoints && activePoints.length > 0) {\n    var x = activePoints[0].x;\n\n    if (typeof x === 'object') {\n      // Assume date\n      return x.toLocaleTimeString();\n    }\n  }\n\n  return undefined;\n};\n\nexport var HookedChartTooltip = /*#__PURE__*/function (_React$Component) {\n  _inherits(HookedChartTooltip, _React$Component);\n\n  var _super = _createSuper(HookedChartTooltip);\n\n  function HookedChartTooltip() {\n    _classCallCheck(this, HookedChartTooltip);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HookedChartTooltip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.onOpen && this.props.activePoints) {\n        this.props.onOpen(this.props.activePoints);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.onClose) {\n        this.props.onClose();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ChartTooltip, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n\n  return HookedChartTooltip;\n}(React.Component);\nexport var CustomTooltip = /*#__PURE__*/function (_React$Component2) {\n  _inherits(CustomTooltip, _React$Component2);\n\n  var _super2 = _createSuper(CustomTooltip);\n\n  function CustomTooltip(p) {\n    var _this2;\n\n    _classCallCheck(this, CustomTooltip);\n\n    _this2 = _super2.call(this, p);\n    _this2.state = CustomTooltip.getDerivedStateFromProps(p);\n    return _this2;\n  }\n\n  _createClass(CustomTooltip, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(HookedChartTooltip, Object.assign({}, this.props, {\n        text: this.state.texts,\n        flyoutWidth: this.state.width,\n        flyoutHeight: this.state.height,\n        flyoutComponent: /*#__PURE__*/React.createElement(Flyout, {\n          style: {\n            stroke: 'none',\n            fillOpacity: 0.6\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 26\n          }\n        }),\n        labelComponent: /*#__PURE__*/React.createElement(CustomLabel, {\n          head: this.state.head,\n          textWidth: this.state.textWidth,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }\n        }),\n        constrainToVisibleArea: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props) {\n      var head = props.showTime ? getHeader(props.activePoints) : undefined;\n      var height = props.text.length * dy + 2 * yMargin;\n\n      if (head) {\n        height += headSize;\n      }\n\n      var texts = Array.isArray(props.text) ? props.text : [props.text];\n      var textWidth = Math.max.apply(Math, _toConsumableArray(texts.map(function (t) {\n        return canvasContext.measureText(t).width;\n      })));\n      var width = 50 + (head ? Math.max(textWidth, canvasContext.measureText(head).width) : textWidth);\n      return {\n        head: head,\n        texts: texts,\n        textWidth: textWidth,\n        width: width,\n        height: height\n      };\n    }\n  }]);\n\n  return CustomTooltip;\n}(React.Component);","map":{"version":3,"sources":["/root/GraduateProject/src/components/Charts/CustomTooltip.tsx"],"names":["React","ChartTooltip","Flyout","Point","VictoryLabel","dy","headSize","yMargin","canvasContext","document","createElement","getContext","font","CustomLabel","props","x","textWidth","textsWithHead","head","concat","text","startY","y","length","activePoints","filter","pt","color","hideLabel","map","idx","symbol","fill","type","getHeader","toLocaleTimeString","undefined","HookedChartTooltip","onOpen","onClose","Component","CustomTooltip","p","state","getDerivedStateFromProps","texts","width","height","stroke","fillOpacity","showTime","Array","isArray","Math","max","t","measureText"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ChartTooltip, ChartTooltipProps } from '@patternfly/react-charts';\nimport { Flyout, Point, VictoryLabel } from 'victory';\nimport { VCDataPoint } from 'types/VictoryChartInfo';\n\nconst dy = 15;\nconst headSize = 2 * dy;\nconst yMargin = 8;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst canvasContext: any = document.createElement('canvas').getContext('2d');\n// TODO: safe way to get this programmatically?\ncanvasContext.font = '14px overpass';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst CustomLabel = (props: any & { head?: string; text: string[]; textWidth: number }) => {\n  const x = props.x - 11 - props.textWidth / 2;\n  const textsWithHead = props.head ? [props.head, ' '].concat(props.text) : props.text;\n  const headSize = props.head ? 2 * dy : 0;\n  const startY = yMargin + props.y - (textsWithHead.length * dy) / 2 + headSize;\n  return (\n    <>\n      {props.activePoints &&\n        props.activePoints\n          .filter(pt => pt.color && !pt.hideLabel)\n          .map((pt, idx) => {\n            const symbol = pt.symbol || 'square';\n            return (\n              <Point\n                key={'item-' + idx}\n                style={{ fill: pt.color, type: symbol }}\n                x={x}\n                y={startY + dy * idx}\n                symbol={symbol}\n                size={5.5}\n              />\n            );\n          })}\n      <VictoryLabel {...props} text={textsWithHead} />\n    </>\n  );\n};\n\nconst getHeader = (activePoints?: VCDataPoint[]): string | undefined => {\n  if (activePoints && activePoints.length > 0) {\n    const x = activePoints[0].x;\n    if (typeof x === 'object') {\n      // Assume date\n      return x.toLocaleTimeString();\n    }\n  }\n  return undefined;\n};\n\nexport type HookedTooltipProps<T> = ChartTooltipProps & {\n  activePoints?: (VCDataPoint & T)[];\n  onOpen?: (items: VCDataPoint[]) => void;\n  onClose?: () => void;\n};\n\nexport class HookedChartTooltip<T> extends React.Component<HookedTooltipProps<T>> {\n  componentDidMount() {\n    if (this.props.onOpen && this.props.activePoints) {\n      this.props.onOpen(this.props.activePoints);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.onClose) {\n      this.props.onClose();\n    }\n  }\n\n  render() {\n    return <ChartTooltip {...this.props} />;\n  }\n}\n\ntype Props = HookedTooltipProps<{}> & {\n  showTime?: boolean;\n};\n\ntype State = {\n  texts: string[];\n  head?: string;\n  textWidth: number;\n  width: number;\n  height: number;\n};\n\nexport class CustomTooltip extends React.Component<Props, State> {\n  static getDerivedStateFromProps(props: Props): State {\n    const head = props.showTime ? getHeader(props.activePoints) : undefined;\n    let height = props.text.length * dy + 2 * yMargin;\n    if (head) {\n      height += headSize;\n    }\n    const texts = Array.isArray(props.text) ? props.text : [props.text];\n    const textWidth = Math.max(...texts.map(t => canvasContext.measureText(t).width));\n    const width = 50 + (head ? Math.max(textWidth, canvasContext.measureText(head).width) : textWidth);\n    return {\n      head: head,\n      texts: texts,\n      textWidth: textWidth,\n      width: width,\n      height: height\n    };\n  }\n\n  constructor(p: Props) {\n    super(p);\n    this.state = CustomTooltip.getDerivedStateFromProps(p);\n  }\n\n  render() {\n    return (\n      <HookedChartTooltip\n        {...this.props}\n        text={this.state.texts}\n        flyoutWidth={this.state.width}\n        flyoutHeight={this.state.height}\n        flyoutComponent={<Flyout style={{ stroke: 'none', fillOpacity: 0.6 }} />}\n        labelComponent={<CustomLabel head={this.state.head} textWidth={this.state.textWidth} />}\n        constrainToVisibleArea={true}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}