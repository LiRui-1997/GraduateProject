{"ast":null,"code":"import { createAction } from 'typesafe-actions';\nimport { ActionKeys } from './ActionKeys';\nexport var MetricsStatsActions = {\n  setStats: createAction(ActionKeys.METRICS_STATS_SET, function (resolve) {\n    return function (stats) {\n      return resolve({\n        metricsStats: stats\n      });\n    };\n  })\n};","map":{"version":3,"sources":["/root/kiali-ui/src/actions/MetricsStatsActions.ts"],"names":["createAction","ActionKeys","MetricsStatsActions","setStats","METRICS_STATS_SET","resolve","stats","metricsStats"],"mappings":"AAAA,SAAqBA,YAArB,QAAyC,kBAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AAGA,OAAO,IAAMC,mBAAmB,GAAG;AACjCC,EAAAA,QAAQ,EAAEH,YAAY,CAACC,UAAU,CAACG,iBAAZ,EAA+B,UAAAC,OAAO;AAAA,WAAI,UAACC,KAAD;AAAA,aAC9DD,OAAO,CAAC;AAAEE,QAAAA,YAAY,EAAED;AAAhB,OAAD,CADuD;AAAA,KAAJ;AAAA,GAAtC;AADW,CAA5B","sourcesContent":["import { ActionType, createAction } from 'typesafe-actions';\nimport { ActionKeys } from './ActionKeys';\nimport { MetricsStats } from 'types/Metrics';\n\nexport const MetricsStatsActions = {\n  setStats: createAction(ActionKeys.METRICS_STATS_SET, resolve => (stats: Map<string, MetricsStats>) =>\n    resolve({ metricsStats: stats })\n  )\n};\n\nexport type MetricsStatsAction = ActionType<typeof MetricsStatsActions>;\n"]},"metadata":{},"sourceType":"module"}