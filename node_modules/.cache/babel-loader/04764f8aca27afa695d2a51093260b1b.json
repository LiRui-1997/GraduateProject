{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/pages/extensions/iter8/Iter8ExperimentDetails/TrafficControlInfo.tsx\";\nimport * as React from 'react';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { Card, CardBody, DataList, DataListCell, DataListItem, DataListItemCells, DataListItemRow, EmptyState, EmptyStateBody, EmptyStateVariant, Grid, FlexItem, GridItem, PopoverPosition, Text, Title, Tooltip } from '@patternfly/react-core';\nimport equal from 'fast-deep-equal';\nimport { style } from 'typestyle';\nimport { KialiIcon } from '../../../../config/KialiIcon';\nvar infoStyle = style({\n  margin: '0px 16px 2px 4px'\n});\nvar containerPadding = style({\n  padding: '20px'\n});\n\nvar TrafficControlInfo = /*#__PURE__*/function (_React$Component) {\n  _inherits(TrafficControlInfo, _React$Component);\n\n  var _super = _createSuper(TrafficControlInfo);\n\n  function TrafficControlInfo(props) {\n    var _this;\n\n    _classCallCheck(this, TrafficControlInfo);\n\n    _this = _super.call(this, props);\n\n    _this.getRows = function () {\n      var _this$props$trafficCo, _this$props$trafficCo2, _this$props$trafficCo3;\n\n      var rows = [];\n      (_this$props$trafficCo = _this.props.trafficControl) === null || _this$props$trafficCo === void 0 ? void 0 : (_this$props$trafficCo2 = _this$props$trafficCo.match) === null || _this$props$trafficCo2 === void 0 ? void 0 : (_this$props$trafficCo3 = _this$props$trafficCo2.http) === null || _this$props$trafficCo3 === void 0 ? void 0 : _this$props$trafficCo3.map(function (matchRule, idx) {\n        var _matchRule$headers, _matchRule$uri;\n\n        var matchString = [];\n        (_matchRule$headers = matchRule.headers) === null || _matchRule$headers === void 0 ? void 0 : _matchRule$headers.map(function (h) {\n          matchString.push('headers [' + h.key + '] ' + h.match + ' ' + h.stringMatch + ' ');\n        });\n\n        if ((_matchRule$uri = matchRule.uri) === null || _matchRule$uri === void 0 ? void 0 : _matchRule$uri.match) {\n          matchString.push('uri ' + matchRule.uri.match + ' ' + matchRule.uri.stringMatch);\n        }\n\n        rows.push({\n          cells: [{\n            title: /*#__PURE__*/React.createElement(React.Fragment, null, \" \", idx + 1, \" \")\n          }, {\n            title: /*#__PURE__*/React.createElement(React.Fragment, null, matchString.map(function (match, i) {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                key: 'match_' + i,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }\n              }, match);\n            }))\n          }]\n        });\n      });\n      return rows;\n    };\n\n    _this.state = {\n      columns: [{\n        title: 'Rule order'\n      }, 'Request Matching'],\n      rows: []\n    };\n    return _this;\n  }\n\n  _createClass(TrafficControlInfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState(function () {\n        return {\n          rows: _this2.getRows()\n        };\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this3 = this;\n\n      if (!equal(this.props.trafficControl, prevProps.trafficControl)) {\n        this.setState(function () {\n          return {\n            rows: _this3.getRows()\n          };\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          columns = _this$state.columns,\n          rows = _this$state.rows;\n      return /*#__PURE__*/React.createElement(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        span: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DataList, {\n        \"aria-label\": \"detailTraffic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(DataListItem, {\n        \"aria-labelledby\": \"altorighm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(DataListItemRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(DataListItemCells, {\n        dataListCells: /*#__PURE__*/React.createElement(DataListCell, {\n          key: \"strategy\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }\n        }, \"\\u6D41\\u91CF\\u63A7\\u5236\\u7B56\\u7565\"), \": \", this.props.trafficControl.strategy ? this.props.trafficControl.strategy : 'progressive')),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(DataListItemCells, {\n        dataListCells: /*#__PURE__*/React.createElement(DataListCell, {\n          key: \"strategy\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }\n        }, \"\\u5355\\u6B21\\u5B9E\\u9A8C\\u6700\\u5927\\u6D41\\u91CF\\u589E\\u91CF \"), \": \", this.props.trafficControl.maxIncrement, \" \", '%')),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(DataListItemCells, {\n        dataListCells: /*#__PURE__*/React.createElement(DataListCell, {\n          key: \"strategy\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }\n        }, \"\\u5B9E\\u9A8C\\u7ED3\\u675F\\u540E\\u6267\\u884C \"), \":\", ' ', this.props.trafficControl.onTermination ? this.props.trafficControl.onTermination : 'to_winner')),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }\n      })))), /*#__PURE__*/React.createElement(FlexItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: containerPadding,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Title, {\n        headingLevel: \"h6\",\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 19\n        }\n      }, \"Match Rules\", /*#__PURE__*/React.createElement(Tooltip, {\n        key: 'winnerTooltip',\n        \"aria-label\": 'Winner Tooltip',\n        position: PopoverPosition.auto,\n        content: /*#__PURE__*/React.createElement(React.Fragment, null, \"Match rules used to filter out inbound traffic. With protocol name as a key, its value is an array of Istio matching clauses. Currently, only http is supported\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(KialiIcon.Info, {\n        className: infoStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 23\n        }\n      }))), /*#__PURE__*/React.createElement(Table, {\n        \"aria-label\": \"Compound expandable table\",\n        rows: this.getRows(),\n        cells: columns,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TableHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }\n      }), rows.length > 0 ? /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 23\n        }\n      }) : /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: columns.length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(EmptyState, {\n        variant: EmptyStateVariant.full,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Title, {\n        headingLevel: \"h5\",\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 29\n        }\n      }, \"No Match Rule found\"), /*#__PURE__*/React.createElement(EmptyStateBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 29\n        }\n      }, \"No Match Rules is defined in Experiment\")))))))))));\n    }\n  }]);\n\n  return TrafficControlInfo;\n}(React.Component);\n\nexport default TrafficControlInfo;","map":{"version":3,"sources":["/root/GraduateProject/src/pages/extensions/iter8/Iter8ExperimentDetails/TrafficControlInfo.tsx"],"names":["React","Table","TableBody","TableHeader","Card","CardBody","DataList","DataListCell","DataListItem","DataListItemCells","DataListItemRow","EmptyState","EmptyStateBody","EmptyStateVariant","Grid","FlexItem","GridItem","PopoverPosition","Text","Title","Tooltip","equal","style","KialiIcon","infoStyle","margin","containerPadding","padding","TrafficControlInfo","props","getRows","rows","trafficControl","match","http","map","matchRule","idx","matchString","headers","h","push","key","stringMatch","uri","cells","title","i","state","columns","setState","prevProps","strategy","maxIncrement","onTermination","auto","length","full","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { TrafficControl } from '../../../../types/Iter8';\nimport { IRow, Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport {\n  Card,\n  CardBody,\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  Grid,\n  FlexItem,\n  GridItem,\n  PopoverPosition,\n  Text,\n  Title,\n  Tooltip\n} from '@patternfly/react-core';\nimport equal from 'fast-deep-equal';\nimport { style } from 'typestyle';\nimport { KialiIcon } from '../../../../config/KialiIcon';\n\nconst infoStyle = style({\n  margin: '0px 16px 2px 4px'\n});\nconst containerPadding = style({ padding: '20px' });\n\ninterface TrafficControlInfoProps {\n  trafficControl: TrafficControl;\n}\n\ntype State = {\n  columns: any;\n  rows: any;\n};\n\nclass TrafficControlInfo extends React.Component<TrafficControlInfoProps, State> {\n  constructor(props: TrafficControlInfoProps) {\n    super(props);\n    this.state = {\n      columns: [{ title: 'Rule order' }, 'Request Matching'],\n      rows: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState(() => {\n      return {\n        rows: this.getRows()\n      };\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!equal(this.props.trafficControl, prevProps.trafficControl)) {\n      this.setState(() => {\n        return {\n          rows: this.getRows()\n        };\n      });\n    }\n  }\n\n  getRows = (): IRow[] => {\n    let rows: IRow[] = [];\n    this.props.trafficControl?.match?.http?.map((matchRule, idx) => {\n      const matchString: string[] = [];\n      matchRule.headers?.map(h => {\n        matchString.push('headers [' + h.key + '] ' + h.match + ' ' + h.stringMatch + ' ');\n      });\n      if (matchRule.uri?.match) {\n        matchString.push('uri ' + matchRule.uri.match + ' ' + matchRule.uri.stringMatch);\n      }\n\n      rows.push({\n        cells: [\n          { title: <> {idx + 1} </> },\n          {\n            title: (\n              <>\n                {matchString.map((match, i) => (\n                  <div key={'match_' + i}>{match}</div>\n                ))}\n              </>\n            )\n          }\n        ]\n      });\n    });\n    return rows;\n  };\n\n  render() {\n    const { columns, rows } = this.state;\n    return (\n      <Grid>\n        <GridItem span={12}>\n          <Card>\n            <CardBody>\n              <DataList aria-label=\"detailTraffic\">\n                <DataListItem aria-labelledby=\"altorighm\">\n                  <DataListItemRow>\n                    <DataListItemCells\n                      dataListCells={\n                        <DataListCell key=\"strategy\">\n                          <Text>\n                            <b>流量控制策略</b>\n                            {/* <Tooltip\n                              key={'winnerTooltip'}\n                              aria-label={'Winner Tooltip'}\n                              position={PopoverPosition.auto}\n                              maxWidth=\"30rem\"\n                              content={\n                                <table>\n                                  <tr className={'tr'}>\n                                    <td style={{ verticalAlign: 'top' }}>\n                                      <div style={{ width: '100px' }}>progressive:</div>\n                                    </td>\n                                    <td>渐进式导入全部流量至获胜版本</td>\n                                  </tr>\n                                  <tr>\n                                    <td>top_2:&nbsp;</td>\n                                    <td>在性能评估表现最佳的两个版本之间平分流量</td>\n                                  </tr>\n                                  <tr>\n                                    <td>uniform:&nbsp;</td>\n                                    <td>所有版本平分流量</td>\n                                  </tr>\n                                </table>\n                              }\n                            >\n                              <KialiIcon.Info className={infoStyle} />\n                            </Tooltip> */}\n                            : {this.props.trafficControl.strategy ? this.props.trafficControl.strategy : 'progressive'}\n                          </Text>\n                        </DataListCell>\n                      }\n                    />\n                    <DataListItemCells\n                      dataListCells={\n                        <DataListCell key=\"strategy\">\n                          <Text>\n                            <b>单次实验最大流量增量 </b>\n                            {/* <Tooltip\n                              key={'winnerTooltip'}\n                              aria-label={'Winner Tooltip'}\n                              position={PopoverPosition.auto}\n                              content={\n                                <>\n                                  Specifies the maximum percentage by which traffic routed to a candidate can increase\n                                  during a single iteration of the experiment. Default value: 2 (percent)\n                                </>\n                              }\n                            >\n                              <KialiIcon.Info className={infoStyle} />\n                            </Tooltip> */}\n                            : {this.props.trafficControl.maxIncrement} {'%'}\n                          </Text>\n                        </DataListCell>\n                      }\n                    />\n                    <DataListItemCells\n                      dataListCells={\n                        <DataListCell key=\"strategy\">\n                          <Text>\n                            <b>实验结束后执行 </b>\n                            {/* <Tooltip\n                              key={'winnerTooltip'}\n                              aria-label={'Winner Tooltip'}\n                              position={PopoverPosition.auto}\n                              maxWidth=\"30rem\"\n                              content={\n                                <table>\n                                  <tr className={'tr'}>\n                                    <td style={{ verticalAlign: 'top' }}>\n                                      <div style={{ width: '100px' }}>to_winner:</div>\n                                    </td>\n                                    <td>\n                                      ensures that, if a winning version is found at the end of the experiment, all\n                                      traffic will flow to this version after the experiment terminates.\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>to_baseline:</td>\n                                    <td>\n                                      {' '}\n                                      F ensure that all traffic will flow to the baseline version, after the experiment\n                                      terminates\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>keep_last:</td>\n                                    <td>\n                                      ensure that the traffic split used during the final iteration of the experiment\n                                      continues even after the experiment has terminated.\n                                    </td>\n                                  </tr>\n                                </table>\n                              }\n                            >\n                              <KialiIcon.Info className={infoStyle} />\n                            </Tooltip> */}\n                            :{' '}\n                            {this.props.trafficControl.onTermination\n                              ? this.props.trafficControl.onTermination\n                              : 'to_winner'}\n                          </Text>\n                        </DataListCell>\n                      }\n                    />\n                  </DataListItemRow>\n                </DataListItem>\n              </DataList>\n\n              <FlexItem>\n                <div className={containerPadding}>\n                  <Title headingLevel=\"h6\" size=\"lg\">\n                    Match Rules\n                    <Tooltip\n                      key={'winnerTooltip'}\n                      aria-label={'Winner Tooltip'}\n                      position={PopoverPosition.auto}\n                      content={\n                        <>\n                          Match rules used to filter out inbound traffic. With protocol name as a key, its value is an\n                          array of Istio matching clauses. Currently, only http is supported\n                        </>\n                      }\n                    >\n                      <KialiIcon.Info className={infoStyle} />\n                    </Tooltip>\n                  </Title>\n\n                  <Table aria-label=\"Compound expandable table\" rows={this.getRows()} cells={columns}>\n                    <TableHeader />\n                    {rows.length > 0 ? (\n                      <TableBody />\n                    ) : (\n                      <tr>\n                        <td colSpan={columns.length}>\n                          <EmptyState variant={EmptyStateVariant.full}>\n                            <Title headingLevel=\"h5\" size=\"lg\">\n                              No Match Rule found\n                            </Title>\n                            <EmptyStateBody>No Match Rules is defined in Experiment</EmptyStateBody>\n                          </EmptyState>\n                        </td>\n                      </tr>\n                    )}\n                  </Table>\n                </div>\n              </FlexItem>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </Grid>\n    );\n  }\n}\n\nexport default TrafficControlInfo;\n"]},"metadata":{},"sourceType":"module"}