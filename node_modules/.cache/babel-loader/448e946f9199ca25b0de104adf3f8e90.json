{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _this = this,\n    _jsxFileName = \"/root/kiali-ui/src/components/Nav/Menu.tsx\";\n\nimport _ from 'lodash';\nimport * as React from 'react';\nimport { matchPath } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Nav, NavList, NavItem, PageSidebar } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport history from '../../app/History';\nimport { navItems } from '../../routes';\nimport { serverConfig } from '../../config';\n\nvar ExternalLink = function ExternalLink(_ref) {\n  var href = _ref.href,\n      name = _ref.name;\n  return /*#__PURE__*/React.createElement(NavItem, {\n    isActive: false,\n    key: name,\n    className: 'external_link',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"pf-c-nav__link\",\n    href: href,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, name, \" \", /*#__PURE__*/React.createElement(ExternalLinkAltIcon, {\n    style: {\n      margin: '-4px 0 0 5px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 14\n    }\n  })));\n};\n\nvar Menu = /*#__PURE__*/function (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  var _super = _createSuper(Menu);\n\n  function Menu(props) {\n    var _this2;\n\n    _classCallCheck(this, Menu);\n\n    _this2 = _super.call(this, props);\n\n    _this2.renderMenuItems = function () {\n      var location = _this2.props.location;\n      var allNavItems = navItems;\n      var activeItem = allNavItems.find(function (item) {\n        var isRoute = matchPath(location.pathname, {\n          path: item.to,\n          exact: true,\n          strict: false\n        }) ? true : false;\n\n        if (!isRoute && item.pathsActive) {\n          isRoute = _.filter(item.pathsActive, function (path) {\n            return path.test(location.pathname);\n          }).length > 0;\n        }\n\n        return isRoute;\n      });\n      return allNavItems.filter(function (item) {\n        // Extensions Nav Menu Items are conditionally rendered\n        if (item.title === 'Iter8 Experiments') {\n          return serverConfig.extensions.iter8.enabled;\n        } else if (item.title === 'Mesh') {\n          var _serverConfig$cluster;\n\n          return ((_serverConfig$cluster = serverConfig.clusterInfo) === null || _serverConfig$cluster === void 0 ? void 0 : _serverConfig$cluster.name) !== undefined;\n        }\n\n        return true;\n      }).map(function (item) {\n        if (item.title === 'Distributed Tracing') {\n          return _this2.props.jaegerUrl && /*#__PURE__*/React.createElement(ExternalLink, {\n            key: item.to,\n            href: _this2.props.jaegerUrl,\n            name: \"Distributed Tracing\",\n            __self: _assertThisInitialized(_this2),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }\n          });\n        }\n\n        return /*#__PURE__*/React.createElement(NavItem, {\n          isActive: activeItem === item,\n          key: item.to,\n          __self: _assertThisInitialized(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          id: item.title,\n          to: item.to,\n          onClick: function onClick() {\n            return history.push(item.to);\n          },\n          __self: _assertThisInitialized(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }\n        }, item.title));\n      });\n    };\n\n    _this2.state = {\n      activeItem: 'Overview'\n    };\n    return _this2;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.isNavOpen !== this.props.isNavOpen) {\n        // Dispatch an extra \"resize\" event when side menu toggle to force that metrics charts resize\n        setTimeout(function () {\n          window.dispatchEvent(new Event('resize'));\n        }, 200);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isNavOpen = this.props.isNavOpen;\n      var PageNav =\n      /*#__PURE__*/\n      // <Nav onSelect={() => undefined} onToggle={() => undefined} aria-label=\"Nav\" theme={'dark'}>\n      React.createElement(Nav, {\n        onSelect: function onSelect() {\n          return undefined;\n        },\n        onToggle: function onToggle() {\n          return undefined;\n        },\n        \"aria-label\": \"Nav\",\n        theme: 'dark',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(NavList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, this.renderMenuItems()));\n      return /*#__PURE__*/React.createElement(PageSidebar, {\n        isNavOpen: isNavOpen,\n        nav: PageNav,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\nMenu.contextTypes = {\n  router: function router() {\n    return null;\n  }\n};\nexport default Menu;","map":{"version":3,"sources":["/root/kiali-ui/src/components/Nav/Menu.tsx"],"names":["_","React","matchPath","Link","Nav","NavList","NavItem","PageSidebar","ExternalLinkAltIcon","history","navItems","serverConfig","ExternalLink","href","name","margin","Menu","props","renderMenuItems","location","allNavItems","activeItem","find","item","isRoute","pathname","path","to","exact","strict","pathsActive","filter","test","length","title","extensions","iter8","enabled","clusterInfo","undefined","map","jaegerUrl","push","state","prevProps","isNavOpen","setTimeout","window","dispatchEvent","Event","PageNav","Component","contextTypes","router"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport * as React from 'react';\nimport { matchPath } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Nav, NavList, NavItem, PageSidebar } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport history from '../../app/History';\nimport { navItems } from '../../routes';\nimport { serverConfig } from '../../config';\n\nconst ExternalLink = ({ href, name }) => (\n  <NavItem isActive={false} key={name} className={'external_link'}>\n    <a className=\"pf-c-nav__link\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      {name} <ExternalLinkAltIcon style={{ margin: '-4px 0 0 5px' }} />\n    </a>\n  </NavItem>\n);\n\ntype MenuProps = {\n  isNavOpen: boolean;\n  location: any;\n  jaegerUrl?: string;\n};\n\ntype MenuState = {\n  activeItem: string;\n};\n\nclass Menu extends React.Component<MenuProps, MenuState> {\n  static contextTypes = {\n    router: () => null\n  };\n\n  constructor(props: MenuProps) {\n    super(props);\n    this.state = {\n      activeItem: 'Overview'\n    };\n  }\n\n  componentDidUpdate(prevProps: Readonly<MenuProps>) {\n    if (prevProps.isNavOpen !== this.props.isNavOpen) {\n      // Dispatch an extra \"resize\" event when side menu toggle to force that metrics charts resize\n      setTimeout(() => {\n        window.dispatchEvent(new Event('resize'));\n      }, 200);\n    }\n  }\n\n  renderMenuItems = () => {\n    const { location } = this.props;\n    const allNavItems = navItems\n    const activeItem = allNavItems.find(item => {\n      let isRoute = matchPath(location.pathname, { path: item.to, exact: true, strict: false }) ? true : false;\n      if (!isRoute && item.pathsActive) {\n        isRoute = _.filter(item.pathsActive, path => path.test(location.pathname)).length > 0;\n      }\n      return isRoute;\n    });\n\n    return allNavItems\n      .filter(item => {\n        // Extensions Nav Menu Items are conditionally rendered\n        if (item.title === 'Iter8 Experiments') {\n          return serverConfig.extensions!.iter8!.enabled;\n        } else if (item.title === 'Mesh') {\n          return serverConfig.clusterInfo?.name !== undefined;\n        }\n        return true;\n      })\n      .map(item => {\n        if (item.title === 'Distributed Tracing') {\n          return (\n            this.props.jaegerUrl && (\n              <ExternalLink key={item.to} href={this.props.jaegerUrl} name=\"Distributed Tracing\" />\n            )\n          );\n        }\n\n        return (\n          <NavItem isActive={activeItem === item} key={item.to}>\n            <Link id={item.title} to={item.to} onClick={() => history.push(item.to)}>\n              {item.title}\n            </Link>\n          </NavItem>\n        );\n      });\n  };\n\n  render() {\n    const { isNavOpen } = this.props;\n\n    const PageNav = (\n      // <Nav onSelect={() => undefined} onToggle={() => undefined} aria-label=\"Nav\" theme={'dark'}>\n      <Nav onSelect={() => undefined} onToggle={() => undefined} aria-label=\"Nav\" theme={'dark'} >\n        <NavList>{this.renderMenuItems()}</NavList>\n      </Nav>\n    );\n\n    return <PageSidebar isNavOpen={isNavOpen} nav={PageNav} />;\n  }\n}\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}