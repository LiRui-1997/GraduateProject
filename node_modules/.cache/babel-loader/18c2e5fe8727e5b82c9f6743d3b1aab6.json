{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/pages/ServiceList/ServiceListPage.tsx\";\nimport * as React from 'react';\nimport * as FilterHelper from '../../components/FilterList/FilterHelper';\nimport { RenderContent } from '../../components/Nav/Page';\nimport * as ServiceListFilters from './FiltersAndSorts';\nimport * as FilterComponent from '../../components/FilterList/FilterComponent';\nimport { PromisesRegistry } from '../../utils/CancelablePromises';\nimport { namespaceEquals } from '../../utils/Common';\nimport { FilterSelected, StatefulFilters } from '../../components/Filters/StatefulFilters';\nimport * as API from '../../services/Api';\nimport VirtualList from '../../components/VirtualList/VirtualList';\nimport { activeNamespacesSelector, durationSelector } from '../../store/Selectors';\nimport DefaultSecondaryMasthead from '../../components/DefaultSecondaryMasthead/DefaultSecondaryMasthead';\nimport { connect } from 'react-redux';\nimport TimeDurationContainer from '../../components/Time/TimeDurationComponent';\nimport { sortIstioReferences } from '../AppList/FiltersAndSorts';\n\nvar ServiceListPageComponent = /*#__PURE__*/function (_FilterComponent$Comp) {\n  _inherits(ServiceListPageComponent, _FilterComponent$Comp);\n\n  var _super = _createSuper(ServiceListPageComponent);\n\n  function ServiceListPageComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ServiceListPageComponent);\n\n    _this = _super.call(this, props);\n    _this.promises = new PromisesRegistry();\n    var prevCurrentSortField = FilterHelper.currentSortField(ServiceListFilters.sortFields);\n    var prevIsSortAscending = FilterHelper.isCurrentSortAscending();\n    _this.state = {\n      listItems: [],\n      currentSortField: prevCurrentSortField,\n      isSortAscending: prevIsSortAscending\n    };\n    return _this;\n  }\n\n  _createClass(ServiceListPageComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateListItems();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, _prevState, _snapshot) {\n      var prevCurrentSortField = FilterHelper.currentSortField(ServiceListFilters.sortFields);\n      var prevIsSortAscending = FilterHelper.isCurrentSortAscending();\n\n      if (!namespaceEquals(this.props.activeNamespaces, prevProps.activeNamespaces) || this.props.duration !== prevProps.duration || this.state.currentSortField !== prevCurrentSortField || this.state.isSortAscending !== prevIsSortAscending) {\n        this.setState({\n          currentSortField: prevCurrentSortField,\n          isSortAscending: prevIsSortAscending\n        });\n        this.updateListItems();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.promises.cancelAll();\n    }\n  }, {\n    key: \"sortItemList\",\n    value: function sortItemList(services, sortField, isAscending) {\n      // Chain promises, as there may be an ongoing fetch/refresh and sort can be called after UI interaction\n      // This ensures that the list will display the new data with the right sorting\n      return this.promises.registerChained('sort', services, function (unsorted) {\n        return ServiceListFilters.sortServices(unsorted, sortField, isAscending);\n      });\n    }\n  }, {\n    key: \"updateListItems\",\n    value: function updateListItems() {\n      this.promises.cancelAll();\n      var activeFilters = FilterSelected.getSelected();\n      var namespacesSelected = this.props.activeNamespaces.map(function (item) {\n        return item.name;\n      });\n\n      if (namespacesSelected.length !== 0) {\n        this.fetchServices(namespacesSelected, activeFilters, this.props.duration);\n      } else {\n        this.setState({\n          listItems: []\n        });\n      }\n    }\n  }, {\n    key: \"getServiceItem\",\n    value: function getServiceItem(data, rateInterval) {\n      var _this2 = this;\n\n      if (data.services) {\n        return data.services.map(function (service) {\n          return {\n            name: service.name,\n            istioSidecar: service.istioSidecar,\n            namespace: data.namespace.name,\n            healthPromise: API.getServiceHealth(data.namespace.name, service.name, rateInterval, service.istioSidecar),\n            validation: _this2.getServiceValidation(service.name, data.validations),\n            additionalDetailSample: service.additionalDetailSample,\n            labels: service.labels || {},\n            istioReferences: sortIstioReferences(service.istioReferences, true),\n            kialiWizard: service.kialiWizard\n          };\n        });\n      }\n\n      return [];\n    }\n  }, {\n    key: \"fetchServices\",\n    value: function fetchServices(namespaces, filters, rateInterval) {\n      var _this3 = this;\n\n      var servicesPromises = namespaces.map(function (ns) {\n        return API.getServices(ns);\n      });\n      this.promises.registerAll('services', servicesPromises).then(function (responses) {\n        var serviceListItems = [];\n        responses.forEach(function (response) {\n          serviceListItems = serviceListItems.concat(_this3.getServiceItem(response.data, rateInterval));\n        });\n        return ServiceListFilters.filterBy(serviceListItems, filters);\n      }).then(function (serviceListItems) {\n        _this3.promises.cancel('sort');\n\n        _this3.sortItemList(serviceListItems, _this3.state.currentSortField, _this3.state.isSortAscending).then(function (sorted) {\n          _this3.setState({\n            listItems: sorted\n          });\n        }).catch(function (err) {\n          if (!err.isCanceled) {\n            console.debug(err);\n          }\n        });\n      }).catch(function (err) {\n        if (!err.isCanceled) {\n          _this3.handleAxiosError('Could not fetch services list', err);\n        }\n      });\n    }\n  }, {\n    key: \"getServiceValidation\",\n    value: function getServiceValidation(name, validations) {\n      var type = 'service'; // Using 'service' directly is disallowed\n\n      return validations[type][name];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DefaultSecondaryMasthead, {\n        rightToolbar: /*#__PURE__*/React.createElement(TimeDurationContainer, {\n          key: 'DurationDropdown',\n          id: \"service-list-duration-dropdown\",\n          handleRefresh: this.updateListItems,\n          disabled: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(RenderContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(VirtualList, {\n        rows: this.state.listItems,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(StatefulFilters, {\n        initialFilters: ServiceListFilters.availableFilters,\n        onFilterChange: this.onFilterChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return ServiceListPageComponent;\n}(FilterComponent.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    activeNamespaces: activeNamespacesSelector(state),\n    duration: durationSelector(state)\n  };\n};\n\nvar ServiceListPage = connect(mapStateToProps)(ServiceListPageComponent);\nexport default ServiceListPage;","map":{"version":3,"sources":["/root/kiali-ui/src/pages/ServiceList/ServiceListPage.tsx"],"names":["React","FilterHelper","RenderContent","ServiceListFilters","FilterComponent","PromisesRegistry","namespaceEquals","FilterSelected","StatefulFilters","API","VirtualList","activeNamespacesSelector","durationSelector","DefaultSecondaryMasthead","connect","TimeDurationContainer","sortIstioReferences","ServiceListPageComponent","props","promises","prevCurrentSortField","currentSortField","sortFields","prevIsSortAscending","isCurrentSortAscending","state","listItems","isSortAscending","updateListItems","prevProps","_prevState","_snapshot","activeNamespaces","duration","setState","cancelAll","services","sortField","isAscending","registerChained","unsorted","sortServices","activeFilters","getSelected","namespacesSelected","map","item","name","length","fetchServices","data","rateInterval","service","istioSidecar","namespace","healthPromise","getServiceHealth","validation","getServiceValidation","validations","additionalDetailSample","labels","istioReferences","kialiWizard","namespaces","filters","servicesPromises","ns","getServices","registerAll","then","responses","serviceListItems","forEach","response","concat","getServiceItem","filterBy","cancel","sortItemList","sorted","catch","err","isCanceled","console","debug","handleAxiosError","type","backgroundColor","availableFilters","onFilterChange","Component","mapStateToProps","ServiceListPage"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as FilterHelper from '../../components/FilterList/FilterHelper';\nimport { RenderContent } from '../../components/Nav/Page';\nimport * as ServiceListFilters from './FiltersAndSorts';\nimport * as FilterComponent from '../../components/FilterList/FilterComponent';\nimport { ServiceList, ServiceListItem } from '../../types/ServiceList';\nimport { DurationInSeconds } from '../../types/Common';\nimport Namespace from '../../types/Namespace';\nimport { PromisesRegistry } from '../../utils/CancelablePromises';\nimport { namespaceEquals } from '../../utils/Common';\nimport { SortField } from '../../types/SortFilters';\nimport { ActiveFiltersInfo } from '../../types/Filters';\nimport { FilterSelected, StatefulFilters } from '../../components/Filters/StatefulFilters';\nimport * as API from '../../services/Api';\nimport { ObjectValidation, Validations } from '../../types/IstioObjects';\nimport VirtualList from '../../components/VirtualList/VirtualList';\nimport { KialiAppState } from '../../store/Store';\nimport { activeNamespacesSelector, durationSelector } from '../../store/Selectors';\nimport DefaultSecondaryMasthead from '../../components/DefaultSecondaryMasthead/DefaultSecondaryMasthead';\nimport { connect } from 'react-redux';\nimport TimeDurationContainer from '../../components/Time/TimeDurationComponent';\nimport { sortIstioReferences } from '../AppList/FiltersAndSorts';\n\ntype ServiceListPageState = FilterComponent.State<ServiceListItem>;\n\ntype ReduxProps = {\n  duration: DurationInSeconds;\n  activeNamespaces: Namespace[];\n};\n\ntype ServiceListPageProps = ReduxProps & FilterComponent.Props<ServiceListItem>;\n\nclass ServiceListPageComponent extends FilterComponent.Component<\n  ServiceListPageProps,\n  ServiceListPageState,\n  ServiceListItem\n> {\n  private promises = new PromisesRegistry();\n\n  constructor(props: ServiceListPageProps) {\n    super(props);\n    const prevCurrentSortField = FilterHelper.currentSortField(ServiceListFilters.sortFields);\n    const prevIsSortAscending = FilterHelper.isCurrentSortAscending();\n    this.state = {\n      listItems: [],\n      currentSortField: prevCurrentSortField,\n      isSortAscending: prevIsSortAscending\n    };\n  }\n\n  componentDidMount() {\n    this.updateListItems();\n  }\n\n  componentDidUpdate(prevProps: ServiceListPageProps, _prevState: ServiceListPageState, _snapshot: any) {\n    const prevCurrentSortField = FilterHelper.currentSortField(ServiceListFilters.sortFields);\n    const prevIsSortAscending = FilterHelper.isCurrentSortAscending();\n    if (\n      !namespaceEquals(this.props.activeNamespaces, prevProps.activeNamespaces) ||\n      this.props.duration !== prevProps.duration ||\n      this.state.currentSortField !== prevCurrentSortField ||\n      this.state.isSortAscending !== prevIsSortAscending\n    ) {\n      this.setState({\n        currentSortField: prevCurrentSortField,\n        isSortAscending: prevIsSortAscending\n      });\n      this.updateListItems();\n    }\n  }\n\n  componentWillUnmount() {\n    this.promises.cancelAll();\n  }\n\n  sortItemList(services: ServiceListItem[], sortField: SortField<ServiceListItem>, isAscending: boolean) {\n    // Chain promises, as there may be an ongoing fetch/refresh and sort can be called after UI interaction\n    // This ensures that the list will display the new data with the right sorting\n    return this.promises.registerChained('sort', services, unsorted =>\n      ServiceListFilters.sortServices(unsorted, sortField, isAscending)\n    );\n  }\n\n  updateListItems() {\n    this.promises.cancelAll();\n\n    const activeFilters: ActiveFiltersInfo = FilterSelected.getSelected();\n    const namespacesSelected = this.props.activeNamespaces.map(item => item.name);\n\n    if (namespacesSelected.length !== 0) {\n      this.fetchServices(namespacesSelected, activeFilters, this.props.duration);\n    } else {\n      this.setState({ listItems: [] });\n    }\n  }\n\n  getServiceItem(data: ServiceList, rateInterval: number): ServiceListItem[] {\n    if (data.services) {\n      return data.services.map(service => ({\n        name: service.name,\n        istioSidecar: service.istioSidecar,\n        namespace: data.namespace.name,\n        healthPromise: API.getServiceHealth(data.namespace.name, service.name, rateInterval, service.istioSidecar),\n        validation: this.getServiceValidation(service.name, data.validations),\n        additionalDetailSample: service.additionalDetailSample,\n        labels: service.labels || {},\n        istioReferences: sortIstioReferences(service.istioReferences, true),\n        kialiWizard: service.kialiWizard\n      }));\n    }\n    return [];\n  }\n\n  fetchServices(namespaces: string[], filters: ActiveFiltersInfo, rateInterval: number) {\n    const servicesPromises = namespaces.map(ns => API.getServices(ns));\n\n    this.promises\n      .registerAll('services', servicesPromises)\n      .then(responses => {\n        let serviceListItems: ServiceListItem[] = [];\n        responses.forEach(response => {\n          serviceListItems = serviceListItems.concat(this.getServiceItem(response.data, rateInterval));\n        });\n        return ServiceListFilters.filterBy(serviceListItems, filters);\n      })\n      .then(serviceListItems => {\n        this.promises.cancel('sort');\n        this.sortItemList(serviceListItems, this.state.currentSortField, this.state.isSortAscending)\n          .then(sorted => {\n            this.setState({\n              listItems: sorted\n            });\n          })\n          .catch(err => {\n            if (!err.isCanceled) {\n              console.debug(err);\n            }\n          });\n      })\n      .catch(err => {\n        if (!err.isCanceled) {\n          this.handleAxiosError('Could not fetch services list', err);\n        }\n      });\n  }\n\n  getServiceValidation(name: string, validations: Validations): ObjectValidation {\n    const type = 'service'; // Using 'service' directly is disallowed\n    return validations[type][name];\n  }\n\n  render() {\n    return (\n      <>\n        <div style={{ backgroundColor: '#fff' }}>\n          <DefaultSecondaryMasthead\n            rightToolbar={\n              <TimeDurationContainer\n                key={'DurationDropdown'}\n                id=\"service-list-duration-dropdown\"\n                handleRefresh={this.updateListItems}\n                disabled={false}\n              />\n            }\n          />\n        </div>\n        <RenderContent>\n          <VirtualList rows={this.state.listItems}>\n            <StatefulFilters\n              initialFilters={ServiceListFilters.availableFilters}\n              onFilterChange={this.onFilterChange}\n            />\n          </VirtualList>\n        </RenderContent>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: KialiAppState) => ({\n  activeNamespaces: activeNamespacesSelector(state),\n  duration: durationSelector(state)\n});\n\nconst ServiceListPage = connect(mapStateToProps)(ServiceListPageComponent);\nexport default ServiceListPage;\n"]},"metadata":{},"sourceType":"module"}