{"ast":null,"code":"\"use strict\";\n\n(function () {\n  // registers the extension on a cytoscape lib ref\n  var register = function register(cytoscape) {\n    if (!cytoscape) {\n      return;\n    }\n\n    var cyCanvas = function cyCanvas(args) {\n      var cy = this;\n      var container = cy.container();\n      var canvas = document.createElement(\"canvas\");\n      container.appendChild(canvas);\n      var defaults = {\n        zIndex: 1,\n        pixelRatio: \"auto\"\n      };\n      var options = Object.assign({}, defaults, args);\n\n      if (options.pixelRatio === \"auto\") {\n        options.pixelRatio = window.devicePixelRatio || 1;\n      }\n\n      function resize() {\n        var width = container.offsetWidth;\n        var height = container.offsetHeight;\n        var canvasWidth = width * options.pixelRatio;\n        var canvasHeight = height * options.pixelRatio;\n        canvas.width = canvasWidth;\n        canvas.height = canvasHeight;\n        canvas.style.width = width + \"px\";\n        canvas.style.height = height + \"px\";\n        cy.trigger(\"cyCanvas.resize\");\n      }\n\n      cy.on(\"resize\", function () {\n        resize();\n      });\n      canvas.setAttribute(\"style\", \"position:absolute; top:0; left:0; z-index:\" + options.zIndex + \";\");\n      resize();\n      return {\n        /**\n         * @return {Canvas} The generated canvas\n         */\n        getCanvas: function getCanvas() {\n          return canvas;\n        },\n\n        /**\n         * Helper: Clear the canvas\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        clear: function clear(ctx) {\n          var width = cy.width();\n          var height = cy.height();\n          ctx.save();\n          ctx.setTransform(1, 0, 0, 1, 0, 0);\n          ctx.clearRect(0, 0, width * options.pixelRatio, height * options.pixelRatio);\n          ctx.restore();\n        },\n\n        /**\n         * Helper: Reset the context transform to an identity matrix\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        resetTransform: function resetTransform(ctx) {\n          ctx.setTransform(1, 0, 0, 1, 0, 0);\n        },\n\n        /**\n         * Helper: Set the context transform to match Cystoscape's zoom & pan\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        setTransform: function setTransform(ctx) {\n          var pan = cy.pan();\n          var zoom = cy.zoom();\n          ctx.setTransform(1, 0, 0, 1, 0, 0);\n          ctx.translate(pan.x * options.pixelRatio, pan.y * options.pixelRatio);\n          ctx.scale(zoom * options.pixelRatio, zoom * options.pixelRatio);\n        }\n      };\n    };\n\n    cytoscape(\"core\", \"cyCanvas\", cyCanvas);\n  };\n\n  if (typeof module !== \"undefined\" && module.exports) {\n    // expose as a commonjs module\n    module.exports = function (cytoscape) {\n      register(cytoscape);\n    };\n  }\n\n  if (typeof define !== \"undefined\" && define.amd) {\n    // expose as an amd/requirejs module\n    define(\"cytoscape-canvas\", function () {\n      return register;\n    });\n  }\n\n  if (typeof cytoscape !== \"undefined\") {\n    // expose to global cytoscape (i.e. window.cytoscape)\n    register(cytoscape);\n  }\n})();","map":{"version":3,"sources":["/root/GraduateProject/node_modules/cytoscape-canvas/dist/cytoscape-canvas.js"],"names":["register","cytoscape","cyCanvas","args","cy","container","canvas","document","createElement","appendChild","defaults","zIndex","pixelRatio","options","Object","assign","window","devicePixelRatio","resize","width","offsetWidth","height","offsetHeight","canvasWidth","canvasHeight","style","trigger","on","setAttribute","getCanvas","clear","ctx","save","setTransform","clearRect","restore","resetTransform","pan","zoom","translate","x","y","scale","module","exports","define","amd"],"mappings":"AAAA;;AAEA,CAAC,YAAY;AACZ;AACA,MAAIA,QAAQ,GAAG,SAASA,QAAT,CAAkBC,SAAlB,EAA6B;AAC3C,QAAI,CAACA,SAAL,EAAgB;AACf;AACA;;AAED,QAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AACtC,UAAIC,EAAE,GAAG,IAAT;AACA,UAAIC,SAAS,GAAGD,EAAE,CAACC,SAAH,EAAhB;AAEA,UAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AAEAH,MAAAA,SAAS,CAACI,WAAV,CAAsBH,MAAtB;AAEA,UAAII,QAAQ,GAAG;AACdC,QAAAA,MAAM,EAAE,CADM;AAEdC,QAAAA,UAAU,EAAE;AAFE,OAAf;AAKA,UAAIC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,QAAlB,EAA4BP,IAA5B,CAAd;;AAEA,UAAIU,OAAO,CAACD,UAAR,KAAuB,MAA3B,EAAmC;AAClCC,QAAAA,OAAO,CAACD,UAAR,GAAqBI,MAAM,CAACC,gBAAP,IAA2B,CAAhD;AACA;;AAED,eAASC,MAAT,GAAkB;AACjB,YAAIC,KAAK,GAAGd,SAAS,CAACe,WAAtB;AACA,YAAIC,MAAM,GAAGhB,SAAS,CAACiB,YAAvB;AAEA,YAAIC,WAAW,GAAGJ,KAAK,GAAGN,OAAO,CAACD,UAAlC;AACA,YAAIY,YAAY,GAAGH,MAAM,GAAGR,OAAO,CAACD,UAApC;AAEAN,QAAAA,MAAM,CAACa,KAAP,GAAeI,WAAf;AACAjB,QAAAA,MAAM,CAACe,MAAP,GAAgBG,YAAhB;AAEAlB,QAAAA,MAAM,CAACmB,KAAP,CAAaN,KAAb,GAAqBA,KAAK,GAAG,IAA7B;AACAb,QAAAA,MAAM,CAACmB,KAAP,CAAaJ,MAAb,GAAsBA,MAAM,GAAG,IAA/B;AAEAjB,QAAAA,EAAE,CAACsB,OAAH,CAAW,iBAAX;AACA;;AAEDtB,MAAAA,EAAE,CAACuB,EAAH,CAAM,QAAN,EAAgB,YAAY;AAC3BT,QAAAA,MAAM;AACN,OAFD;AAIAZ,MAAAA,MAAM,CAACsB,YAAP,CAAoB,OAApB,EAA6B,+CAA+Cf,OAAO,CAACF,MAAvD,GAAgE,GAA7F;AAEAO,MAAAA,MAAM;AAEN,aAAO;AACN;AACJ;AACA;AACIW,QAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB;AAC/B,iBAAOvB,MAAP;AACA,SANK;;AAQN;AACJ;AACA;AACA;AACIwB,QAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,GAAf,EAAoB;AAC1B,cAAIZ,KAAK,GAAGf,EAAE,CAACe,KAAH,EAAZ;AACA,cAAIE,MAAM,GAAGjB,EAAE,CAACiB,MAAH,EAAb;AACAU,UAAAA,GAAG,CAACC,IAAJ;AACAD,UAAAA,GAAG,CAACE,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC;AACAF,UAAAA,GAAG,CAACG,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBf,KAAK,GAAGN,OAAO,CAACD,UAApC,EAAgDS,MAAM,GAAGR,OAAO,CAACD,UAAjE;AACAmB,UAAAA,GAAG,CAACI,OAAJ;AACA,SAnBK;;AAqBN;AACJ;AACA;AACA;AACIC,QAAAA,cAAc,EAAE,SAASA,cAAT,CAAwBL,GAAxB,EAA6B;AAC5CA,UAAAA,GAAG,CAACE,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC;AACA,SA3BK;;AA6BN;AACJ;AACA;AACA;AACIA,QAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBF,GAAtB,EAA2B;AACxC,cAAIM,GAAG,GAAGjC,EAAE,CAACiC,GAAH,EAAV;AACA,cAAIC,IAAI,GAAGlC,EAAE,CAACkC,IAAH,EAAX;AACAP,UAAAA,GAAG,CAACE,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC;AACAF,UAAAA,GAAG,CAACQ,SAAJ,CAAcF,GAAG,CAACG,CAAJ,GAAQ3B,OAAO,CAACD,UAA9B,EAA0CyB,GAAG,CAACI,CAAJ,GAAQ5B,OAAO,CAACD,UAA1D;AACAmB,UAAAA,GAAG,CAACW,KAAJ,CAAUJ,IAAI,GAAGzB,OAAO,CAACD,UAAzB,EAAqC0B,IAAI,GAAGzB,OAAO,CAACD,UAApD;AACA;AAvCK,OAAP;AAyCA,KApFD;;AAsFAX,IAAAA,SAAS,CAAC,MAAD,EAAS,UAAT,EAAqBC,QAArB,CAAT;AACA,GA5FD;;AA8FA,MAAI,OAAOyC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,OAA5C,EAAqD;AACpD;AACAD,IAAAA,MAAM,CAACC,OAAP,GAAiB,UAAU3C,SAAV,EAAqB;AACrCD,MAAAA,QAAQ,CAACC,SAAD,CAAR;AACA,KAFD;AAGA;;AAED,MAAI,OAAO4C,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,GAA5C,EAAiD;AAChD;AACAD,IAAAA,MAAM,CAAC,kBAAD,EAAqB,YAAY;AACtC,aAAO7C,QAAP;AACA,KAFK,CAAN;AAGA;;AAED,MAAI,OAAOC,SAAP,KAAqB,WAAzB,EAAsC;AACrC;AACAD,IAAAA,QAAQ,CAACC,SAAD,CAAR;AACA;AACD,CAlHD","sourcesContent":["\"use strict\";\n\n(function () {\n\t// registers the extension on a cytoscape lib ref\n\tvar register = function register(cytoscape) {\n\t\tif (!cytoscape) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar cyCanvas = function cyCanvas(args) {\n\t\t\tvar cy = this;\n\t\t\tvar container = cy.container();\n\n\t\t\tvar canvas = document.createElement(\"canvas\");\n\n\t\t\tcontainer.appendChild(canvas);\n\n\t\t\tvar defaults = {\n\t\t\t\tzIndex: 1,\n\t\t\t\tpixelRatio: \"auto\"\n\t\t\t};\n\n\t\t\tvar options = Object.assign({}, defaults, args);\n\n\t\t\tif (options.pixelRatio === \"auto\") {\n\t\t\t\toptions.pixelRatio = window.devicePixelRatio || 1;\n\t\t\t}\n\n\t\t\tfunction resize() {\n\t\t\t\tvar width = container.offsetWidth;\n\t\t\t\tvar height = container.offsetHeight;\n\n\t\t\t\tvar canvasWidth = width * options.pixelRatio;\n\t\t\t\tvar canvasHeight = height * options.pixelRatio;\n\n\t\t\t\tcanvas.width = canvasWidth;\n\t\t\t\tcanvas.height = canvasHeight;\n\n\t\t\t\tcanvas.style.width = width + \"px\";\n\t\t\t\tcanvas.style.height = height + \"px\";\n\n\t\t\t\tcy.trigger(\"cyCanvas.resize\");\n\t\t\t}\n\n\t\t\tcy.on(\"resize\", function () {\n\t\t\t\tresize();\n\t\t\t});\n\n\t\t\tcanvas.setAttribute(\"style\", \"position:absolute; top:0; left:0; z-index:\" + options.zIndex + \";\");\n\n\t\t\tresize();\n\n\t\t\treturn {\n\t\t\t\t/**\n     * @return {Canvas} The generated canvas\n     */\n\t\t\t\tgetCanvas: function getCanvas() {\n\t\t\t\t\treturn canvas;\n\t\t\t\t},\n\n\t\t\t\t/**\n     * Helper: Clear the canvas\n     * @param {CanvasRenderingContext2D} ctx\n     */\n\t\t\t\tclear: function clear(ctx) {\n\t\t\t\t\tvar width = cy.width();\n\t\t\t\t\tvar height = cy.height();\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\t\t\tctx.clearRect(0, 0, width * options.pixelRatio, height * options.pixelRatio);\n\t\t\t\t\tctx.restore();\n\t\t\t\t},\n\n\t\t\t\t/**\n     * Helper: Reset the context transform to an identity matrix\n     * @param {CanvasRenderingContext2D} ctx\n     */\n\t\t\t\tresetTransform: function resetTransform(ctx) {\n\t\t\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\t\t},\n\n\t\t\t\t/**\n     * Helper: Set the context transform to match Cystoscape's zoom & pan\n     * @param {CanvasRenderingContext2D} ctx\n     */\n\t\t\t\tsetTransform: function setTransform(ctx) {\n\t\t\t\t\tvar pan = cy.pan();\n\t\t\t\t\tvar zoom = cy.zoom();\n\t\t\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\t\t\tctx.translate(pan.x * options.pixelRatio, pan.y * options.pixelRatio);\n\t\t\t\t\tctx.scale(zoom * options.pixelRatio, zoom * options.pixelRatio);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\n\t\tcytoscape(\"core\", \"cyCanvas\", cyCanvas);\n\t};\n\n\tif (typeof module !== \"undefined\" && module.exports) {\n\t\t// expose as a commonjs module\n\t\tmodule.exports = function (cytoscape) {\n\t\t\tregister(cytoscape);\n\t\t};\n\t}\n\n\tif (typeof define !== \"undefined\" && define.amd) {\n\t\t// expose as an amd/requirejs module\n\t\tdefine(\"cytoscape-canvas\", function () {\n\t\t\treturn register;\n\t\t});\n\t}\n\n\tif (typeof cytoscape !== \"undefined\") {\n\t\t// expose to global cytoscape (i.e. window.cytoscape)\n\t\tregister(cytoscape);\n\t}\n})();"]},"metadata":{},"sourceType":"script"}