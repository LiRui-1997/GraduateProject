{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/components/Refresh/RefreshButton.tsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { SyncAltIcon } from '@patternfly/react-icons';\nimport { GlobalActions } from '../../actions/GlobalActions';\n\nvar RefreshButton = /*#__PURE__*/function (_React$Component) {\n  _inherits(RefreshButton, _React$Component);\n\n  var _super = _createSuper(RefreshButton);\n\n  function RefreshButton() {\n    var _this;\n\n    _classCallCheck(this, RefreshButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleRefresh = function () {\n      _this.props.setLastRefreshAt(Date.now());\n\n      _this.props.handleRefresh();\n    };\n\n    return _this;\n  }\n\n  _createClass(RefreshButton, [{\n    key: \"getElementId\",\n    value: function getElementId() {\n      return this.props.id || 'refresh_button';\n    }\n  }, {\n    key: \"getDisabled\",\n    value: function getDisabled() {\n      return this.props.disabled || false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        position: \"bottom\",\n        content: /*#__PURE__*/React.createElement(React.Fragment, null, \"Refresh\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        id: this.getElementId(),\n        onClick: this.handleRefresh,\n        isDisabled: this.getDisabled(),\n        \"aria-label\": \"Action\",\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(SyncAltIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return RefreshButton;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setLastRefreshAt: function setLastRefreshAt(lastRefreshAt) {\n      dispatch(GlobalActions.setLastRefreshAt(lastRefreshAt));\n    }\n  };\n};\n\nvar RefreshButtonContainer = connect(null, mapDispatchToProps)(RefreshButton);\nexport default RefreshButtonContainer;","map":{"version":3,"sources":["/root/kiali-ui/src/components/Refresh/RefreshButton.tsx"],"names":["React","connect","Button","Tooltip","SyncAltIcon","GlobalActions","RefreshButton","handleRefresh","props","setLastRefreshAt","Date","now","id","disabled","getElementId","getDisabled","Component","mapDispatchToProps","dispatch","lastRefreshAt","RefreshButtonContainer"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,wBAAhC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAKA,SAASC,aAAT,QAA8B,6BAA9B;;IAcMC,a;;;;;;;;;;;;;;;;UAyBIC,a,GAAgB,YAAM;AAC5B,YAAKC,KAAL,CAAWC,gBAAX,CAA4BC,IAAI,CAACC,GAAL,EAA5B;;AACA,YAAKH,KAAL,CAAWD,aAAX;AACD,K;;;;;;;WA3BD,wBAAe;AACb,aAAO,KAAKC,KAAL,CAAWI,EAAX,IAAiB,gBAAxB;AACD;;;WAED,uBAAc;AACZ,aAAO,KAAKJ,KAAL,CAAWK,QAAX,IAAuB,KAA9B;AACD;;;WAED,kBAAS;AACP,0BACE,oBAAC,OAAD;AAAS,QAAA,QAAQ,EAAC,QAAlB;AAA2B,QAAA,OAAO,eAAE,oDAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,EAAE,EAAE,KAAKC,YAAL,EADN;AAEE,QAAA,OAAO,EAAE,KAAKP,aAFhB;AAGE,QAAA,UAAU,EAAE,KAAKQ,WAAL,EAHd;AAIE,sBAAW,QAJb;AAKE,QAAA,OAAO,EAAC,SALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF,CADF;AAaD;;;;EAvByBf,KAAK,CAACgB,S;;AA+BlC,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAkE;AAC3F,SAAO;AACLT,IAAAA,gBAAgB,EAAE,0BAACU,aAAD,EAAuC;AACvDD,MAAAA,QAAQ,CAACb,aAAa,CAACI,gBAAd,CAA+BU,aAA/B,CAAD,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,IAAMC,sBAAsB,GAAGnB,OAAO,CAAC,IAAD,EAAOgB,kBAAP,CAAP,CAAkCX,aAAlC,CAA/B;AAEA,eAAec,sBAAf","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { SyncAltIcon } from '@patternfly/react-icons';\nimport { TimeInMilliseconds } from '../../types/Common';\nimport { KialiAppAction } from '../../actions/KialiAppAction';\nimport { KialiAppState } from '../../store/Store';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { GlobalActions } from '../../actions/GlobalActions';\n\ntype ComponentProps = {\n  id?: string;\n  disabled?: boolean;\n  handleRefresh: () => void;\n};\n\ntype ReduxProps = {\n  setLastRefreshAt: (lastRefreshAt: TimeInMilliseconds) => void;\n};\n\ntype Props = ComponentProps & ReduxProps;\n\nclass RefreshButton extends React.Component<Props> {\n  getElementId() {\n    return this.props.id || 'refresh_button';\n  }\n\n  getDisabled() {\n    return this.props.disabled || false;\n  }\n\n  render() {\n    return (\n      <Tooltip position=\"bottom\" content={<>Refresh</>}>\n        <Button\n          id={this.getElementId()}\n          onClick={this.handleRefresh}\n          isDisabled={this.getDisabled()}\n          aria-label=\"Action\"\n          variant=\"primary\"\n        >\n          <SyncAltIcon />\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  private handleRefresh = () => {\n    this.props.setLastRefreshAt(Date.now());\n    this.props.handleRefresh();\n  };\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<KialiAppState, void, KialiAppAction>) => {\n  return {\n    setLastRefreshAt: (lastRefreshAt: TimeInMilliseconds) => {\n      dispatch(GlobalActions.setLastRefreshAt(lastRefreshAt));\n    }\n  };\n};\n\nconst RefreshButtonContainer = connect(null, mapDispatchToProps)(RefreshButton);\n\nexport default RefreshButtonContainer;\n"]},"metadata":{},"sourceType":"module"}