{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/pages/Graph/GraphToolbar/GraphFindOptions.tsx\";\nimport { Dropdown, DropdownToggle, DropdownItem } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { KialiIcon } from 'config/KialiIcon';\nimport { serverConfig } from 'config';\nimport { style } from 'typestyle';\nvar dropdown = style({\n  minWidth: '20px',\n  width: '20px',\n  paddingLeft: '5px',\n  paddingRight: 0,\n  bottom: '1px'\n});\nexport var GraphFindOptions = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(GraphFindOptions, _React$PureComponent);\n\n  var _super = _createSuper(GraphFindOptions);\n\n  function GraphFindOptions(props) {\n    var _this;\n\n    _classCallCheck(this, GraphFindOptions);\n\n    _this = _super.call(this, props);\n    _this.options = void 0;\n\n    _this.close = function () {\n      _this.setState({\n        isOpen: false\n      });\n    };\n\n    _this.getOptionItems = function (kind) {\n      var options = kind === 'find' ? serverConfig.kialiFeatureFlags.uiDefaults.graph.findOptions : serverConfig.kialiFeatureFlags.uiDefaults.graph.hideOptions;\n      return options.map(function (o) {\n        return /*#__PURE__*/React.createElement(DropdownItem, {\n          key: o.description,\n          onClick: function onClick() {\n            return _this.props.onSelect(o.expression);\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }\n        }, o.description);\n      });\n    };\n\n    _this.onToggle = function (isOpen) {\n      _this.setState({\n        isOpen: isOpen\n      });\n    };\n\n    _this.options = _this.getOptionItems(props.kind);\n    _this.state = {\n      isOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(GraphFindOptions, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Dropdown, {\n        key: \"graph-\".concat(this.props.kind, \"-presets\"),\n        id: \"graph-findhide-presets\",\n        toggle: /*#__PURE__*/React.createElement(DropdownToggle, {\n          className: dropdown,\n          iconComponent: null,\n          onToggle: this.onToggle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(KialiIcon.AngleDown, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }\n        })),\n        isOpen: this.state.isOpen,\n        dropdownItems: this.options,\n        onSelect: this.close,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return GraphFindOptions;\n}(React.PureComponent);","map":{"version":3,"sources":["/root/kiali-ui/src/pages/Graph/GraphToolbar/GraphFindOptions.tsx"],"names":["Dropdown","DropdownToggle","DropdownItem","React","KialiIcon","serverConfig","style","dropdown","minWidth","width","paddingLeft","paddingRight","bottom","GraphFindOptions","props","options","close","setState","isOpen","getOptionItems","kind","kialiFeatureFlags","uiDefaults","graph","findOptions","hideOptions","map","o","description","onSelect","expression","onToggle","state","PureComponent"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,cAAnB,EAAmCC,YAAnC,QAAuD,wBAAvD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,SAASC,KAAT,QAAsB,WAAtB;AAWA,IAAMC,QAAQ,GAAGD,KAAK,CAAC;AACrBE,EAAAA,QAAQ,EAAE,MADW;AAErBC,EAAAA,KAAK,EAAE,MAFc;AAGrBC,EAAAA,WAAW,EAAE,KAHQ;AAIrBC,EAAAA,YAAY,EAAE,CAJO;AAKrBC,EAAAA,MAAM,EAAE;AALa,CAAD,CAAtB;AAQA,WAAaC,gBAAb;AAAA;;AAAA;;AAGE,4BAAYC,KAAZ,EAA0C;AAAA;;AAAA;;AACxC,8BAAMA,KAAN;AADwC,UAF1CC,OAE0C;;AAAA,UA2BlCC,KA3BkC,GA2B1B,YAAM;AACpB,YAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAE;AADI,OAAd;AAGD,KA/ByC;;AAAA,UAiClCC,cAjCkC,GAiCjB,UAACC,IAAD,EAA2C;AAClE,UAAML,OAAO,GACXK,IAAI,KAAK,MAAT,GACIf,YAAY,CAACgB,iBAAb,CAA+BC,UAA/B,CAA2CC,KAA3C,CAAiDC,WADrD,GAEInB,YAAY,CAACgB,iBAAb,CAA+BC,UAA/B,CAA2CC,KAA3C,CAAiDE,WAHvD;AAIA,aAAOV,OAAO,CAACW,GAAR,CAAY,UAAAC,CAAC,EAAI;AACtB,4BACE,oBAAC,YAAD;AAAc,UAAA,GAAG,EAAEA,CAAC,CAACC,WAArB;AAAkC,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAKd,KAAL,CAAWe,QAAX,CAAoBF,CAAC,CAACG,UAAtB,CAAN;AAAA,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGH,CAAC,CAACC,WADL,CADF;AAKD,OANM,CAAP;AAOD,KA7CyC;;AAAA,UA+ClCG,QA/CkC,GA+CvB,UAAAb,MAAM,EAAI;AAC3B,YAAKD,QAAL,CAAc;AACZC,QAAAA,MAAM,EAANA;AADY,OAAd;AAGD,KAnDyC;;AAGxC,UAAKH,OAAL,GAAe,MAAKI,cAAL,CAAoBL,KAAK,CAACM,IAA1B,CAAf;AAEA,UAAKY,KAAL,GAAa;AACXd,MAAAA,MAAM,EAAE;AADG,KAAb;AALwC;AAQzC;;AAXH;AAAA;AAAA,WAaE,kBAAS;AACP,0BACE,oBAAC,QAAD;AACE,QAAA,GAAG,kBAAW,KAAKJ,KAAL,CAAWM,IAAtB,aADL;AAEE,QAAA,EAAE,EAAC,wBAFL;AAGE,QAAA,MAAM,eACJ,oBAAC,cAAD;AAAgB,UAAA,SAAS,EAAEb,QAA3B;AAAqC,UAAA,aAAa,EAAE,IAApD;AAA0D,UAAA,QAAQ,EAAE,KAAKwB,QAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,SAAD,CAAW,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAJJ;AAQE,QAAA,MAAM,EAAE,KAAKC,KAAL,CAAWd,MARrB;AASE,QAAA,aAAa,EAAE,KAAKH,OATtB;AAUE,QAAA,QAAQ,EAAE,KAAKC,KAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAcD;AA5BH;;AAAA;AAAA,EAAsCb,KAAK,CAAC8B,aAA5C","sourcesContent":["import { Dropdown, DropdownToggle, DropdownItem } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { KialiIcon } from 'config/KialiIcon';\nimport { serverConfig } from 'config';\nimport { style } from 'typestyle';\n\ntype FindKind = 'find' | 'hide';\n\ntype GraphFindOptionsProps = {\n  kind: FindKind;\n  onSelect: (expression) => void;\n};\n\ntype GraphFindOptionsState = { isOpen: boolean };\n\nconst dropdown = style({\n  minWidth: '20px',\n  width: '20px',\n  paddingLeft: '5px',\n  paddingRight: 0,\n  bottom: '1px'\n});\n\nexport class GraphFindOptions extends React.PureComponent<GraphFindOptionsProps, GraphFindOptionsState> {\n  options: React.ReactFragment[];\n\n  constructor(props: GraphFindOptionsProps) {\n    super(props);\n\n    this.options = this.getOptionItems(props.kind);\n\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  render() {\n    return (\n      <Dropdown\n        key={`graph-${this.props.kind}-presets`}\n        id=\"graph-findhide-presets\"\n        toggle={\n          <DropdownToggle className={dropdown} iconComponent={null} onToggle={this.onToggle}>\n            <KialiIcon.AngleDown />\n          </DropdownToggle>\n        }\n        isOpen={this.state.isOpen}\n        dropdownItems={this.options}\n        onSelect={this.close}\n      ></Dropdown>\n    );\n  }\n\n  private close = () => {\n    this.setState({\n      isOpen: false\n    });\n  };\n\n  private getOptionItems = (kind: FindKind): React.ReactFragment[] => {\n    const options =\n      kind === 'find'\n        ? serverConfig.kialiFeatureFlags.uiDefaults!.graph.findOptions\n        : serverConfig.kialiFeatureFlags.uiDefaults!.graph.hideOptions;\n    return options.map(o => {\n      return (\n        <DropdownItem key={o.description} onClick={() => this.props.onSelect(o.expression)}>\n          {o.description}\n        </DropdownItem>\n      );\n    });\n  };\n\n  private onToggle = isOpen => {\n    this.setState({\n      isOpen\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}