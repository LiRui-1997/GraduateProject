{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/pages/AppDetails/AppDetailsPage.tsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { Tab } from '@patternfly/react-core';\nimport * as API from '../../services/Api';\nimport AppInfo from './AppInfo';\nimport * as AlertUtils from '../../utils/AlertUtils';\nimport IstioMetricsContainer from '../../components/Metrics/IstioMetrics';\nimport { MetricsObjectTypes } from '../../types/Metrics';\nimport CustomMetricsContainer from '../../components/Metrics/CustomMetrics';\nimport { RenderHeader } from '../../components/Nav/Page';\nimport ParameterizedTabs, { activeTab } from '../../components/Tab/Tabs';\nimport TracesComponent from '../../components/JaegerIntegration/TracesComponent';\nimport TrafficDetails from 'components/TrafficList/TrafficDetails';\nimport TimeControl from '../../components/Time/TimeControl';\nvar tabName = 'tab';\nvar defaultTab = 'info';\nvar tracesTabName = 'traces';\nvar paramToTab = {\n  info: 0,\n  traffic: 1,\n  in_metrics: 2,\n  out_metrics: 3,\n  traces: 4\n};\nvar nextTabIndex = 5;\n\nvar AppDetails = /*#__PURE__*/function (_React$Component) {\n  _inherits(AppDetails, _React$Component);\n\n  var _super = _createSuper(AppDetails);\n\n  function AppDetails(props) {\n    var _this;\n\n    _classCallCheck(this, AppDetails);\n\n    _this = _super.call(this, props);\n\n    _this.fetchApp = function () {\n      API.getApp(_this.props.match.params.namespace, _this.props.match.params.app).then(function (details) {\n        _this.setState({\n          app: details.data\n        });\n      }).catch(function (error) {\n        return AlertUtils.addError('Could not fetch App Details.', error);\n      });\n    };\n\n    _this.state = {\n      currentTab: activeTab(tabName, defaultTab)\n    };\n    return _this;\n  }\n\n  _createClass(AppDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchApp();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var currentTab = activeTab(tabName, defaultTab);\n\n      if (this.props.match.params.namespace !== prevProps.match.params.namespace || this.props.match.params.app !== prevProps.match.params.app || this.props.lastRefreshAt !== prevProps.lastRefreshAt || currentTab !== this.state.currentTab) {\n        if (currentTab === 'info') {\n          this.fetchApp();\n        }\n\n        if (currentTab !== this.state.currentTab) {\n          this.setState({\n            currentTab: currentTab\n          });\n        }\n      }\n    }\n  }, {\n    key: \"runtimeTabs\",\n    value: function runtimeTabs() {\n      var _this2 = this;\n\n      var tabOffset = 0;\n      var tabs = [];\n\n      if (this.state.app) {\n        this.state.app.runtimes.forEach(function (runtime) {\n          runtime.dashboardRefs.forEach(function (dashboard) {\n            if (dashboard.template !== 'envoy') {\n              var tabKey = tabOffset + nextTabIndex;\n              paramToTab['cd-' + dashboard.template] = tabKey;\n              var tab = /*#__PURE__*/React.createElement(Tab, {\n                title: dashboard.title,\n                key: 'cd-' + dashboard.template,\n                eventKey: tabKey,\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(CustomMetricsContainer, {\n                namespace: _this2.props.match.params.namespace,\n                app: _this2.props.match.params.app,\n                template: dashboard.template,\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 17\n                }\n              }));\n              tabs.push(tab);\n              tabOffset++;\n            }\n          });\n        });\n      }\n\n      return tabs;\n    }\n  }, {\n    key: \"staticTabs\",\n    value: function staticTabs() {\n      var overTab = /*#__PURE__*/React.createElement(Tab, {\n        title: \"Overview\",\n        eventKey: 0,\n        key: 'Overview',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(AppInfo, {\n        app: this.state.app,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }));\n      var trafficTab = /*#__PURE__*/React.createElement(Tab, {\n        title: \"Traffic\",\n        eventKey: 1,\n        key: 'Traffic',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(TrafficDetails, {\n        itemName: this.props.match.params.app,\n        itemType: MetricsObjectTypes.APP,\n        namespace: this.props.match.params.namespace,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }));\n      var inTab = /*#__PURE__*/React.createElement(Tab, {\n        title: \"Inbound Metrics\",\n        eventKey: 2,\n        key: 'Inbound Metrics',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(IstioMetricsContainer, {\n        namespace: this.props.match.params.namespace,\n        object: this.props.match.params.app,\n        objectType: MetricsObjectTypes.APP,\n        direction: 'inbound',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }\n      }));\n      var outTab = /*#__PURE__*/React.createElement(Tab, {\n        title: \"Outbound Metrics\",\n        eventKey: 3,\n        key: 'Outbound Metrics',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(IstioMetricsContainer, {\n        namespace: this.props.match.params.namespace,\n        object: this.props.match.params.app,\n        objectType: MetricsObjectTypes.APP,\n        direction: 'outbound',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      })); // Default tabs\n\n      var tabsArray = [overTab, trafficTab, inTab, outTab]; // Conditional Traces tab\n\n      if (this.props.jaegerInfo && this.props.jaegerInfo.enabled) {\n        if (this.props.jaegerInfo.integration) {\n          tabsArray.push( /*#__PURE__*/React.createElement(Tab, {\n            eventKey: 4,\n            style: {\n              textAlign: 'center'\n            },\n            title: 'Traces',\n            key: tracesTabName,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(TracesComponent, {\n            namespace: this.props.match.params.namespace,\n            target: this.props.match.params.app,\n            targetKind: 'app',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 13\n            }\n          })));\n        } else {\n          var service = this.props.jaegerInfo.namespaceSelector ? this.props.match.params.app + '.' + this.props.match.params.namespace : this.props.match.params.app;\n          tabsArray.push( /*#__PURE__*/React.createElement(Tab, {\n            eventKey: 4,\n            href: this.props.jaegerInfo.url + \"/search?service=\".concat(service),\n            target: \"_blank\",\n            title: /*#__PURE__*/React.createElement(React.Fragment, null, \"Traces \", /*#__PURE__*/React.createElement(ExternalLinkAltIcon, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 24\n              }\n            })),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 11\n            }\n          }));\n        }\n      }\n\n      return tabsArray;\n    }\n  }, {\n    key: \"renderTabs\",\n    value: function renderTabs() {\n      // PF4 Tabs doesn't support static tabs followed of an array of tabs created dynamically.\n      return this.staticTabs().concat(this.runtimeTabs());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      // set default to true: all dynamic tabs (unlisted below) are for runtimes dashboards, which uses custom time\n      var useCustomTime = true;\n\n      switch (this.state.currentTab) {\n        case 'info':\n        case 'traffic':\n          useCustomTime = false;\n          break;\n\n        case 'in_metrics':\n        case 'out_metrics':\n        case 'traces':\n          useCustomTime = true;\n          break;\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RenderHeader, {\n        location: this.props.location,\n        rightToolbar: /*#__PURE__*/React.createElement(TimeControl, {\n          customDuration: useCustomTime,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 68\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }\n      }), this.state.app && /*#__PURE__*/React.createElement(ParameterizedTabs, {\n        id: \"basic-tabs\",\n        onSelect: function onSelect(tabValue) {\n          _this3.setState({\n            currentTab: tabValue\n          });\n        },\n        tabMap: paramToTab,\n        tabName: tabName,\n        defaultTab: defaultTab,\n        activeTab: this.state.currentTab,\n        mountOnEnter: true,\n        unmountOnExit: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }\n      }, this.renderTabs()));\n    }\n  }]);\n\n  return AppDetails;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    jaegerInfo: state.jaegerState.info,\n    lastRefreshAt: state.globalState.lastRefreshAt\n  };\n};\n\nvar AppDetailsContainer = connect(mapStateToProps)(AppDetails);\nexport default AppDetailsContainer;","map":{"version":3,"sources":["/root/GraduateProject/src/pages/AppDetails/AppDetailsPage.tsx"],"names":["React","connect","ExternalLinkAltIcon","Tab","API","AppInfo","AlertUtils","IstioMetricsContainer","MetricsObjectTypes","CustomMetricsContainer","RenderHeader","ParameterizedTabs","activeTab","TracesComponent","TrafficDetails","TimeControl","tabName","defaultTab","tracesTabName","paramToTab","info","traffic","in_metrics","out_metrics","traces","nextTabIndex","AppDetails","props","fetchApp","getApp","match","params","namespace","app","then","details","setState","data","catch","error","addError","state","currentTab","prevProps","lastRefreshAt","tabOffset","tabs","runtimes","forEach","runtime","dashboardRefs","dashboard","template","tabKey","tab","title","push","overTab","trafficTab","APP","inTab","outTab","tabsArray","jaegerInfo","enabled","integration","textAlign","service","namespaceSelector","url","staticTabs","concat","runtimeTabs","useCustomTime","location","tabValue","renderTabs","Component","mapStateToProps","jaegerState","globalState","AppDetailsContainer"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { Tab } from '@patternfly/react-core';\n\nimport * as API from '../../services/Api';\nimport { App, AppId } from '../../types/App';\nimport AppInfo from './AppInfo';\nimport * as AlertUtils from '../../utils/AlertUtils';\nimport IstioMetricsContainer from '../../components/Metrics/IstioMetrics';\nimport { MetricsObjectTypes } from '../../types/Metrics';\nimport CustomMetricsContainer from '../../components/Metrics/CustomMetrics';\nimport { RenderHeader } from '../../components/Nav/Page';\nimport { TimeInMilliseconds, TimeRange } from '../../types/Common';\nimport { KialiAppState } from '../../store/Store';\nimport ParameterizedTabs, { activeTab } from '../../components/Tab/Tabs';\nimport { JaegerInfo } from '../../types/JaegerInfo';\nimport TracesComponent from '../../components/JaegerIntegration/TracesComponent';\nimport TrafficDetails from 'components/TrafficList/TrafficDetails';\nimport TimeControl from '../../components/Time/TimeControl';\n\ntype AppDetailsState = {\n  app?: App;\n  // currentTab is needed to (un)mount tab components\n  // when the tab is not rendered.\n  currentTab: string;\n};\n\ntype ReduxProps = {\n  jaegerInfo?: JaegerInfo;\n  lastRefreshAt: TimeInMilliseconds;\n  timeRange: TimeRange;\n};\n\ntype AppDetailsProps = RouteComponentProps<AppId> & ReduxProps;\n\nconst tabName = 'tab';\nconst defaultTab = 'info';\nconst tracesTabName = 'traces';\nconst paramToTab: { [key: string]: number } = {\n  info: 0,\n  traffic: 1,\n  in_metrics: 2,\n  out_metrics: 3,\n  traces: 4\n};\nconst nextTabIndex = 5;\n\nclass AppDetails extends React.Component<AppDetailsProps, AppDetailsState> {\n  constructor(props: AppDetailsProps) {\n    super(props);\n    this.state = { currentTab: activeTab(tabName, defaultTab) };\n  }\n\n  componentDidMount(): void {\n    this.fetchApp();\n  }\n\n  componentDidUpdate(prevProps: AppDetailsProps) {\n    const currentTab = activeTab(tabName, defaultTab);\n    if (\n      this.props.match.params.namespace !== prevProps.match.params.namespace ||\n      this.props.match.params.app !== prevProps.match.params.app ||\n      this.props.lastRefreshAt !== prevProps.lastRefreshAt ||\n      currentTab !== this.state.currentTab\n    ) {\n      if (currentTab === 'info') {\n        this.fetchApp();\n      }\n      if (currentTab !== this.state.currentTab) {\n        this.setState({ currentTab: currentTab });\n      }\n    }\n  }\n\n  private fetchApp = () => {\n    API.getApp(this.props.match.params.namespace, this.props.match.params.app)\n      .then(details => {\n        this.setState({ app: details.data });\n      })\n      .catch(error => AlertUtils.addError('Could not fetch App Details.', error));\n  };\n\n  private runtimeTabs() {\n    let tabOffset = 0;\n\n    const tabs: JSX.Element[] = [];\n    if (this.state.app) {\n      this.state.app.runtimes.forEach(runtime => {\n        runtime.dashboardRefs.forEach(dashboard => {\n          if (dashboard.template !== 'envoy') {\n            const tabKey = tabOffset + nextTabIndex;\n            paramToTab['cd-' + dashboard.template] = tabKey;\n\n            const tab = (\n              <Tab title={dashboard.title} key={'cd-' + dashboard.template} eventKey={tabKey}>\n                <CustomMetricsContainer\n                  namespace={this.props.match.params.namespace}\n                  app={this.props.match.params.app}\n                  template={dashboard.template}\n                />\n              </Tab>\n            );\n            tabs.push(tab);\n            tabOffset++;\n          }\n        });\n      });\n    }\n\n    return tabs;\n  }\n\n  private staticTabs() {\n    const overTab = (\n      <Tab title=\"Overview\" eventKey={0} key={'Overview'}>\n        <AppInfo app={this.state.app} />\n      </Tab>\n    );\n\n    const trafficTab = (\n      <Tab title=\"Traffic\" eventKey={1} key={'Traffic'}>\n        <TrafficDetails\n          itemName={this.props.match.params.app}\n          itemType={MetricsObjectTypes.APP}\n          namespace={this.props.match.params.namespace}\n        />\n      </Tab>\n    );\n\n    const inTab = (\n      <Tab title=\"Inbound Metrics\" eventKey={2} key={'Inbound Metrics'}>\n        <IstioMetricsContainer\n          namespace={this.props.match.params.namespace}\n          object={this.props.match.params.app}\n          objectType={MetricsObjectTypes.APP}\n          direction={'inbound'}\n        />\n      </Tab>\n    );\n\n    const outTab = (\n      <Tab title=\"Outbound Metrics\" eventKey={3} key={'Outbound Metrics'}>\n        <IstioMetricsContainer\n          namespace={this.props.match.params.namespace}\n          object={this.props.match.params.app}\n          objectType={MetricsObjectTypes.APP}\n          direction={'outbound'}\n        />\n      </Tab>\n    );\n\n    // Default tabs\n    const tabsArray: JSX.Element[] = [overTab, trafficTab, inTab, outTab];\n\n    // Conditional Traces tab\n    if (this.props.jaegerInfo && this.props.jaegerInfo.enabled) {\n      if (this.props.jaegerInfo.integration) {\n        tabsArray.push(\n          <Tab eventKey={4} style={{ textAlign: 'center' }} title={'Traces'} key={tracesTabName}>\n            <TracesComponent\n              namespace={this.props.match.params.namespace}\n              target={this.props.match.params.app}\n              targetKind={'app'}\n            />\n          </Tab>\n        );\n      } else {\n        const service = this.props.jaegerInfo.namespaceSelector\n          ? this.props.match.params.app + '.' + this.props.match.params.namespace\n          : this.props.match.params.app;\n        tabsArray.push(\n          <Tab\n            eventKey={4}\n            href={this.props.jaegerInfo.url + `/search?service=${service}`}\n            target=\"_blank\"\n            title={\n              <>\n                Traces <ExternalLinkAltIcon />\n              </>\n            }\n          />\n        );\n      }\n    }\n\n    return tabsArray;\n  }\n\n  private renderTabs() {\n    // PF4 Tabs doesn't support static tabs followed of an array of tabs created dynamically.\n    return this.staticTabs().concat(this.runtimeTabs());\n  }\n\n  render() {\n    // set default to true: all dynamic tabs (unlisted below) are for runtimes dashboards, which uses custom time\n    let useCustomTime = true;\n    switch (this.state.currentTab) {\n      case 'info':\n      case 'traffic':\n        useCustomTime = false;\n        break;\n      case 'in_metrics':\n      case 'out_metrics':\n      case 'traces':\n        useCustomTime = true;\n        break;\n    }\n    return (\n      <>\n        <RenderHeader location={this.props.location} rightToolbar={<TimeControl customDuration={useCustomTime} />} />\n        {this.state.app && (\n          <ParameterizedTabs\n            id=\"basic-tabs\"\n            onSelect={tabValue => {\n              this.setState({ currentTab: tabValue });\n            }}\n            tabMap={paramToTab}\n            tabName={tabName}\n            defaultTab={defaultTab}\n            activeTab={this.state.currentTab}\n            mountOnEnter={true}\n            unmountOnExit={true}\n          >\n            {this.renderTabs()}\n          </ParameterizedTabs>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: KialiAppState) => ({\n  jaegerInfo: state.jaegerState.info,\n  lastRefreshAt: state.globalState.lastRefreshAt\n});\n\nconst AppDetailsContainer = connect(mapStateToProps)(AppDetails);\nexport default AppDetailsContainer;\n"]},"metadata":{},"sourceType":"module"}