{"ast":null,"code":"import _slicedToArray from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/root/kiali-ui/src/components/JaegerIntegration/JaegerResults/JaegerTraceTitle.tsx\";\n\nimport * as React from 'react';\nimport { CardHeader, Dropdown, DropdownItem, KebabToggle, Text, TextVariants } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { fullIDStyle } from './FormattedTraceInfo';\nimport history from 'app/History';\nexport var JaegerTraceTitle = function JaegerTraceTitle(props) {\n  var links = [/*#__PURE__*/React.createElement(DropdownItem, {\n    onClick: function onClick() {\n      return history.push(props.graphURL);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 18\n    }\n  }, \"View on Graph\")];\n\n  if (props.externalURL) {\n    links.push( /*#__PURE__*/React.createElement(DropdownItem, {\n      onClick: function onClick() {\n        return window.open(props.externalURL, '_blank');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, \"View in Tracing \", /*#__PURE__*/React.createElement(ExternalLinkAltIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }\n    })));\n  }\n\n  if (props.comparisonURL) {\n    links.push( /*#__PURE__*/React.createElement(DropdownItem, {\n      onClick: function onClick() {\n        return window.open(props.comparisonURL, '_blank');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, \"Compare with similar traces \", /*#__PURE__*/React.createElement(ExternalLinkAltIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 37\n      }\n    })));\n  }\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      toggled = _React$useState2[0],\n      setToggled = _React$useState2[1];\n\n  return /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    component: TextVariants.h3,\n    style: {\n      margin: 0,\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, props.formattedTrace.name(), /*#__PURE__*/React.createElement(\"span\", {\n    className: fullIDStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, props.formattedTrace.fullID()), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      float: 'right',\n      position: 'relative',\n      top: -9\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, props.formattedTrace.relativeDate(), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      padding: '0 10px 0 10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"|\"), props.formattedTrace.absTime(), \" (\", props.formattedTrace.fromNow(), \")\", /*#__PURE__*/React.createElement(Dropdown, {\n    toggle: /*#__PURE__*/React.createElement(KebabToggle, {\n      onToggle: function onToggle() {\n        return setToggled(!toggled);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }),\n    dropdownItems: links,\n    isPlain: true,\n    isOpen: toggled,\n    position: 'right',\n    style: {\n      top: 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/root/kiali-ui/src/components/JaegerIntegration/JaegerResults/JaegerTraceTitle.tsx"],"names":["React","CardHeader","Dropdown","DropdownItem","KebabToggle","Text","TextVariants","ExternalLinkAltIcon","fullIDStyle","history","JaegerTraceTitle","props","links","push","graphURL","externalURL","window","open","comparisonURL","useState","toggled","setToggled","h3","margin","position","formattedTrace","name","fullID","float","top","relativeDate","padding","absTime","fromNow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { CardHeader, Dropdown, DropdownItem, KebabToggle, Text, TextVariants } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport { FormattedTraceInfo, fullIDStyle } from './FormattedTraceInfo';\nimport history from 'app/History';\n\ninterface Props {\n  formattedTrace: FormattedTraceInfo;\n  externalURL?: string;\n  graphURL: string;\n  comparisonURL?: string;\n}\n\nexport const JaegerTraceTitle = (props: Props) => {\n  const links = [<DropdownItem onClick={() => history.push(props.graphURL)}>View on Graph</DropdownItem>];\n  if (props.externalURL) {\n    links.push(\n      <DropdownItem onClick={() => window.open(props.externalURL, '_blank')}>\n        View in Tracing <ExternalLinkAltIcon />\n      </DropdownItem>\n    );\n  }\n  if (props.comparisonURL) {\n    links.push(\n      <DropdownItem onClick={() => window.open(props.comparisonURL, '_blank')}>\n        Compare with similar traces <ExternalLinkAltIcon />\n      </DropdownItem>\n    );\n  }\n  const [toggled, setToggled] = React.useState(false);\n  return (\n    <CardHeader>\n      <Text component={TextVariants.h3} style={{ margin: 0, position: 'relative' }}>\n        {props.formattedTrace.name()}\n        <span className={fullIDStyle}>{props.formattedTrace.fullID()}</span>\n        <span style={{ float: 'right', position: 'relative', top: -9 }}>\n          {props.formattedTrace.relativeDate()}\n          <span style={{ padding: '0 10px 0 10px' }}>|</span>\n          {props.formattedTrace.absTime()} ({props.formattedTrace.fromNow()})\n          <Dropdown\n            toggle={<KebabToggle onToggle={() => setToggled(!toggled)} />}\n            dropdownItems={links}\n            isPlain={true}\n            isOpen={toggled}\n            position={'right'}\n            style={{ top: 3 }}\n          />\n        </span>\n      </Text>\n    </CardHeader>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}