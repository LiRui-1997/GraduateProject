{"ast":null,"code":"import _slicedToArray from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/pages/IstioConfigDetails/IstioConfigDetailsPage.tsx\";\nimport * as React from 'react';\nimport { Prompt } from 'react-router-dom';\nimport { aceOptions, compareResourceVersion, safeDumpOptions } from '../../types/IstioConfigDetails';\nimport * as AlertUtils from '../../utils/AlertUtils';\nimport * as API from '../../services/Api';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-yaml';\nimport 'ace-builds/src-noconflict/theme-eclipse';\nimport { jsYaml, parseKialiValidations, parseYamlValidations } from '../../types/AceValidations';\nimport IstioActionDropdown from '../../components/IstioActions/IstioActionsDropdown';\nimport { RenderComponentScroll, RenderHeader } from '../../components/Nav/Page';\nimport './IstioConfigDetailsPage.css';\nimport { default as IstioActionButtonsContainer } from '../../components/IstioActions/IstioActionsButtons';\nimport history from '../../app/History';\nimport { Paths } from '../../config';\nimport { MessageType } from '../../types/MessageCenter';\nimport { getIstioObject, mergeJsonPatch } from '../../utils/IstioConfigUtils';\nimport { style } from 'typestyle';\nimport ParameterizedTabs, { activeTab } from '../../components/Tab/Tabs';\nimport { Drawer, DrawerActions, DrawerCloseButton, DrawerContent, DrawerContentBody, DrawerHead, DrawerPanelContent, Tab } from '@patternfly/react-core';\nimport { dicIstioType } from '../../types/IstioConfigList';\nimport { showInMessageCenter } from '../../utils/IstioValidationUtils';\nimport VirtualServiceOverview from './IstioObjectDetails/VirtualServiceOverview';\nimport DestinationRuleOverview from './IstioObjectDetails/DestinationRuleOverview';\nimport IstioStatusMessageList from './IstioObjectDetails/IstioStatusMessageList';\nimport ValidationReferences from './ValidationReferences';\nimport RefreshButtonContainer from '../../components/Refresh/RefreshButton'; // Enables the search box for the ACEeditor\n\nrequire('ace-builds/src-noconflict/ext-searchbox');\n\nvar rightToolbarStyle = style({\n  zIndex: 500\n});\nvar editorDrawer = style({\n  margin: '0'\n}); // TODO perhaps we may want to enable automatic refresh in all list/details pages\n\nvar TIMER_REFRESH = 5000;\nvar tabName = 'list';\nvar paramToTab = {\n  yaml: 0\n};\n\nvar IstioConfigDetailsPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(IstioConfigDetailsPage, _React$Component);\n\n  var _super = _createSuper(IstioConfigDetailsPage);\n\n  function IstioConfigDetailsPage(_props) {\n    var _this;\n\n    _classCallCheck(this, IstioConfigDetailsPage);\n\n    _this = _super.call(this, _props);\n    _this.aceEditorRef = void 0;\n    _this.drawerRef = void 0;\n    _this.promptTo = void 0;\n    _this.timerId = void 0;\n\n    _this.fetchIstioObjectDetails = function () {\n      _this.fetchIstioObjectDetailsFromProps(_this.props.match.params);\n    };\n\n    _this.newIstioObjectPromise = function (props, validate) {\n      return API.getIstioConfigDetail(props.namespace, props.objectType, props.object, validate);\n    };\n\n    _this.fetchIstioObjectDetailsFromProps = function (props) {\n      var promiseConfigDetails = _this.newIstioObjectPromise(props, true);\n\n      window.clearInterval(_this.timerId);\n      _this.timerId = window.setInterval(function () {\n        var timerPromise = _this.newIstioObjectPromise(props, false);\n\n        timerPromise.then(function (resultConfigDetails) {\n          if (resultConfigDetails.data && _this.state.originalIstioObjectDetails) {\n            var _compareResourceVersi = compareResourceVersion(_this.state.originalIstioObjectDetails, resultConfigDetails.data),\n                _compareResourceVersi2 = _slicedToArray(_compareResourceVersi, 3),\n                changed = _compareResourceVersi2[0],\n                type = _compareResourceVersi2[1],\n                newResourceVersion = _compareResourceVersi2[2];\n\n            if (changed) {\n              AlertUtils.addWarning(type + ':' + props.object + ' has a newer version (' + newResourceVersion + '). Reload to see a new version.');\n            }\n          }\n        }).catch(function (error) {\n          _this.setState({\n            isRemoved: true\n          });\n\n          AlertUtils.addError(\"Could not fetch \".concat(props.objectType, \": \").concat(props.object, \" in namespace: \").concat(props.namespace, \". Has it been removed?\"), error);\n        });\n      }, TIMER_REFRESH); // Note that adapters/templates are not supported yet for validations\n\n      promiseConfigDetails.then(function (resultConfigDetails) {\n        _this.setState({\n          istioObjectDetails: resultConfigDetails.data,\n          originalIstioObjectDetails: resultConfigDetails.data,\n          istioValidations: resultConfigDetails.data.validation,\n          originalIstioValidations: resultConfigDetails.data.validation,\n          isModified: false,\n          isExpanded: _this.isExpanded(resultConfigDetails.data),\n          yamlModified: '',\n          currentTab: activeTab(tabName, _this.defaultTab())\n        }, function () {\n          return _this.resizeEditor();\n        });\n      }).catch(function (error) {\n        _this.setState({\n          isRemoved: true\n        });\n\n        AlertUtils.addError(\"Could not fetch Istio object type [\".concat(props.objectType, \"] name [\").concat(props.object, \"] in namespace [\").concat(props.namespace, \"].\"), error);\n      });\n    };\n\n    _this.backToList = function () {\n      // Back to list page\n      history.push(\"/\".concat(Paths.ISTIO, \"?namespaces=\").concat(_this.props.match.params.namespace));\n    };\n\n    _this.canDelete = function () {\n      return _this.state.istioObjectDetails !== undefined && _this.state.istioObjectDetails.permissions.delete;\n    };\n\n    _this.canUpdate = function () {\n      return _this.state.istioObjectDetails !== undefined && _this.state.istioObjectDetails.permissions.update;\n    };\n\n    _this.onCancel = function () {\n      _this.backToList();\n    };\n\n    _this.onDelete = function () {\n      API.deleteIstioConfigDetail(_this.props.match.params.namespace, _this.props.match.params.objectType, _this.props.match.params.object).then(function () {\n        return _this.backToList();\n      }).catch(function (error) {\n        AlertUtils.addError('Could not delete IstioConfig details.', error);\n      });\n    };\n\n    _this.onUpdate = function () {\n      jsYaml.safeLoadAll(_this.state.yamlModified, function (objectModified) {\n        var jsonPatch = JSON.stringify(mergeJsonPatch(objectModified, getIstioObject(_this.state.istioObjectDetails)));\n        API.updateIstioConfigDetail(_this.props.match.params.namespace, _this.props.match.params.objectType, _this.props.match.params.object, jsonPatch).then(function () {\n          var targetMessage = _this.props.match.params.namespace + ' / ' + _this.props.match.params.objectType + ' / ' + _this.props.match.params.object;\n          AlertUtils.add('Changes applied on ' + targetMessage, 'default', MessageType.SUCCESS);\n\n          _this.fetchIstioObjectDetails();\n        }).catch(function (error) {\n          AlertUtils.addError('Could not update IstioConfig details.', error);\n\n          _this.setState({\n            yamlValidations: _this.injectGalleyError(error)\n          });\n        });\n      });\n    };\n\n    _this.injectGalleyError = function (error) {\n      var msg = API.getErrorString(error).split(':');\n      var errMsg = msg.slice(1, msg.length).join(':');\n      var anno = {\n        column: 0,\n        row: 0,\n        text: errMsg,\n        type: 'error'\n      };\n      return {\n        annotations: [anno],\n        markers: []\n      };\n    };\n\n    _this.resizeEditor = function () {\n      if (_this.aceEditorRef.current) {\n        // The Drawer has an async animation that needs a timeout before to resize the editor\n        setTimeout(function () {\n          var editor = _this.aceEditorRef.current['editor'];\n          editor.resize(true);\n        }, 250);\n      }\n    };\n\n    _this.onDrawerToggle = function () {\n      _this.setState(function (prevState) {\n        return {\n          isExpanded: !prevState.isExpanded\n        };\n      }, function () {\n        return _this.resizeEditor();\n      });\n    };\n\n    _this.onDrawerClose = function () {\n      _this.setState({\n        isExpanded: false\n      }, function () {\n        return _this.resizeEditor();\n      });\n    };\n\n    _this.onEditorChange = function (value) {\n      _this.setState({\n        isModified: true,\n        yamlModified: value,\n        istioValidations: undefined,\n        yamlValidations: parseYamlValidations(value)\n      });\n    };\n\n    _this.onRefresh = function () {\n      var refresh = true;\n\n      if (_this.state.isModified) {\n        refresh = window.confirm('You have unsaved changes, are you sure you want to refresh ?');\n      }\n\n      if (refresh) {\n        _this.fetchIstioObjectDetails();\n      }\n    };\n\n    _this.fetchYaml = function () {\n      if (_this.state.isModified) {\n        return _this.state.yamlModified;\n      }\n\n      var istioObject = getIstioObject(_this.state.istioObjectDetails);\n      return istioObject ? jsYaml.safeDump(istioObject, safeDumpOptions) : '';\n    };\n\n    _this.getStatusMessages = function (istioConfigDetails) {\n      var istioObject = getIstioObject(istioConfigDetails);\n      return istioObject && istioObject.status && istioObject.status.validationMessages ? istioObject.status.validationMessages : [];\n    };\n\n    _this.hasOverview = function () {\n      return _this.props.match.params.objectType === 'virtualservices' || _this.props.match.params.objectType === 'destinationrules';\n    };\n\n    _this.objectReferences = function (istioConfigDetails) {\n      var details = istioConfigDetails || {};\n      var istioValidations = details.validation || {};\n      return istioValidations.references || [];\n    };\n\n    _this.getFoldRanges = function (yaml) {\n      var range = {\n        startRow: -1,\n        endRow: -1\n      };\n\n      if (!!yaml) {\n        var ylines = yaml.split('\\n');\n        ylines.forEach(function (line, i) {\n          // Counting spaces to check managedFields, yaml is always processed with that structure so this is safe\n          if (line.startsWith('status:') || line.startsWith('  managedFields:')) {\n            if (range.startRow === -1) {\n              range.startRow = i;\n            } else if (range.startRow > i) {\n              range.startRow = i;\n            }\n          }\n\n          if (line.startsWith('spec:') && range.startRow !== -1) {\n            range.endRow = i;\n          }\n        });\n      }\n\n      return range;\n    };\n\n    _this.isExpanded = function (istioConfigDetails) {\n      var isExpanded = false;\n\n      if (istioConfigDetails) {\n        isExpanded = _this.showCards(_this.objectReferences(istioConfigDetails).length > 0, _this.getStatusMessages(istioConfigDetails));\n      }\n\n      return isExpanded;\n    };\n\n    _this.showCards = function (refPresent, istioStatusMsgs) {\n      return (refPresent || _this.hasOverview() || istioStatusMsgs.length > 0) && false;\n    };\n\n    _this.renderEditor = function () {\n      var yamlSource = _this.fetchYaml();\n\n      var istioStatusMsgs = _this.getStatusMessages(_this.state.istioObjectDetails);\n\n      var objectReferences = _this.objectReferences(_this.state.istioObjectDetails);\n\n      var refPresent = objectReferences.length > 0;\n\n      var showCards = _this.showCards(refPresent, istioStatusMsgs);\n\n      var editorValidations = {\n        markers: [],\n        annotations: []\n      };\n\n      if (!_this.state.isModified) {\n        editorValidations = parseKialiValidations(yamlSource, _this.state.istioValidations);\n      } else {\n        if (_this.state.yamlValidations) {\n          editorValidations.markers = _this.state.yamlValidations.markers;\n          editorValidations.annotations = _this.state.yamlValidations.annotations;\n        }\n      }\n\n      var panelContent = /*#__PURE__*/React.createElement(DrawerPanelContent, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DrawerHead, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }\n      }, showCards && /*#__PURE__*/React.createElement(React.Fragment, null, _this.state.istioObjectDetails && _this.state.istioObjectDetails.virtualService && /*#__PURE__*/React.createElement(VirtualServiceOverview, {\n        virtualService: _this.state.istioObjectDetails.virtualService,\n        validation: _this.state.istioValidations,\n        namespace: _this.state.istioObjectDetails.namespace.name,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 19\n        }\n      }), _this.state.istioObjectDetails && _this.state.istioObjectDetails.destinationRule && /*#__PURE__*/React.createElement(DestinationRuleOverview, {\n        destinationRule: _this.state.istioObjectDetails.destinationRule,\n        validation: _this.state.istioValidations,\n        namespace: _this.state.istioObjectDetails.namespace.name,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 19\n        }\n      }), istioStatusMsgs && istioStatusMsgs.length > 0 && /*#__PURE__*/React.createElement(IstioStatusMessageList, {\n        messages: istioStatusMsgs,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 67\n        }\n      }), refPresent && /*#__PURE__*/React.createElement(ValidationReferences, {\n        objectReferences: objectReferences,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 32\n        }\n      }))), /*#__PURE__*/React.createElement(DrawerActions, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DrawerCloseButton, {\n        onClick: _this.onDrawerClose,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }\n      }))));\n      var editor = _this.state.istioObjectDetails ? /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '100%'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(AceEditor, {\n        ref: _this.aceEditorRef,\n        mode: \"yaml\",\n        theme: \"eclipse\",\n        onChange: _this.onEditorChange,\n        height: 'var(--kiali-yaml-editor-height)',\n        width: '100%',\n        className: 'istio-ace-editor',\n        wrapEnabled: true,\n        readOnly: !_this.canUpdate(),\n        setOptions: aceOptions,\n        value: _this.state.istioObjectDetails ? yamlSource : undefined,\n        annotations: editorValidations.annotations,\n        markers: editorValidations.markers,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 9\n        }\n      })) : null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"object-drawer \".concat(editorDrawer),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 7\n        }\n      }, showCards ? /*#__PURE__*/React.createElement(Drawer, {\n        isExpanded: _this.state.isExpanded,\n        isInline: true,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DrawerContent, {\n        panelContent: showCards ? panelContent : undefined,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DrawerContentBody, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 15\n        }\n      }, editor))) : editor, _this.renderActionButtons(showCards));\n    };\n\n    _this.renderActionButtons = function (showOverview) {\n      // User won't save if file has yaml errors\n      var yamlErrors = !!(_this.state.yamlValidations && _this.state.yamlValidations.markers.length > 0);\n      return /*#__PURE__*/React.createElement(IstioActionButtonsContainer, {\n        objectName: _this.props.match.params.object,\n        readOnly: !_this.canUpdate(),\n        canUpdate: _this.canUpdate() && _this.state.isModified && !_this.state.isRemoved && !yamlErrors,\n        onCancel: _this.onCancel,\n        onUpdate: _this.onUpdate,\n        onRefresh: _this.onRefresh,\n        showOverview: showOverview,\n        overview: _this.state.isExpanded,\n        onOverview: _this.onDrawerToggle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.renderActions = function () {\n      var canDelete = _this.state.istioObjectDetails !== undefined && _this.state.istioObjectDetails.permissions.delete && !_this.state.isRemoved;\n      var istioObject = getIstioObject(_this.state.istioObjectDetails);\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: rightToolbarStyle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(IstioActionDropdown, {\n        objectKind: istioObject ? istioObject.kind : undefined,\n        objectName: _this.props.match.params.object,\n        canDelete: canDelete,\n        onDelete: _this.onDelete,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    _this.state = {\n      isModified: false,\n      isRemoved: false,\n      currentTab: activeTab(tabName, _this.defaultTab()),\n      isExpanded: false\n    };\n    _this.aceEditorRef = React.createRef();\n    _this.drawerRef = React.createRef();\n    _this.promptTo = '';\n    _this.timerId = -1;\n    return _this;\n  }\n\n  _createClass(IstioConfigDetailsPage, [{\n    key: \"defaultTab\",\n    value: function defaultTab() {\n      return 'yaml';\n    }\n  }, {\n    key: \"objectTitle\",\n    value: function objectTitle() {\n      var title = '';\n\n      if (this.state.istioObjectDetails) {\n        var objectType = dicIstioType[this.props.match.params.objectType];\n        var methodName = objectType.charAt(0).toLowerCase() + objectType.slice(1);\n        var object = this.state.istioObjectDetails[methodName];\n\n        if (object) {\n          title = object.metadata.name;\n        }\n      }\n\n      return title;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchIstioObjectDetails();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      // This will ask confirmation if we want to leave page on pending changes without save\n      if (this.state.isModified) {\n        window.onbeforeunload = function () {\n          return true;\n        };\n      } else {\n        window.onbeforeunload = null;\n      } // This will reset the flag to prevent ask multiple times the confirmation to leave with unsaved changed\n\n\n      this.promptTo = ''; // Hack to force redisplay of annotations after update\n      // See https://github.com/securingsincity/react-ace/issues/300\n\n      if (this.aceEditorRef.current) {\n        var editor = this.aceEditorRef.current['editor']; // tslint:disable-next-line\n\n        editor.onChangeAnnotation(); // Fold status and/or managedFields fields\n\n        var _this$getFoldRanges = this.getFoldRanges(this.fetchYaml()),\n            startRow = _this$getFoldRanges.startRow,\n            endRow = _this$getFoldRanges.endRow;\n\n        if (!this.state.isModified) {\n          editor.session.foldAll(startRow, endRow, 0);\n        }\n      }\n\n      var active = activeTab(tabName, this.defaultTab());\n\n      if (this.state.currentTab !== active) {\n        this.setState({\n          currentTab: active\n        });\n      }\n\n      if (!this.propsMatch(prevProps)) {\n        this.fetchIstioObjectDetailsFromProps(this.props.match.params);\n      }\n\n      if (this.state.istioValidations && this.state.istioValidations !== prevState.istioValidations) {\n        showInMessageCenter(this.state.istioValidations);\n      }\n    }\n  }, {\n    key: \"propsMatch\",\n    value: function propsMatch(prevProps) {\n      return this.props.match.params.namespace === prevProps.match.params.namespace && this.props.match.params.object === prevProps.match.params.object && this.props.match.params.objectType === prevProps.match.params.objectType;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Reset ask confirmation flag\n      window.onbeforeunload = null;\n      window.clearInterval(this.timerId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RenderHeader, {\n        location: this.props.location,\n        rightToolbar: /*#__PURE__*/React.createElement(RefreshButtonContainer, {\n          key: 'Refresh',\n          handleRefresh: this.onRefresh,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 25\n          }\n        }) // actionsToolbar={this.renderActions()}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ParameterizedTabs, {\n        id: \"basic-tabs\",\n        onSelect: function onSelect(tabValue) {\n          _this2.setState({\n            currentTab: tabValue\n          });\n        },\n        tabMap: paramToTab,\n        tabName: tabName,\n        defaultTab: this.defaultTab(),\n        activeTab: this.state.currentTab,\n        mountOnEnter: false,\n        unmountOnExit: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Tab, {\n        key: \"istio-yaml\",\n        title: \"YAML \".concat(this.state.isModified ? ' * ' : ''),\n        eventKey: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(RenderComponentScroll, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 13\n        }\n      }, this.renderEditor()))), /*#__PURE__*/React.createElement(Prompt, {\n        message: function message(location) {\n          if (_this2.state.isModified) {\n            // Check if Prompt is invoked multiple times\n            if (_this2.promptTo === location.pathname) {\n              return true;\n            }\n\n            _this2.promptTo = location.pathname;\n            return '当前配置未保存，是否继续退出';\n          }\n\n          return true;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return IstioConfigDetailsPage;\n}(React.Component);\n\nexport default IstioConfigDetailsPage;","map":{"version":3,"sources":["/root/kiali-ui/src/pages/IstioConfigDetails/IstioConfigDetailsPage.tsx"],"names":["React","Prompt","aceOptions","compareResourceVersion","safeDumpOptions","AlertUtils","API","AceEditor","jsYaml","parseKialiValidations","parseYamlValidations","IstioActionDropdown","RenderComponentScroll","RenderHeader","default","IstioActionButtonsContainer","history","Paths","MessageType","getIstioObject","mergeJsonPatch","style","ParameterizedTabs","activeTab","Drawer","DrawerActions","DrawerCloseButton","DrawerContent","DrawerContentBody","DrawerHead","DrawerPanelContent","Tab","dicIstioType","showInMessageCenter","VirtualServiceOverview","DestinationRuleOverview","IstioStatusMessageList","ValidationReferences","RefreshButtonContainer","require","rightToolbarStyle","zIndex","editorDrawer","margin","TIMER_REFRESH","tabName","paramToTab","yaml","IstioConfigDetailsPage","props","aceEditorRef","drawerRef","promptTo","timerId","fetchIstioObjectDetails","fetchIstioObjectDetailsFromProps","match","params","newIstioObjectPromise","validate","getIstioConfigDetail","namespace","objectType","object","promiseConfigDetails","window","clearInterval","setInterval","timerPromise","then","resultConfigDetails","data","state","originalIstioObjectDetails","changed","type","newResourceVersion","addWarning","catch","error","setState","isRemoved","addError","istioObjectDetails","istioValidations","validation","originalIstioValidations","isModified","isExpanded","yamlModified","currentTab","defaultTab","resizeEditor","backToList","push","ISTIO","canDelete","undefined","permissions","delete","canUpdate","update","onCancel","onDelete","deleteIstioConfigDetail","onUpdate","safeLoadAll","objectModified","jsonPatch","JSON","stringify","updateIstioConfigDetail","targetMessage","add","SUCCESS","yamlValidations","injectGalleyError","msg","getErrorString","split","errMsg","slice","length","join","anno","column","row","text","annotations","markers","current","setTimeout","editor","resize","onDrawerToggle","prevState","onDrawerClose","onEditorChange","value","onRefresh","refresh","confirm","fetchYaml","istioObject","safeDump","getStatusMessages","istioConfigDetails","status","validationMessages","hasOverview","objectReferences","details","references","getFoldRanges","range","startRow","endRow","ylines","forEach","line","i","startsWith","showCards","refPresent","istioStatusMsgs","renderEditor","yamlSource","editorValidations","panelContent","virtualService","name","destinationRule","width","renderActionButtons","showOverview","yamlErrors","renderActions","kind","createRef","title","methodName","charAt","toLowerCase","metadata","prevProps","onbeforeunload","onChangeAnnotation","session","foldAll","active","propsMatch","location","tabValue","pathname","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Prompt, RouteComponentProps } from 'react-router-dom';\nimport {\n  aceOptions,\n  compareResourceVersion,\n  IstioConfigDetails,\n  IstioConfigId,\n  safeDumpOptions\n} from '../../types/IstioConfigDetails';\nimport * as AlertUtils from '../../utils/AlertUtils';\nimport * as API from '../../services/Api';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-yaml';\nimport 'ace-builds/src-noconflict/theme-eclipse';\nimport { ObjectReference, ObjectValidation, ValidationMessage } from '../../types/IstioObjects';\nimport { AceValidations, jsYaml, parseKialiValidations, parseYamlValidations } from '../../types/AceValidations';\nimport IstioActionDropdown from '../../components/IstioActions/IstioActionsDropdown';\nimport { RenderComponentScroll, RenderHeader } from '../../components/Nav/Page';\nimport './IstioConfigDetailsPage.css';\nimport { default as IstioActionButtonsContainer } from '../../components/IstioActions/IstioActionsButtons';\nimport history from '../../app/History';\nimport { Paths } from '../../config';\nimport { MessageType } from '../../types/MessageCenter';\nimport { getIstioObject, mergeJsonPatch } from '../../utils/IstioConfigUtils';\nimport { style } from 'typestyle';\nimport ParameterizedTabs, { activeTab } from '../../components/Tab/Tabs';\nimport {\n  Drawer,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelContent,\n  Tab\n} from '@patternfly/react-core';\nimport { dicIstioType } from '../../types/IstioConfigList';\nimport { showInMessageCenter } from '../../utils/IstioValidationUtils';\nimport VirtualServiceOverview from './IstioObjectDetails/VirtualServiceOverview';\nimport DestinationRuleOverview from './IstioObjectDetails/DestinationRuleOverview';\nimport { AxiosError } from 'axios';\nimport IstioStatusMessageList from './IstioObjectDetails/IstioStatusMessageList';\nimport { Annotation } from 'react-ace/types';\nimport ValidationReferences from './ValidationReferences';\nimport RefreshButtonContainer from '../../components/Refresh/RefreshButton';\n\n// Enables the search box for the ACEeditor\nrequire('ace-builds/src-noconflict/ext-searchbox');\n\nconst rightToolbarStyle = style({\n  zIndex: 500\n});\n\nconst editorDrawer = style({\n  margin: '0'\n});\n\n// TODO perhaps we may want to enable automatic refresh in all list/details pages\nconst TIMER_REFRESH = 5000;\n\ninterface IstioConfigDetailsState {\n  istioObjectDetails?: IstioConfigDetails;\n  istioValidations?: ObjectValidation;\n  originalIstioObjectDetails?: IstioConfigDetails;\n  originalIstioValidations?: ObjectValidation;\n  isModified: boolean;\n  isRemoved: boolean;\n  yamlModified?: string;\n  yamlValidations?: AceValidations;\n  currentTab: string;\n  isExpanded: boolean;\n}\n\nconst tabName = 'list';\nconst paramToTab: { [key: string]: number } = {\n  yaml: 0\n};\n\nclass IstioConfigDetailsPage extends React.Component<RouteComponentProps<IstioConfigId>, IstioConfigDetailsState> {\n  aceEditorRef: React.RefObject<AceEditor>;\n  drawerRef: React.RefObject<IstioConfigDetailsPage>;\n  promptTo: string;\n  timerId: number;\n\n  constructor(props: RouteComponentProps<IstioConfigId>) {\n    super(props);\n    this.state = {\n      isModified: false,\n      isRemoved: false,\n      currentTab: activeTab(tabName, this.defaultTab()),\n      isExpanded: false\n    };\n    this.aceEditorRef = React.createRef();\n    this.drawerRef = React.createRef();\n    this.promptTo = '';\n    this.timerId = -1;\n  }\n\n  defaultTab() {\n    return 'yaml';\n  }\n\n  objectTitle() {\n    let title: string = '';\n    if (this.state.istioObjectDetails) {\n      const objectType = dicIstioType[this.props.match.params.objectType];\n      const methodName = objectType.charAt(0).toLowerCase() + objectType.slice(1);\n      const object = this.state.istioObjectDetails[methodName];\n      if (object) {\n        title = object.metadata.name;\n      }\n    }\n    return title;\n  }\n\n  fetchIstioObjectDetails = () => {\n    this.fetchIstioObjectDetailsFromProps(this.props.match.params);\n  };\n\n  newIstioObjectPromise = (props: IstioConfigId, validate: boolean) => {\n    return API.getIstioConfigDetail(props.namespace, props.objectType, props.object, validate);\n  };\n\n  fetchIstioObjectDetailsFromProps = (props: IstioConfigId) => {\n    const promiseConfigDetails = this.newIstioObjectPromise(props, true);\n\n    window.clearInterval(this.timerId);\n    this.timerId = window.setInterval(() => {\n      const timerPromise = this.newIstioObjectPromise(props, false);\n      timerPromise\n        .then(resultConfigDetails => {\n          if (resultConfigDetails.data && this.state.originalIstioObjectDetails) {\n            const [changed, type, newResourceVersion] = compareResourceVersion(\n              this.state.originalIstioObjectDetails,\n              resultConfigDetails.data\n            );\n            if (changed) {\n              AlertUtils.addWarning(\n                type +\n                  ':' +\n                  props.object +\n                  ' has a newer version (' +\n                  newResourceVersion +\n                  '). Reload to see a new version.'\n              );\n            }\n          }\n        })\n        .catch(error => {\n          this.setState({\n            isRemoved: true\n          });\n          AlertUtils.addError(\n            `Could not fetch ${props.objectType}: ${props.object} in namespace: ${props.namespace}. Has it been removed?`,\n            error\n          );\n        });\n    }, TIMER_REFRESH);\n\n    // Note that adapters/templates are not supported yet for validations\n    promiseConfigDetails\n      .then(resultConfigDetails => {\n        this.setState(\n          {\n            istioObjectDetails: resultConfigDetails.data,\n            originalIstioObjectDetails: resultConfigDetails.data,\n            istioValidations: resultConfigDetails.data.validation,\n            originalIstioValidations: resultConfigDetails.data.validation,\n            isModified: false,\n            isExpanded: this.isExpanded(resultConfigDetails.data),\n            yamlModified: '',\n            currentTab: activeTab(tabName, this.defaultTab())\n          },\n          () => this.resizeEditor()\n        );\n      })\n      .catch(error => {\n        this.setState({\n          isRemoved: true\n        });\n        AlertUtils.addError(\n          `Could not fetch Istio object type [${props.objectType}] name [${props.object}] in namespace [${props.namespace}].`,\n          error\n        );\n      });\n  };\n\n  componentDidMount() {\n    this.fetchIstioObjectDetails();\n  }\n\n  componentDidUpdate(prevProps: RouteComponentProps<IstioConfigId>, prevState: IstioConfigDetailsState) {\n    // This will ask confirmation if we want to leave page on pending changes without save\n    if (this.state.isModified) {\n      window.onbeforeunload = () => true;\n    } else {\n      window.onbeforeunload = null;\n    }\n    // This will reset the flag to prevent ask multiple times the confirmation to leave with unsaved changed\n    this.promptTo = '';\n    // Hack to force redisplay of annotations after update\n    // See https://github.com/securingsincity/react-ace/issues/300\n    if (this.aceEditorRef.current) {\n      const editor = this.aceEditorRef.current!['editor'];\n\n      // tslint:disable-next-line\n      editor.onChangeAnnotation();\n\n      // Fold status and/or managedFields fields\n      const { startRow, endRow } = this.getFoldRanges(this.fetchYaml());\n      if (!this.state.isModified) {\n        editor.session.foldAll(startRow, endRow, 0);\n      }\n    }\n\n    const active = activeTab(tabName, this.defaultTab());\n    if (this.state.currentTab !== active) {\n      this.setState({ currentTab: active });\n    }\n\n    if (!this.propsMatch(prevProps)) {\n      this.fetchIstioObjectDetailsFromProps(this.props.match.params);\n    }\n\n    if (this.state.istioValidations && this.state.istioValidations !== prevState.istioValidations) {\n      showInMessageCenter(this.state.istioValidations);\n    }\n  }\n\n  propsMatch(prevProps: RouteComponentProps<IstioConfigId>) {\n    return (\n      this.props.match.params.namespace === prevProps.match.params.namespace &&\n      this.props.match.params.object === prevProps.match.params.object &&\n      this.props.match.params.objectType === prevProps.match.params.objectType\n    );\n  }\n\n  componentWillUnmount() {\n    // Reset ask confirmation flag\n    window.onbeforeunload = null;\n    window.clearInterval(this.timerId);\n  }\n\n  backToList = () => {\n    // Back to list page\n    history.push(`/${Paths.ISTIO}?namespaces=${this.props.match.params.namespace}`);\n  };\n\n  canDelete = () => {\n    return this.state.istioObjectDetails !== undefined && this.state.istioObjectDetails.permissions.delete;\n  };\n\n  canUpdate = () => {\n    return this.state.istioObjectDetails !== undefined && this.state.istioObjectDetails.permissions.update;\n  };\n\n  onCancel = () => {\n    this.backToList();\n  };\n\n  onDelete = () => {\n    API.deleteIstioConfigDetail(\n      this.props.match.params.namespace,\n      this.props.match.params.objectType,\n      this.props.match.params.object\n    )\n      .then(() => this.backToList())\n      .catch(error => {\n        AlertUtils.addError('Could not delete IstioConfig details.', error);\n      });\n  };\n\n  onUpdate = () => {\n    jsYaml.safeLoadAll(this.state.yamlModified, (objectModified: object) => {\n      const jsonPatch = JSON.stringify(mergeJsonPatch(objectModified, getIstioObject(this.state.istioObjectDetails)));\n      API.updateIstioConfigDetail(\n        this.props.match.params.namespace,\n        this.props.match.params.objectType,\n        this.props.match.params.object,\n        jsonPatch\n      )\n        .then(() => {\n          const targetMessage =\n            this.props.match.params.namespace +\n            ' / ' +\n            this.props.match.params.objectType +\n            ' / ' +\n            this.props.match.params.object;\n          AlertUtils.add('Changes applied on ' + targetMessage, 'default', MessageType.SUCCESS);\n          this.fetchIstioObjectDetails();\n        })\n        .catch(error => {\n          AlertUtils.addError('Could not update IstioConfig details.', error);\n          this.setState({\n            yamlValidations: this.injectGalleyError(error)\n          });\n        });\n    });\n  };\n\n  injectGalleyError = (error: AxiosError): AceValidations => {\n    const msg: string[] = API.getErrorString(error).split(':');\n    const errMsg: string = msg.slice(1, msg.length).join(':');\n    const anno: Annotation = {\n      column: 0,\n      row: 0,\n      text: errMsg,\n      type: 'error'\n    };\n\n    return { annotations: [anno], markers: [] };\n  };\n\n  resizeEditor = () => {\n    if (this.aceEditorRef.current) {\n      // The Drawer has an async animation that needs a timeout before to resize the editor\n      setTimeout(() => {\n        const editor = this.aceEditorRef.current!['editor'];\n        editor.resize(true);\n      }, 250);\n    }\n  };\n\n  onDrawerToggle = () => {\n    this.setState(\n      prevState => {\n        return {\n          isExpanded: !prevState.isExpanded\n        };\n      },\n      () => this.resizeEditor()\n    );\n  };\n\n  onDrawerClose = () => {\n    this.setState(\n      {\n        isExpanded: false\n      },\n      () => this.resizeEditor()\n    );\n  };\n\n  onEditorChange = (value: string) => {\n    this.setState({\n      isModified: true,\n      yamlModified: value,\n      istioValidations: undefined,\n      yamlValidations: parseYamlValidations(value)\n    });\n  };\n\n  onRefresh = () => {\n    let refresh = true;\n    if (this.state.isModified) {\n      refresh = window.confirm('You have unsaved changes, are you sure you want to refresh ?');\n    }\n    if (refresh) {\n      this.fetchIstioObjectDetails();\n    }\n  };\n\n  fetchYaml = () => {\n    if (this.state.isModified) {\n      return this.state.yamlModified;\n    }\n    const istioObject = getIstioObject(this.state.istioObjectDetails);\n    return istioObject ? jsYaml.safeDump(istioObject, safeDumpOptions) : '';\n  };\n\n  getStatusMessages = (istioConfigDetails?: IstioConfigDetails): ValidationMessage[] => {\n    const istioObject = getIstioObject(istioConfigDetails);\n    return istioObject && istioObject.status && istioObject.status.validationMessages\n      ? istioObject.status.validationMessages\n      : ([] as ValidationMessage[]);\n  };\n\n  // Not all Istio types have an overview card\n  hasOverview = (): boolean => {\n    return (\n      this.props.match.params.objectType === 'virtualservices' ||\n      this.props.match.params.objectType === 'destinationrules'\n    );\n  };\n\n  objectReferences = (istioConfigDetails?: IstioConfigDetails): ObjectReference[] => {\n    const details: IstioConfigDetails = istioConfigDetails || ({} as IstioConfigDetails);\n    const istioValidations: ObjectValidation = details.validation || ({} as ObjectValidation);\n    return istioValidations.references || ([] as ObjectReference[]);\n  };\n\n  // Aux function to calculate rows for 'status' and 'managedFields' which are typically folded\n  getFoldRanges = (yaml: string | undefined): any => {\n    let range = {\n      startRow: -1,\n      endRow: -1\n    };\n\n    if (!!yaml) {\n      const ylines = yaml.split('\\n');\n      ylines.forEach((line: string, i: number) => {\n        // Counting spaces to check managedFields, yaml is always processed with that structure so this is safe\n        if (line.startsWith('status:') || line.startsWith('  managedFields:')) {\n          if (range.startRow === -1) {\n            range.startRow = i;\n          } else if (range.startRow > i) {\n            range.startRow = i;\n          }\n        }\n        if (line.startsWith('spec:') && range.startRow !== -1) {\n          range.endRow = i;\n        }\n      });\n    }\n\n    return range;\n  };\n\n  isExpanded = (istioConfigDetails?: IstioConfigDetails) => {\n    let isExpanded = false;\n    if (istioConfigDetails) {\n      isExpanded = this.showCards(this.objectReferences(istioConfigDetails).length > 0, this.getStatusMessages(istioConfigDetails));\n    }\n    return isExpanded;\n  };\n\n  showCards = (refPresent: boolean, istioStatusMsgs: ValidationMessage[]): boolean => {\n    return (refPresent || this.hasOverview() || istioStatusMsgs.length > 0) && false;\n  };\n\n  renderEditor = () => {\n    const yamlSource = this.fetchYaml();\n    const istioStatusMsgs = this.getStatusMessages(this.state.istioObjectDetails);\n    const objectReferences = this.objectReferences(this.state.istioObjectDetails);\n    const refPresent = objectReferences.length > 0;\n    const showCards = this.showCards(refPresent, istioStatusMsgs);\n    let editorValidations: AceValidations = {\n      markers: [],\n      annotations: []\n    };\n    if (!this.state.isModified) {\n      editorValidations = parseKialiValidations(yamlSource, this.state.istioValidations);\n    } else {\n      if (this.state.yamlValidations) {\n        editorValidations.markers = this.state.yamlValidations.markers;\n        editorValidations.annotations = this.state.yamlValidations.annotations;\n      }\n    }\n\n    const panelContent = (\n      <DrawerPanelContent>\n        <DrawerHead>\n          <div>\n            {showCards && (\n              <>\n                {this.state.istioObjectDetails && this.state.istioObjectDetails.virtualService && (\n                  <VirtualServiceOverview\n                    virtualService={this.state.istioObjectDetails.virtualService}\n                    validation={this.state.istioValidations}\n                    namespace={this.state.istioObjectDetails.namespace.name}\n                  />\n                )}\n                {this.state.istioObjectDetails && this.state.istioObjectDetails.destinationRule && (\n                  <DestinationRuleOverview\n                    destinationRule={this.state.istioObjectDetails.destinationRule}\n                    validation={this.state.istioValidations}\n                    namespace={this.state.istioObjectDetails.namespace.name}\n                  />\n                )}\n                {istioStatusMsgs && istioStatusMsgs.length > 0 && <IstioStatusMessageList messages={istioStatusMsgs} />}\n                {refPresent && <ValidationReferences objectReferences={objectReferences} />}\n              </>\n            )}\n          </div>\n          <DrawerActions>\n            <DrawerCloseButton onClick={this.onDrawerClose} />\n          </DrawerActions>\n        </DrawerHead>\n      </DrawerPanelContent>\n    );\n\n    const editor = this.state.istioObjectDetails ? (\n      <div style={{ width: '100%' }}>\n        <AceEditor\n          ref={this.aceEditorRef}\n          mode=\"yaml\"\n          theme=\"eclipse\"\n          onChange={this.onEditorChange}\n          height={'var(--kiali-yaml-editor-height)'}\n          width={'100%'}\n          className={'istio-ace-editor'}\n          wrapEnabled={true}\n          readOnly={!this.canUpdate()}\n          setOptions={aceOptions}\n          value={this.state.istioObjectDetails ? yamlSource : undefined}\n          annotations={editorValidations.annotations}\n          markers={editorValidations.markers}\n        />\n      </div>\n    ) : null;\n\n    return (\n      <div className={`object-drawer ${editorDrawer}`}>\n        {showCards ? (\n          <Drawer isExpanded={this.state.isExpanded} isInline={true}>\n            <DrawerContent panelContent={showCards ? panelContent : undefined}>\n              <DrawerContentBody>{editor}</DrawerContentBody>\n            </DrawerContent>\n          </Drawer>\n        ) : (\n          editor\n        )}\n        {this.renderActionButtons(showCards)}\n      </div>\n    );\n  };\n\n  renderActionButtons = (showOverview: boolean) => {\n    // User won't save if file has yaml errors\n    const yamlErrors = !!(this.state.yamlValidations && this.state.yamlValidations.markers.length > 0);\n    return (\n      <IstioActionButtonsContainer\n        objectName={this.props.match.params.object}\n        readOnly={!this.canUpdate()}\n        canUpdate={this.canUpdate() && this.state.isModified && !this.state.isRemoved && !yamlErrors}\n        onCancel={this.onCancel}\n        onUpdate={this.onUpdate}\n        onRefresh={this.onRefresh}\n        showOverview={showOverview}\n        overview={this.state.isExpanded}\n        onOverview={this.onDrawerToggle}\n      />\n    );\n  };\n\n  renderActions = () => {\n    const canDelete =\n      this.state.istioObjectDetails !== undefined &&\n      this.state.istioObjectDetails.permissions.delete &&\n      !this.state.isRemoved;\n    const istioObject = getIstioObject(this.state.istioObjectDetails);\n\n    return (\n      <span className={rightToolbarStyle}>\n        <IstioActionDropdown\n          objectKind={istioObject ? istioObject.kind : undefined}\n          objectName={this.props.match.params.object}\n          canDelete={canDelete}\n          onDelete={this.onDelete}\n        />\n      </span>\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <RenderHeader\n          location={this.props.location}\n          rightToolbar={<RefreshButtonContainer key={'Refresh'} handleRefresh={this.onRefresh} />}\n          // actionsToolbar={this.renderActions()}\n        />\n        <ParameterizedTabs\n          id=\"basic-tabs\"\n          onSelect={tabValue => {\n            this.setState({ currentTab: tabValue });\n          }}\n          tabMap={paramToTab}\n          tabName={tabName}\n          defaultTab={this.defaultTab()}\n          activeTab={this.state.currentTab}\n          mountOnEnter={false}\n          unmountOnExit={true}\n        >\n          <Tab key=\"istio-yaml\" title={`YAML ${this.state.isModified ? ' * ' : ''}`} eventKey={0}>\n            <RenderComponentScroll>{this.renderEditor()}</RenderComponentScroll>\n          </Tab>\n        </ParameterizedTabs>\n        <Prompt\n          message={location => {\n            if (this.state.isModified) {\n              // Check if Prompt is invoked multiple times\n              if (this.promptTo === location.pathname) {\n                return true;\n              }\n              this.promptTo = location.pathname;\n              return '当前配置未保存，是否继续退出';\n            }\n            return true;\n          }}\n        />\n      </>\n    );\n  }\n}\n\nexport default IstioConfigDetailsPage;\n"]},"metadata":{},"sourceType":"module"}