{"ast":null,"code":"import _createForOfIteratorHelper from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from'react';import{connect}from'react-redux';import{bindActionCreators}from'redux';import authenticationConfig,{isAuthStrategyOAuth}from'../config/AuthenticationConfig';import{LoginStatus}from'../store/Store';import*as API from'../services/Api';import{HelpDropdownActions}from'../actions/HelpDropdownActions';import{JaegerActions}from'../actions/JaegerActions';import LoginThunkActions from'../actions/LoginThunkActions';import{MessageCenterActions}from'../actions/MessageCenterActions';import{MessageType}from'../types/MessageCenter';import InitializingScreen from'./InitializingScreen';import{isKioskMode}from'../utils/SearchParamUtils';import*as AlertUtils from'../utils/AlertUtils';import{setServerConfig,serverConfig,humanDurations}from'../config/ServerConfig';import{MeshTlsActions}from'../actions/MeshTlsActions';import{AuthStrategy}from'../types/Auth';import{LoginActions}from'../actions/LoginActions';import history from'./History';import{NamespaceActions}from'actions/NamespaceAction';import{UserSettingsActions}from'actions/UserSettingsActions';import{config}from'config';import{store}from'store/ConfigStore';import{toGrpcRate,toHttpRate,toTcpRate,TrafficRate}from'types/Graph';import{GraphToolbarActions}from'actions/GraphToolbarActions';var LoginStage;(function(LoginStage){LoginStage[LoginStage[\"LOGIN\"]=0]=\"LOGIN\";LoginStage[LoginStage[\"POST_LOGIN\"]=1]=\"POST_LOGIN\";LoginStage[LoginStage[\"LOGGED_IN\"]=2]=\"LOGGED_IN\";LoginStage[LoginStage[\"LOGGED_IN_AT_LOAD\"]=3]=\"LOGGED_IN_AT_LOAD\";})(LoginStage||(LoginStage={}));export var AuthenticationController=/*#__PURE__*/function(_React$Component){_inherits(AuthenticationController,_React$Component);var _super=_createSuper(AuthenticationController);// How long to wait for the post-login actions to complete\n// before transitioning to the \"Loading\" page.\nfunction AuthenticationController(props){var _this;_classCallCheck(this,AuthenticationController);_this=_super.call(this,props);_this.postLoginMSTillTransition=3000;_this.doPostLoginActions=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var postLoginTimer,getStatusPromise,getJaegerInfoPromise,configs;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:postLoginTimer=setTimeout(function(){_this.setState({stage:LoginStage.LOGGED_IN_AT_LOAD});},_this.postLoginMSTillTransition);_context.prev=1;getStatusPromise=API.getStatus().then(function(response){return _this.processServerStatus(response.data);}).catch(function(error){AlertUtils.addError('Error fetching server status.',error,'default',MessageType.WARNING);});getJaegerInfoPromise=API.getJaegerInfo().then(function(response){return _this.props.setJaegerInfo(response.data);}).catch(function(error){_this.props.setJaegerInfo(null);AlertUtils.addError('Could not fetch Jaeger info. Turning off Jaeger integration.',error,'default',MessageType.INFO);});_context.next=6;return Promise.all([API.getNamespaces(),API.getServerConfig(),getStatusPromise,getJaegerInfoPromise]);case 6:configs=_context.sent;_this.props.setNamespaces(configs[0].data,new Date());setServerConfig(configs[1].data);_this.applyUIDefaults();_this.checkConfiguredRemoteKialis(configs[1].data);if(_this.props.landingRoute){history.replace(_this.props.landingRoute);_this.props.setLandingRoute(undefined);}_this.setState({stage:LoginStage.LOGGED_IN});_context.next=19;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](1);console.error('Error on post-login actions.',_context.t0);// Transitioning to LOGGED_IN_AT_LOAD so that the user will see the \"Loading...\"\n// screen instead of being stuck at the \"login\" page after a post-login error.\n_this.setState({isPostLoginError:true,stage:LoginStage.LOGGED_IN_AT_LOAD});case 19:_context.prev=19;clearTimeout(postLoginTimer);return _context.finish(19);case 22:case\"end\":return _context.stop();}}},_callee,null,[[1,15,19,22]]);}));_this.setDocLayout=function(){if(document.documentElement){document.documentElement.className=isKioskMode()?'kiosk':'';}};_this.processServerStatus=function(status){_this.props.statusRefresh(status);status.warningMessages.forEach(function(wMsg){_this.props.addMessage(wMsg,'','systemErrors',MessageType.WARNING);});};_this.state={stage:_this.props.authenticated?LoginStage.LOGGED_IN_AT_LOAD:LoginStage.LOGIN,isPostLoginError:false};return _this;}_createClass(AuthenticationController,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.state.stage===LoginStage.LOGGED_IN_AT_LOAD){this.doPostLoginActions();}else{var dispatchLoginCycleOnLoad=false;// If login strategy is \"anonymous\" or \"header\", dispatch login cycle\n// because there is no need to ask for any credentials\nif(authenticationConfig.strategy===AuthStrategy.anonymous||authenticationConfig.strategy===AuthStrategy.header){dispatchLoginCycleOnLoad=true;}// If login strategy is Openshift, OpenId, check if there is an\n// \"access_token\" or \"id_token\" hash parameter in the URL. If there is,\n// this means the IdP is calling back. Dispatch the login cycle to finish\n// the authentication.\nif(isAuthStrategyOAuth()){var pattern=/[#&](access_token|id_token)=/;dispatchLoginCycleOnLoad=pattern.test(window.location.hash);}if(dispatchLoginCycleOnLoad){this.props.checkCredentials();// This state shows the initializing screen while doing the login cycle. This\n// prevents from briefly showing the login form while the trip to the back-end completes.\nthis.setState({stage:LoginStage.LOGGED_IN_AT_LOAD});}else{this.props.setLandingRoute(history.location.pathname+history.location.search);}}this.setDocLayout();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,_prevState){if(!prevProps.authenticated&&this.props.authenticated){this.setState({stage:LoginStage.POST_LOGIN});this.doPostLoginActions();}else if(prevProps.authenticated&&!this.props.authenticated){this.setState({stage:LoginStage.LOGIN});}if(!prevProps.isLoginError&&this.props.isLoginError){this.setState({stage:LoginStage.LOGIN});}this.setDocLayout();}},{key:\"render\",value:function render(){if(this.state.stage===LoginStage.LOGGED_IN){return this.props.protectedAreaComponent;}else if(this.state.stage===LoginStage.LOGGED_IN_AT_LOAD){return!this.state.isPostLoginError?/*#__PURE__*/React.createElement(InitializingScreen,null):/*#__PURE__*/React.createElement(InitializingScreen,{errorMsg:AuthenticationController.PostLoginErrorMsg});}else if(this.state.stage===LoginStage.POST_LOGIN){// For OAuth/OpenID auth strategies, show/keep the initializing screen unless there\n// is an error.\nif(!this.state.isPostLoginError&&isAuthStrategyOAuth()){return/*#__PURE__*/React.createElement(InitializingScreen,null);}return!this.state.isPostLoginError?this.props.publicAreaComponent(true):this.props.publicAreaComponent(false,AuthenticationController.PostLoginErrorMsg);}else{return this.props.publicAreaComponent(false);}}},{key:\"applyUIDefaults\",value:function applyUIDefaults(){var uiDefaults=serverConfig.kialiFeatureFlags.uiDefaults;if(uiDefaults){// Duration (aka metricsPerRefresh)\nif(uiDefaults.metricsPerRefresh){var validDurations=humanDurations(serverConfig,'','');var metricsPerRefresh=0;for(var _i=0,_Object$entries=Object.entries(validDurations);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];if(value===uiDefaults.metricsPerRefresh){metricsPerRefresh=Number(key);break;}}if(metricsPerRefresh>0){this.props.setDuration(metricsPerRefresh);console.debug(\"Setting UI Default: metricsPerRefresh [\".concat(uiDefaults.metricsPerRefresh,\"=\").concat(metricsPerRefresh,\"s]\"));}else{console.debug(\"Ignoring invalid UI Default: metricsPerRefresh [\".concat(uiDefaults.metricsPerRefresh,\"]\"));}}// Refresh Interval\nvar refreshInterval=-1;if(uiDefaults.refreshInterval){for(var _i2=0,_Object$entries2=Object.entries(config.toolbar.refreshInterval);_i2<_Object$entries2.length;_i2++){var _Object$entries2$_i=_slicedToArray(_Object$entries2[_i2],2),_key=_Object$entries2$_i[0],_value=_Object$entries2$_i[1];if(_value.toLowerCase().endsWith(uiDefaults.refreshInterval.toLowerCase())){refreshInterval=Number(_key);break;}}if(refreshInterval>=0){this.props.setRefreshInterval(refreshInterval);console.debug(\"Setting UI Default: refreshInterval [\".concat(uiDefaults.refreshInterval,\"=\").concat(refreshInterval,\"ms]\"));}else{console.debug(\"Ignoring invalid UI Default: refreshInterval [\".concat(uiDefaults.refreshInterval,\"]\"));}}// Selected Namespaces\nif(uiDefaults.namespaces&&uiDefaults.namespaces.length>0){// use store directly, we don't want to update on redux state change\nvar _namespaces=store.getState().namespaces.items;var namespaceNames=_namespaces?_namespaces.map(function(ns){return ns.name;}):[];var activeNamespaces=[];var _iterator=_createForOfIteratorHelper(uiDefaults.namespaces),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var name=_step.value;if(namespaceNames.includes(name)){activeNamespaces.push({name:name});}else{console.debug(\"Ignoring invalid UI Default: namespace [\".concat(name,\"]\"));}}}catch(err){_iterator.e(err);}finally{_iterator.f();}if(activeNamespaces.length>0){this.props.setActiveNamespaces(activeNamespaces);console.debug(\"Setting UI Default: namespaces \".concat(JSON.stringify(activeNamespaces.map(function(ns){return ns.name;}))));}}// Graph Traffic\nvar grpcRate=toGrpcRate(uiDefaults.graph.traffic.grpc);var httpRate=toHttpRate(uiDefaults.graph.traffic.http);var tcpRate=toTcpRate(uiDefaults.graph.traffic.tcp);var _rates=[];if(grpcRate){_rates.push(TrafficRate.GRPC_GROUP,grpcRate);}if(httpRate){_rates.push(TrafficRate.HTTP_GROUP,httpRate);}if(tcpRate){_rates.push(TrafficRate.TCP_GROUP,tcpRate);}this.props.setTrafficRates(_rates);}}// Check which clusters does not have an accessible Kiali instance.\n// Emit a warning telling that for those clusters, no cross-links will be available.\n},{key:\"checkConfiguredRemoteKialis\",value:function checkConfiguredRemoteKialis(backendConfigs){if(backendConfigs.clusters){var clustersWithoutKialis=[];for(var cluster in backendConfigs.clusters){var _backendConfigs$clust;// skip home cluster, it's always reachable\nif(cluster===((_backendConfigs$clust=backendConfigs.clusterInfo)===null||_backendConfigs$clust===void 0?void 0:_backendConfigs$clust.name)){continue;}if(backendConfigs.clusters.hasOwnProperty(cluster)){var _backendConfigs$clust2;var kialiInstance=(_backendConfigs$clust2=backendConfigs.clusters[cluster].kialiInstances)===null||_backendConfigs$clust2===void 0?void 0:_backendConfigs$clust2.find(function(instance){return instance.url.length!==0;});if(!kialiInstance){clustersWithoutKialis.push(cluster);}}}if(clustersWithoutKialis.length>0){AlertUtils.addWarning('Not all remote clusters have reachable Kiali instances.',undefined,undefined,'Context menus are disabled for remote cluster nodes if a Kiali instance is not discovered, or if the remote Kiali is not configured with an external URL.');}}}}]);return AuthenticationController;}(React.Component);AuthenticationController.PostLoginErrorMsg=\"Kiali failed to initialize. Please ensure that services \\n    Kiali depends on, such as Prometheus, are healthy and reachable by Kiali then refresh your browser.\";var mapStateToProps=function mapStateToProps(state){return{authenticated:state.authentication.status===LoginStatus.loggedIn,isLoginError:state.authentication.status===LoginStatus.error,landingRoute:state.authentication.landingRoute};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{addMessage:bindActionCreators(MessageCenterActions.addMessage,dispatch),checkCredentials:function checkCredentials(){return dispatch(LoginThunkActions.checkCredentials());},setActiveNamespaces:bindActionCreators(NamespaceActions.setActiveNamespaces,dispatch),setDuration:bindActionCreators(UserSettingsActions.setDuration,dispatch),setJaegerInfo:bindActionCreators(JaegerActions.setInfo,dispatch),setLandingRoute:bindActionCreators(LoginActions.setLandingRoute,dispatch),setMeshTlsStatus:bindActionCreators(MeshTlsActions.setinfo,dispatch),setNamespaces:bindActionCreators(NamespaceActions.receiveList,dispatch),setRefreshInterval:bindActionCreators(UserSettingsActions.setRefreshInterval,dispatch),setTrafficRates:bindActionCreators(GraphToolbarActions.setTrafficRates,dispatch),statusRefresh:bindActionCreators(HelpDropdownActions.statusRefresh,dispatch)};};var AuthenticationControllerContainer=connect(mapStateToProps,mapDispatchToProps)(AuthenticationController);export default AuthenticationControllerContainer;","map":null,"metadata":{},"sourceType":"module"}