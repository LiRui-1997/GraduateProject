{"ast":null,"code":"import _objectSpread from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { getType } from 'typesafe-actions';\nimport { updateState } from '../utils/Reducer';\nimport { NamespaceActions } from '../actions/NamespaceAction';\nexport var INITIAL_NAMESPACE_STATE = {\n  activeNamespaces: [],\n  isFetching: false,\n  items: [],\n  lastUpdated: undefined,\n  filter: ''\n};\n\nvar namespaces = function namespaces() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_NAMESPACE_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case getType(NamespaceActions.toggleActiveNamespace):\n      var namespaceIndex = state.activeNamespaces.findIndex(function (namespace) {\n        return namespace.name === action.payload.name;\n      });\n\n      if (namespaceIndex === -1) {\n        return updateState(state, {\n          activeNamespaces: [].concat(_toConsumableArray(state.activeNamespaces), [{\n            name: action.payload.name\n          }])\n        });\n      } else {\n        var activeNamespaces = _toConsumableArray(state.activeNamespaces);\n\n        activeNamespaces.splice(namespaceIndex, 1);\n        return updateState(state, {\n          activeNamespaces: activeNamespaces\n        });\n      }\n\n    case getType(NamespaceActions.setActiveNamespaces):\n      return updateState(state, {\n        activeNamespaces: action.payload\n      });\n\n    case getType(NamespaceActions.setFilter):\n      return updateState(state, {\n        filter: action.payload\n      });\n\n    case getType(NamespaceActions.requestStarted):\n      return updateState(state, {\n        isFetching: true\n      });\n\n    case getType(NamespaceActions.receiveList):\n      var names = action.payload.list.map(function (ns) {\n        return ns.name;\n      });\n      var validActive = state.activeNamespaces.filter(function (an) {\n        return names.includes(an.name);\n      });\n      var updatedActive = {};\n\n      if (state.activeNamespaces.length !== validActive.length) {\n        updatedActive = {\n          activeNamespaces: validActive\n        };\n      }\n\n      return updateState(state, _objectSpread({\n        isFetching: false,\n        items: action.payload.list,\n        lastUpdated: action.payload.receivedAt\n      }, updatedActive));\n\n    case getType(NamespaceActions.requestFailed):\n      return updateState(state, {\n        isFetching: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default namespaces;","map":{"version":3,"sources":["/root/GraduateProject/src/reducers/NamespaceState.ts"],"names":["getType","updateState","NamespaceActions","INITIAL_NAMESPACE_STATE","activeNamespaces","isFetching","items","lastUpdated","undefined","filter","namespaces","state","action","type","toggleActiveNamespace","namespaceIndex","findIndex","namespace","name","payload","splice","setActiveNamespaces","setFilter","requestStarted","receiveList","names","list","map","ns","validActive","an","includes","updatedActive","length","receivedAt","requestFailed"],"mappings":"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","sourcesContent":["import { getType } from 'typesafe-actions';\nimport { updateState } from '../utils/Reducer';\nimport { NamespaceState } from '../store/Store';\nimport { KialiAppAction } from '../actions/KialiAppAction';\nimport { NamespaceActions } from '../actions/NamespaceAction';\n\nexport const INITIAL_NAMESPACE_STATE: NamespaceState = {\n  activeNamespaces: [],\n  isFetching: false,\n  items: [],\n  lastUpdated: undefined,\n  filter: ''\n};\n\nconst namespaces = (state: NamespaceState = INITIAL_NAMESPACE_STATE, action: KialiAppAction): NamespaceState => {\n  switch (action.type) {\n    case getType(NamespaceActions.toggleActiveNamespace):\n      const namespaceIndex = state.activeNamespaces.findIndex(namespace => namespace.name === action.payload.name);\n      if (namespaceIndex === -1) {\n        return updateState(state, {\n          activeNamespaces: [...state.activeNamespaces, { name: action.payload.name }]\n        });\n      } else {\n        const activeNamespaces = [...state.activeNamespaces];\n        activeNamespaces.splice(namespaceIndex, 1);\n        return updateState(state, { activeNamespaces });\n      }\n\n    case getType(NamespaceActions.setActiveNamespaces):\n      return updateState(state, { activeNamespaces: action.payload });\n\n    case getType(NamespaceActions.setFilter):\n      return updateState(state, { filter: action.payload });\n\n    case getType(NamespaceActions.requestStarted):\n      return updateState(state, {\n        isFetching: true\n      });\n\n    case getType(NamespaceActions.receiveList):\n      const names = action.payload.list.map(ns => ns.name);\n      const validActive = state.activeNamespaces.filter(an => names.includes(an.name));\n      let updatedActive = {};\n      if (state.activeNamespaces.length !== validActive.length) {\n        updatedActive = { activeNamespaces: validActive };\n      }\n      return updateState(state, {\n        isFetching: false,\n        items: action.payload.list,\n        lastUpdated: action.payload.receivedAt,\n        ...updatedActive\n      });\n\n    case getType(NamespaceActions.requestFailed):\n      return updateState(state, {\n        isFetching: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default namespaces;\n"]},"metadata":{},"sourceType":"module"}