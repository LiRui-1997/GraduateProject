{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/components/Filters/LabelFilter.tsx\";\nimport * as React from 'react';\nimport { Button, ButtonVariant, Popover, PopoverPosition, TextInput } from '@patternfly/react-core';\nimport { defaultIconStyle, KialiIcon } from '../../config/KialiIcon';\nexport var LabelFilters = /*#__PURE__*/function (_React$Component) {\n  _inherits(LabelFilters, _React$Component);\n\n  var _super = _createSuper(LabelFilters);\n\n  function LabelFilters(props) {\n    var _this;\n\n    _classCallCheck(this, LabelFilters);\n\n    _this = _super.call(this, props);\n\n    _this.onkeyPress = function (e) {\n      if (e.key === 'Enter') {\n        if (_this.props.value && _this.props.value.length > 0) {\n          _this.props.value.split(' ').map(function (val) {\n            return !_this.props.isActive(val) && _this.props.filterAdd(val);\n          });\n        }\n      }\n    };\n\n    _this.state = {\n      sortOperation: 'or'\n    };\n    return _this;\n  }\n\n  _createClass(LabelFilters, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextInput, {\n        type: 'text',\n        value: this.props.value,\n        \"aria-label\": 'filter_input_label_key',\n        placeholder: 'Set Label',\n        onChange: function onChange(value) {\n          return _this2.props.onChange(value);\n        },\n        onKeyPress: function onKeyPress(e) {\n          return _this2.onkeyPress(e);\n        },\n        style: {\n          width: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Popover, {\n        headerContent: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 26\n          }\n        }, \"Label Filter Help\"),\n        position: PopoverPosition.right,\n        bodyContent: /*#__PURE__*/React.createElement(React.Fragment, null, \"To set a label filter you must enter values like.\", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"ul\", {\n          style: {\n            listStyleType: 'circle',\n            marginLeft: '20px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }\n        }, \"Filter by label presence: label\"), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }\n        }, \"Filter by label and value: label:value\"), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }\n        }, \"Filter by more than one label and one or more values:\", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }\n        }), \"label:value label2:value2,value2-2\", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }\n        }), \"(separate with ' ')\"))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: ButtonVariant.link,\n        style: {\n          paddingLeft: '6px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KialiIcon.Help, {\n        className: defaultIconStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return LabelFilters;\n}(React.Component);","map":{"version":3,"sources":["/root/kiali-ui/src/components/Filters/LabelFilter.tsx"],"names":["React","Button","ButtonVariant","Popover","PopoverPosition","TextInput","defaultIconStyle","KialiIcon","LabelFilters","props","onkeyPress","e","key","value","length","split","map","val","isActive","filterAdd","state","sortOperation","onChange","width","right","listStyleType","marginLeft","link","paddingLeft","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Button, ButtonVariant, Popover, PopoverPosition, TextInput } from '@patternfly/react-core';\nimport { defaultIconStyle, KialiIcon } from '../../config/KialiIcon';\n\ninterface LabelFiltersProps {\n  onChange: (value: any) => void;\n  value: string;\n  filterAdd: (value: string) => void;\n  isActive: (value: string) => boolean;\n}\n\nexport class LabelFilters extends React.Component<LabelFiltersProps, { sortOperation: string }> {\n  constructor(props) {\n    super(props);\n    this.state = { sortOperation: 'or' };\n  }\n\n  onkeyPress = (e: any) => {\n    if (e.key === 'Enter') {\n      if (this.props.value && this.props.value.length > 0) {\n        this.props.value.split(' ').map(val => !this.props.isActive(val) && this.props.filterAdd(val));\n      }\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <TextInput\n          type={'text'}\n          value={this.props.value}\n          aria-label={'filter_input_label_key'}\n          placeholder={'Set Label'}\n          onChange={value => this.props.onChange(value)}\n          onKeyPress={e => this.onkeyPress(e)}\n          style={{ width: 'auto' }}\n        />\n        <Popover\n          headerContent={<span>Label Filter Help</span>}\n          position={PopoverPosition.right}\n          bodyContent={\n            <>\n              To set a label filter you must enter values like.\n              <br />\n              <ul style={{ listStyleType: 'circle', marginLeft: '20px' }}>\n                <li>Filter by label presence: label</li>\n                <li>Filter by label and value: label:value</li>\n                <li>\n                  Filter by more than one label and one or more values:\n                  <br />\n                  label:value label2:value2,value2-2\n                  <br />\n                  (separate with ' ')\n                </li>\n              </ul>\n            </>\n          }\n        >\n          <Button variant={ButtonVariant.link} style={{ paddingLeft: '6px' }}>\n            <KialiIcon.Help className={defaultIconStyle} />\n          </Button>\n        </Popover>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}