{"ast":null,"code":"import _createForOfIteratorHelper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport { ValidationTypes } from '../types/IstioObjects';\nimport * as AlertUtils from './AlertUtils';\n\nvar validationMessage = function validationMessage(validation, failedCheck) {\n  return \"\".concat(validation.objectType, \":\").concat(validation.name, \" \").concat(failedCheck.message);\n};\n\nvar showInMessageCenterValidation = function showInMessageCenterValidation(validation) {\n  var _iterator = _createForOfIteratorHelper(validation.checks),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var check = _step.value;\n\n      switch (check.severity) {\n        case ValidationTypes.Warning:\n          AlertUtils.addWarning(validationMessage(validation, check), false);\n          break;\n\n        case ValidationTypes.Error:\n          AlertUtils.addError(validationMessage(validation, check));\n          break;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n};\n\nvar showInMessageCenterValidations = function showInMessageCenterValidations(validations) {\n  var elementsWithFailedValidations = [];\n  var hasError = false;\n\n  var _iterator2 = _createForOfIteratorHelper(validations),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var validation = _step2.value;\n\n      var _iterator3 = _createForOfIteratorHelper(validation.checks),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var check = _step3.value;\n\n          if ([ValidationTypes.Warning, ValidationTypes.Error].includes(check.severity)) {\n            if (check.severity === ValidationTypes.Error) {\n              hasError = true;\n            }\n\n            elementsWithFailedValidations.push(\"\".concat(validation.objectType, \":\").concat(validation.name));\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  if (elementsWithFailedValidations.length > 0) {\n    var detail = \"\".concat(elementsWithFailedValidations.join('\\n'));\n\n    if (hasError) {\n      AlertUtils.addError('IstioConfig has errors', undefined, undefined, undefined, detail);\n    } else {\n      AlertUtils.addWarning('IstioConfig has warnings', false, undefined, detail);\n    }\n  }\n};\n\nexport var showInMessageCenter = function showInMessageCenter(validation) {\n  if (Array.isArray(validation)) {\n    showInMessageCenterValidations(validation);\n  } else {\n    showInMessageCenterValidation(validation);\n  }\n};","map":{"version":3,"sources":["/root/kiali-ui/src/utils/IstioValidationUtils.ts"],"names":["ValidationTypes","AlertUtils","validationMessage","validation","failedCheck","objectType","name","message","showInMessageCenterValidation","checks","check","severity","Warning","addWarning","Error","addError","showInMessageCenterValidations","validations","elementsWithFailedValidations","hasError","includes","push","length","detail","join","undefined","showInMessageCenter","Array","isArray"],"mappings":";AAAA,SAAwCA,eAAxC,QAA+D,uBAA/D;AACA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,UAAD,EAA+BC,WAA/B,EAA4D;AACpF,mBAAUD,UAAU,CAACE,UAArB,cAAmCF,UAAU,CAACG,IAA9C,cAAsDF,WAAW,CAACG,OAAlE;AACD,CAFD;;AAIA,IAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACL,UAAD,EAAkC;AAAA,6CACpDA,UAAU,CAACM,MADyC;AAAA;;AAAA;AACtE,wDAAqC;AAAA,UAA5BC,KAA4B;;AACnC,cAAQA,KAAK,CAACC,QAAd;AACE,aAAKX,eAAe,CAACY,OAArB;AACEX,UAAAA,UAAU,CAACY,UAAX,CAAsBX,iBAAiB,CAACC,UAAD,EAAaO,KAAb,CAAvC,EAA4D,KAA5D;AACA;;AACF,aAAKV,eAAe,CAACc,KAArB;AACEb,UAAAA,UAAU,CAACc,QAAX,CAAoBb,iBAAiB,CAACC,UAAD,EAAaO,KAAb,CAArC;AACA;AANJ;AAQD;AAVqE;AAAA;AAAA;AAAA;AAAA;AAWvE,CAXD;;AAaA,IAAMM,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACC,WAAD,EAAqC;AAC1E,MAAMC,6BAAuC,GAAG,EAAhD;AACA,MAAIC,QAAQ,GAAG,KAAf;;AAF0E,8CAGnDF,WAHmD;AAAA;;AAAA;AAG1E,2DAAoC;AAAA,UAA3Bd,UAA2B;;AAAA,kDAChBA,UAAU,CAACM,MADK;AAAA;;AAAA;AAClC,+DAAqC;AAAA,cAA5BC,KAA4B;;AACnC,cAAI,CAACV,eAAe,CAACY,OAAjB,EAA0BZ,eAAe,CAACc,KAA1C,EAAiDM,QAAjD,CAA0DV,KAAK,CAACC,QAAhE,CAAJ,EAA+E;AAC7E,gBAAID,KAAK,CAACC,QAAN,KAAmBX,eAAe,CAACc,KAAvC,EAA8C;AAC5CK,cAAAA,QAAQ,GAAG,IAAX;AACD;;AACDD,YAAAA,6BAA6B,CAACG,IAA9B,WAAsClB,UAAU,CAACE,UAAjD,cAA+DF,UAAU,CAACG,IAA1E;AACD;AACF;AARiC;AAAA;AAAA;AAAA;AAAA;AASnC;AAZyE;AAAA;AAAA;AAAA;AAAA;;AAa1E,MAAIY,6BAA6B,CAACI,MAA9B,GAAuC,CAA3C,EAA8C;AAC5C,QAAMC,MAAM,aAAML,6BAA6B,CAACM,IAA9B,CAAmC,IAAnC,CAAN,CAAZ;;AACA,QAAIL,QAAJ,EAAc;AACZlB,MAAAA,UAAU,CAACc,QAAX,CAAoB,wBAApB,EAA8CU,SAA9C,EAAyDA,SAAzD,EAAoEA,SAApE,EAA+EF,MAA/E;AACD,KAFD,MAEO;AACLtB,MAAAA,UAAU,CAACY,UAAX,CAAsB,0BAAtB,EAAkD,KAAlD,EAAyDY,SAAzD,EAAoEF,MAApE;AACD;AACF;AACF,CArBD;;AAuBA,OAAO,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACvB,UAAD,EAAuD;AACxF,MAAIwB,KAAK,CAACC,OAAN,CAAczB,UAAd,CAAJ,EAA+B;AAC7Ba,IAAAA,8BAA8B,CAACb,UAAD,CAA9B;AACD,GAFD,MAEO;AACLK,IAAAA,6BAA6B,CAACL,UAAD,CAA7B;AACD;AACF,CANM","sourcesContent":["import { ObjectCheck, ObjectValidation, ValidationTypes } from '../types/IstioObjects';\nimport * as AlertUtils from './AlertUtils';\n\nconst validationMessage = (validation: ObjectValidation, failedCheck: ObjectCheck) => {\n  return `${validation.objectType}:${validation.name} ${failedCheck.message}`;\n};\n\nconst showInMessageCenterValidation = (validation: ObjectValidation) => {\n  for (let check of validation.checks) {\n    switch (check.severity) {\n      case ValidationTypes.Warning:\n        AlertUtils.addWarning(validationMessage(validation, check), false);\n        break;\n      case ValidationTypes.Error:\n        AlertUtils.addError(validationMessage(validation, check));\n        break;\n    }\n  }\n};\n\nconst showInMessageCenterValidations = (validations: ObjectValidation[]) => {\n  const elementsWithFailedValidations: string[] = [];\n  let hasError = false;\n  for (let validation of validations) {\n    for (let check of validation.checks) {\n      if ([ValidationTypes.Warning, ValidationTypes.Error].includes(check.severity)) {\n        if (check.severity === ValidationTypes.Error) {\n          hasError = true;\n        }\n        elementsWithFailedValidations.push(`${validation.objectType}:${validation.name}`);\n      }\n    }\n  }\n  if (elementsWithFailedValidations.length > 0) {\n    const detail = `${elementsWithFailedValidations.join('\\n')}`;\n    if (hasError) {\n      AlertUtils.addError('IstioConfig has errors', undefined, undefined, undefined, detail);\n    } else {\n      AlertUtils.addWarning('IstioConfig has warnings', false, undefined, detail);\n    }\n  }\n};\n\nexport const showInMessageCenter = (validation: ObjectValidation | ObjectValidation[]) => {\n  if (Array.isArray(validation)) {\n    showInMessageCenterValidations(validation);\n  } else {\n    showInMessageCenterValidation(validation);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}