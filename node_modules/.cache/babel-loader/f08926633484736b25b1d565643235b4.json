{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/root/kiali-ui/src/components/Label/Label.tsx\";\n\nimport * as React from 'react';\nimport { Label as PfLabel } from '@patternfly/react-core';\nimport './Label.css';\nimport { canRender } from '../../utils/SafeRender';\n\nvar Label = function Label(props) {\n  var name = props.name,\n      value = props.value;\n\n  if (canRender(name) && canRender(value)) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"label-pair\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PfLabel, {\n      className: \"label-key\",\n      isCompact: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, name), value && value.length > 0 && /*#__PURE__*/React.createElement(PfLabel, {\n      className: \"label-value\",\n      isCompact: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, value || ''));\n  } else {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    }, \"This label has an unexpected format\");\n  }\n};\n\nexport default Label;","map":{"version":3,"sources":["/root/kiali-ui/src/components/Label/Label.tsx"],"names":["React","Label","PfLabel","canRender","props","name","value","length"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAK,IAAIC,OAAlB,QAAiC,wBAAjC;AACA,OAAO,aAAP;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AAOA,IAAMF,KAAK,GAAG,SAARA,KAAQ,CAACG,KAAD,EAAkB;AAC9B,MAAQC,IAAR,GAAwBD,KAAxB,CAAQC,IAAR;AAAA,MAAcC,KAAd,GAAwBF,KAAxB,CAAcE,KAAd;;AAEA,MAAIH,SAAS,CAACE,IAAD,CAAT,IAAmBF,SAAS,CAACG,KAAD,CAAhC,EAAyC;AACvC,wBACE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,WAAnB;AAA+B,MAAA,SAAS,EAAE,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IADH,CADF,EAIGC,KAAK,IAAIA,KAAK,CAACC,MAAN,GAAe,CAAxB,iBACC,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAiC,MAAA,SAAS,EAAE,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,IAAI,EADZ,CALJ,CADF;AAYD,GAbD,MAaO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAP;AACD;AACF,CAnBD;;AAqBA,eAAeL,KAAf","sourcesContent":["import * as React from 'react';\nimport { Label as PfLabel } from '@patternfly/react-core';\nimport './Label.css';\nimport { canRender } from '../../utils/SafeRender';\n\ninterface Props {\n  name: string;\n  value: string;\n}\n\nconst Label = (props: Props) => {\n  const { name, value } = props;\n\n  if (canRender(name) && canRender(value)) {\n    return (\n      <span className=\"label-pair\">\n        <PfLabel className=\"label-key\" isCompact={true}>\n          {name}\n        </PfLabel>\n        {value && value.length > 0 && (\n          <PfLabel className=\"label-value\" isCompact={true}>\n            {value || ''}\n          </PfLabel>\n        )}\n      </span>\n    );\n  } else {\n    return <span>This label has an unexpected format</span>;\n  }\n};\n\nexport default Label;\n"]},"metadata":{},"sourceType":"module"}