{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/components/Envoy/tables/BaseTable.tsx\";\nimport * as React from 'react';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { ClusterSummaryTable, ClusterTable } from './ClusterTable';\nimport { RouteSummaryTable, RouteTable } from './RouteTable';\nimport { ListenerSummaryTable, ListenerTable } from './ListenerTable';\nimport { StatefulFilters } from '../../Filters/StatefulFilters';\nimport ToolbarDropdown from '../../ToolbarDropdown/ToolbarDropdown';\nimport { PFBadge, PFBadges } from '../../Pf/PfBadges';\nimport { TooltipPosition } from '@patternfly/react-core';\nimport { style } from 'typestyle';\nvar iconStyle = style({\n  display: 'inline-block',\n  verticalAlign: '2px !important'\n});\nexport function SummaryTableRenderer() {\n  return /*#__PURE__*/function (_React$Component) {\n    _inherits(SummaryTable, _React$Component);\n\n    var _super = _createSuper(SummaryTable);\n\n    function SummaryTable() {\n      var _this;\n\n      _classCallCheck(this, SummaryTable);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n\n      _this.onSort = function (_, columnIndex, sortByDirection) {\n        _this.props.writer.setSorting(columnIndex, sortByDirection);\n\n        _this.props.onSort(_this.props.writer.resource(), columnIndex, sortByDirection);\n      };\n\n      _this.onFilterApplied = function (activeFilter) {\n        _this.setState({\n          activeFilters: activeFilter\n        });\n      };\n\n      return _this;\n    }\n\n    _createClass(SummaryTable, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StatefulFilters, {\n          initialFilters: this.props.writer.availableFilters(),\n          onFilterChange: this.onFilterApplied,\n          childrenFirst: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          key: \"service-icon\",\n          className: iconStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(PFBadge, {\n          badge: PFBadges.Pod,\n          position: TooltipPosition.top,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }\n        })), /*#__PURE__*/React.createElement(ToolbarDropdown, {\n          id: \"envoy_pods_list\",\n          tooltip: \"Display envoy config for the selected pod\",\n          handleSelect: function handleSelect(key) {\n            return _this2.props.setPod(key);\n          },\n          value: this.props.pod,\n          label: this.props.pod,\n          options: this.props.pods.sort(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }\n        }))), /*#__PURE__*/React.createElement(Table, {\n          \"aria-label\": \"Sortable Table\",\n          cells: this.props.writer.head(),\n          rows: this.props.writer.rows(),\n          sortBy: this.props.writer.sortBy(),\n          onSort: this.onSort,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(TableHeader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(TableBody, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }\n        })));\n      }\n    }]);\n\n    return SummaryTable;\n  }(React.Component);\n}\nexport var SummaryTableBuilder = function SummaryTableBuilder(resource, config, sortBy, namespaces, namespace, routeLinkHandler, workload) {\n  var writerComp, writerProps;\n\n  switch (resource) {\n    case 'clusters':\n      writerComp = ClusterSummaryTable;\n      writerProps = new ClusterTable(config.clusters || [], sortBy['clusters'], namespaces, namespace);\n      break;\n\n    case 'listeners':\n      writerComp = ListenerSummaryTable;\n      writerProps = new ListenerTable(config.listeners || [], sortBy['listeners'], namespaces, namespace, workload, routeLinkHandler);\n      break;\n\n    case 'routes':\n      writerComp = RouteSummaryTable;\n      writerProps = new RouteTable(config.routes || [], sortBy['routes'], namespaces, namespace);\n      break;\n  }\n\n  return [writerComp, writerProps];\n};","map":{"version":3,"sources":["/root/kiali-ui/src/components/Envoy/tables/BaseTable.tsx"],"names":["React","Table","TableBody","TableHeader","ClusterSummaryTable","ClusterTable","RouteSummaryTable","RouteTable","ListenerSummaryTable","ListenerTable","StatefulFilters","ToolbarDropdown","PFBadge","PFBadges","TooltipPosition","style","iconStyle","display","verticalAlign","SummaryTableRenderer","onSort","_","columnIndex","sortByDirection","props","writer","setSorting","resource","onFilterApplied","activeFilter","setState","activeFilters","availableFilters","Pod","top","key","setPod","pod","pods","sort","head","rows","sortBy","Component","SummaryTableBuilder","config","namespaces","namespace","routeLinkHandler","workload","writerComp","writerProps","clusters","listeners","routes"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ICell, ISortBy, SortByDirection, Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { ClusterSummaryTable, ClusterTable } from './ClusterTable';\nimport { RouteSummaryTable, RouteTable } from './RouteTable';\nimport { ListenerSummaryTable, ListenerTable } from './ListenerTable';\nimport { EnvoyProxyDump } from '../../../types/IstioObjects';\nimport { ActiveFiltersInfo, FilterType } from '../../../types/Filters';\nimport { StatefulFilters } from '../../Filters/StatefulFilters';\nimport { ResourceSorts } from '../EnvoyDetails';\nimport Namespace from '../../../types/Namespace';\nimport ToolbarDropdown from '../../ToolbarDropdown/ToolbarDropdown';\nimport { PFBadge, PFBadges } from '../../Pf/PfBadges';\nimport { TooltipPosition } from '@patternfly/react-core';\nimport { style } from 'typestyle';\n\nexport interface SummaryTable {\n  head: () => ICell[];\n  rows: () => (string | number | JSX.Element)[][];\n  resource: () => string;\n  sortBy: () => ISortBy;\n  setSorting: (columnIndex: number, direction: 'asc' | 'desc') => void;\n  availableFilters: () => FilterType[];\n}\n\nconst iconStyle = style({\n  display: 'inline-block',\n  verticalAlign: '2px !important'\n});\n\nexport function SummaryTableRenderer<T extends SummaryTable>() {\n  interface SummaryTableProps<T> {\n    writer: T;\n    sortBy: ISortBy;\n    onSort: (resource: string, columnIndex: number, sortByDirection: SortByDirection) => void;\n    pod: string;\n    pods: string[];\n    setPod: (pod: string) => void;\n  }\n\n  type SummaryTableState = {\n    activeFilters: ActiveFiltersInfo;\n  };\n\n  return class SummaryTable extends React.Component<SummaryTableProps<T>, SummaryTableState> {\n    onSort = (_: React.MouseEvent, columnIndex: number, sortByDirection: SortByDirection) => {\n      this.props.writer.setSorting(columnIndex, sortByDirection);\n      this.props.onSort(this.props.writer.resource(), columnIndex, sortByDirection);\n    };\n\n    onFilterApplied = (activeFilter: ActiveFiltersInfo) => {\n      this.setState({\n        activeFilters: activeFilter\n      });\n    };\n\n    render() {\n      return (\n        <>\n          <StatefulFilters\n            initialFilters={this.props.writer.availableFilters()}\n            onFilterChange={this.onFilterApplied}\n            childrenFirst={true}\n          >\n            <span>\n              <div key=\"service-icon\" className={iconStyle}>\n                <PFBadge badge={PFBadges.Pod} position={TooltipPosition.top} />\n              </div>\n              <ToolbarDropdown\n                id=\"envoy_pods_list\"\n                tooltip=\"Display envoy config for the selected pod\"\n                handleSelect={key => this.props.setPod(key)}\n                value={this.props.pod}\n                label={this.props.pod}\n                options={this.props.pods.sort()}\n              />\n            </span>\n          </StatefulFilters>\n          <Table\n            aria-label=\"Sortable Table\"\n            cells={this.props.writer.head()}\n            rows={this.props.writer.rows()}\n            sortBy={this.props.writer.sortBy()}\n            onSort={this.onSort}\n          >\n            <TableHeader />\n            <TableBody />\n          </Table>\n        </>\n      );\n    }\n  };\n}\n\nexport const SummaryTableBuilder = (\n  resource: string,\n  config: EnvoyProxyDump,\n  sortBy: ResourceSorts,\n  namespaces: Namespace[],\n  namespace: string,\n  routeLinkHandler: () => void,\n  workload?: string\n) => {\n  let writerComp, writerProps;\n\n  switch (resource) {\n    case 'clusters':\n      writerComp = ClusterSummaryTable;\n      writerProps = new ClusterTable(config.clusters || [], sortBy['clusters'], namespaces, namespace);\n      break;\n    case 'listeners':\n      writerComp = ListenerSummaryTable;\n      writerProps = new ListenerTable(\n        config.listeners || [],\n        sortBy['listeners'],\n        namespaces,\n        namespace,\n        workload,\n        routeLinkHandler\n      );\n      break;\n    case 'routes':\n      writerComp = RouteSummaryTable;\n      writerProps = new RouteTable(config.routes || [], sortBy['routes'], namespaces, namespace);\n      break;\n  }\n  return [writerComp, writerProps];\n};\n"]},"metadata":{},"sourceType":"module"}