{"ast":null,"code":"import _classCallCheck from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/kiali-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/kiali-ui/src/pages/WorkloadDetails/WorkloadPods.tsx\";\nimport * as React from 'react';\nimport { cellWidth, Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport { Card, CardBody, CardHeader, EmptyState, EmptyStateBody, EmptyStateVariant, Title, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport PodStatus from './PodStatus';\nimport { style } from 'typestyle';\nimport { KialiIcon } from '../../config/KialiIcon';\nimport LocalTime from '../../components/Time/LocalTime';\nimport Labels from '../../components/Label/Labels';\nimport { PFBadge, PFBadges } from '../../components/Pf/PfBadges';\nvar emptyStyle = style({\n  padding: '0 0 0 0',\n  margin: '0 0 0 0'\n});\nvar resourceListStyle = style({\n  margin: '0px 0 11px 0',\n  $nest: {\n    '& > ul > li > span': {\n      float: 'left',\n      width: '125px',\n      fontWeight: 700\n    }\n  }\n});\nvar infoStyle = style({\n  margin: '0px 5px 2px 10px',\n  verticalAlign: '-4px !important'\n});\nvar iconStyle = style({\n  display: 'inline-block',\n  verticalAlign: '2px !important'\n});\n\nvar WorkloadPods = /*#__PURE__*/function (_React$Component) {\n  _inherits(WorkloadPods, _React$Component);\n\n  var _super = _createSuper(WorkloadPods);\n\n  function WorkloadPods() {\n    _classCallCheck(this, WorkloadPods);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(WorkloadPods, [{\n    key: \"columns\",\n    value: function columns() {\n      return [{\n        title: 'Name'\n      }, {\n        title: 'Status',\n        transforms: [cellWidth(10)]\n      }];\n    }\n  }, {\n    key: \"noPods\",\n    value: function noPods() {\n      return [{\n        cells: [{\n          title: /*#__PURE__*/React.createElement(EmptyState, {\n            variant: EmptyStateVariant.small,\n            className: emptyStyle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(EmptyStateBody, {\n            className: emptyStyle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }\n          }, \"No Pods in workload \", this.props.workload)),\n          props: {\n            colSpan: 2\n          }\n        }]\n      }];\n    }\n  }, {\n    key: \"rows\",\n    value: function rows() {\n      var _this = this;\n\n      if ((this.props.pods || []).length === 0) {\n        return this.noPods();\n      }\n\n      var rows = [];\n      (this.props.pods || []).sort(function (p1, p2) {\n        return p1.name < p2.name ? -1 : 1;\n      }).map(function (pod, _podIdx) {\n        var validation = {};\n\n        if (_this.props.validations[pod.name]) {\n          validation = _this.props.validations[pod.name];\n        }\n\n        var podProperties = /*#__PURE__*/React.createElement(\"div\", {\n          key: \"properties-list\",\n          className: resourceListStyle,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"ul\", {\n          style: {\n            listStyleType: 'none'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }\n        }, \"Created\"), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(LocalTime, {\n          time: pod.createdAt,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(\"li\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }\n        }, \"Created By\"), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }\n        }, pod.createdBy && pod.createdBy.length > 0 ? pod.createdBy.map(function (ref) {\n          return ref.name + ' (' + ref.kind + ')';\n        }).join(', ') : 'Not found')), /*#__PURE__*/React.createElement(\"li\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }\n        }, \"Istio Init Container\"), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }\n        }, pod.istioInitContainers ? pod.istioInitContainers.map(function (c) {\n          return \"\".concat(c.image);\n        }).join(', ') : 'Not found')), /*#__PURE__*/React.createElement(\"li\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }\n        }, \"Istio Container\"), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }\n        }, pod.istioContainers ? pod.istioContainers.map(function (c) {\n          return \"\".concat(c.image);\n        }).join(', ') : 'Not found')), /*#__PURE__*/React.createElement(\"li\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }\n        }, \"Labels\"), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Labels, {\n          labels: pod.labels,\n          expanded: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 19\n          }\n        })))));\n        rows.push({\n          cells: [{\n            title: /*#__PURE__*/React.createElement(\"span\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              key: \"service-icon\",\n              className: iconStyle,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(PFBadge, {\n              badge: PFBadges.Pod,\n              position: TooltipPosition.top,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 21\n              }\n            })), pod.name, /*#__PURE__*/React.createElement(Tooltip, {\n              position: TooltipPosition.right,\n              content: /*#__PURE__*/React.createElement(\"div\", {\n                style: {\n                  textAlign: 'left'\n                },\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 30\n                }\n              }, podProperties),\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(KialiIcon.Info, {\n              className: infoStyle,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }\n            })))\n          }, {\n            title: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PodStatus, {\n              proxyStatus: pod.proxyStatus,\n              checks: validation.checks,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }\n            }))\n          }]\n        });\n        return rows;\n      });\n      return rows;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Card, {\n        isCompact: true,\n        id: 'WorkloadPodsCard',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Title, {\n        headingLevel: \"h5\",\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }\n      }, \"Pods\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        variant: TableVariant.compact,\n        \"aria-label\": 'list_workloads_pods',\n        cells: this.columns(),\n        rows: this.rows() // This style is declared on _overrides.scss\n        ,\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return WorkloadPods;\n}(React.Component);\n\nexport default WorkloadPods;","map":{"version":3,"sources":["/root/kiali-ui/src/pages/WorkloadDetails/WorkloadPods.tsx"],"names":["React","cellWidth","Table","TableBody","TableHeader","TableVariant","Card","CardBody","CardHeader","EmptyState","EmptyStateBody","EmptyStateVariant","Title","Tooltip","TooltipPosition","PodStatus","style","KialiIcon","LocalTime","Labels","PFBadge","PFBadges","emptyStyle","padding","margin","resourceListStyle","$nest","float","width","fontWeight","infoStyle","verticalAlign","iconStyle","display","WorkloadPods","title","transforms","cells","small","props","workload","colSpan","pods","length","noPods","rows","sort","p1","p2","name","map","pod","_podIdx","validation","validations","podProperties","listStyleType","createdAt","createdBy","ref","kind","join","istioInitContainers","c","image","istioContainers","labels","push","Pod","top","right","textAlign","proxyStatus","checks","compact","columns","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ObjectValidation, Pod } from '../../types/IstioObjects';\nimport { cellWidth, ICell, IRow, Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  Title,\n  Tooltip,\n  TooltipPosition\n} from '@patternfly/react-core';\nimport PodStatus from './PodStatus';\nimport { style } from 'typestyle';\nimport { KialiIcon } from '../../config/KialiIcon';\nimport LocalTime from '../../components/Time/LocalTime';\nimport Labels from '../../components/Label/Labels';\nimport { PFBadge, PFBadges } from '../../components/Pf/PfBadges';\n\ntype WorkloadPodsProps = {\n  namespace: string;\n  workload: string;\n  pods: Pod[];\n  validations: { [key: string]: ObjectValidation };\n};\n\nconst emptyStyle = style({\n  padding: '0 0 0 0',\n  margin: '0 0 0 0'\n});\n\nconst resourceListStyle = style({\n  margin: '0px 0 11px 0',\n  $nest: {\n    '& > ul > li > span': {\n      float: 'left',\n      width: '125px',\n      fontWeight: 700\n    }\n  }\n});\n\nconst infoStyle = style({\n  margin: '0px 5px 2px 10px',\n  verticalAlign: '-4px !important'\n});\n\nconst iconStyle = style({\n  display: 'inline-block',\n  verticalAlign: '2px !important'\n});\n\nclass WorkloadPods extends React.Component<WorkloadPodsProps> {\n  columns(): ICell[] {\n    return [{ title: 'Name' }, { title: 'Status', transforms: [cellWidth(10) as any] }];\n  }\n\n  noPods(): IRow[] {\n    return [\n      {\n        cells: [\n          {\n            title: (\n              <EmptyState variant={EmptyStateVariant.small} className={emptyStyle}>\n                <EmptyStateBody className={emptyStyle}>No Pods in workload {this.props.workload}</EmptyStateBody>\n              </EmptyState>\n            ),\n            props: { colSpan: 2 }\n          }\n        ]\n      }\n    ];\n  }\n\n  rows(): IRow[] {\n    if ((this.props.pods || []).length === 0) {\n      return this.noPods();\n    }\n\n    let rows: IRow[] = [];\n    (this.props.pods || [])\n      .sort((p1: Pod, p2: Pod) => (p1.name < p2.name ? -1 : 1))\n      .map((pod, _podIdx) => {\n        let validation: ObjectValidation = {} as ObjectValidation;\n        if (this.props.validations[pod.name]) {\n          validation = this.props.validations[pod.name];\n        }\n        const podProperties = (\n          <div key=\"properties-list\" className={resourceListStyle}>\n            <ul style={{ listStyleType: 'none' }}>\n              <li>\n                <span>Created</span>\n                <div style={{ display: 'inline-block' }}>\n                  <LocalTime time={pod.createdAt} />\n                </div>\n              </li>\n              <li>\n                <span>Created By</span>\n                <div style={{ display: 'inline-block' }}>\n                  {pod.createdBy && pod.createdBy.length > 0\n                    ? pod.createdBy.map(ref => ref.name + ' (' + ref.kind + ')').join(', ')\n                    : 'Not found'}\n                </div>\n              </li>\n              <li>\n                <span>Istio Init Container</span>\n                <div style={{ display: 'inline-block' }}>\n                  {pod.istioInitContainers ? pod.istioInitContainers.map(c => `${c.image}`).join(', ') : 'Not found'}\n                </div>\n              </li>\n              <li>\n                <span>Istio Container</span>\n                <div style={{ display: 'inline-block' }}>\n                  {pod.istioContainers ? pod.istioContainers.map(c => `${c.image}`).join(', ') : 'Not found'}\n                </div>\n              </li>\n              <li>\n                <span>Labels</span>\n                <div style={{ display: 'inline-block' }}>\n                  <Labels labels={pod.labels} expanded={true} />\n                </div>\n              </li>\n            </ul>\n          </div>\n        );\n\n        rows.push({\n          cells: [\n            {\n              title: (\n                <span>\n                  <div key=\"service-icon\" className={iconStyle}>\n                    <PFBadge badge={PFBadges.Pod} position={TooltipPosition.top} />\n                  </div>\n                  {pod.name}\n                  <Tooltip\n                    position={TooltipPosition.right}\n                    content={<div style={{ textAlign: 'left' }}>{podProperties}</div>}\n                  >\n                    <KialiIcon.Info className={infoStyle} />\n                  </Tooltip>\n                </span>\n              )\n            },\n            {\n              title: (\n                <>\n                  <PodStatus proxyStatus={pod.proxyStatus} checks={validation.checks} />\n                </>\n              )\n            }\n          ]\n        });\n        return rows;\n      });\n\n    return rows;\n  }\n\n  render() {\n    return (\n      <Card isCompact={true} id={'WorkloadPodsCard'}>\n        <CardHeader>\n          <Title headingLevel=\"h5\" size=\"lg\">\n            Pods\n          </Title>\n        </CardHeader>\n        <CardBody>\n          <Table\n            variant={TableVariant.compact}\n            aria-label={'list_workloads_pods'}\n            cells={this.columns()}\n            rows={this.rows()}\n            // This style is declared on _overrides.scss\n            className=\"table\"\n          >\n            <TableHeader />\n            <TableBody />\n          </Table>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default WorkloadPods;\n"]},"metadata":{},"sourceType":"module"}