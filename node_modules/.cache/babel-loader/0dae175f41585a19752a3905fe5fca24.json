{"ast":null,"code":"import { FILTER_ACTION_APPEND, FilterTypes } from '../../types/Filters';\nexport var sortFields = [{\n  id: 'namespace',\n  title: '命名空间',\n  isNumeric: false,\n  param: 'ns',\n  compare: function compare(a, b) {\n    return a.namespace.localeCompare(b.namespace) || a.name.localeCompare(b.name);\n  }\n}, {\n  id: 'istiotype',\n  title: '资源类型',\n  isNumeric: false,\n  param: 'it',\n  compare: function compare(a, b) {\n    return a.type.localeCompare(b.type) || a.name.localeCompare(b.name);\n  }\n}, {\n  id: 'istioname',\n  title: '资源名称',\n  isNumeric: false,\n  param: 'in',\n  compare: function compare(a, b) {\n    // On same name order is not well defined, we need some fallback methods\n    // This happens specially on adapters/templates where Istio 1.0.x calls them \"handler\"\n    // So, we have a lot of objects with same namespace+name\n    return a.name.localeCompare(b.name) || a.namespace.localeCompare(b.namespace) || a.type.localeCompare(b.type);\n  }\n}, {\n  id: 'configvalidation',\n  title: '配置检查',\n  isNumeric: false,\n  param: 'cv',\n  compare: function compare(a, b) {\n    var sortValue = -1;\n\n    if (a.validation && !b.validation) {\n      sortValue = -1;\n    } else if (!a.validation && b.validation) {\n      sortValue = 1;\n    } else if (!a.validation && !b.validation) {\n      sortValue = 0;\n    } else if (a.validation && b.validation) {\n      if (a.validation.valid && !b.validation.valid) {\n        sortValue = -1;\n      } else if (!a.validation.valid && b.validation.valid) {\n        sortValue = 1;\n      } else if (a.validation.valid && b.validation.valid) {\n        sortValue = a.validation.checks.length - b.validation.checks.length;\n      } else if (!a.validation.valid && !b.validation.valid) {\n        sortValue = b.validation.checks.length - a.validation.checks.length;\n      }\n    }\n\n    return sortValue || a.name.localeCompare(b.name);\n  }\n}];\nexport var istioNameFilter = {\n  id: 'istioname',\n  title: 'Istio Name',\n  placeholder: 'Filter by Istio Name',\n  filterType: FilterTypes.text,\n  action: FILTER_ACTION_APPEND,\n  filterValues: []\n};\nexport var istioTypeFilter = {\n  id: 'istiotype',\n  title: '配置类型',\n  placeholder: 'Filter by Istio Type',\n  filterType: FilterTypes.typeAhead,\n  action: FILTER_ACTION_APPEND,\n  filterValues: [{\n    id: 'AuthorizationPolicy',\n    title: 'AuthorizationPolicy'\n  }, {\n    id: 'DestinationRule',\n    title: 'DestinationRule'\n  }, {\n    id: 'EnvoyFilter',\n    title: 'EnvoyFilter'\n  }, {\n    id: 'Gateway',\n    title: 'Gateway'\n  }, {\n    id: 'PeerAuthentication',\n    title: 'PeerAuthentication'\n  }, {\n    id: 'RequestAuthentication',\n    title: 'RequestAuthentication'\n  }, {\n    id: 'ServiceEntry',\n    title: 'ServiceEntry'\n  }, {\n    id: 'Sidecar',\n    title: 'Sidecar'\n  }, {\n    id: 'VirtualService',\n    title: 'VirtualService'\n  }, {\n    id: 'WorkloadEntry',\n    title: 'WorkloadEntry'\n  }, {\n    id: 'WorkloadGroup',\n    title: 'WorkloadGroup'\n  }]\n};\nexport var configValidationFilter = {\n  id: 'configvalidation',\n  title: 'Config',\n  placeholder: 'Filter by Config Validation',\n  filterType: FilterTypes.select,\n  action: FILTER_ACTION_APPEND,\n  filterValues: [{\n    id: 'valid',\n    title: 'Valid'\n  }, {\n    id: 'warning',\n    title: 'Warning'\n  }, {\n    id: 'notvalid',\n    title: 'Not Valid'\n  }, {\n    id: 'notvalidated',\n    title: 'Not Validated'\n  }]\n};\nexport var availableFilters = [istioTypeFilter, istioNameFilter, configValidationFilter];\nexport var sortIstioItems = function sortIstioItems(unsorted, sortField, isAscending) {\n  var sortPromise = new Promise(function (resolve) {\n    resolve(unsorted.sort(isAscending ? sortField.compare : function (a, b) {\n      return sortField.compare(b, a);\n    }));\n  });\n  return sortPromise;\n};","map":{"version":3,"sources":["/root/kiali-ui/src/pages/IstioConfigList/FiltersAndSorts.ts"],"names":["FILTER_ACTION_APPEND","FilterTypes","sortFields","id","title","isNumeric","param","compare","a","b","namespace","localeCompare","name","type","sortValue","validation","valid","checks","length","istioNameFilter","placeholder","filterType","text","action","filterValues","istioTypeFilter","typeAhead","configValidationFilter","select","availableFilters","sortIstioItems","unsorted","sortField","isAscending","sortPromise","Promise","resolve","sort"],"mappings":"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","sourcesContent":["import { SortField } from '../../types/SortFilters';\nimport { IstioConfigItem } from '../../types/IstioConfigList';\nimport { FILTER_ACTION_APPEND, FilterType, FilterTypes } from '../../types/Filters';\n\nexport const sortFields: SortField<IstioConfigItem>[] = [\n  {\n    id: 'namespace',\n    title: '命名空间',\n    isNumeric: false,\n    param: 'ns',\n    compare: (a: IstioConfigItem, b: IstioConfigItem) => {\n      return a.namespace.localeCompare(b.namespace) || a.name.localeCompare(b.name);\n    }\n  },\n  {\n    id: 'istiotype',\n    title: '资源类型',\n    isNumeric: false,\n    param: 'it',\n    compare: (a: IstioConfigItem, b: IstioConfigItem) => {\n      return a.type.localeCompare(b.type) || a.name.localeCompare(b.name);\n    }\n  },\n  {\n    id: 'istioname',\n    title: '资源名称',\n    isNumeric: false,\n    param: 'in',\n    compare: (a: IstioConfigItem, b: IstioConfigItem) => {\n      // On same name order is not well defined, we need some fallback methods\n      // This happens specially on adapters/templates where Istio 1.0.x calls them \"handler\"\n      // So, we have a lot of objects with same namespace+name\n      return a.name.localeCompare(b.name) || a.namespace.localeCompare(b.namespace) || a.type.localeCompare(b.type);\n    }\n  },\n  {\n    id: 'configvalidation',\n    title: '配置检查',\n    isNumeric: false,\n    param: 'cv',\n    compare: (a: IstioConfigItem, b: IstioConfigItem) => {\n      let sortValue = -1;\n      if (a.validation && !b.validation) {\n        sortValue = -1;\n      } else if (!a.validation && b.validation) {\n        sortValue = 1;\n      } else if (!a.validation && !b.validation) {\n        sortValue = 0;\n      } else if (a.validation && b.validation) {\n        if (a.validation.valid && !b.validation.valid) {\n          sortValue = -1;\n        } else if (!a.validation.valid && b.validation.valid) {\n          sortValue = 1;\n        } else if (a.validation.valid && b.validation.valid) {\n          sortValue = a.validation.checks.length - b.validation.checks.length;\n        } else if (!a.validation.valid && !b.validation.valid) {\n          sortValue = b.validation.checks.length - a.validation.checks.length;\n        }\n      }\n\n      return sortValue || a.name.localeCompare(b.name);\n    }\n  }\n];\n\nexport const istioNameFilter: FilterType = {\n  id: 'istioname',\n  title: 'Istio Name',\n  placeholder: 'Filter by Istio Name',\n  filterType: FilterTypes.text,\n  action: FILTER_ACTION_APPEND,\n  filterValues: []\n};\n\nexport const istioTypeFilter: FilterType = {\n  id: 'istiotype',\n  title: '配置类型',\n  placeholder: 'Filter by Istio Type',\n  filterType: FilterTypes.typeAhead,\n  action: FILTER_ACTION_APPEND,\n  filterValues: [\n    {\n      id: 'AuthorizationPolicy',\n      title: 'AuthorizationPolicy'\n    },\n    {\n      id: 'DestinationRule',\n      title: 'DestinationRule'\n    },\n    {\n      id: 'EnvoyFilter',\n      title: 'EnvoyFilter'\n    },\n    {\n      id: 'Gateway',\n      title: 'Gateway'\n    },\n    {\n      id: 'PeerAuthentication',\n      title: 'PeerAuthentication'\n    },\n    {\n      id: 'RequestAuthentication',\n      title: 'RequestAuthentication'\n    },\n    {\n      id: 'ServiceEntry',\n      title: 'ServiceEntry'\n    },\n    {\n      id: 'Sidecar',\n      title: 'Sidecar'\n    },\n    {\n      id: 'VirtualService',\n      title: 'VirtualService'\n    },\n    {\n      id: 'WorkloadEntry',\n      title: 'WorkloadEntry'\n    },\n    {\n      id: 'WorkloadGroup',\n      title: 'WorkloadGroup'\n    }\n  ]\n};\n\nexport const configValidationFilter: FilterType = {\n  id: 'configvalidation',\n  title: 'Config',\n  placeholder: 'Filter by Config Validation',\n  filterType: FilterTypes.select,\n  action: FILTER_ACTION_APPEND,\n  filterValues: [\n    {\n      id: 'valid',\n      title: 'Valid'\n    },\n    {\n      id: 'warning',\n      title: 'Warning'\n    },\n    {\n      id: 'notvalid',\n      title: 'Not Valid'\n    },\n    {\n      id: 'notvalidated',\n      title: 'Not Validated'\n    }\n  ]\n};\n\nexport const availableFilters: FilterType[] = [istioTypeFilter, istioNameFilter, configValidationFilter];\n\nexport const sortIstioItems = (\n  unsorted: IstioConfigItem[],\n  sortField: SortField<IstioConfigItem>,\n  isAscending: boolean\n) => {\n  const sortPromise: Promise<IstioConfigItem[]> = new Promise(resolve => {\n    resolve(unsorted.sort(isAscending ? sortField.compare : (a, b) => sortField.compare(b, a)));\n  });\n\n  return sortPromise;\n};\n"]},"metadata":{},"sourceType":"module"}