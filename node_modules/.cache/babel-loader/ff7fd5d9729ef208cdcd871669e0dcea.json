{"ast":null,"code":"// eslint-disable-next-line @typescript-eslint/no-explicit-any\n// Create a legend object recognized by Victory. \"Type\" is optional (default is a square), it refers to a shape ('circle', 'star', etc.)\nexport var makeLegend = function makeLegend(name, color, type) {\n  return {\n    name: name,\n    symbol: {\n      fill: color,\n      type: type\n    }\n  };\n};","map":{"version":3,"sources":["/root/kiali-ui/src/types/VictoryChartInfo.ts"],"names":["makeLegend","name","color","type","symbol","fill"],"mappings":"AAMA;AAoCA;AACA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAeC,KAAf,EAA8BC,IAA9B,EAA4D;AACpF,SAAO;AACLF,IAAAA,IAAI,EAAEA,IADD;AAELG,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAEH,KADA;AAENC,MAAAA,IAAI,EAAEA;AAFA;AAFH,GAAP;AAOD,CARM","sourcesContent":["export interface LegendInfo {\n  height: number;\n  itemsPerRow: number;\n  fontSizeLabels: number;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Style = any;\n\nexport type VCDataPoint = {\n  name: string;\n  x: number | Date | string;\n  y: number;\n  style?: Style;\n};\n\nexport type LineInfo = {\n  name: string;\n  color: string;\n  unit?: string;\n  symbol?: string;\n  size?: number;\n  scaleFactor?: number;\n};\n\nexport type RichDataPoint = VCDataPoint & LineInfo;\n\nexport type BucketDataPoint = {\n  name: string;\n  start: number | Date;\n  end: number | Date;\n  x: number | Date;\n  y: number[];\n  style?: Style;\n};\nexport type RawOrBucket<T extends LineInfo> = T & (VCDataPoint | BucketDataPoint);\n\nexport type LegendItem = {\n  name: string;\n  symbol: { fill: string; type?: string };\n};\n\n// Create a legend object recognized by Victory. \"Type\" is optional (default is a square), it refers to a shape ('circle', 'star', etc.)\nexport const makeLegend = (name: string, color: string, type?: string): LegendItem => {\n  return {\n    name: name,\n    symbol: {\n      fill: color,\n      type: type\n    }\n  };\n};\n\nexport type VCLine<T extends RichDataPoint> = {\n  datapoints: T[];\n  color?: string;\n  legendItem: LegendItem;\n};\n\nexport type VCLines<T extends RichDataPoint> = VCLine<T>[];\n"]},"metadata":{},"sourceType":"module"}