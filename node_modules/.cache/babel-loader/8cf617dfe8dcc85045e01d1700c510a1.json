{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/components/Validations/GlobalValidation.tsx\";\nimport React from 'react';\nimport { ValidationTypes } from '../../types/IstioObjects';\nimport Validation from './Validation';\n\nvar GlobalValidation = /*#__PURE__*/function (_React$Component) {\n  _inherits(GlobalValidation, _React$Component);\n\n  var _super = _createSuper(GlobalValidation);\n\n  function GlobalValidation() {\n    _classCallCheck(this, GlobalValidation);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GlobalValidation, [{\n    key: \"isValid\",\n    value: function isValid() {\n      return !!this.props.validation && this.props.validation.valid;\n    }\n  }, {\n    key: \"numberOfChecks\",\n    value: function numberOfChecks(type) {\n      var object = this.props.validation;\n      var count = 0;\n\n      if (object) {\n        count = (object && object.checks ? object.checks : []).filter(function (i) {\n          return i.severity === type;\n        }).length;\n      }\n\n      return count;\n    }\n  }, {\n    key: \"severity\",\n    value: function severity() {\n      if (!this.props.validation) {\n        return ValidationTypes.Error;\n      }\n\n      var object = this.props.validation;\n      var warnChecks = this.numberOfChecks(ValidationTypes.Warning);\n      var errChecks = this.numberOfChecks(ValidationTypes.Error);\n      var validation = ValidationTypes.Correct;\n\n      if (!object.valid) {\n        if (errChecks > 0) {\n          validation = ValidationTypes.Error;\n        } else if (warnChecks > 0) {\n          validation = ValidationTypes.Warning;\n        }\n      }\n\n      return validation;\n    }\n  }, {\n    key: \"checkForPath\",\n    value: function checkForPath(path) {\n      var object = this.props.validation;\n\n      if (!object || !object.checks) {\n        return [];\n      }\n\n      var check = object.checks.filter(function (item) {\n        return item.path === path;\n      });\n      return check;\n    }\n  }, {\n    key: \"globalChecks\",\n    value: function globalChecks() {\n      return this.checkForPath('');\n    }\n  }, {\n    key: \"message\",\n    value: function message() {\n      var checks = this.globalChecks();\n      var message = checks.map(function (check) {\n        return (check.code ? check.code + ' ' : '') + check.message;\n      }).join(',');\n\n      if (!message.length && !this.isValid()) {\n        message = 'Not all checks passed!';\n      }\n\n      return message;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Validation, {\n        severity: this.severity(),\n        message: this.message(),\n        messageColor: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return GlobalValidation;\n}(React.Component);\n\nexport default GlobalValidation;","map":{"version":3,"sources":["/root/GraduateProject/src/components/Validations/GlobalValidation.tsx"],"names":["React","ValidationTypes","Validation","GlobalValidation","props","validation","valid","type","object","count","checks","filter","i","severity","length","Error","warnChecks","numberOfChecks","Warning","errChecks","Correct","path","check","item","checkForPath","globalChecks","message","map","code","join","isValid","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ObjectCheck, ObjectValidation, ValidationTypes } from '../../types/IstioObjects';\nimport Validation from './Validation';\n\ntype Props = {\n  validation?: ObjectValidation;\n};\n\nclass GlobalValidation extends React.Component<Props> {\n  isValid(): boolean {\n    return !!this.props.validation && this.props.validation.valid;\n  }\n\n  numberOfChecks(type: string): number {\n    const object = this.props.validation;\n    let count = 0;\n\n    if (object) {\n      count = (object && object.checks ? object.checks : []).filter(i => i.severity === type).length;\n    }\n\n    return count;\n  }\n\n  severity(): ValidationTypes {\n    if (!this.props.validation) {\n      return ValidationTypes.Error;\n    }\n\n    const object = this.props.validation;\n    const warnChecks = this.numberOfChecks(ValidationTypes.Warning);\n    const errChecks = this.numberOfChecks(ValidationTypes.Error);\n\n    let validation: ValidationTypes = ValidationTypes.Correct;\n    if (!object.valid) {\n      if (errChecks > 0) {\n        validation = ValidationTypes.Error;\n      } else if (warnChecks > 0) {\n        validation = ValidationTypes.Warning;\n      }\n    }\n\n    return validation;\n  }\n\n  checkForPath(path: string): ObjectCheck[] {\n    const object = this.props.validation;\n\n    if (!object || !object.checks) {\n      return [];\n    }\n\n    const check = object.checks.filter(item => {\n      return item.path === path;\n    });\n\n    return check;\n  }\n\n  globalChecks(): ObjectCheck[] {\n    return this.checkForPath('');\n  }\n\n  message(): string {\n    const checks = this.globalChecks();\n    let message = checks.map(check => (check.code ? check.code + ' ' : '') + check.message).join(',');\n\n    if (!message.length && !this.isValid()) {\n      message = 'Not all checks passed!';\n    }\n\n    return message;\n  }\n\n  render() {\n    return <Validation severity={this.severity()} message={this.message()} messageColor={true} />;\n  }\n}\n\nexport default GlobalValidation;\n"]},"metadata":{},"sourceType":"module"}