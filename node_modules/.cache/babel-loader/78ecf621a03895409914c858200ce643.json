{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/root/GraduateProject/src/components/IstioWizards/WizardHelp.tsx\";\n\nimport * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { KialiIcon } from '../../config/KialiIcon';\nimport { style } from 'typestyle';\nvar infoStyle = style({\n  margin: '0px 0px 2px 10px',\n  verticalAlign: '-5px !important'\n});\nvar importantTooltip = style({\n  fontWeight: 700\n});\nexport var wizardTooltip = function wizardTooltip(tooltipContent) {\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    position: TooltipPosition.right,\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'left'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 56\n      }\n    }, tooltipContent),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(KialiIcon.Info, {\n    className: infoStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }));\n};\nexport var CONNECTION_POOL_TOOLTIP = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    marginBottom: 5\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}, \"Connection pool settings for an upstream host.\"), /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    marginBottom: 5\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n}, \"The settings apply to each individual host in the upstream service.\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }\n}, \"Connection pool settings can be applied at the \", /*#__PURE__*/React.createElement(\"span\", {\n  className: importantTooltip,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 54\n  }\n}, \"TCP\"), \" level as well as at\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n  className: importantTooltip,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }\n}, \"HTTP\"), \" level.\"));\nexport var GATEWAY_TOOLTIP = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    marginBottom: 5\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }\n}, \"The names of gateways that should apply these routes.\"), /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    marginBottom: 5\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }\n}, \"If a list of gateway names is provided, the route rules will apply only to the gateways.\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }\n}, \"To apply rules to both gateways and sidecars, specify the reserverd word\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n  className: importantTooltip,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }\n}, \"mesh\"), \".\"));\nexport var HTTP_ABORT_TOOLTIP = /*#__PURE__*/React.createElement(React.Fragment, null, \"Abort HTTP request attempts and return error codes back to \", /*#__PURE__*/React.createElement(\"span\", {\n  className: importantTooltip,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 64\n  }\n}, \"DOWNSTREAM\"), ' ', \"service, giving the impression that the \", /*#__PURE__*/React.createElement(\"span\", {\n  className: importantTooltip,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 45\n  }\n}, \"UPSTREAM\"), \" service is faulty.\");\nexport var HTTP_DELAY_TOOLTIP = /*#__PURE__*/React.createElement(React.Fragment, null, \"Delay requests \", /*#__PURE__*/React.createElement(\"span\", {\n  className: importantTooltip,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 20\n  }\n}, \"BEFORE\"), \" forwarding, emulating various failures such as network issues, overloaded upstream service, etc.\");\nexport var HTTP_RETRY_TOOLTIP = /*#__PURE__*/React.createElement(React.Fragment, null, \"Describes the retry policy to use when a HTTP request fails.\");\nexport var HTTP_TIMEOUT_TOOLTIP = /*#__PURE__*/React.createElement(React.Fragment, null, \"Timeout for HTTP requests, default is disabled.\");\nexport var LOAD_BALANCER_TOOLTIP = /*#__PURE__*/React.createElement(React.Fragment, null, \"Load balancing policies to apply for a specific destination.\");\nexport var MATCHING_SELECTED_TOOLTIP = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    marginBottom: 5\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }\n}, \"Match conditions to be satisfied for the rule to be activated.\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }\n}, \"Kiali Wizard will create all conditions with an \", /*#__PURE__*/React.createElement(\"span\", {\n  className: importantTooltip,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 55\n  }\n}, \"OR\"), \" semantic.\"));\nexport var OUTLIER_DETECTION_TOOLTIP = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    marginBottom: 5\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }\n}, \"A Circuit breaker implementation that tracks the status of each individual host in the\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n  className: importantTooltip,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }\n}, \"upstream\"), \" service.\", ' '), /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    marginBottom: 5\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }\n}, \"For \", /*#__PURE__*/React.createElement(\"span\", {\n  className: importantTooltip,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 11\n  }\n}, \"HTTP\"), \" services, hosts that continually return 5xx errors for API calls are ejected from the pool for a pre-defined period of time.\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }\n}, \"For \", /*#__PURE__*/React.createElement(\"span\", {\n  className: importantTooltip,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 11\n  }\n}, \"TCP\"), \" services, connection timeouts or connection failures to a given host counts as an error when measuring the consecutive errors metric.\"));\nexport var PEER_AUTHENTICATION_TOOLTIP = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    marginBottom: 5\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }\n}, \"PeerAuthentication defines how traffic will be tunneled (or not) to the sidecar.\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }\n}, \"Defines the \", /*#__PURE__*/React.createElement(\"span\", {\n  className: importantTooltip,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 19\n  }\n}, \"mTLS\"), \" mode used for peer authentication.\"));\nexport var ROUTE_RULES_TOOLTIP = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    marginBottom: 5\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }\n}, \"An ordered list of route rules for HTTP traffic.\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }\n}, \"The first rule \", /*#__PURE__*/React.createElement(\"span\", {\n  className: importantTooltip,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 22\n  }\n}, \"MATCHING\"), \" an incoming request is used.\"));","map":{"version":3,"sources":["/root/GraduateProject/src/components/IstioWizards/WizardHelp.tsx"],"names":["React","Tooltip","TooltipPosition","KialiIcon","style","infoStyle","margin","verticalAlign","importantTooltip","fontWeight","wizardTooltip","tooltipContent","right","textAlign","CONNECTION_POOL_TOOLTIP","marginBottom","GATEWAY_TOOLTIP","HTTP_ABORT_TOOLTIP","HTTP_DELAY_TOOLTIP","HTTP_RETRY_TOOLTIP","HTTP_TIMEOUT_TOOLTIP","LOAD_BALANCER_TOOLTIP","MATCHING_SELECTED_TOOLTIP","OUTLIER_DETECTION_TOOLTIP","PEER_AUTHENTICATION_TOOLTIP","ROUTE_RULES_TOOLTIP"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { KialiIcon } from '../../config/KialiIcon';\nimport { style } from 'typestyle';\n\nconst infoStyle = style({\n  margin: '0px 0px 2px 10px',\n  verticalAlign: '-5px !important'\n});\n\nconst importantTooltip = style({\n  fontWeight: 700\n});\n\nexport const wizardTooltip = (tooltipContent: React.ReactFragment) => {\n  return (\n    <Tooltip position={TooltipPosition.right} content={<div style={{ textAlign: 'left' }}>{tooltipContent}</div>}>\n      <KialiIcon.Info className={infoStyle} />\n    </Tooltip>\n  );\n};\n\nexport const CONNECTION_POOL_TOOLTIP = (\n  <>\n    <div style={{ marginBottom: 5 }}>Connection pool settings for an upstream host.</div>\n    <div style={{ marginBottom: 5 }}>The settings apply to each individual host in the upstream service.</div>\n    <div>\n      Connection pool settings can be applied at the <span className={importantTooltip}>TCP</span> level as well as at{' '}\n      <span className={importantTooltip}>HTTP</span> level.\n    </div>\n  </>\n);\n\nexport const GATEWAY_TOOLTIP = (\n  <>\n    <div style={{ marginBottom: 5 }}>The names of gateways that should apply these routes.</div>\n    <div style={{ marginBottom: 5 }}>\n      If a list of gateway names is provided, the route rules will apply only to the gateways.\n    </div>\n    <div>\n      To apply rules to both gateways and sidecars, specify the reserverd word{' '}\n      <span className={importantTooltip}>mesh</span>.\n    </div>\n  </>\n);\n\nexport const HTTP_ABORT_TOOLTIP = (\n  <>\n    Abort HTTP request attempts and return error codes back to <span className={importantTooltip}>DOWNSTREAM</span>{' '}\n    service, giving the impression that the <span className={importantTooltip}>UPSTREAM</span> service is faulty.\n  </>\n);\n\nexport const HTTP_DELAY_TOOLTIP = (\n  <>\n    Delay requests <span className={importantTooltip}>BEFORE</span> forwarding, emulating various failures such as\n    network issues, overloaded upstream service, etc.\n  </>\n);\n\nexport const HTTP_RETRY_TOOLTIP = <>Describes the retry policy to use when a HTTP request fails.</>;\n\nexport const HTTP_TIMEOUT_TOOLTIP = <>Timeout for HTTP requests, default is disabled.</>;\n\nexport const LOAD_BALANCER_TOOLTIP = <>Load balancing policies to apply for a specific destination.</>;\n\nexport const MATCHING_SELECTED_TOOLTIP = (\n  <>\n    <div style={{ marginBottom: 5 }}>Match conditions to be satisfied for the rule to be activated.</div>\n    <div>\n      Kiali Wizard will create all conditions with an <span className={importantTooltip}>OR</span> semantic.\n    </div>\n  </>\n);\n\nexport const OUTLIER_DETECTION_TOOLTIP = (\n  <>\n    <div style={{ marginBottom: 5 }}>\n      A Circuit breaker implementation that tracks the status of each individual host in the{' '}\n      <span className={importantTooltip}>upstream</span> service.{' '}\n    </div>\n    <div style={{ marginBottom: 5 }}>\n      For <span className={importantTooltip}>HTTP</span> services, hosts that continually return 5xx errors for API\n      calls are ejected from the pool for a pre-defined period of time.\n    </div>\n    <div>\n      For <span className={importantTooltip}>TCP</span> services, connection timeouts or connection failures to a given\n      host counts as an error when measuring the consecutive errors metric.\n    </div>\n  </>\n);\n\nexport const PEER_AUTHENTICATION_TOOLTIP = (\n  <>\n    <div style={{ marginBottom: 5 }}>\n      PeerAuthentication defines how traffic will be tunneled (or not) to the sidecar.\n    </div>\n    <div>\n      Defines the <span className={importantTooltip}>mTLS</span> mode used for peer authentication.\n    </div>\n  </>\n);\n\nexport const ROUTE_RULES_TOOLTIP = (\n  <>\n    <div style={{ marginBottom: 5 }}>An ordered list of route rules for HTTP traffic.</div>\n    <div>\n      The first rule <span className={importantTooltip}>MATCHING</span> an incoming request is used.\n    </div>\n  </>\n);\n"]},"metadata":{},"sourceType":"module"}