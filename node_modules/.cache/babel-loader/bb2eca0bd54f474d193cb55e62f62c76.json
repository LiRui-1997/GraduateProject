{"ast":null,"code":"export var emptyWorkload = {\n  name: '',\n  type: '',\n  createdAt: '',\n  resourceVersion: '',\n  istioSidecar: true,\n  // true until proven otherwise\n  labels: {},\n  appLabel: false,\n  versionLabel: false,\n  replicas: 0,\n  availableReplicas: 0,\n  pods: [],\n  services: [],\n  runtimes: [],\n  additionalDetails: []\n};\nexport var WorkloadType = {\n  CronJob: 'CronJob',\n  DaemonSet: 'DaemonSet',\n  Deployment: 'Deployment',\n  DeploymentConfig: 'DeploymentConfig',\n  Job: 'Job',\n  Pod: 'Pod',\n  ReplicaSet: 'ReplicaSet',\n  ReplicationController: 'ReplicationController',\n  StatefulSet: 'StatefulSet'\n};","map":{"version":3,"sources":["/root/GraduateProject/src/types/Workload.ts"],"names":["emptyWorkload","name","type","createdAt","resourceVersion","istioSidecar","labels","appLabel","versionLabel","replicas","availableReplicas","pods","services","runtimes","additionalDetails","WorkloadType","CronJob","DaemonSet","Deployment","DeploymentConfig","Job","Pod","ReplicaSet","ReplicationController","StatefulSet"],"mappings":"AA2BA,OAAO,IAAMA,aAAuB,GAAG;AACrCC,EAAAA,IAAI,EAAE,EAD+B;AAErCC,EAAAA,IAAI,EAAE,EAF+B;AAGrCC,EAAAA,SAAS,EAAE,EAH0B;AAIrCC,EAAAA,eAAe,EAAE,EAJoB;AAKrCC,EAAAA,YAAY,EAAE,IALuB;AAKjB;AACpBC,EAAAA,MAAM,EAAE,EAN6B;AAOrCC,EAAAA,QAAQ,EAAE,KAP2B;AAQrCC,EAAAA,YAAY,EAAE,KARuB;AASrCC,EAAAA,QAAQ,EAAE,CAT2B;AAUrCC,EAAAA,iBAAiB,EAAE,CAVkB;AAWrCC,EAAAA,IAAI,EAAE,EAX+B;AAYrCC,EAAAA,QAAQ,EAAE,EAZ2B;AAarCC,EAAAA,QAAQ,EAAE,EAb2B;AAcrCC,EAAAA,iBAAiB,EAAE;AAdkB,CAAhC;AAiBP,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,OAAO,EAAE,SADiB;AAE1BC,EAAAA,SAAS,EAAE,WAFe;AAG1BC,EAAAA,UAAU,EAAE,YAHc;AAI1BC,EAAAA,gBAAgB,EAAE,kBAJQ;AAK1BC,EAAAA,GAAG,EAAE,KALqB;AAM1BC,EAAAA,GAAG,EAAE,KANqB;AAO1BC,EAAAA,UAAU,EAAE,YAPc;AAQ1BC,EAAAA,qBAAqB,EAAE,uBARG;AAS1BC,EAAAA,WAAW,EAAE;AATa,CAArB","sourcesContent":["import Namespace from './Namespace';\nimport { WorkloadHealth } from './Health';\nimport { ObjectReference, Pod, Service } from './IstioObjects';\n\nexport interface WorkloadId {\n  namespace: string;\n  workload: string;\n}\n\nexport interface Workload {\n  name: string;\n  type: string;\n  createdAt: string;\n  resourceVersion: string;\n  istioInjectionAnnotation?: boolean;\n  istioSidecar: boolean;\n  labels: { [key: string]: string };\n  appLabel: boolean;\n  versionLabel: boolean;\n  replicas: Number;\n  availableReplicas: Number;\n  pods: Pod[];\n  services: Service[];\n  runtimes: Runtime[];\n  additionalDetails: AdditionalItem[];\n}\n\nexport const emptyWorkload: Workload = {\n  name: '',\n  type: '',\n  createdAt: '',\n  resourceVersion: '',\n  istioSidecar: true, // true until proven otherwise\n  labels: {},\n  appLabel: false,\n  versionLabel: false,\n  replicas: 0,\n  availableReplicas: 0,\n  pods: [],\n  services: [],\n  runtimes: [],\n  additionalDetails: []\n};\n\nexport const WorkloadType = {\n  CronJob: 'CronJob',\n  DaemonSet: 'DaemonSet',\n  Deployment: 'Deployment',\n  DeploymentConfig: 'DeploymentConfig',\n  Job: 'Job',\n  Pod: 'Pod',\n  ReplicaSet: 'ReplicaSet',\n  ReplicationController: 'ReplicationController',\n  StatefulSet: 'StatefulSet'\n};\n\nexport interface WorkloadOverview {\n  name: string;\n  type: string;\n  istioSidecar: boolean;\n  additionalDetailSample?: AdditionalItem;\n  appLabel: boolean;\n  versionLabel: boolean;\n  labels: { [key: string]: string };\n  istioReferences: ObjectReference[];\n}\n\nexport interface WorkloadListItem extends WorkloadOverview {\n  namespace: string;\n  healthPromise: Promise<WorkloadHealth>;\n}\n\nexport interface WorkloadNamespaceResponse {\n  namespace: Namespace;\n  workloads: WorkloadOverview[];\n}\n\nexport interface Runtime {\n  name: string;\n  dashboardRefs: DashboardRef[];\n}\n\nexport interface DashboardRef {\n  template: string;\n  title: string;\n}\n\nexport interface AdditionalItem {\n  title: string;\n  value: string;\n  icon?: string;\n}\n"]},"metadata":{},"sourceType":"module"}