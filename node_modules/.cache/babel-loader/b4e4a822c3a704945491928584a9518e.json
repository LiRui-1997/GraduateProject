{"ast":null,"code":"// Common types\n// validations are grouped per 'objectType' first in the first map and 'name' in the inner map\nexport var ValidationTypes;\n\n(function (ValidationTypes) {\n  ValidationTypes[\"Error\"] = \"error\";\n  ValidationTypes[\"Warning\"] = \"warning\";\n  ValidationTypes[\"Correct\"] = \"correct\";\n  ValidationTypes[\"Info\"] = \"info\";\n})(ValidationTypes || (ValidationTypes = {}));\n\nexport var IstioLevelToSeverity = {\n  0: ValidationTypes.Info,\n  3: ValidationTypes.Error,\n  8: ValidationTypes.Warning,\n  12: ValidationTypes.Info\n};\n// Sidecar resource https://preliminary.istio.io/docs/reference/config/networking/v1alpha3/sidecar\n// 1.6\nexport var CaptureMode; // 1.6\n\n(function (CaptureMode) {\n  CaptureMode[\"DEFAULT\"] = \"DEFAULT\";\n  CaptureMode[\"IPTABLES\"] = \"IPTABLES\";\n  CaptureMode[\"NONE\"] = \"NONE\";\n})(CaptureMode || (CaptureMode = {}));\n\nexport var MutualTlsMode;\n\n(function (MutualTlsMode) {\n  MutualTlsMode[\"STRICT\"] = \"STRICT\";\n  MutualTlsMode[\"PERMISSIVE\"] = \"PERMISSIVE\";\n})(MutualTlsMode || (MutualTlsMode = {}));\n\nexport var PrincipalBinding;\n\n(function (PrincipalBinding) {\n  PrincipalBinding[\"USE_PEER\"] = \"USE_PEER\";\n  PrincipalBinding[\"USE_ORIGIN\"] = \"USE_ORIGIN\";\n})(PrincipalBinding || (PrincipalBinding = {}));\n\nexport var PeerAuthenticationMutualTLSMode; // 1.6\n\n(function (PeerAuthenticationMutualTLSMode) {\n  PeerAuthenticationMutualTLSMode[\"UNSET\"] = \"UNSET\";\n  PeerAuthenticationMutualTLSMode[\"DISABLE\"] = \"DISABLE\";\n  PeerAuthenticationMutualTLSMode[\"PERMISSIVE\"] = \"PERMISSIVE\";\n  PeerAuthenticationMutualTLSMode[\"STRICT\"] = \"STRICT\";\n})(PeerAuthenticationMutualTLSMode || (PeerAuthenticationMutualTLSMode = {}));","map":{"version":3,"sources":["/root/kiali-ui/src/types/IstioObjects.ts"],"names":["ValidationTypes","IstioLevelToSeverity","Info","Error","Warning","CaptureMode","MutualTlsMode","PrincipalBinding","PeerAuthenticationMutualTLSMode"],"mappings":"AAOA;AA2DA;AAGA,WAAYA,eAAZ;;WAAYA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;GAAAA,e,KAAAA,e;;AAOZ,OAAO,IAAMC,oBAAoB,GAAG;AAClC,KAAGD,eAAe,CAACE,IADe;AAElC,KAAGF,eAAe,CAACG,KAFe;AAGlC,KAAGH,eAAe,CAACI,OAHe;AAIlC,MAAIJ,eAAe,CAACE;AAJc,CAA7B;AA8iBP;AAEA;AACA,WAAYG,WAAZ,C,CAMA;;WANYA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W;;AAqHZ,WAAYC,aAAZ;;WAAYA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;GAAAA,a,KAAAA,a;;AA0BZ,WAAYC,gBAAZ;;WAAYA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;GAAAA,gB,KAAAA,gB;;AA+EZ,WAAYC,+BAAZ,C,CAOA;;WAPYA,+B;AAAAA,EAAAA,+B;AAAAA,EAAAA,+B;AAAAA,EAAAA,+B;AAAAA,EAAAA,+B;GAAAA,+B,KAAAA,+B","sourcesContent":["import Namespace from './Namespace';\nimport { ResourcePermissions } from './Permissions';\nimport { ServicePort } from './ServiceInfo';\nimport { ProxyStatus } from './Health';\nimport { TimeInSeconds } from './Common';\nimport { PFColorVal } from 'components/Pf/PfColors';\n\n// Common types\n\nexport interface K8sInitializer {\n  name?: string;\n}\n\nexport interface K8sStatus {\n  status?: string;\n  message?: string;\n  reason?: string;\n}\n\nexport interface K8sInitializers {\n  pending?: K8sInitializer[];\n  result?: K8sStatus;\n}\n\nexport interface K8sMetadata {\n  name: string;\n  generateName?: string;\n  namespace?: string;\n  selfLink?: string;\n  uid?: string;\n  resourceVersion?: string;\n  generation?: string;\n  creationTimestamp?: string;\n  deletionTimestamp?: string;\n  deletionGracePeriodSeconds?: string;\n  labels?: { [key: string]: string };\n  annotations?: { [key: string]: string };\n  ownerReferences?: K8sOwnerReference[];\n  initializers?: K8sInitializers[];\n  finalizers?: string[];\n  clusterName?: string;\n}\n\nexport interface IstioObject {\n  kind?: string;\n  apiVersion?: string;\n  metadata: K8sMetadata;\n  status?: IstioStatus;\n}\n\nexport interface IstioStatus {\n  validationMessages?: ValidationMessage[];\n  conditions?: any[];\n}\n\nexport interface ValidationMessage {\n  description?: string;\n  documentation_url: string;\n  level?: number;\n  type: ValidationMessageType;\n}\n\nexport interface ValidationMessageType {\n  code: string;\n}\n\n// validations are grouped per 'objectType' first in the first map and 'name' in the inner map\nexport type Validations = { [key1: string]: { [key2: string]: ObjectValidation } };\n\nexport enum ValidationTypes {\n  Error = 'error',\n  Warning = 'warning',\n  Correct = 'correct',\n  Info = 'info'\n}\n\nexport const IstioLevelToSeverity = {\n  0: ValidationTypes.Info,\n  3: ValidationTypes.Error,\n  8: ValidationTypes.Warning,\n  12: ValidationTypes.Info\n};\n\nexport interface ObjectValidation {\n  name: string;\n  objectType: string;\n  valid: boolean;\n  checks: ObjectCheck[];\n  references?: ObjectReference[];\n}\n\nexport interface ObjectCheck {\n  code?: string;\n  message: string;\n  severity: ValidationTypes;\n  path: string;\n}\n\nexport interface ObjectReference {\n  objectType: string;\n  name: string;\n  namespace: string;\n}\n\nexport interface Reference {\n  name: string;\n  kind: string;\n}\n\nexport interface ValidationStatus {\n  errors: number;\n  objectCount?: number;\n  warnings: number;\n}\n\nexport interface ContainerInfo {\n  name: string;\n  image: string;\n  isProxy: boolean;\n  isReady: boolean;\n}\n\n// 1.6\nexport interface Port {\n  number: number;\n  protocol: string;\n  name: string;\n  targetPort?: number;\n}\n\nexport interface Pod {\n  name: string;\n  labels?: { [key: string]: string };\n  createdAt: string;\n  createdBy: Reference[];\n  containers?: ContainerInfo[];\n  istioContainers?: ContainerInfo[];\n  istioInitContainers?: ContainerInfo[];\n  status: string;\n  statusMessage?: string;\n  statusReason?: string;\n  appLabel: boolean;\n  versionLabel: boolean;\n  proxyStatus?: ProxyStatus;\n}\n\n// models Engarde Istio proxy AccessLog\nexport type AccessLog = {\n  // Authority is the request authority header %REQ(:AUTHORITY)%\n  authority: string;\n  // BytesReceived in response to the request %BYTES_RECEIVED%\n  bytes_received: string;\n  // BytesSent as part of the request body %BYTES_SENT%\n  bytes_sent: string;\n  // Duration of the request %DURATION%\n  duration: string;\n  // ForwardedFor is the X-Forwarded-For header value %REQ(FORWARDED-FOR)%\n  forwarded_for: string;\n  // Method is the HTTP method %REQ(:METHOD)%\n  method: string;\n  // Protocol can either be HTTP or TCP %PROTOCOL%\n  protocol: string;\n  // RequestId is the envoy generated X-REQUEST-ID header \"%REQ(X-REQUEST-ID)%\"\n  request_id: string;\n  // ResponseFlags provide any additional details about the response or connection, if any. %RESPONSE_FLAGS%\n  response_flags: string;\n  // StatusCode is the response status code %RESPONSE_CODE%\n  status_code: string;\n  // TcpServiceTime is the time the tcp request took\n  tcp_service_time: string;\n  // Timestamp is the Start Time %START_TIME%\n  timestamp: string;\n  // UpstreamService is the upstream host the request is intended for %UPSTREAM_HOST%\n  upstream_service: string;\n  // UpstreamServiceTime is the time taken to reach target host %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%\n  upstream_service_time: string;\n  // UpstreamCluster is the upstream envoy cluster being reached %UPSTREAM_CLUSTER%\n  upstream_cluster: string;\n  // UpstreamLocal is the local address of the upstream connection %UPSTREAM_LOCAL_ADDRESS%\n  upstream_local: string;\n  // DownstreamLocal is the local address of the downstream connection %DOWNSTREAM_LOCAL_ADDRESS%\n  downstream_local: string;\n  // DownstreamRemote is the remote address of the downstream connection %DOWNSTREAM_REMOTE_ADDRESS%\n  downstream_remote: string;\n  // RequestedServer is the String value set on ssl connection socket for Server Name Indication (SNI) %REQUESTED_SERVER_NAME%\n  requested_server: string;\n  // RouteName is the name of the VirtualService route which matched this request %ROUTE_NAME%\n  route_name: string;\n  // UpstreamFailureReason is the upstream transport failure reason %UPSTREAM_TRANSPORT_FAILURE_REASON%\n  upstream_failure_reason: string;\n  // UriParam is the params field of the request path\n  uri_param: string;\n  // UriPath is the base request path\n  uri_path: string;\n  // UserAgent is the request User Agent field %REQ(USER-AGENT)%\"\n  user_agent: string;\n  // The following fields are unused/ignored\n  //\n  // MixerStatus is the dynamic metadata information for the mixer status %DYNAMIC_METADATA(mixer:status)%\n  // mixer_status: string;\n  // OriginalMessage is the original raw log line.\n  // original_message: string;\n  // ParseError provides a string value if a parse error occured.\n  // parse_error: string;\n};\n\nexport type LogEntry = {\n  accessLog?: AccessLog;\n  color?: PFColorVal;\n  message: string;\n  severity: string;\n  timestamp: string;\n  timestampUnix: TimeInSeconds;\n};\n\nexport interface PodLogs {\n  entries: LogEntry[];\n}\n\nexport interface EnvoyProxyDump {\n  configDump?: EnvoyConfigDump;\n  bootstrap?: BootstrapSummary;\n  clusters?: ClusterSummary[];\n  listeners?: ListenerSummary[];\n  routes?: RouteSummary[];\n}\n\nexport interface EnvoyConfigDump {\n  configs: any[];\n}\n\nexport type EnvoySummary = ClusterSummary | RouteSummary | ListenerSummary;\n\nexport interface ClusterSummary {\n  service_fqdn: Host;\n  port: number;\n  subset: string;\n  direction: string;\n  type: number;\n  destination_rule: string;\n}\n\nexport interface ListenerSummary {\n  address: string;\n  port: number;\n  match: string;\n  destination: string;\n}\n\nexport interface RouteSummary {\n  name: string;\n  domains: Host;\n  match: string;\n  virtual_service: string;\n}\n\nexport interface BootstrapSummary {\n  bootstrap: any;\n}\n\nexport interface Service {\n  name: string;\n  createdAt: string;\n  resourceVersion: string;\n  namespace: Namespace;\n  labels?: { [key: string]: string };\n  type: string;\n  ip: string;\n  ports?: ServicePort[];\n}\n\nexport interface Host {\n  service: string;\n  namespace: string;\n  cluster?: string;\n}\n\nexport interface IstioService {\n  name?: string;\n  namespace?: string;\n  domain?: string;\n  service?: string;\n  labels?: { [key: string]: string };\n}\n\n// 1.6\nexport interface L4MatchAttributes {\n  destinationSubnets?: string[];\n  port?: number;\n  sourceLabels?: { [key: string]: string };\n  gateways?: string[];\n  sourceName?: string;\n}\n\n// 1.6\nexport interface TLSMatchAttributes {\n  sniHosts: string[];\n  destinationSubnets?: string[];\n  port?: number;\n  sourceLabels?: { [key: string]: string };\n  gateways?: string[];\n  sourceName?: string;\n}\n\n// 1.6\nexport interface StringMatch {\n  exact?: string;\n  prefix?: string;\n  regex?: string;\n}\n\n// 1.6\nexport interface HeaderOperations {\n  set?: { [key: string]: string };\n  add?: { [key: string]: string };\n  remove?: string[];\n}\n\n// 1.6\nexport interface Headers {\n  request?: HeaderOperations;\n  response?: HeaderOperations;\n}\n\n// 1.6\nexport interface HTTPRouteDestination {\n  destination: Destination;\n  weight?: number;\n  headers?: Headers;\n}\n\n// 1.6\nexport interface RouteDestination {\n  destination: Destination;\n  weight?: number;\n}\n\n// 1.6\nexport interface HTTPRedirect {\n  uri?: string;\n  authority?: string;\n  redirectCode?: number;\n}\n\n// 1.6\nexport interface Delegate {\n  name?: string;\n  namespace?: string;\n}\n\n// 1.6\nexport interface HTTPRewrite {\n  uri?: string;\n  authority?: string;\n}\n\n// 1.6\nexport interface HTTPRetry {\n  attempts: number;\n  perTryTimeout?: string;\n  retryOn?: string;\n  retryRemoteLocalities?: boolean;\n}\n\n// 1.6\nexport interface HTTPFaultInjection {\n  delay?: Delay;\n  abort?: Abort;\n}\n\n// 1.6\nexport interface Percent {\n  value: number;\n}\n\n// 1.6\nexport interface Delay {\n  fixedDelay: string;\n  percentage?: Percent;\n}\n\n// 1.6\nexport interface Abort {\n  httpStatus: number;\n  percentage?: Percent;\n}\n\n// 1.6\nexport interface CorsPolicy {\n  allowOrigin?: StringMatch[];\n  allowMethods?: string[];\n  allowHeaders?: string[];\n  exposeHeaders?: string[];\n  maxAge?: string;\n  allowCredentials?: string;\n}\n\n// Destination Rule\n\nexport interface HTTPCookie {\n  name: string;\n  path?: string;\n  ttl: string;\n}\n\n// 1.6\nexport interface ConsistentHashLB {\n  httpHeaderName?: string | null;\n  httpCookie?: HTTPCookie | null;\n  useSourceIp?: boolean | null;\n  httpQueryParameterName?: string | null;\n  minimumRingSize?: number;\n}\n\n// 1.6\nexport interface Distribute {\n  from?: string;\n  to?: { [key: string]: number };\n}\n\n// 1.6\nexport interface Failover {\n  from?: string;\n  to?: string;\n}\n\n// 1.6\nexport interface LocalityLoadBalancerSetting {\n  distribute?: Distribute[];\n  failover?: Failover[];\n  enabled?: boolean;\n}\n\n// 1.6\nexport interface LoadBalancerSettings {\n  simple?: string | null;\n  consistentHash?: ConsistentHashLB | null;\n  localityLbSetting?: LocalityLoadBalancerSetting | null;\n}\n\n// 1.6\nexport interface TcpKeepalive {\n  probes?: number;\n  time?: string;\n  interval?: string;\n}\n\n// 1.6\nexport interface ConnectionPoolSettingsTCPSettings {\n  maxConnections?: number;\n  connectTimeout?: string;\n  tcpKeepalive?: TcpKeepalive;\n}\n\n// 1.6\nexport interface ConnectionPoolSettingsHTTPSettings {\n  http1MaxPendingRequests?: number;\n  http2MaxRequests?: number;\n  maxRequestsPerConnection?: number;\n  maxRetries?: number;\n  idleTimeout?: string;\n  h2UpgradePolicy?: string;\n}\n\n// 1.6\nexport interface ConnectionPoolSettings {\n  tcp?: ConnectionPoolSettingsTCPSettings;\n  http?: ConnectionPoolSettingsHTTPSettings;\n}\n\n// 1.6\nexport interface OutlierDetection {\n  consecutiveErrors?: number;\n  consecutive5xxErrors?: number;\n  interval?: string;\n  baseEjectionTime?: string;\n  maxEjectionPercent?: number;\n  minHealthPercent?: number;\n}\n\n// 1.6\nexport interface ClientTLSSettings {\n  mode: string;\n  clientCertificate?: string | null;\n  privateKey?: string | null;\n  caCertificates?: string | null;\n  subjectAltNames?: string[] | null;\n  sni?: string | null;\n}\n\n// 1.6\nexport interface PortTrafficPolicy {\n  port?: PortSelector;\n  loadBalancer?: LoadBalancerSettings;\n  connectionPool?: ConnectionPoolSettings;\n  outlierDetection?: OutlierDetection;\n  tls?: ClientTLSSettings;\n}\n\n// 1.6\nexport interface TrafficPolicy {\n  loadBalancer?: LoadBalancerSettings | null;\n  connectionPool?: ConnectionPoolSettings;\n  outlierDetection?: OutlierDetection;\n  tls?: ClientTLSSettings | null;\n  portLevelSettings?: PortTrafficPolicy[];\n}\n\n// 1.6\nexport interface Subset {\n  name: string;\n  labels?: { [key: string]: string };\n  trafficPolicy?: TrafficPolicy;\n}\n\n// 1.6\nexport interface DestinationRuleSpec {\n  host?: string;\n  trafficPolicy?: TrafficPolicy | null;\n  subsets?: Subset[];\n  exportTo?: string[];\n}\n\n// 1.6\nexport interface DestinationRule extends IstioObject {\n  spec: DestinationRuleSpec;\n}\n\nexport interface DestinationRules {\n  items: DestinationRule[];\n  permissions: ResourcePermissions;\n}\n\n// Virtual Service\n\n// 1.6\nexport interface PortSelector {\n  name?: string;\n  number: number;\n}\n\n// 1.6\nexport interface Destination {\n  host: string;\n  subset?: string;\n  port?: PortSelector;\n}\n\n// 1.6\nexport interface HTTPMatchRequest {\n  name?: string;\n  uri?: StringMatch;\n  scheme?: StringMatch;\n  method?: StringMatch;\n  authority?: StringMatch;\n  headers?: { [key: string]: StringMatch };\n  port?: PortSelector;\n  sourceLabels?: { [key: string]: string };\n  gateways?: string[];\n  queryParams?: { [key: string]: StringMatch };\n  ignoreUriCase?: boolean;\n  withoutHeaders?: { [key: string]: StringMatch };\n  sourceNamespace?: string;\n}\n\n// 1.6\nexport interface HTTPRoute {\n  name?: string;\n  match?: HTTPMatchRequest[];\n  route?: HTTPRouteDestination[];\n  redirect?: HTTPRedirect;\n  delegate?: Delegate;\n  rewrite?: HTTPRewrite;\n  timeout?: string;\n  retries?: HTTPRetry;\n  fault?: HTTPFaultInjection;\n  mirror?: Destination;\n  mirrorPercentage?: Percent;\n  corsPolicy?: CorsPolicy;\n  headers?: Headers;\n}\n\n// 1.6\nexport interface TCPRoute {\n  match?: L4MatchAttributes[];\n  route?: RouteDestination[];\n}\n\n// 1.6\nexport interface TLSRoute {\n  match?: TLSMatchAttributes[];\n  route?: RouteDestination[];\n}\n\n// 1.6\nexport interface VirtualServiceSpec {\n  hosts?: string[];\n  gateways?: string[] | null;\n  http?: HTTPRoute[];\n  tls?: TLSRoute[];\n  tcp?: TCPRoute[];\n  exportTo?: string[] | null;\n}\n\n// 1.6\nexport interface VirtualService extends IstioObject {\n  spec: VirtualServiceSpec;\n}\n\nexport interface VirtualServices {\n  items: VirtualService[];\n  permissions: ResourcePermissions;\n}\n\nexport interface K8sOwnerReference {\n  apiVersion?: string;\n  kind?: string;\n  name?: string;\n  uid?: string;\n  controller?: string;\n  blockOwnerDeletion?: string;\n}\n\n// 1.6\nexport interface GatewaySpec {\n  servers?: Server[];\n  selector?: { [key: string]: string };\n}\n\n// 1.6\nexport interface Gateway extends IstioObject {\n  spec: GatewaySpec;\n}\n\n// Sidecar resource https://preliminary.istio.io/docs/reference/config/networking/v1alpha3/sidecar\n\n// 1.6\nexport enum CaptureMode {\n  DEFAULT = 'DEFAULT',\n  IPTABLES = 'IPTABLES',\n  NONE = 'NONE'\n}\n\n// 1.6\nexport interface IstioEgressListener {\n  port?: Port;\n  bind?: string;\n  captureMode?: CaptureMode;\n  hosts: string[];\n  localhostServerTls?: ServerTLSSettings;\n}\n\n// 1.6\nexport interface IstioIngressListener {\n  port: Port;\n  bind?: string;\n  captureMode?: CaptureMode;\n  defaultEndpoint: string;\n  localhostClientTls?: ClientTLSSettings;\n}\n\n// 1.6\nexport interface WorkloadSelector {\n  labels: { [key: string]: string };\n}\n\n// 1.6\nexport interface OutboundTrafficPolicy {\n  mode?: string;\n}\n\n// 1.6\nexport interface Localhost {\n  clientTls?: ClientTLSSettings;\n  serverTls?: ServerTLSSettings;\n}\n\n// 1.6\nexport interface SidecarSpec {\n  workloadSelector?: WorkloadSelector;\n  ingress?: IstioIngressListener[];\n  egress?: IstioEgressListener[];\n  outboundTrafficPolicy?: OutboundTrafficPolicy;\n  localhost?: Localhost;\n}\n\n// 1.6\nexport interface Sidecar extends IstioObject {\n  spec: SidecarSpec;\n}\n\n// 1.6\nexport interface Server {\n  port: ServerPort;\n  hosts: string[];\n  tls?: ServerTLSSettings;\n}\n\n// 1.6\nexport interface ServerPort {\n  number: number;\n  protocol: string;\n  name: string;\n}\n\n// 1.6\nexport interface ServerTLSSettings {\n  httpsRedirect?: boolean;\n  mode?: string;\n  serverCertificate?: string;\n  privateKey?: string;\n  caCertificates?: string;\n  credentialName?: string;\n  subjectAltNames?: string[];\n  verifyCertificateSpki?: string[];\n  verifyCertificateHash?: string[];\n  minProtocolVersion?: string;\n  maxProtocolVersion?: string;\n  cipherSuites?: string[];\n}\n\n// 1.6\nexport interface ServiceEntrySpec {\n  hosts?: string[];\n  addresses?: string[];\n  ports?: Port[];\n  location?: string;\n  resolution?: string;\n  endpoints?: WorkloadEntrySpec[];\n  exportTo?: string[];\n  subjectAltNames?: string[];\n  workloadSelector?: WorkloadSelector;\n}\n\n// 1.6\nexport interface ServiceEntry extends IstioObject {\n  spec: ServiceEntrySpec;\n}\n\nexport interface Endpoint {\n  address: string;\n  ports: { [key: string]: number };\n  labels: { [key: string]: string };\n}\n\nexport interface Match {\n  clause: { [attributeName: string]: { [matchType: string]: string } };\n}\n\nexport interface TargetSelector {\n  name: string;\n  ports?: PortSelector[];\n}\n\nexport enum MutualTlsMode {\n  STRICT = 'STRICT',\n  PERMISSIVE = 'PERMISSIVE'\n}\n\nexport interface MutualTls {\n  allowTls: boolean;\n  mode: MutualTlsMode;\n}\n\nexport interface PeerAuthenticationMethod {\n  mtls: MutualTls;\n}\n\nexport interface Jwt {\n  issuer: string;\n  audiences: string[];\n  jwksUri?: string;\n  jwtHeaders: string[];\n  jwtParams: string[];\n}\n\nexport interface OriginAuthenticationMethod {\n  jwt: Jwt;\n}\n\nexport enum PrincipalBinding {\n  USE_PEER = 'USE_PEER',\n  USE_ORIGIN = 'USE_ORIGIN'\n}\n\nexport interface AuthorizationPolicy extends IstioObject {\n  spec: AuthorizationPolicySpec;\n}\n\nexport interface AuthorizationPolicyWorkloadSelector {\n  matchLabels: { [key: string]: string };\n}\n\nexport interface AuthorizationPolicySpec {\n  selector?: AuthorizationPolicyWorkloadSelector;\n  rules?: AuthorizationPolicyRule[];\n  action?: string;\n}\n\nexport interface AuthorizationPolicyRule {\n  from?: RuleFrom[];\n  to?: RuleTo[];\n  when?: Condition[];\n}\n\nexport interface RuleFrom {\n  source: Source;\n}\n\nexport interface Source {\n  principals?: string[];\n  notPrincipals?: string[];\n  requestPrincipals?: string[];\n  notRequestPrincipals?: string[];\n  namespaces?: string[];\n  notNamespaces?: string[];\n  ipBlocks?: string[];\n  notIpBlocks?: string[];\n}\n\nexport interface RuleTo {\n  operation: Operation;\n}\n\nexport interface Operation {\n  hosts?: string[];\n  notHosts?: string[];\n  ports?: string[];\n  notPorts?: string[];\n  methods?: string[];\n  notMethods?: string[];\n  paths?: string[];\n  notPaths?: string[];\n}\n\nexport interface Condition {\n  key: string;\n  values?: string[];\n  notValues?: string[];\n}\n\nexport interface PeerAuthentication extends IstioObject {\n  spec: PeerAuthenticationSpec;\n}\n\nexport interface PeerAuthenticationSpec {\n  selector?: PeerAuthenticationWorkloadSelector;\n  mtls?: PeerAuthenticationMutualTls;\n  portLevelMtls?: { [key: number]: PeerAuthenticationMutualTls };\n}\n\nexport interface PeerAuthenticationWorkloadSelector {\n  matchLabels: { [key: string]: string };\n}\n\nexport interface PeerAuthenticationMutualTls {\n  mode: PeerAuthenticationMutualTLSMode;\n}\n\nexport enum PeerAuthenticationMutualTLSMode {\n  UNSET = 'UNSET',\n  DISABLE = 'DISABLE',\n  PERMISSIVE = 'PERMISSIVE',\n  STRICT = 'STRICT'\n}\n\n// 1.6\nexport interface WorkloadEntry extends IstioObject {\n  spec: WorkloadEntrySpec;\n}\n\nexport interface WorkloadEntrySpec {\n  address: string;\n  ports?: { [key: string]: number };\n  labels?: { [key: string]: string };\n  network?: string;\n  locality?: string;\n  weight?: number;\n  serviceAccount?: string;\n}\n\nexport interface WorkloadGroup extends IstioObject {\n  spec: WorkloadGroupSpec;\n}\n\nexport interface WorkloadGroupSpec {\n  // Note that WorkloadGroup has a metadata section inside Spec\n  metadata?: K8sMetadata;\n  template: WorkloadEntrySpec;\n  probe?: ReadinessProbe;\n}\n\nexport interface ReadinessProbe {\n  initialDelaySeconds?: number;\n  timeoutSeconds?: number;\n  periodSeconds?: number;\n  successThreshold?: number;\n  failureThreshold?: number;\n  httpGet?: HTTPHealthCheckConfig;\n  tcpSocket?: TCPHealthCheckConfig;\n  exec?: ExecHealthCheckConfig;\n}\n\nexport interface HTTPHealthCheckConfig {\n  path?: string;\n  port: number;\n  host?: string;\n  scheme?: string;\n  httpHeaders?: HTTPHeader[];\n}\n\nexport interface HTTPHeader {\n  name?: string;\n  value?: string;\n}\n\nexport interface TCPHealthCheckConfig {\n  host?: string;\n  port: number;\n}\n\nexport interface ExecHealthCheckConfig {\n  command?: string[];\n}\n\nexport interface WorkloadMatchSelector {\n  matchLabels: { [key: string]: string };\n}\n\nexport interface JWTHeader {\n  name: string;\n  prefix?: string;\n}\n\nexport interface JWTRule {\n  issuer?: string;\n  audiences?: string[];\n  jwksUri?: string;\n  jwks?: string;\n  fromHeaders?: JWTHeader[];\n  fromParams?: string[];\n  outputPayloadToHeader?: string;\n  forwardOriginalToken?: boolean;\n}\n\n// 1.6\nexport interface RequestAuthentication extends IstioObject {\n  spec: RequestAuthenticationSpec;\n}\n\n// 1.6\nexport interface RequestAuthenticationSpec {\n  selector?: WorkloadMatchSelector;\n  jwtRules: JWTRule[];\n}\n\nexport interface ProxyMatch {\n  proxyVersion?: string;\n  metadata?: { [key: string]: string };\n}\n\nexport interface SubFilterMatch {\n  name?: string;\n}\n\nexport interface FilterMatch {\n  name?: string;\n  subFilter?: SubFilterMatch;\n}\n\nexport interface FilterChainMatch {\n  name?: string;\n  sni?: string;\n  transportProtocol?: string;\n  applicationProtocols?: string;\n  filter?: FilterMatch;\n}\n\nexport interface ListenerMatch {\n  portNumber?: number;\n  filterChain?: FilterChainMatch;\n}\n\nexport interface RouteMatch {\n  name?: string;\n  action?: string;\n}\n\nexport interface VirtualHostMatch {\n  name?: string;\n  route?: RouteMatch;\n}\n\nexport interface RouteConfigurationMatch {\n  portNumber?: number;\n  portName?: string;\n  gateway?: string;\n  vhost?: VirtualHostMatch;\n  name?: string;\n}\n\nexport interface ClusterMatch {\n  portNumber?: number;\n  service?: string;\n  subset?: string;\n  name?: string;\n}\n\nexport interface EnvoyConfigObjectMatch {\n  context?: string;\n  proxy?: ProxyMatch;\n  listener?: ListenerMatch;\n  routeConfiguration?: RouteConfigurationMatch;\n  cluster?: ClusterMatch;\n}\n\nexport interface Patch {\n  operation?: string;\n  value?: any;\n}\n\nexport interface EnvoyConfigObjectPatch {\n  applyTo?: string;\n  match?: EnvoyConfigObjectMatch;\n  patch?: Patch;\n}\n\nexport interface EnvoyFilterSpec {\n  workloadSelector?: WorkloadSelector;\n  configPatches: EnvoyConfigObjectPatch[];\n}\n\nexport interface EnvoyFilter extends IstioObject {\n  spec: EnvoyFilterSpec;\n}\n\nexport interface AttributeInfo {\n  description?: string;\n  valueType: string;\n}\n\nexport interface APIKey {\n  query?: string;\n  header?: string;\n  cookie?: string;\n}\n"]},"metadata":{},"sourceType":"module"}