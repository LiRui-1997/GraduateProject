{"ast":null,"code":"import _classCallCheck from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/GraduateProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/GraduateProject/src/components/Metrics/GrafanaLinks.tsx\";\nimport * as React from 'react';\nimport { ToolbarItem } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { MetricsObjectTypes } from 'types/Metrics';\nexport var GrafanaLinks = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(GrafanaLinks, _React$PureComponent);\n\n  var _super = _createSuper(GrafanaLinks);\n\n  function GrafanaLinks() {\n    _classCallCheck(this, GrafanaLinks);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GrafanaLinks, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var links = GrafanaLinks.buildGrafanaLinks(this.props);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, links.length === 1 && /*#__PURE__*/React.createElement(ToolbarItem, {\n        style: {\n          borderRight: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        id: 'grafana_link_0',\n        title: links[0][0],\n        href: links[0][1],\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, \"View in Grafana \", /*#__PURE__*/React.createElement(ExternalLinkAltIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 31\n        }\n      }))), links.length > 1 && /*#__PURE__*/React.createElement(ToolbarItem, {\n        style: {\n          borderRight: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, \"View in Grafana:\\xA0\", links.map(function (link, idx) {\n        return /*#__PURE__*/React.createElement(\"a\", {\n          id: 'grafana_link_' + idx,\n          title: link[0],\n          href: link[1],\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }\n        }, link[0], \" \", /*#__PURE__*/React.createElement(ExternalLinkAltIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }\n        }));\n      }).reduce(function (prev, curr) {\n        return [prev, ', ', curr];\n      })));\n    }\n  }], [{\n    key: \"buildGrafanaLinks\",\n    value: function buildGrafanaLinks(props) {\n      var links = [];\n      props.links.forEach(function (d) {\n        var first = d.url.includes('?') ? '&' : '?';\n        var nsvar = d.variables.namespace ? \"&\".concat(d.variables.namespace, \"=\").concat(props.namespace) : '';\n        var vervar = d.variables.version && props.version ? \"&\".concat(d.variables.version, \"=\").concat(props.version) : '';\n\n        switch (props.objectType) {\n          case MetricsObjectTypes.SERVICE:\n            var fullServiceName = \"\".concat(props.object, \".\").concat(props.namespace, \".svc.cluster.local\");\n\n            if (d.variables.service) {\n              var url = \"\".concat(d.url).concat(first).concat(d.variables.service, \"=\").concat(fullServiceName).concat(nsvar).concat(vervar);\n              links.push([d.name, url]);\n            }\n\n            break;\n\n          case MetricsObjectTypes.WORKLOAD:\n            if (d.variables.workload) {\n              var _url = \"\".concat(d.url).concat(first).concat(d.variables.workload, \"=\").concat(props.object).concat(nsvar).concat(vervar);\n\n              links.push([d.name, _url]);\n            }\n\n            break;\n\n          case MetricsObjectTypes.APP:\n            if (d.variables.app) {\n              var _url2 = \"\".concat(d.url).concat(first).concat(d.variables.app, \"=\").concat(props.object).concat(nsvar).concat(vervar);\n\n              links.push([d.name, _url2]);\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      });\n      return links;\n    }\n  }]);\n\n  return GrafanaLinks;\n}(React.PureComponent);","map":{"version":3,"sources":["/root/GraduateProject/src/components/Metrics/GrafanaLinks.tsx"],"names":["React","ToolbarItem","ExternalLinkAltIcon","MetricsObjectTypes","GrafanaLinks","links","buildGrafanaLinks","props","length","borderRight","map","link","idx","reduce","prev","curr","forEach","d","first","url","includes","nsvar","variables","namespace","vervar","version","objectType","SERVICE","fullServiceName","object","service","push","name","WORKLOAD","workload","APP","app","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ToolbarItem } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport { MetricsObjectTypes } from 'types/Metrics';\nimport { ExternalLink } from 'types/Dashboards';\n\ntype Props = {\n  links: ExternalLink[];\n  namespace: string;\n  object: string;\n  objectType: MetricsObjectTypes;\n  version?: string;\n};\n\nexport class GrafanaLinks extends React.PureComponent<Props, {}> {\n  static buildGrafanaLinks(props: Props): [string, string][] {\n    const links: [string, string][] = [];\n    props.links.forEach(d => {\n      const first = d.url.includes('?') ? '&' : '?';\n      const nsvar = d.variables.namespace ? `&${d.variables.namespace}=${props.namespace}` : '';\n      const vervar = d.variables.version && props.version ? `&${d.variables.version}=${props.version}` : '';\n      switch (props.objectType) {\n        case MetricsObjectTypes.SERVICE:\n          const fullServiceName = `${props.object}.${props.namespace}.svc.cluster.local`;\n          if (d.variables.service) {\n            const url = `${d.url}${first}${d.variables.service}=${fullServiceName}${nsvar}${vervar}`;\n            links.push([d.name, url]);\n          }\n          break;\n        case MetricsObjectTypes.WORKLOAD:\n          if (d.variables.workload) {\n            const url = `${d.url}${first}${d.variables.workload}=${props.object}${nsvar}${vervar}`;\n            links.push([d.name, url]);\n          }\n          break;\n        case MetricsObjectTypes.APP:\n          if (d.variables.app) {\n            const url = `${d.url}${first}${d.variables.app}=${props.object}${nsvar}${vervar}`;\n            links.push([d.name, url]);\n          }\n          break;\n        default:\n          break;\n      }\n    });\n    return links;\n  }\n\n  render() {\n    const links = GrafanaLinks.buildGrafanaLinks(this.props);\n    return (\n      <>\n        {links.length === 1 && (\n          <ToolbarItem style={{ borderRight: 'none' }}>\n            <a id={'grafana_link_0'} title={links[0][0]} href={links[0][1]} target=\"_blank\" rel=\"noopener noreferrer\">\n              View in Grafana <ExternalLinkAltIcon />\n            </a>\n          </ToolbarItem>\n        )}\n        {links.length > 1 && (\n          <ToolbarItem style={{ borderRight: 'none' }}>\n            View in Grafana:&nbsp;\n            {links\n              .map((link, idx) => (\n                <a id={'grafana_link_' + idx} title={link[0]} href={link[1]} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {link[0]} <ExternalLinkAltIcon />\n                </a>\n              ))\n              .reduce((prev, curr) => [prev, ', ', curr] as any)}\n          </ToolbarItem>\n        )}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}