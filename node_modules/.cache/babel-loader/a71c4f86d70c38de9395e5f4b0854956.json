{"ast":null,"code":"import { getType } from 'typesafe-actions';\nimport { config } from '../config';\nimport { updateState } from '../utils/Reducer';\nimport { UserSettingsActions } from '../actions/UserSettingsActions';\nexport var INITIAL_USER_SETTINGS_STATE = {\n  duration: config.toolbar.defaultDuration,\n  timeRange: config.toolbar.defaultTimeRange,\n  interface: {\n    navCollapse: false\n  },\n  refreshInterval: config.toolbar.defaultRefreshInterval,\n  replayActive: false,\n  replayQueryTime: 0\n};\n\nvar UserSettingsState = function UserSettingsState() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_USER_SETTINGS_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case getType(UserSettingsActions.navCollapse):\n      return updateState(state, {\n        interface: {\n          navCollapse: action.payload.collapse\n        }\n      });\n\n    case getType(UserSettingsActions.setDuration):\n      return updateState(state, {\n        duration: action.payload\n      });\n\n    case getType(UserSettingsActions.setRefreshInterval):\n      {\n        return updateState(state, {\n          refreshInterval: action.payload\n        });\n      }\n\n    case getType(UserSettingsActions.setReplayQueryTime):\n      {\n        return updateState(state, {\n          replayQueryTime: action.payload\n        });\n      }\n\n    case getType(UserSettingsActions.setTimeRange):\n      {\n        return updateState(state, {\n          timeRange: action.payload\n        });\n      }\n\n    case getType(UserSettingsActions.toggleReplayActive):\n      {\n        return updateState(state, {\n          replayActive: !state.replayActive,\n          replayQueryTime: 0\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default UserSettingsState;","map":{"version":3,"sources":["/root/kiali-ui/src/reducers/UserSettingsState.ts"],"names":["getType","config","updateState","UserSettingsActions","INITIAL_USER_SETTINGS_STATE","duration","toolbar","defaultDuration","timeRange","defaultTimeRange","interface","navCollapse","refreshInterval","defaultRefreshInterval","replayActive","replayQueryTime","UserSettingsState","state","action","type","payload","collapse","setDuration","setRefreshInterval","setReplayQueryTime","setTimeRange","toggleReplayActive"],"mappings":"AAAA,SAASA,OAAT,QAAwB,kBAAxB;AAEA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SAASC,mBAAT,QAAoC,gCAApC;AAEA,OAAO,IAAMC,2BAAyC,GAAG;AACvDC,EAAAA,QAAQ,EAAEJ,MAAM,CAACK,OAAP,CAAeC,eAD8B;AAEvDC,EAAAA,SAAS,EAAEP,MAAM,CAACK,OAAP,CAAeG,gBAF6B;AAGvDC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,WAAW,EAAE;AAAf,GAH4C;AAIvDC,EAAAA,eAAe,EAAEX,MAAM,CAACK,OAAP,CAAeO,sBAJuB;AAKvDC,EAAAA,YAAY,EAAE,KALyC;AAMvDC,EAAAA,eAAe,EAAE;AANsC,CAAlD;;AASP,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAA6F;AAAA,MAA5FC,KAA4F,uEAAtEb,2BAAsE;AAAA,MAAzCc,MAAyC;;AACrH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKnB,OAAO,CAACG,mBAAmB,CAACQ,WAArB,CAAZ;AACE,aAAOT,WAAW,CAACe,KAAD,EAAQ;AACxBP,QAAAA,SAAS,EAAE;AAAEC,UAAAA,WAAW,EAAEO,MAAM,CAACE,OAAP,CAAeC;AAA9B;AADa,OAAR,CAAlB;;AAGF,SAAKrB,OAAO,CAACG,mBAAmB,CAACmB,WAArB,CAAZ;AACE,aAAOpB,WAAW,CAACe,KAAD,EAAQ;AACxBZ,QAAAA,QAAQ,EAAEa,MAAM,CAACE;AADO,OAAR,CAAlB;;AAGF,SAAKpB,OAAO,CAACG,mBAAmB,CAACoB,kBAArB,CAAZ;AAAsD;AACpD,eAAOrB,WAAW,CAACe,KAAD,EAAQ;AACxBL,UAAAA,eAAe,EAAEM,MAAM,CAACE;AADA,SAAR,CAAlB;AAGD;;AACD,SAAKpB,OAAO,CAACG,mBAAmB,CAACqB,kBAArB,CAAZ;AAAsD;AACpD,eAAOtB,WAAW,CAACe,KAAD,EAAQ;AACxBF,UAAAA,eAAe,EAAEG,MAAM,CAACE;AADA,SAAR,CAAlB;AAGD;;AACD,SAAKpB,OAAO,CAACG,mBAAmB,CAACsB,YAArB,CAAZ;AAAgD;AAC9C,eAAOvB,WAAW,CAACe,KAAD,EAAQ;AACxBT,UAAAA,SAAS,EAAEU,MAAM,CAACE;AADM,SAAR,CAAlB;AAGD;;AACD,SAAKpB,OAAO,CAACG,mBAAmB,CAACuB,kBAArB,CAAZ;AAAsD;AACpD,eAAOxB,WAAW,CAACe,KAAD,EAAQ;AACxBH,UAAAA,YAAY,EAAE,CAACG,KAAK,CAACH,YADG;AAExBC,UAAAA,eAAe,EAAE;AAFO,SAAR,CAAlB;AAID;;AACD;AACE,aAAOE,KAAP;AA/BJ;AAiCD,CAlCD;;AAoCA,eAAeD,iBAAf","sourcesContent":["import { getType } from 'typesafe-actions';\nimport { UserSettings } from '../store/Store';\nimport { config } from '../config';\nimport { updateState } from '../utils/Reducer';\nimport { KialiAppAction } from '../actions/KialiAppAction';\nimport { UserSettingsActions } from '../actions/UserSettingsActions';\n\nexport const INITIAL_USER_SETTINGS_STATE: UserSettings = {\n  duration: config.toolbar.defaultDuration,\n  timeRange: config.toolbar.defaultTimeRange,\n  interface: { navCollapse: false },\n  refreshInterval: config.toolbar.defaultRefreshInterval,\n  replayActive: false,\n  replayQueryTime: 0\n};\n\nconst UserSettingsState = (state: UserSettings = INITIAL_USER_SETTINGS_STATE, action: KialiAppAction): UserSettings => {\n  switch (action.type) {\n    case getType(UserSettingsActions.navCollapse):\n      return updateState(state, {\n        interface: { navCollapse: action.payload.collapse }\n      });\n    case getType(UserSettingsActions.setDuration):\n      return updateState(state, {\n        duration: action.payload\n      });\n    case getType(UserSettingsActions.setRefreshInterval): {\n      return updateState(state, {\n        refreshInterval: action.payload\n      });\n    }\n    case getType(UserSettingsActions.setReplayQueryTime): {\n      return updateState(state, {\n        replayQueryTime: action.payload\n      });\n    }\n    case getType(UserSettingsActions.setTimeRange): {\n      return updateState(state, {\n        timeRange: action.payload\n      });\n    }\n    case getType(UserSettingsActions.toggleReplayActive): {\n      return updateState(state, {\n        replayActive: !state.replayActive,\n        replayQueryTime: 0\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default UserSettingsState;\n"]},"metadata":{},"sourceType":"module"}